'use strict';

var icons = require('@ant-design/icons');
var antd = require('antd');
var React = require('react');
var luxon = require('luxon');
var buffer = require('buffer');
var axios = require('axios');
var Icon = require('react-bootstrap-icons');
var PhoneInput = require('react-phone-number-input');
var validator = require('validator');
var classTransformer = require('class-transformer');
require('react-phone-number-input/style.css');
var mapboxgl = require('mapbox-gl');
require('mapbox-gl/dist/mapbox-gl.css');
require('antd/dist/antd.css');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var Icon__namespace = /*#__PURE__*/_interopNamespaceDefault(Icon);

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */


var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$F = ".filter-menu-item .filter-title {\n  margin-bottom: 0.5rem;\n  font-weight: 600; }\n\n.table-row-gray {\n  background-color: #F0F0F0; }\n\n.company-data-download {\n  margin-left: 15px;\n  margin-top: 0.8rem; }\n";
styleInject(css_248z$F);

var css_248z$E = ".common-table-class .ant-table {\n  border-radius: 1rem; }\n  .common-table-class .ant-table .ant-table-thead {\n    justify-content: center; }\n    .common-table-class .ant-table .ant-table-thead .ant-table-cell {\n      color: rgba(58, 53, 65, 0.8);\n      font-weight: 600;\n      font-size: 0.8rem;\n      text-align: center; }\n  .common-table-class .ant-table .ant-table-tbody {\n    font-size: 0.8rem;\n    text-align: center;\n    color: rgba(58, 53, 65, 0.8); }\n  .common-table-class .ant-table .ant-table-cell {\n    padding: 14px 12px; }\n  .common-table-class .ant-table .ant-table-thead .ant-table-cell {\n    text-transform: uppercase; }\n\n.ant-table-pagination.ant-pagination {\n  margin: 16px 24px; }\n\n.ant-select-item-option-content {\n  font-family: \"Inter\";\n  color: rgba(58, 53, 65, 0.8); }\n\n.ant-pagination-prev, .ant-pagination-next, .ant-pagination-jump-prev, .ant-pagination-jump-next, .ant-pagination-item {\n  height: 28px;\n  border-radius: 4px;\n  line-height: 26px;\n  font-size: 0.8rem;\n  font-family: \"Inter\"; }\n\n.ant-pagination-item-active:focus-visible {\n  border-color: #008f39; }\n\n.ant-pagination-options-quick-jumper {\n  font-size: 0.8rem;\n  font-family: \"Inter\";\n  color: rgba(58, 53, 65, 0.8);\n  height: 30px;\n  line-height: 30px; }\n  .ant-pagination-options-quick-jumper input {\n    height: 28px;\n    border-radius: 4px;\n    line-height: 26px;\n    color: rgba(58, 53, 65, 0.8); }\n\n.ant-pagination-options .ant-select-single:not(.ant-select-customize-input) .ant-select-selector {\n  height: 28px;\n  border-radius: 4px;\n  line-height: 26px;\n  font-size: 0.8rem;\n  font-family: \"Inter\";\n  color: rgba(58, 53, 65, 0.8); }\n\n.ant-pagination-options .ant-select-selection-item {\n  height: 28px;\n  color: rgba(58, 53, 65, 0.8);\n  line-height: 26px !important; }\n\n.ant-pagination-options .ant-select-dropdown {\n  font-family: \"Inter\";\n  color: rgba(58, 53, 65, 0.8);\n  font-size: 0.8rem; }\n";
styleInject(css_248z$E);

var css_248z$D = ".role-icon {\n  border-radius: 100%;\n  margin-right: 10px;\n  padding: 0.30rem 0.5rem;\n  font-size: 0.7rem; }\n";
styleInject(css_248z$D);

var RoleIcon = function (props) {
    var icon = props.icon, bg = props.bg, color = props.color;
    return (React.createElement("span", { className: "role-icon", style: { backgroundColor: bg, color: color } }, icon));
};

var AdminBGColor = "rgba(255, 166, 166, 0.42)";
var AdminColor = "#D12800";
var RootBGColor = "rgba(255, 0, 229, 0.15)";
var RootColor = "#DB00FF";
var ManagerBGColor = "rgba(96, 27, 209, 0.13)";
var ManagerColor = "#75009E";
var ViewBGColor = "rgba(176, 190, 197, 0.23)";
var ViewColor = "#707070";
var GovBGColor = "rgba(185, 226, 244, 0.56)";
var GovColor = "#008f39";
var DevBGColor = "rgba(254, 241, 173, 0.55)";
var DevColor = "#FFA070";
var MinBGColor = "rgba(198, 144, 251, 0.12)";
var MinColor = "#9155fd";
var CertBGColor = "rgba(128, 255, 0, 0.12)";
var CertColor = "#519E4F";
var TooltipColor = "#0dcc59";
var InvestmentBGColor = 'rgba(151, 110, 215, 0.3)';
var InvestmentColor = '#9155FD';

exports.ProgrammeStageR = void 0;
(function (ProgrammeStageR) {
    ProgrammeStageR["AwaitingAuthorization"] = "Pending";
    ProgrammeStageR["Approved"] = "Approved";
    ProgrammeStageR["Authorised"] = "Authorised";
    ProgrammeStageR["Rejected"] = "Rejected";
})(exports.ProgrammeStageR || (exports.ProgrammeStageR = {}));
exports.ProgrammeStageMRV = void 0;
(function (ProgrammeStageMRV) {
    ProgrammeStageMRV["AwaitingAuthorization"] = "Pending";
    ProgrammeStageMRV["Authorised"] = "Authorised";
    ProgrammeStageMRV["Approved"] = "Approved";
    ProgrammeStageMRV["Rejected"] = "Rejected";
})(exports.ProgrammeStageMRV || (exports.ProgrammeStageMRV = {}));
exports.ProgrammeStageUnified = void 0;
(function (ProgrammeStageUnified) {
    ProgrammeStageUnified["AwaitingAuthorization"] = "Pending";
    ProgrammeStageUnified["Authorised"] = "Authorised";
    ProgrammeStageUnified["Approved"] = "Approved";
    ProgrammeStageUnified["Rejected"] = "Rejected";
})(exports.ProgrammeStageUnified || (exports.ProgrammeStageUnified = {}));
exports.ProgrammeStageLegend = void 0;
(function (ProgrammeStageLegend) {
    ProgrammeStageLegend["AUTHORISED"] = "Authorised";
    ProgrammeStageLegend["REJECTED"] = "Rejected";
    ProgrammeStageLegend["AWAITING_AUTHORIZATION"] = "AwaitingAuthorization";
})(exports.ProgrammeStageLegend || (exports.ProgrammeStageLegend = {}));

exports.CreditTransferStage = void 0;
(function (CreditTransferStage) {
    CreditTransferStage["Pending"] = "Pending";
    CreditTransferStage["Approved"] = "Accepted";
    CreditTransferStage["Rejected"] = "Rejected";
    CreditTransferStage["Cancelled"] = "Cancelled";
    CreditTransferStage["Recognised"] = "Recognised";
    CreditTransferStage["NotRecognised"] = "NotRecognised";
})(exports.CreditTransferStage || (exports.CreditTransferStage = {}));

exports.SectoralScope = void 0;
(function (SectoralScope) {
    SectoralScope["Energy Industries (Renewable \u2013 / Non-Renewable Sources)"] = "1";
    SectoralScope["Energy Distribution"] = "2";
    SectoralScope["Energy Demand"] = "3";
    SectoralScope["Manufacturing Industries"] = "4";
    SectoralScope["Chemical Industries"] = "5";
    SectoralScope["Construction"] = "6";
    SectoralScope["Transport"] = "7";
    SectoralScope["Mining/Mineral Production"] = "8";
    SectoralScope["Metal Production"] = "9";
    SectoralScope["Fugitive Emissions From Fuels (Solid, Oil and Gas)"] = "10";
    SectoralScope["Fugitive Emissions From Production and Consumption of Halocarbons and Sulphur Hexafluoride"] = "11";
    SectoralScope["Solvent Use"] = "12";
    SectoralScope["Waste Handling and Disposal"] = "13";
    SectoralScope["Afforestation and Reforestation"] = "14";
    SectoralScope["Agriculture"] = "15";
})(exports.SectoralScope || (exports.SectoralScope = {}));

exports.CarbonSystemType = void 0;
(function (CarbonSystemType) {
    CarbonSystemType[CarbonSystemType["REGISTRY"] = 0] = "REGISTRY";
    CarbonSystemType[CarbonSystemType["MRV"] = 1] = "MRV";
    CarbonSystemType[CarbonSystemType["UNIFIED"] = 2] = "UNIFIED";
})(exports.CarbonSystemType || (exports.CarbonSystemType = {}));

var getStageEnumVal = function (value) {
    var index = Object.keys(exports.ProgrammeStageUnified).indexOf(value);
    if (index < 0) {
        return value;
    }
    return Object.values(exports.ProgrammeStageUnified)[index];
};
var getCreditStageVal = function (value) {
    var index = Object.keys(exports.CreditTransferStage).indexOf(value);
    if (index < 0) {
        return value;
    }
    return Object.values(exports.CreditTransferStage)[index];
};
var getStageTransferEnumVal = function (value, transfer) {
    // if (transfer.isRetirement) {
    //   if (value === ProgrammeTransferStage.APPROVED) {
    //     return 'Recongnised';
    //   }
    //   if (value === ProgrammeTransferStage.REJECTED) {
    //     return 'Not Recongnised';
    //   }
    // }
    var index = Object.keys(exports.CreditTransferStage).indexOf(value);
    if (index < 0) {
        return value;
    }
    return Object.values(exports.CreditTransferStage)[index];
};
var getStageTagType = function (stage) {
    switch (getStageEnumVal(stage)) {
        case exports.ProgrammeStageR.AwaitingAuthorization:
            return "error";
        case exports.ProgrammeStageR.Authorised:
            return "processing";
        case exports.ProgrammeStageR.Approved:
            return 'purple';
        default:
            return "default";
    }
};
var getStageTagTypeMRV = function (stage) {
    switch (getStageEnumVal(stage)) {
        case exports.ProgrammeStageMRV.AwaitingAuthorization:
            return "error";
        case exports.ProgrammeStageMRV.Authorised:
            return "processing";
        case exports.ProgrammeStageMRV.Approved:
            return "purple";
        default:
            return "default";
    }
};
var getTransferStageTagType = function (stage, transfer) {
    // if (transfer.isRetirement) {
    //   switch (getStageEnumVal(stage)) {
    //     case ProgrammeTransferStage.APPROVED:
    //       return 'purple';
    //     case ProgrammeTransferStage.REJECTED:
    //       return 'orange';
    //   }
    // }
    switch (getCreditStageVal(stage)) {
        case exports.CreditTransferStage.Rejected:
            return "error";
        case exports.CreditTransferStage.Approved:
            return "processing";
        case exports.CreditTransferStage.Pending:
            return "success";
        case exports.CreditTransferStage.Recognised:
            return "purple";
        case exports.CreditTransferStage.NotRecognised:
            return "orange";
        default:
            return "default";
    }
};
var UnitField = /** @class */ (function () {
    function UnitField(unit, value) {
        this.unit = unit;
        this.value = value;
    }
    return UnitField;
}());
var getGeneralFields = function (programme, system) {
    var res = {
        title: programme.title,
        serialNo: programme.serialNo,
        currentStatus: programme.currentStage,
        applicationType: "Project Developer",
        sector: programme.sector,
        sectoralScope: Object.keys(exports.SectoralScope)[Object.values(exports.SectoralScope).indexOf(programme.sectoralScope)],
        startDate: luxon.DateTime.fromSeconds(Number(programme.startTime)),
        endDate: luxon.DateTime.fromSeconds(Number(programme.endTime)),
        buyerCountry: programme.programmeProperties.buyerCountryEligibility,
        environmentalAssessmentRegistrationNo: programme.environmentalAssessmentRegistrationNo
    };
    if (system === exports.CarbonSystemType.UNIFIED || system === exports.CarbonSystemType.MRV) {
        var prog = programme;
        res.emissionsReductionExpected = prog.emissionReductionExpected;
        res.emissionsReductionAchieved = prog.emissionReductionAchieved;
    }
    return res;
};
var addCommSep = function (value) {
    return (Number(value)
        // .toString()
        .toFixed(2)
        .replace(".00", "")
        .replace(/\B(?=(\d{3})+(?!\d))/g, ","));
};
var addCommSepRound$1 = function (value) {
    return Number(value)
        .toFixed(2)
        .replace(".00", "")
        .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
};
var addRoundNumber = function (value) {
    return Number(value.toFixed(2).replace(".00", ""));
};
var addSpaces = function (text) {
    if (!text) {
        return text;
    }
    if (text === text.toUpperCase()) {
        return text;
    }
    return text.replace(/([A-Z])/g, " $1").trim();
};
var getFinancialFields = function (programme) {
    return {
        estimatedProgrammeCostUSD: addCommSep(programme.programmeProperties.estimatedProgrammeCostUSD),
        creditEst: addCommSep(programme.creditEst),
        financingType: addSpaces(programme.programmeProperties.sourceOfFunding),
        grantEquivalent: new UnitField("USD", addCommSep(programme.programmeProperties.grantEquivalentAmount)),
        carbonPriceUSDPerTon: addCommSep(programme.programmeProperties.carbonPriceUSDPerTon),
    };
};
var getCompanyBgColor = function (item) {
    if (item === "Government") {
        return GovBGColor;
    }
    else if (item === "Certifier") {
        return CertBGColor;
    }
    return DevBGColor;
};
var getRetirementTypeString = function (retirementType) {
    if (retirementType === null) {
        return "-";
    }
    switch (retirementType) {
        case "0":
            return "CROSS BORDER TRANSFER";
        case "1":
            return "LEGAL ACTION";
        case "2":
            return "OTHER";
    }
};
var sumArray = function (arrList) {
    if (arrList === undefined || arrList === null) {
        return 0;
    }
    return arrList.reduce(function (a, b) { return Number(a) + Number(b); }, 0);
};
var getBase64 = function (file) {
    return new Promise(function (resolve, reject) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () { return resolve(reader.result); };
        reader.onerror = function (error) { return reject(error); };
    });
};

exports.Action = void 0;
(function (Action) {
    Action["Manage"] = "manage";
    Action["Create"] = "create";
    Action["Read"] = "read";
    Action["Update"] = "update";
    Action["Delete"] = "delete";
    Action["Approve"] = "approve";
    Action["Reject"] = "reject";
})(exports.Action || (exports.Action = {}));

var Company = /** @class */ (function () {
    function Company() {
    }
    return Company;
}());

exports.CompanyManagementColumns = void 0;
(function (CompanyManagementColumns) {
    CompanyManagementColumns["logo"] = "logo";
    CompanyManagementColumns["name"] = "name";
    CompanyManagementColumns["taxId"] = "taxId";
    CompanyManagementColumns["companyRole"] = "companyRole";
    CompanyManagementColumns["programmeCount"] = "programmeCount";
    CompanyManagementColumns["creditBalance"] = "creditBalance";
    CompanyManagementColumns["companyState"] = "status";
    CompanyManagementColumns["action"] = "action";
})(exports.CompanyManagementColumns || (exports.CompanyManagementColumns = {}));

var css_248z$C = ".profile-icon {\n  border-radius: 100%;\n  margin-right: 15px;\n  font-size: 15px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n  .profile-icon img {\n    width: 26px; }\n";
styleInject(css_248z$C);

var isBase64 = function (str) {
    if (!str || str === '' || str.trim() === '') {
        return false;
    }
    try {
        var bs = buffer.Buffer.from(str, 'base64').toString('base64');
        return bs === str;
    }
    catch (err) {
        return false;
    }
};
var ProfileIcon = function (props) {
    var icon = props.icon, bg = props.bg, name = props.name;
    return (React.createElement("span", { className: "profile-icon", style: { backgroundColor: bg } }, isBase64(icon) ? (React.createElement("img", { alt: "profile-icon", src: 'data:image/jpeg;base64,' + icon })) : icon ? (React.createElement("img", { alt: "profile-icon", src: icon })) : name ? (name.charAt(0).toUpperCase()) : ('A')));
};

exports.CompanyRole = void 0;
(function (CompanyRole) {
    CompanyRole["ACADEMICS"] = "Academics";
    CompanyRole["SERVICE_PROVIDER"] = "ServiceProvider";
    CompanyRole["MITIGATION_ACTIVITY_PARTNER"] = "MitigationActivityParticipant";
    CompanyRole["CARBON_CREDIT_BROKER"] = "CarbonCreditBroker";
    CompanyRole["VALIDATION_VERIFICATION_ENTITY"] = "ValidationVerificationEntities";
    CompanyRole["COMMERCIAL_BANKS"] = "CommercialBanks";
    CompanyRole["INVESTORS"] = "InvestorsFinanciers";
    CompanyRole["GOV_REGULATOR"] = "GovernmentRegulators";
    CompanyRole["OBSERVERS"] = "Observers";
    CompanyRole["CIVIL_SOCIETY_ORG"] = "CivilSocietyOrganization";
    CompanyRole["CERTIFIER"] = "Certifier";
    CompanyRole["INTERNAL_ORGANIZATION"] = "InternationalOrganization";
    CompanyRole["PROGRAMME_DEVELOPER"] = "ProgrammeDeveloper";
    CompanyRole["MRV"] = "MRV";
    CompanyRole["GOVERNMENT"] = "Government";
    CompanyRole["MINISTRY"] = "Ministry";
    CompanyRole["API"] = "API";
})(exports.CompanyRole || (exports.CompanyRole = {}));

var css_248z$B = ".organisation-status-active {\n  border-radius: 20px;\n  background-color: rgba(185, 226, 244, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #008f39;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center; }\n\n.organisation-status-deauthorised {\n  border-radius: 20px;\n  background-color: rgba(255, 166, 166, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #ff4d4f;\n  margin-left: auto;\n  margin-right: auto;\n  width: 110px;\n  text-align: center; }\n\n.organisation-status-pending {\n  border-radius: 20px;\n  background-color: rgba(176, 137, 244, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #976ed7;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center; }\n\n.organisation-status-rejected {\n  border-radius: 20px;\n  background-color: rgba(255, 247, 230, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #ff8f56;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center;\n  background: #fff7e6;\n  border-color: #ffd591; }\n";
styleInject(css_248z$B);

var OrganisationStatus = function (props) {
    var organisationStatus = props.organisationStatus, t = props.t;
    var orgState = (React.createElement("div", { className: "mg-top-1 organisation-status-deauthorised" }, t('companyProfile:deauthorisedStatus')));
    switch (organisationStatus) {
        case 1:
            orgState = (React.createElement("div", { className: "mg-top-1 organisation-status-active" }, t('companyProfile:activeStatus')));
            break;
        case 2:
            orgState = (React.createElement("div", { className: "mg-top-1 organisation-status-pending" }, t('companyProfile:pendingStatus')));
            break;
        case 3:
            orgState = (React.createElement("div", { className: "mg-top-1 organisation-status-rejected" }, t('companyProfile:rejectedStatus')));
            break;
    }
    return orgState;
};

function e$1(e){this.message=e;}e$1.prototype=new Error,e$1.prototype.name="InvalidCharacterError";var r="undefined"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,"");if(t.length%4==1)throw new e$1("'atob' failed: The string to be decoded is not correctly encoded.");for(var n,o,a=0,i=0,c="";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(o);return c};function t$1(e){var t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw "Illegal base64url string!"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t})))}(t)}catch(e){return r(t)}}function n$1(e){this.message=e;}function o(e,r){if("string"!=typeof e)throw new n$1("Invalid token specified");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t$1(e.split(".")[o]))}catch(e){throw new n$1("Invalid token specified: "+e.message)}}n$1.prototype=new Error,n$1.prototype.name="InvalidTokenError";

var ConnectionContext = React.createContext({});
var ConnectionContextProvider = function (props) {
    var _a = React.useState(), token = _a[0], setToken = _a[1];
    var serverURL = props.serverURL, t = props.t, statServerUrl = props.statServerUrl, children = props.children;
    React.useEffect(function () {
        var timer = setInterval(function () { return __awaiter(void 0, void 0, void 0, function () {
            var newToken;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, localStorage.getItem('token')];
                    case 1:
                        newToken = _a.sent();
                        if (token !== newToken) {
                            setToken(newToken);
                        }
                        return [2 /*return*/];
                }
            });
        }); }, 3000);
        if (token) {
            clearTimeout(timer);
        }
        return function () {
            clearTimeout(timer);
        };
    }, [token]);
    var send = React.useCallback(function (method, path, data, config, extraUrl) {
        return new Promise(function (resolve, reject) {
            var url = "".concat(extraUrl ? extraUrl : serverURL, "/").concat(path);
            var headers;
            if (token) {
                headers = { authorization: "Bearer ".concat(token.toString()) };
            }
            else {
                if (localStorage.getItem('token')) {
                    headers = {
                        authorization: "Bearer ".concat(localStorage.getItem('token')),
                    };
                }
                else {
                    headers = {
                        authorization: "Bearer ".concat(process.env.STORYBOOK_ACCESS_TOKEN),
                    };
                }
            }
            axios(__assign({ method: method, url: url, data: data, headers: headers }, config))
                .then(function (response) {
                var _a, _b, _c;
                if (response.status) {
                    if (response.status === 200 || response.status === 201) {
                        resolve({
                            status: response.status,
                            data: (_a = response.data.data) !== null && _a !== void 0 ? _a : response.data,
                            response: response,
                            statusText: 'SUCCESS',
                            message: response.data.message,
                        });
                    }
                    else if (response.status === 422) {
                        reject({
                            status: response.status,
                            data: (_b = response.data) === null || _b === void 0 ? void 0 : _b.data,
                            statusText: 'ERROR',
                            response: response,
                            message: response.data.message,
                            errors: (_c = response.data) === null || _c === void 0 ? void 0 : _c.errors,
                        });
                    }
                }
                else {
                    reject({
                        status: 500,
                        statusText: 'UNKNOWN',
                        message: t('common:systemError'),
                    });
                }
            })
                .catch(function (e) {
                var _a;
                if (e.response) {
                    if (e.response.status) {
                        if (e.response.data.message === 'jwt expired') {
                            localStorage.removeItem('token');
                            window.location.reload();
                        }
                        reject({
                            status: e.response.status,
                            statusText: 'ERROR',
                            errors: (_a = e.response.data) === null || _a === void 0 ? void 0 : _a.errors,
                            message: e.response.data.message,
                        });
                    }
                    else {
                        reject({
                            statusText: 'ERROR',
                            message: t('common:systemError'),
                        });
                    }
                }
                else {
                    reject({
                        statusText: 'ERROR',
                        message: t('common:networkError'),
                    });
                }
            });
        });
    }, [token, serverURL]);
    var post = React.useCallback(function (path, data, config, extraUrl) {
        return send('post', path, data, config, extraUrl);
    }, [send]);
    var put = React.useCallback(function (path, data, config) {
        return send('put', path, data, config);
    }, [send]);
    var get = React.useCallback(function (path, config) {
        return send('get', path, undefined, config);
    }, [send]);
    var patch = React.useCallback(function (path, data, config) {
        return send('patch', path, data, config);
    }, [send]);
    var del = React.useCallback(function (path, config) {
        return send('delete', path, config);
    }, [send]);
    var updateToken = React.useCallback(function (newToken) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            if (newToken) {
                localStorage.setItem('token', newToken);
                setToken(newToken);
            }
            else {
                localStorage.setItem('token', '');
                setToken(undefined);
            }
            return [2 /*return*/];
        });
    }); }, []);
    var removeToken = function (tkn) {
        if (tkn) {
            var exp = o(tkn).exp;
            if (Date.now() > exp * 1000) {
                localStorage.setItem('token', '');
                localStorage.removeItem('userRole');
                localStorage.removeItem('userId');
                localStorage.removeItem('companyId');
                localStorage.removeItem('companyRole');
            }
            else {
                var diff = exp * 1000 - Date.now();
                setTimeout(function () {
                    setToken(undefined);
                    localStorage.setItem('token', '');
                    localStorage.removeItem('userRole');
                    localStorage.removeItem('userId');
                    localStorage.removeItem('companyId');
                    localStorage.removeItem('companyRole');
                }, diff);
                console.log(diff, 'Remaining Token expire time');
            }
        }
    };
    React.useEffect(function () {
        removeToken(token);
    }, [token]);
    return (React.createElement(ConnectionContext.Provider, { value: {
            connection: { post: post, put: put, get: get, patch: patch, delete: del, updateToken: updateToken, token: token, removeToken: removeToken, statServerUrl: statServerUrl },
        } }, children));
};
var useConnection = function () {
    var context = React.useContext(ConnectionContext);
    return context.connection;
};

var UserContext = React.createContext({
    setUserInfo: function () { },
    removeUserInfo: function () { },
    IsAuthenticated: function (tkn) { return false; },
    isTokenExpired: false,
    setIsTokenExpired: function (val) { },
});
var UserInformationContextProvider = function (_a) {
    var children = _a.children;
    var token = useConnection().token;
    var _b = React.useState(false), isTokenExpired = _b[0], setIsTokenExpired = _b[1];
    var initialUserProps = {
        id: localStorage.getItem('userId') ? localStorage.getItem('userId') : process.env.STORYBOOK_USER_ID ? process.env.STORYBOOK_USER_ID : '',
        userRole: localStorage.getItem('userRole') ? localStorage.getItem('userRole') : process.env.STORYBOOK_USER_ROLE ? process.env.STORYBOOK_USER_ROLE : '',
        companyRole: localStorage.getItem('companyRole')
            ? localStorage.getItem('companyRole')
            : process.env.STORYBOOK_COMPANY_ROLE ? process.env.STORYBOOK_COMPANY_ROLE : '',
        companyId: localStorage.getItem('companyId')
            ? parseInt(localStorage.getItem('companyId'))
            : process.env.STORYBOOK_COMPANY_ID ? parseInt(process.env.STORYBOOK_COMPANY_ID) : -1,
        companyLogo: localStorage.getItem('companyLogo')
            ? localStorage.getItem('companyLogo')
            : process.env.STORYBOOK_COMPANY_LOGO ? process.env.STORYBOOK_COMPANY_LOGO : '',
        companyName: localStorage.getItem('companyName')
            ? localStorage.getItem('companyName')
            : process.env.STORYBOOK_COMPANY_NAME ? process.env.STORYBOOK_COMPANY_NAME : '',
        companyState: localStorage.getItem('companyState')
            ? parseInt(localStorage.getItem('companyState'))
            : process.env.STORYBOOK_COMPANY_STATE ? parseInt(process.env.STORYBOOK_COMPANY_STATE) : 0,
    };
    var _c = React.useState(initialUserProps), userInfoState = _c[0], setUserInfoState = _c[1];
    var setUserInfo = function (value) {
        var state = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyState) === 1 ? userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyState : 0;
        var id = value.id, userRole = value.userRole, companyId = value.companyId, companyRole = value.companyRole, companyLogo = value.companyLogo, companyName = value.companyName, _a = value.companyState, companyState = _a === void 0 ? state : _a;
        if (id) {
            setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { id: id })); });
            localStorage.setItem('userId', id);
        }
        if (userRole) {
            setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { userRole: userRole })); });
            localStorage.setItem('userRole', userRole);
        }
        if (companyId) {
            setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { companyId: companyId })); });
            localStorage.setItem('companyId', companyId + '');
        }
        if (companyLogo) {
            setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { companyLogo: companyLogo })); });
            localStorage.setItem('companyLogo', companyLogo);
        }
        else {
            setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { companyLogo: '' })); });
            localStorage.setItem('companyLogo', '');
        }
        if (companyName) {
            setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { companyName: companyName })); });
            localStorage.setItem('companyName', companyName);
        }
        if (userRole) {
            setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { companyRole: companyRole })); });
            localStorage.setItem('companyRole', companyRole);
        }
        setUserInfoState(function (prev) { return (__assign(__assign({}, prev), { companyState: companyState })); });
        localStorage.setItem('companyState', companyState + '');
    };
    var IsAuthenticated = React.useCallback(function (tokenNew) {
        var tokenVal;
        if (tokenNew) {
            tokenVal = tokenNew;
        }
        else if (token) {
            tokenVal = token;
        }
        else {
            tokenVal = localStorage.getItem('token');
            if (tokenVal === '') {
                if (history.length !== 1) {
                    setIsTokenExpired(true);
                }
            }
        }
        try {
            if (tokenVal) {
                var exp = o(tokenVal).exp;
                return Date.now() < exp * 1000;
            }
            return false;
        }
        catch (err) {
            return false;
        }
    }, [token]);
    var removeUserInfo = function () {
        localStorage.removeItem('userId');
        localStorage.removeItem('userRole');
        localStorage.removeItem('companyId');
        localStorage.removeItem('companyRole');
        localStorage.removeItem('companyName');
        localStorage.removeItem('companyState');
        localStorage.removeItem('companyLogo');
        setUserInfoState(initialUserProps);
    };
    return (React.createElement(UserContext.Provider, { value: {
            userInfoState: userInfoState,
            setUserInfo: setUserInfo,
            removeUserInfo: removeUserInfo,
            IsAuthenticated: IsAuthenticated,
            isTokenExpired: isTokenExpired,
            setIsTokenExpired: setIsTokenExpired,
        } }, children));
};
var useUserContext = function () {
    return React.useContext(UserContext);
};

var SettingsContext = React.createContext({
    isTransferFrozen: false,
    setTransferFrozen: function (value) { },
});
var SettingsContextProvider = function (_a) {
    var children = _a.children;
    var _b = React.useState(false), isTransferFrozen = _b[0], setIsTransferFrozen = _b[1];
    var setTransferFrozen = function (value) {
        setIsTransferFrozen(value);
    };
    return (React.createElement(SettingsContext.Provider, { value: {
            isTransferFrozen: isTransferFrozen,
            setTransferFrozen: setTransferFrozen,
        } }, children));
};
var useSettingsContext = function () {
    return React.useContext(SettingsContext);
};

var Search$2 = antd.Input.Search;
var CompanyManagementComponent = function (props) {
    var t = props.t, useAbilityContext = props.useAbilityContext, visibleColumns = props.visibleColumns, onNavigateToCompanyProfile = props.onNavigateToCompanyProfile, onClickAddCompany = props.onClickAddCompany;
    var _a = React.useState(), totalCompany = _a[0], setTotalCompany = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState([]), tableData = _c[0], setTableData = _c[1];
    var _d = React.useState(1), currentPage = _d[0], setCurrentPage = _d[1];
    var _e = React.useState(10), pageSize = _e[0], setPageSize = _e[1];
    var searchByTermOrganisation = React.useState("name")[0];
    var _f = React.useState(""), searchValueOrganisations = _f[0], setSearchValueOrganisations = _f[1];
    var _g = React.useState(""), networksearchOrganisations = _g[0], setNetworkSearchOrganisations = _g[1];
    var _h = React.useState(false), filterVisible = _h[0], setFilterVisible = _h[1];
    var _j = React.useState("All"), filterByOrganisationType = _j[0], setFilterByOrganisationType = _j[1];
    var _k = React.useState(""), sortOrder = _k[0], setSortOrder = _k[1];
    var _l = React.useState(""), sortField = _l[0], setSortField = _l[1];
    var _m = React.useState(), dataQuery = _m[0], setDataQuery = _m[1];
    var ability = useAbilityContext();
    var post = useConnection().post;
    document.addEventListener("mousedown", function (event) {
        var organisationFilterArea1 = document.querySelector(".filter-bar");
        var organisationFilterArea2 = document.querySelector(".filter-dropdown");
        if (organisationFilterArea1 !== null && organisationFilterArea2 !== null) {
            if (organisationFilterArea1.contains(event.target) ||
                organisationFilterArea2.contains(event.target)) {
                setFilterVisible(true);
            }
            else {
                setFilterVisible(false);
            }
        }
    });
    var getCompanyBgColor = function (item) {
        if (item === "Government") {
            return GovBGColor;
        }
        else if (item === "Certifier") {
            return CertBGColor;
        }
        return DevBGColor;
    };
    var getCompanyRoleComponent = function (item) {
        return (React.createElement("div", { style: { display: "flex", alignItems: "center" } },
            item === exports.CompanyRole.GOVERNMENT ? (React.createElement(RoleIcon, { icon: React.createElement(icons.BankOutlined, null), bg: GovBGColor, color: GovColor })) : item === exports.CompanyRole.CERTIFIER ? (React.createElement(RoleIcon, { icon: React.createElement(icons.SafetyOutlined, null), bg: CertBGColor, color: CertColor })) : item === exports.CompanyRole.MINISTRY ? (React.createElement(RoleIcon, { icon: React.createElement(icons.AuditOutlined, null), bg: MinBGColor, color: MinColor })) : (React.createElement(RoleIcon, { icon: React.createElement(icons.ExperimentOutlined, null), bg: DevBGColor, color: DevColor })),
            item === exports.CompanyRole.PROGRAMME_DEVELOPER ? (React.createElement("div", null, t("company:developer"))) : (React.createElement("div", null, item))));
    };
    var getCompanyStateComponent = function (item) {
        return (React.createElement("div", { style: { display: "flex", alignItems: "left" } },
            React.createElement(OrganisationStatus, { t: t, organisationStatus: parseInt(item) })));
    };
    var handleFilterVisibleChange = function () {
        setFilterVisible(true);
    };
    var actionMenu = function (record) {
        return (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                {
                    text: t("company:view"),
                    icon: React.createElement(Icon__namespace.InfoCircle, null),
                    click: function () {
                        onNavigateToCompanyProfile(record);
                    },
                },
            ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                React.createElement(antd.Typography.Text, { className: "action-icon color-primary" }, item.icon),
                React.createElement("span", null, item.text))); } }));
    };
    var columns = [
        {
            title: "",
            dataIndex: "logo",
            key: exports.CompanyManagementColumns.logo,
            width: "20px",
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } },
                    React.createElement(ProfileIcon, { icon: itemObj.logo, bg: getCompanyBgColor(itemObj.companyRole), name: itemObj.name })));
            },
        },
        {
            title: t("company:name"),
            dataIndex: "name",
            key: exports.CompanyManagementColumns.name,
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" }, className: "clickable" },
                    React.createElement("div", { style: { fontWeight: 600 } }, item)));
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        onNavigateToCompanyProfile(record);
                    },
                };
            },
        },
        {
            title: t("company:taxId"),
            dataIndex: "taxId",
            key: exports.CompanyManagementColumns.taxId,
            sorter: true,
            align: "left",
            render: function (item) {
                return item ? item : "-";
            },
        },
        {
            title: t("company:companyRole"),
            dataIndex: "companyRole",
            key: exports.CompanyManagementColumns.companyRole,
            sorter: true,
            align: "left",
            render: function (item) {
                return getCompanyRoleComponent(item);
            },
        },
        {
            title: t("company:numberOfProgrammes"),
            dataIndex: "programmeCount",
            key: exports.CompanyManagementColumns.programmeCount,
            sorter: true,
            align: "left",
            render: function (item) {
                return item ? addCommSep(item) : "-";
            },
        },
        {
            title: t("company:creditBalance"),
            dataIndex: "creditBalance",
            key: exports.CompanyManagementColumns.creditBalance,
            sorter: true,
            align: "left",
            render: function (item) {
                return item !== null ? addCommSep(item) : "-";
            },
        },
        {
            title: t("company:companyState"),
            dataIndex: "state",
            key: exports.CompanyManagementColumns.companyState,
            sorter: true,
            align: "center",
            render: function (item) {
                return getCompanyStateComponent(item);
            },
        },
        {
            title: t(""),
            width: 6,
            align: "right",
            key: exports.CompanyManagementColumns.action,
            render: function (_, record) {
                var menu = actionMenu(record);
                return menu && (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } })));
            },
        },
    ].filter(function (column) { return visibleColumns.includes(column.key); });
    var filterOr = function () {
        if (searchByTermOrganisation !== null &&
            searchByTermOrganisation !== "" &&
            networksearchOrganisations !== null &&
            networksearchOrganisations !== "" &&
            filterByOrganisationType === "All") {
            return [
                {
                    key: searchByTermOrganisation,
                    operation: "like",
                    value: "%" + networksearchOrganisations + "%",
                },
            ];
        }
        else
            return undefined;
    };
    var filterAnd = function () {
        if (searchByTermOrganisation !== null &&
            searchByTermOrganisation !== "" &&
            networksearchOrganisations !== null &&
            networksearchOrganisations !== "" &&
            filterByOrganisationType !== "All") {
            return [
                {
                    key: searchByTermOrganisation,
                    operation: "like",
                    value: "%" + networksearchOrganisations + "%",
                },
                {
                    key: "companyRole",
                    operation: "=",
                    value: filterByOrganisationType,
                },
            ];
        }
        else if (filterByOrganisationType !== "All") {
            return [
                {
                    key: "companyRole",
                    operation: "=",
                    value: filterByOrganisationType,
                },
            ];
        }
        else
            return undefined;
    };
    var sort = function () {
        if (sortOrder !== "" && sortField !== "") {
            return {
                key: sortField,
                order: sortOrder,
                nullFirst: false,
            };
        }
        else
            return {
                key: "companyId",
                order: "DESC",
            };
    };
    var getAllOrganisationParams = function () {
        return {
            page: currentPage,
            size: pageSize,
            filterOr: filterOr(),
            filterAnd: filterAnd(),
            sort: sort(),
        };
    };
    var getAllCompany = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, availableCompanies, error_1;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    setLoading(true);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/organisation/query", getAllOrganisationParams())];
                case 2:
                    response = _c.sent();
                    if (response && response.data) {
                        availableCompanies = response.data.filter(function (company) { return company.companyRole !== exports.CompanyRole.API; });
                        setTableData(availableCompanies);
                        setTotalCompany((_b = (_a = response === null || response === void 0 ? void 0 : response.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.total);
                    }
                    setDataQuery({
                        filterAnd: filterAnd(),
                        filterOr: filterOr(),
                        sort: sort(),
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _c.sent();
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var downloadCompanyData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, url, a, error_2;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setLoading(true);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/organisation/download", {
                            filterAnd: dataQuery.filterAnd,
                            filterOr: ((_a = dataQuery.filterOr) === null || _a === void 0 ? void 0 : _a.length) > 0 ? dataQuery.filterOr : undefined,
                            sort: dataQuery.sort,
                        })];
                case 2:
                    response = _b.sent();
                    if (response && response.data) {
                        url = response.data.url;
                        a = document.createElement('a');
                        a.href = url;
                        a.download = response.data.csvFile; // Specify the filename for the downloaded file
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a); // Clean up the created <a> element
                        window.URL.revokeObjectURL(url);
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_2 = _b.sent();
                    console.log("Error in exporting organisations", error_2);
                    antd.message.open({
                        type: "error",
                        content: error_2.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        getAllCompany();
    }, [
        currentPage,
        pageSize,
        searchByTermOrganisation,
        networksearchOrganisations,
        filterByOrganisationType,
        sortField,
        sortOrder,
    ]);
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var onFilterOrganisationType = function (checkedValue) {
        var _a;
        setCurrentPage(1);
        setFilterByOrganisationType((_a = checkedValue === null || checkedValue === void 0 ? void 0 : checkedValue.target) === null || _a === void 0 ? void 0 : _a.value);
    };
    var items = [
        {
            key: "1",
            title: "Filter by",
            label: (React.createElement("div", { className: "filter-menu-item" },
                React.createElement("div", { className: "filter-title" }, t("company:filterByOrgType")),
                React.createElement(antd.Radio.Group, { onChange: onFilterOrganisationType, value: filterByOrganisationType },
                    React.createElement(antd.Space, { direction: "vertical" },
                        React.createElement(antd.Radio, { value: "All" }, t("company:all")),
                        React.createElement(antd.Radio, { value: "Government" }, t("company:gov")),
                        React.createElement(antd.Radio, { value: "Ministry" }, t("company:min")),
                        React.createElement(antd.Radio, { value: "ProgrammeDeveloper" }, t("company:developer")),
                        React.createElement(antd.Radio, { value: "Certifier" }, t("company:certifier")))))),
        },
    ];
    var onSearch = function () {
        setCurrentPage(1);
        setNetworkSearchOrganisations(searchValueOrganisations);
    };
    var handleTableChange = function (val, sorter) {
        if (sorter.order === "ascend") {
            setSortOrder("ASC");
        }
        else if (sorter.order === "descend") {
            setSortOrder("DESC");
        }
        else if (sorter.order === undefined) {
            setSortOrder("");
        }
        if (sorter.columnKey !== undefined) {
            if (sorter.columnKey === "company") {
                setSortField("company.name");
            }
            else {
                setSortField(sorter.field);
            }
        }
        else {
            setSortField("companyId");
            setSortOrder("DESC");
        }
        // setCurrentPage(1);
    };
    return (React.createElement("div", { className: "content-container" },
        React.createElement("div", { className: "title-bar" },
            React.createElement("div", { className: "body-title" }, t("company:viewCompanies"))),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, { className: "table-actions-section" },
                React.createElement(antd.Col, { md: 8, xs: 24 },
                    React.createElement("div", { className: "action-bar" }, ability.can(exports.Action.Create, Company) && (React.createElement(antd.Button, { type: "primary", size: "large", block: true, icon: React.createElement(icons.PlusOutlined, null), onClick: onClickAddCompany }, t("company:addCompany"))))),
                React.createElement(antd.Col, { md: 16, xs: 24 },
                    React.createElement("div", { className: "filter-section" },
                        React.createElement("div", { className: "search-bar" },
                            React.createElement(Search$2, { onPressEnter: onSearch, placeholder: searchByTermOrganisation === "email"
                                    ? "".concat(t("company:searchMail"))
                                    : "".concat(t("company:searchName")), allowClear: true, onChange: function (e) {
                                    return e.target.value === ""
                                        ? setNetworkSearchOrganisations(e.target.value)
                                        : setSearchValueOrganisations(e.target.value);
                                }, onSearch: onSearch, style: { width: 265 } })),
                        React.createElement("div", { className: "filter-bar" },
                            React.createElement(antd.Dropdown, { arrow: false, menu: { items: items }, placement: "bottomRight", open: filterVisible, onOpenChange: handleFilterVisibleChange, overlayClassName: "filter-dropdown", trigger: ["click"] },
                                React.createElement("a", { className: "ant-dropdown-link", onClick: function (e) { return setFilterVisible(!filterVisible); } },
                                    React.createElement(icons.FilterOutlined, { style: {
                                            color: "rgba(58, 53, 65, 0.3)",
                                            fontSize: "20px",
                                        } })))),
                        React.createElement("div", { className: "download-data-btn company-data-download" },
                            React.createElement("a", { onClick: downloadCompanyData },
                                React.createElement(icons.DownloadOutlined, { style: {
                                        color: "rgba(58, 53, 65, 0.3)",
                                        fontSize: "20px",
                                    } })))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "userManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, rowClassName: function (record) {
                                return parseInt(record.state) === 0 ? "table-row-gray" : "";
                            }, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalCompany,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, 
                            // scroll={{ x: 1500 }}
                            locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0 ? "No data" : null })),
                            } })))))));
};

var css_248z$A = ".filter-menu-item .filter-title {\n  margin-bottom: 0.5rem;\n  font-weight: 600; }\n\n.table-row-gray {\n  background-color: #F0F0F0; }\n\n.company-data-download {\n  margin-left: 15px;\n  margin-top: 0.8rem; }\n";
styleInject(css_248z$A);

exports.IdeaNoteManagementColumns = void 0;
(function (IdeaNoteManagementColumns) {
    IdeaNoteManagementColumns["logo"] = "logo";
    IdeaNoteManagementColumns["denomination"] = "denomination";
    IdeaNoteManagementColumns["ref_note_idee"] = "ref_note_idee";
    IdeaNoteManagementColumns["Statut"] = "Statut";
    IdeaNoteManagementColumns["date_soumission"] = "date_soumission";
    IdeaNoteManagementColumns["action"] = "action";
})(exports.IdeaNoteManagementColumns || (exports.IdeaNoteManagementColumns = {}));

var css_248z$z = ".IdeaNote-status-active {\n  border-radius: 20px;\n  background-color: rgba(185, 226, 244, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #09c454;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center; }\n\n.IdeaNote-status-deauthorised {\n  border-radius: 20px;\n  background-color: rgba(255, 166, 166, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #ff4d4f;\n  margin-left: auto;\n  margin-right: auto;\n  width: 110px;\n  text-align: center; }\n\n.IdeaNote-status-pending {\n  border-radius: 20px;\n  background-color: rgba(176, 137, 244, 0.4);\n  padding: 4px 15px;\n  color: #976ed7;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center; }\n\n.IdeaNote-status-rejected {\n  border-radius: 20px;\n  background-color: rgba(255, 247, 230, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #ff8f56;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center;\n  background: #fff7e6;\n  border-color: #ffd591; }\n\n.IdeaNote-status-recours {\n  border-radius: 20px;\n  background-color: rgba(255, 247, 230, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #f5f240;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center;\n  background: #fff7e6;\n  border-color: #ffd591; }\n\n.IdeaNote-status-cloturer_refuse {\n  border-radius: 20px;\n  background-color: rgba(255, 247, 230, 0.4);\n  padding: 4px 15px;\n  height: 28px;\n  color: #cfcfcb;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90px;\n  text-align: center;\n  background: #fff7e6;\n  border-color: #ffd591; }\n";
styleInject(css_248z$z);

var IdeaNoteStatus = function (props) {
    var IdeaNoteStatus = props.IdeaNoteStatus, t = props.t;
    var orgState = (React.createElement("div", { className: "mg-top-1 IdeaNote-status-deauthorised" }, t("companyProfile:deauthorisedStatus")));
    switch (IdeaNoteStatus) {
        case "valide":
            orgState = (React.createElement("div", { className: "mg-top-1 IdeaNote-status-active" }, "Eligible"));
            break;
        case "en_attente":
            orgState = (React.createElement("div", { className: "mg-top-1 IdeaNote-status-pending" }, "En attente"));
            break;
        case "refuse":
            orgState = (React.createElement("div", { className: "mg-top-1 IdeaNote-status-rejected" }, "Refus\u00E9e"));
            break;
        case "recours":
            orgState = (React.createElement("div", { className: "mg-top-1 IdeaNote-status-recours" }, "Recours"));
            break;
        case "cloturer_refuse":
            orgState = (React.createElement("div", { className: "mg-top-1 IdeaNote-status-cloturer_refuse" }, "Refus\u00E9e et clotur\u00E9e"));
            break;
    }
    return orgState;
};

antd.Input.Search;
var IdeaNoteManagementComponent = function (props) {
    var t = props.t, useAbilityContext = props.useAbilityContext, visibleColumns = props.visibleColumns, onNavigateToIdeaNoteDetail = props.onNavigateToIdeaNoteDetail; props.onClickAddCompany;
    var _a = React.useState(), totalIdeaNote = _a[0], setTotalIdeaNote = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState([]), tableData = _c[0], setTableData = _c[1];
    var _d = React.useState(1), currentPage = _d[0], setCurrentPage = _d[1];
    var _e = React.useState(10), pageSize = _e[0], setPageSize = _e[1];
    var searchByTermOrganisation = React.useState("name")[0];
    var _f = React.useState(""); _f[0]; _f[1];
    var _g = React.useState(""), networksearchOrganisations = _g[0]; _g[1];
    var _h = React.useState(false); _h[0]; var setFilterVisible = _h[1];
    var _j = React.useState("All"), filterByOrganisationType = _j[0], setFilterByOrganisationType = _j[1];
    var _k = React.useState(""), sortOrder = _k[0], setSortOrder = _k[1];
    var _l = React.useState(""), sortField = _l[0], setSortField = _l[1];
    var _m = React.useState(); _m[0]; _m[1];
    useAbilityContext();
    useConnection().post;
    document.addEventListener("mousedown", function (event) {
        var organisationFilterArea1 = document.querySelector(".filter-bar");
        var organisationFilterArea2 = document.querySelector(".filter-dropdown");
        if (organisationFilterArea1 !== null && organisationFilterArea2 !== null) {
            if (organisationFilterArea1.contains(event.target) ||
                organisationFilterArea2.contains(event.target)) {
                setFilterVisible(true);
            }
            else {
                setFilterVisible(false);
            }
        }
    });
    var getCompanyBgColor = function (item) {
        return DevBGColor;
    };
    var getIdeaNoteStateComponent = function (item) {
        return (React.createElement("div", { style: { display: "flex", alignItems: "left" } },
            React.createElement(IdeaNoteStatus, { t: t, IdeaNoteStatus: item })));
    };
    var actionMenu = function (record) {
        return (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                {
                    text: t("company:view"),
                    icon: React.createElement(Icon__namespace.InfoCircle, null),
                    click: function () {
                        onNavigateToIdeaNoteDetail(record);
                    },
                },
            ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                React.createElement(antd.Typography.Text, { className: "action-icon color-primary" }, item.icon),
                React.createElement("span", null, item.text))); } }));
    };
    var columns = [
        {
            title: "",
            dataIndex: "logo",
            key: exports.IdeaNoteManagementColumns.logo,
            width: "20px",
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } },
                    React.createElement(ProfileIcon, { icon: itemObj.logo, bg: getCompanyBgColor(itemObj.denomination), name: itemObj.denomination })));
            },
        },
        {
            title: "SOUMISSIONNAIRE",
            dataIndex: "denomination",
            key: exports.IdeaNoteManagementColumns.denomination,
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" }, className: "clickable" },
                    React.createElement("div", { style: { fontWeight: 600 } }, item)));
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        onNavigateToIdeaNoteDetail(record);
                    },
                };
            },
        },
        {
            title: "ID NOTE D'IDEE",
            dataIndex: "ref_note_idee",
            key: exports.IdeaNoteManagementColumns.ref_note_idee,
            sorter: true,
            align: "left",
            render: function (item) {
                return item ? item : "-";
            },
        },
        {
            title: "DATE DE DEPOT",
            dataIndex: "date_soumission",
            key: exports.IdeaNoteManagementColumns.date_soumission,
            sorter: true,
            align: "left",
            render: function (item) {
                return item ? item : "-";
            },
        },
        {
            title: "STATUT",
            dataIndex: "Statut",
            key: exports.IdeaNoteManagementColumns.Statut,
            sorter: true,
            align: "left",
            render: function (item) {
                return getIdeaNoteStateComponent(item);
            },
        },
        {
            title: t(""),
            width: 6,
            align: "right",
            key: exports.IdeaNoteManagementColumns.action,
            render: function (_, record) {
                var menu = actionMenu(record);
                return menu && (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } })));
            },
        },
    ].filter(function (column) { return visibleColumns.includes(column.key); });
    var getAllCompany = function () { return __awaiter(void 0, void 0, void 0, function () {
        var headers, method, url, data;
        return __generator(this, function (_a) {
            setLoading(true);
            try {
                headers = {
                    authorization: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnRpdHVsZSI6InN5c3RlbV9jYXJib25fcmVnaXN0cnkiLCJpYXQiOjE3MTYzMzkzODcsImV4cCI6NDg2OTkzOTM4N30.778fs30YX0hossKnCacm7bPYiJsYtWja7wL_NX_ttrc"
                };
                method = 'post';
                url = 'http://localhost:3005/users/apiv1/liste_all_note_formated';
                data = {
                    page: currentPage,
                    limit: pageSize,
                };
                axios({
                    method: method,
                    url: url,
                    data: data,
                    headers: headers
                })
                    .then(function (response) {
                    if (response && response.data) {
                        var availableIdeaNote = response.data;
                        setTableData(availableIdeaNote);
                        setTotalIdeaNote(response.data.total); // Correction de l'accès aux données
                    }
                });
                setLoading(false);
            }
            catch (error) {
                antd.message.open({
                    type: "error",
                    content: error.message,
                    duration: 3,
                    style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                });
                setLoading(false);
            }
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        getAllCompany();
    }, [
        currentPage,
        pageSize,
        searchByTermOrganisation,
        networksearchOrganisations,
        filterByOrganisationType,
        sortField,
        sortOrder,
    ]);
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var onFilterOrganisationType = function (checkedValue) {
        var _a;
        setCurrentPage(1);
        setFilterByOrganisationType((_a = checkedValue === null || checkedValue === void 0 ? void 0 : checkedValue.target) === null || _a === void 0 ? void 0 : _a.value);
    };
    [
        {
            key: "1",
            title: "Filter by",
            label: (React.createElement("div", { className: "filter-menu-item" },
                React.createElement("div", { className: "filter-title" }, t("company:filterByOrgType")),
                React.createElement(antd.Radio.Group, { onChange: onFilterOrganisationType, value: filterByOrganisationType },
                    React.createElement(antd.Space, { direction: "vertical" },
                        React.createElement(antd.Radio, { value: "All" }, t("company:all")),
                        React.createElement(antd.Radio, { value: "Government" }, t("company:gov")),
                        React.createElement(antd.Radio, { value: "Ministry" }, t("company:min")),
                        React.createElement(antd.Radio, { value: "ProgrammeDeveloper" }, t("company:developer")),
                        React.createElement(antd.Radio, { value: "Certifier" }, t("company:certifier")))))),
        },
    ];
    var handleTableChange = function (val, sorter) {
        if (sorter.order === "ascend") {
            setSortOrder("ASC");
        }
        else if (sorter.order === "descend") {
            setSortOrder("DESC");
        }
        else if (sorter.order === undefined) {
            setSortOrder("");
        }
        if (sorter.columnKey !== undefined) {
            if (sorter.columnKey === "company") {
                setSortField("company.name");
            }
            else {
                setSortField(sorter.field);
            }
        }
        else {
            setSortField("companyId");
            setSortOrder("DESC");
        }
        // setCurrentPage(1);
    };
    return (React.createElement("div", { className: "content-container" },
        React.createElement("div", { className: "title-bar" },
            React.createElement("div", { className: "body-title" }, "Voir les notes d'id\u00E9es")),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "userManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, rowClassName: function (record) {
                                return parseInt(record.state) === 0 ? "table-row-gray" : "";
                            }, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalIdeaNote,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, 
                            // scroll={{ x: 1500 }}
                            locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0 ? "No data" : null })),
                            } })))))));
};

var css_248z$y = "body {\n  background-color: #f4f5fa;\n  font-family: \"Inter\";\n  font-weight: 400; }\n  body .ant-menu {\n    background-color: #f4f5fa; }\n  body .ant-layout-header {\n    background-color: #f4f5fa; }\n  body .ant-layout {\n    background-color: #f4f5fa; }\n  body .ant-menu-submenu .ant-menu {\n    background-color: #f4f5fa; }\n  body .ant-menu-item {\n    background-color: #f4f5fa; }\n  body .ant-menu-sub {\n    background-color: #f4f5fa; }\n  body .ant-table-content {\n    font-family: \"Inter\"; }\n  body .ant-input {\n    border-radius: 5px !important; }\n  body .ant-btn {\n    border-radius: 5px !important; }\n  body .ant-input-group-addon:first-child {\n    border-radius: 5px !important; }\n  body .ant-input-group .ant-input {\n    width: 99% !important; }\n  body .ant-select-selector {\n    border-radius: 5px !important; }\n  body .ant-upload-list-item {\n    border-radius: 5px !important; }\n  body .ant-radio-group {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between; }\n  body .ant-radio-group-large .ant-radio-button-wrapper {\n    font-size: 0.8rem;\n    width: 25%;\n    border-radius: 5px !important; }\n  body .ant-upload-list-picture .ant-upload-list-item-error,\n  body .ant-upload-list-picture-card .ant-upload-list-item-error {\n    border-color: 008f39;\n    border-radius: 5px;\n    height: 40px; }\n    body .ant-upload-list-picture .ant-upload-list-item-error .ant-upload-list-item-name,\n    body .ant-upload-list-picture-card .ant-upload-list-item-error .ant-upload-list-item-name {\n      color: 008f39 !important; }\n  body .ant-upload-list-item-error .ant-upload-list-item-card-actions .anticon {\n    color: 008f39; }\n  body .ant-input-status-error:not(.ant-input-disabled):not(.ant-input-borderless).ant-input,\n  body .ant-input-status-error:not(.ant-input-disabled):not(.ant-input-borderless).ant-input:hover {\n    border-color: #d9d9d9 !important; }\n  body .ant-input-group-wrapper-status-error .ant-input-group-addon {\n    border-color: #d9d9d9 !important; }\n  body .ant-form-item-explain-error {\n    font-size: 13px;\n    color: rgba(255, 77, 79, 0.8); }\n  body .ant-table-thead\n> tr\n> th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before {\n    background-color: transparent !important; }\n  body .ant-form-item-label > label {\n    flex-direction: row-reverse !important;\n    color: rgba(58, 53, 65, 0.5); }\n  body .ant-form-item-label\n> label.ant-form-item-required:not(.ant-form-item-required-mark-optional)::before {\n    margin-left: 0.2rem !important;\n    color: rgba(255, 77, 79, 0.8) !important; }\n  body .ant-picker {\n    border-radius: 5px !important;\n    height: 35px !important; }\n  body .space-container {\n    width: 100%; }\n    body .space-container .ant-space-item {\n      width: 100%; }\n  body .PhoneInput .PhoneInputCountry {\n    border: 1px solid #d9d9d9 !important;\n    border-radius: 5px !important;\n    padding: 0 1rem 0 1rem; }\n  body .PhoneInput .PhoneInputInput {\n    flex: 1 1;\n    min-width: 0;\n    border-radius: 5px !important;\n    height: 40px;\n    border: 1px solid #d9d9d9 !important;\n    outline: none; }\n  body .filter-title {\n    color: rgba(58, 53, 65, 0.8);\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 0.875rem; }\n  body .ant-radio-wrapper {\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 0.875rem;\n    line-height: 22px;\n    color: rgba(58, 53, 65, 0.8); }\n  body .ant-list-item {\n    color: rgba(58, 53, 65, 0.8); }\n  body .PhoneInput .PhoneInputInput:focus-visible,\n  body .PhoneInput .PhoneInputInput:hover {\n    flex: 1 1;\n    min-width: 0;\n    border-radius: 5px !important;\n    height: 40px;\n    border-right: 1px solid 008f39 !important;\n    outline: 1px solid 008f39; }\n  body .layout-content-container {\n    padding-bottom: 100px; }\n    body .layout-content-container .ant-btn-primary {\n      background-color: #008f39;\n      color: #ffffff;\n      border: none; }\n    body .layout-content-container .ant-btn {\n      height: 32px;\n      font-weight: 500;\n      font-size: 0.8rem;\n      border-radius: 0.3rem;\n      box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.25);\n      min-width: 80px;\n      box-shadow: none; }\n      body .layout-content-container .ant-btn span {\n        text-transform: uppercase; }\n  body .content-container {\n    padding: 0px 20px; }\n    body .content-container .title-bar {\n      padding: 0px 0px 30px 0px; }\n    body .content-container .title-bar-transfer {\n      padding: 0px 0px 19px 0px; }\n    body .content-container .body-title {\n      color: #008f39;\n      font-weight: 500;\n      font-size: 1.2rem; }\n    body .content-container .body-sub-title {\n      color: rgba(58, 53, 65, 0.6);\n      font-weight: 400;\n      font-size: 0.8rem; }\n  body .content-card {\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 100%; }\n    body .content-card .action-bar {\n      padding: 1.6rem 1.3rem 1.6rem 1.3rem; }\n      body .content-card .action-bar button {\n        width: fit-content; }\n    body .content-card .filter-section {\n      padding: 1.4rem 1.3rem 1.6rem 1.3rem;\n      display: flex;\n      width: 100%;\n      flex-direction: row;\n      align-items: center;\n      justify-content: end; }\n      body .content-card .filter-section .search-bar {\n        display: flex;\n        flex-direction: row-reverse; }\n      body .content-card .filter-section .filter-bar {\n        display: flex;\n        flex-direction: row-reverse;\n        margin-top: 0.8rem;\n        width: 5%; }\n      body .content-card .filter-section .ant-input-affix-wrapper {\n        border-radius: 0.313rem 0 0 0.313rem !important; }\n      body .content-card .filter-section .ant-input-search\n> .ant-input-group\n> .ant-input-group-addon:last-child\n.ant-input-search-button {\n        padding-top: 0;\n        padding-bottom: 0;\n        border-radius: 0 0.313rem 0.313rem 0 !important; }\n  body .layout-content-container .ant-btn {\n    min-width: 50px !important; }\n  body .table-actions-section {\n    width: 100%;\n    margin-bottom: 1rem; }\n  body .action-menu {\n    min-width: 120px;\n    color: rgba(58, 53, 65, 0.6); }\n    body .action-menu .action-icon {\n      margin-right: 12px;\n      display: flex; }\n    body .action-menu .anticon-edit {\n      color: #008f39; }\n    body .action-menu .anticon-delete {\n      color: #f25a29; }\n  body .ant-dropdown-menu {\n    padding: 1rem 2rem 1rem 1rem !important;\n    border-radius: 5px; }\n  body .ant-dropdown-menu-item-active {\n    background-color: transparent !important; }\n  body .ant-popover-inner-content .action-menu {\n    margin: -12px -16px; }\n    body .ant-popover-inner-content .action-menu .ant-list-item {\n      padding: 11px 16px;\n      justify-content: flex-start;\n      cursor: pointer; }\n  body .ant-popover-placement-bottomRight {\n    z-index: 999; }\n  body .ant-tag {\n    border-radius: 20px; }\n  body .clickable {\n    cursor: pointer; }\n  body .text-center {\n    text-align: center; }\n  body .float-left {\n    float: left; }\n  body .float-right {\n    float: right; }\n  body .apexcharts-canvas {\n    font-family: \"Inter\" !important; }\n  body .apexcharts-legend-text {\n    font-family: \"Inter\" !important; }\n  body .ant-tag {\n    padding: 1px 10px; }\n  body .flex-display {\n    display: flex; }\n  body .ant-modal-footer {\n    border-top: none;\n    text-align: center; }\n    body .ant-modal-footer button {\n      margin: 10px 20px;\n      text-transform: uppercase;\n      font-size: 0.8rem; }\n  body .ant-modal-header {\n    border-radius: 15px;\n    border: none; }\n  body .ant-modal-content {\n    border-radius: 15px;\n    border: none; }\n  body .ant-modal-header {\n    border: none; }\n  body .ant-modal-body {\n    text-align: center;\n    color: rgba(58, 53, 65, 0.6);\n    font-size: 0.8rem; }\n    body .ant-modal-body .ant-select-selector {\n      text-align: left;\n      border-radius: 5px !important;\n      height: 32px; }\n    body .ant-modal-body .form-label {\n      text-align: left; }\n      body .ant-modal-body .form-label .req-ast {\n        color: rgba(255, 77, 79, 0.8);\n        padding-left: 5px; }\n    body .ant-modal-body .ant-form .ant-input-password {\n      padding: 6.5px 11px;\n      font-size: 16px; }\n    body .ant-modal-body .ant-form .ant-form-item-explain-error {\n      text-align: start; }\n  body .popup-header {\n    text-align: center;\n    color: rgba(58, 53, 65, 0.8);\n    font-weight: 600;\n    font-family: \"Inter\";\n    font-size: 0.9rem;\n    margin: 25px 20px -20px 20px; }\n    body .popup-header .icon {\n      font-size: 4rem;\n      margin-bottom: 15px;\n      font-weight: 400; }\n    body .popup-header img {\n      height: 100px; }\n  body .popup-success .icon {\n    color: #5dc380; }\n  body .popup-success .ant-btn-primary {\n    background: #008f39;\n    border-radius: #008f39;\n    border: none; }\n  body .popup-success .ant-btn-default {\n    color: rgba(58, 53, 65, 0.6);\n    border-color: rgba(58, 53, 65, 0.6); }\n  body .popup-success .ant-btn-primary[disabled] {\n    border-color: #d9d9d9;\n    background: #f5f5f5; }\n  body .popup-primary .icon {\n    color: #008f39; }\n  body .popup-primary .ant-btn-primary {\n    background: #008f39;\n    border-radius: #008f39;\n    border: none; }\n  body .popup-primary .ant-btn-default {\n    color: rgba(58, 53, 65, 0.6);\n    border-color: rgba(58, 53, 65, 0.6); }\n  body .popup-primary .ant-btn-primary[disabled] {\n    border-color: #d9d9d9;\n    background: #f5f5f5; }\n  body .popup-danger .icon {\n    color: rgba(255, 77, 79, 0.8); }\n  body .popup-danger .ant-btn-primary {\n    background: rgba(255, 77, 79, 0.8);\n    border-radius: rgba(255, 77, 79, 0.8);\n    border: none; }\n  body .popup-danger .ant-btn-primary[disabled] {\n    border-color: #d9d9d9;\n    background: #f5f5f5; }\n  body .popup-danger .ant-btn-default {\n    color: rgba(58, 53, 65, 0.6);\n    border-color: rgba(58, 53, 65, 0.6); }\n  body .ant-modal-footer .ant-btn {\n    height: 32px;\n    border-radius: 4px;\n    padding: 6px 16px;\n    font-weight: 500; }\n  body .ant-modal-footer .ant-btn-default {\n    color: rgba(140, 140, 140, 0.7) !important;\n    border-color: rgba(140, 140, 140, 0.7) !important; }\n  body .ant-tag-processing {\n    color: #008f39;\n    background: rgba(185, 226, 244, 0.4); }\n  body .filter-section input {\n    font-family: 'Inter';\n    font-size: 0.8rem !important; }\n  body .pull-right {\n    float: right; }\n  body .disabled {\n    opacity: 0.5; }\n  body .mg-left-3 {\n    margin-left: 3rem; }\n  body .mg-left-2 {\n    margin-left: 2rem !important; }\n  body .mg-left-1 {\n    margin-left: 1rem; }\n  body .mg-top-1 {\n    margin-top: 1rem; }\n  body .mg-top-2 {\n    margin-top: 2rem; }\n  body .mg-bottom-1 {\n    margin-bottom: 1rem !important; }\n  body .transfer-form {\n    padding: 0px 15px;\n    color: rgba(58, 53, 65, 0.6); }\n    body .transfer-form .popup-credit-input .ant-form-item-explain-error {\n      width: 200px; }\n    body .transfer-form .info-container {\n      display: flex;\n      flex-direction: row;\n      width: 10%;\n      height: 20px;\n      align-items: center;\n      justify-content: start;\n      margin-left: 5px; }\n    body .transfer-form .ant-row {\n      align-items: unset; }\n    body .transfer-form .sub-text {\n      margin-bottom: 35px;\n      font-size: 0.9rem;\n      font-weight: 500; }\n    body .transfer-form .label {\n      text-align: left;\n      font-size: 0.9rem;\n      color: rgba(58, 53, 65, 0.6); }\n    body .transfer-form .seperator {\n      font-size: 1.2rem;\n      color: #d9d9d9; }\n    body .transfer-form .footer {\n      margin-bottom: 0px;\n      margin-top: 15px; }\n    body .transfer-form label {\n      font-size: 0.8rem; }\n    body .transfer-form .ant-radio-wrapper {\n      font-size: 0.9rem; }\n    body .transfer-form input {\n      color: rgba(58, 53, 65, 0.6); }\n    body .transfer-form button {\n      text-transform: uppercase;\n      font-weight: 500; }\n  body .color-error {\n    color: rgba(255, 77, 79, 0.8); }\n  body .color-primary {\n    color: #008f39; }\n  body .ant-input-number-input {\n    text-align: right; }\n  body .text-left {\n    text-align: left; }\n  body .ant-form-item .ant-radio-group {\n    text-align: left; }\n  body .loading-center {\n    margin: auto;\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%; }\n  body .ant-tag-purple {\n    color: #976ed7; }\n  body .ant-tag-orange {\n    color: #ff8f56; }\n  body .ant-tag-default {\n    color: rgba(58, 53, 65, 0.5); }\n  body .ant-popover-inner {\n    border-radius: 4px; }\n  body .ant-input-number {\n    border-radius: 5px; }\n  body .ret-icon {\n    background-color: rgba(254, 241, 173, 0.5);\n    color: #ff8f56; }\n  body .flag-ret-icon {\n    display: flex !important;\n    background-color: #f4f5fa;\n    font-size: 1.1rem !important;\n    padding: 7px; }\n  body .b-icon {\n    vertical-align: middle; }\n  body .ant-message-notice-content {\n    padding: 0px;\n    border-radius: 5px; }\n    body .ant-message-notice-content .ant-message-custom-content {\n      font-size: 0.8rem;\n      border-radius: 5px;\n      padding: 17px 24px; }\n    body .ant-message-notice-content .ant-message-error {\n      color: rgba(255, 77, 79, 0.8);\n      border: 1px solid rgba(255, 77, 79, 0.8); }\n    body .ant-message-notice-content .ant-message-success {\n      color: #5bce00;\n      border: 1px solid #5bce00; }\n  body .ant-select-selection-item {\n    color: rgba(58, 53, 65, 0.6); }\n  body .sub-text {\n    font-size: 0.9rem;\n    font-weight: 500; }\n  body .search-filter {\n    margin-right: 15px; }\n  body .mg-bottom-0 {\n    margin-bottom: 0px; }\n  body .padding-bottom-0 {\n    padding-bottom: 0px; }\n  body .ellipsis-overflow {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical; }\n  body .nextline-overflow {\n    overflow-wrap: break-word; }\n  body .ant-message {\n    width: 50%;\n    right: 0px;\n    left: auto;\n    min-width: 400px; }\n  body .download-data-btn {\n    margin-left: 15px; }\n\n.border-radius-5 {\n  border-radius: 5px !important; }\n";
styleInject(css_248z$y);

var TextArea$3 = antd.Input.TextArea;
var UserActionConfirmationModel = function (props) {
    var t = props.t, actionInfo = props.actionInfo, onActionConfirmed = props.onActionConfirmed, onActionCanceled = props.onActionCanceled, openModal = props.openModal, uploadmodal = props.uploadmodal, onUploadLetter = props.onUploadLetter, handleFileChange = props.handleFileChange, errorMsg = props.errorMsg, loading = props.loading;
    var _a = React.useState(""), comment = _a[0], setComment = _a[1];
    React.useEffect(function () {
        setComment("");
    }, [openModal]);
    return (React.createElement(antd.Modal, { title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" }, actionInfo.icon),
            React.createElement("div", null, actionInfo.headerText)), className: "popup-" + actionInfo.type, open: openModal, width: Math.min(400, window.innerWidth), centered: true, onCancel: onActionCanceled, destroyOnClose: true, footer: null },
        React.createElement("p", { style: { whiteSpace: "pre-line" } }, actionInfo.text),
        React.createElement(antd.Form, { layout: "vertical", onFinish: function () {
                onActionConfirmed(comment);
            } },
            React.createElement(antd.Form.Item, { className: "mg-bottom-0", label: t("userProfile:remarks"), name: "remarks", required: actionInfo.type === "danger" },
                React.createElement(TextArea$3, { defaultValue: comment, rows: 2, onChange: function (v) { return setComment(v.target.value); } })),
            errorMsg ? (React.createElement(antd.Alert, { className: "mg-top-1", message: errorMsg, type: "error", showIcon: true })) : (""),
            uploadmodal ? (React.createElement("div", null,
                React.createElement("br", null),
                React.createElement("div", null,
                    React.createElement("input", { type: "file", onChange: handleFileChange }),
                    React.createElement(antd.Button, { onClick: onUploadLetter }, "Upload Letter")))) : (""),
            React.createElement("div", { className: "mg-top-1 ant-modal-footer padding-bottom-0" },
                React.createElement(antd.Button, { htmlType: "button", onClick: function () {
                        onActionCanceled();
                    } }, t("userProfile:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading, disabled: actionInfo.type === "danger" && comment === "" }, actionInfo.action)))));
};

var css_248z$x = ".company-profile {\n  padding: 0px 50px; }\n  .company-profile .company-name {\n    font-weight: 600; }\n  .company-profile .title-bar {\n    display: flex;\n    justify-content: space-between; }\n    .company-profile .title-bar .flex-display {\n      margin-left: 15px; }\n  .company-profile .card-container {\n    margin-bottom: 20px;\n    width: 100%;\n    border-radius: 10px; }\n  .company-profile .mg-left-1 {\n    margin-left: 1rem; }\n  .company-profile .mg-top-1 {\n    margin-top: 1rem; }\n  .company-profile .mg-right-5 {\n    margin-right: 5rem; }\n  .company-profile .padding-top-1 {\n    padding-top: 1rem; }\n  .company-profile .padding-top-2 {\n    padding-top: 2rem; }\n  .company-profile .profile-img {\n    width: 200px; }\n  .company-profile .btn-danger {\n    color: #ff4d4f !important;\n    border-color: #ff8183 !important; }\n  .company-profile .btn-activate {\n    color: #008f39 !important;\n    border-color: #008f39 !important; }\n  .company-profile .ant-btn[disabled] {\n    border-color: #d9d9d9 !important;\n    background: #f5f5f5 !important;\n    color: #d9d9d9 !important; }\n  .company-profile .btn-approve {\n    color: white !important;\n    background-color: #008f39 !important; }\n  .company-profile .btn-reject {\n    color: #ff4d4f !important;\n    border-color: #ff4d4f !important;\n    background-color: white !important;\n    outline: auto !important; }\n";
styleInject(css_248z$x);

exports.UserManagementColumns = void 0;
(function (UserManagementColumns) {
    UserManagementColumns["logo"] = "logo";
    UserManagementColumns["name"] = "name";
    UserManagementColumns["email"] = "email";
    UserManagementColumns["phoneNo"] = "phoneNo";
    UserManagementColumns["company"] = "company";
    UserManagementColumns["companyRole"] = "companyRole";
    UserManagementColumns["role"] = "role";
    UserManagementColumns["actions"] = "actions";
})(exports.UserManagementColumns || (exports.UserManagementColumns = {}));

exports.ProgrammeManagementColumns = void 0;
(function (ProgrammeManagementColumns) {
    ProgrammeManagementColumns["title"] = "title";
    ProgrammeManagementColumns["company"] = "company";
    ProgrammeManagementColumns["sector"] = "sector";
    ProgrammeManagementColumns["currentStage"] = "currentStage";
    ProgrammeManagementColumns["creditIssued"] = "creditIssued";
    ProgrammeManagementColumns["creditBalance"] = "creditBalance";
    ProgrammeManagementColumns["creditTransferred"] = "creditTransferred";
    ProgrammeManagementColumns["certifierId"] = "certifierId";
    ProgrammeManagementColumns["serialNo"] = "serialNo";
    ProgrammeManagementColumns["action"] = "action";
    ProgrammeManagementColumns["emissionReductionExpected"] = "emissionReductionExpected";
    ProgrammeManagementColumns["emissionReductionAchieved"] = "emissionReductionAchieved";
    ProgrammeManagementColumns["emissionReductionAchievedandCreditIssued"] = "emissionReductionAchievedandCreditIssued";
})(exports.ProgrammeManagementColumns || (exports.ProgrammeManagementColumns = {}));

exports.InvestmentLevel = void 0;
(function (InvestmentLevel) {
    InvestmentLevel["NATIONAL"] = "National";
    InvestmentLevel["INTERNATIONAL"] = "International";
})(exports.InvestmentLevel || (exports.InvestmentLevel = {}));
exports.InvestmentStatus = void 0;
(function (InvestmentStatus) {
    InvestmentStatus["PENDING"] = "Pending";
    InvestmentStatus["APPROVED"] = "Approved";
    InvestmentStatus["REJECTED"] = "Rejected";
    InvestmentStatus["CANCELLED"] = "Cancelled";
})(exports.InvestmentStatus || (exports.InvestmentStatus = {}));
var getInvestmentStatusEnumVal = function (value) {
    var index = Object.keys(exports.InvestmentStatus).indexOf(value);
    if (index < 0) {
        return value;
    }
    return Object.values(exports.InvestmentStatus)[index];
};
var getStatusTagType = function (status) {
    switch (getInvestmentStatusEnumVal(status)) {
        case exports.InvestmentStatus.REJECTED:
            return "error";
        case exports.InvestmentStatus.PENDING:
            return "success";
        case exports.InvestmentStatus.APPROVED:
            return "processing";
        default:
            return "default";
    }
};
exports.InvestmentType = void 0;
(function (InvestmentType) {
    InvestmentType["PUBLIC"] = "Public";
    InvestmentType["PRIVATE"] = "Private";
})(exports.InvestmentType || (exports.InvestmentType = {}));
exports.InvestmentCreationType = void 0;
(function (InvestmentCreationType) {
    InvestmentCreationType["EXISTING"] = "Existing";
    InvestmentCreationType["NEW"] = "New";
})(exports.InvestmentCreationType || (exports.InvestmentCreationType = {}));
exports.InvestmentOwnershipType = void 0;
(function (InvestmentOwnershipType) {
    InvestmentOwnershipType["PROJECT"] = "Project";
    InvestmentOwnershipType["NATIONAL"] = "National";
})(exports.InvestmentOwnershipType || (exports.InvestmentOwnershipType = {}));
exports.InvestmentStream = void 0;
(function (InvestmentStream) {
    InvestmentStream["CLIMATE_FINANCE"] = "ClimateFinance";
    InvestmentStream["CARBON_MARKET"] = "CarbonMarket";
})(exports.InvestmentStream || (exports.InvestmentStream = {}));

exports.MitigationTypes = void 0;
(function (MitigationTypes) {
    MitigationTypes["AGRICULTURE"] = "Agriculture";
    MitigationTypes["BIOMASS_ENERGY"] = "BiomassEnergy";
    MitigationTypes["CCS"] = "CCS";
    MitigationTypes["CEMENT"] = "Cement";
    MitigationTypes["COAL_MINE"] = "Coal/Mine";
    MitigationTypes["EE_HOUSEHOLDS"] = "EEHouseholds";
    MitigationTypes["EE_INDUSTRY"] = "EEIndustry";
    MitigationTypes["EE_OWN_GENERATION"] = "EEOwnGeneration";
    MitigationTypes["EE_SERVICE"] = "EEService";
    MitigationTypes["EE_SUPPLY_SIDE"] = "EESupplySide";
    MitigationTypes["ENERGY_DISTRIBUTION"] = "EnergyDistribution";
    MitigationTypes["FORESTRY"] = "Forestry";
    MitigationTypes["FOSSIL_FUEL"] = "FossilFuel";
    MitigationTypes["FUGITIVE"] = "Fugitive";
    MitigationTypes["GEOTHERMAL"] = "Geothermal";
    MitigationTypes["HFC_PFCS_SF6"] = "HFC_PFCs_SF6";
    MitigationTypes["HYDRO"] = "Hydro";
    MitigationTypes["LANDFILLS"] = "Landfills";
    MitigationTypes["MARINE"] = "Marine";
    MitigationTypes["METHANE_AVOIDANCE"] = "MethaneAvoidance";
    MitigationTypes["N20"] = "N20";
    MitigationTypes["SOLAR"] = "Solar";
    MitigationTypes["TRANSPORT"] = "Transport";
    MitigationTypes["WIND"] = "Wind";
    MitigationTypes["CO2_USAGE"] = "CO2Usage";
    MitigationTypes["TIDAL"] = "Tidal";
})(exports.MitigationTypes || (exports.MitigationTypes = {}));
exports.MitigationSubTypes = void 0;
(function (MitigationSubTypes) {
    MitigationSubTypes["IRRIGATION"] = "Irrigation";
    MitigationSubTypes["ENERGY_EFFICIENCY"] = "EnergyEfficiency";
    MitigationSubTypes["ALTERNATIVE_FERTILISER"] = "AlternativeFertilisers";
    MitigationSubTypes["NO_TILLAGE"] = "NoTillage";
    MitigationSubTypes["SOIL_ENRICHMENT_BIOCHAR"] = "SoilEnrichmentBiochar";
    MitigationSubTypes["RICE_CROPS"] = "RiceCrops";
    MitigationSubTypes["BAGASSE_POWER"] = "BagassePower";
    MitigationSubTypes["PALM_OIL_SOLID_WASTE"] = "Palm oil solid waste";
    MitigationSubTypes["AGRICULTURAL_RESIDUES_OTHER_KINDS"] = "AgriculturalResiduesOtherKinds";
    MitigationSubTypes["AGRICULTURAL_RESIDUES_RICE_HUSK"] = "AgriculturalResiduesRiceHusk";
    MitigationSubTypes["AGRICULTURAL_RESIDUES_MUSTARD_CROP"] = "AgriculturalResiduesMustardCrop";
    MitigationSubTypes["AGRICULTURAL_RESIDUES_POULTRY_LITTER"] = "AgriculturalResiduesPoultryLitter";
    MitigationSubTypes["BLACK_LIQUOR"] = "BlackLiquor";
    MitigationSubTypes["FOREST_RESIDUES_SAWMILL_WASTE"] = "ForestResiduesSawmillWaste";
    MitigationSubTypes["FOREST_RESIDUES_OTHER"] = "ForestResiduesOther";
    MitigationSubTypes["FOREST_BIOMASS"] = "ForestBiomass";
    MitigationSubTypes["INDUSTRIAL_WASTE"] = "IndustrialWaste";
    MitigationSubTypes["GASIFICATION_OF_BIOMASS"] = "GasificationOfBiomass";
    MitigationSubTypes["SWITCH_FROM_FOSSIL_FUEL_TO_PIPED_BIOGAS"] = "SwitchFromFossilFuelToPipedBiogas";
    MitigationSubTypes["BIOMASS_BRIQUETTES_OR_PELLETS"] = "BiomassBriquettesOrPellets";
    MitigationSubTypes["BIODIESEL"] = "Biodiesel";
    MitigationSubTypes["BIODIESEL_FROM_WASTE_OIL"] = "BiodieselFromWasteOil";
    MitigationSubTypes["ETHANOL"] = "Ethanol";
    MitigationSubTypes["CLINKER_REPLACEMENT"] = "ClinkerReplacement";
    MitigationSubTypes["COAL_MINE_METHANE"] = "CoalMineMethane";
    MitigationSubTypes["COAL_BED_METHANE"] = "CoalBedMethane";
    MitigationSubTypes["CMM_VENTILATION_AIR_METHANE"] = "CMMVentilationAirMethane";
    MitigationSubTypes["VENTILATION_AIR_METHANE"] = "VentilationAirMethane";
    MitigationSubTypes["LIGHTING"] = "Lighting";
    MitigationSubTypes["SOLAR_LAMPS"] = "SolarLamps";
    MitigationSubTypes["STOVES"] = "Stoves";
    MitigationSubTypes["STOVES_SCHOOL_IN_GHANA"] = "StovesSchoolInGhana";
    MitigationSubTypes["STOVES_HOUSES_IN_NAMIBIA"] = "StovesHousesInNamibia";
    MitigationSubTypes["LIGHTING_INSULATION_SOLAR"] = "LightingInsulationSolar";
    MitigationSubTypes["APPLIANCES"] = "Appliances";
    MitigationSubTypes["CHEMICALS"] = "Chemicals";
    MitigationSubTypes["PETROCHEMICALS"] = "Petrochemicals";
    MitigationSubTypes["PAPER"] = "Paper";
    MitigationSubTypes["CEMENT"] = "Cement";
    MitigationSubTypes["IRON_STEEL"] = "IronSteel";
    MitigationSubTypes["MACHINERY"] = "Machinery";
    MitigationSubTypes["TEXTILES"] = "Textiles";
    MitigationSubTypes["ELECTRONICS"] = "Electronics";
    MitigationSubTypes["FOOD"] = "Food";
    MitigationSubTypes["BUILDING_MATERIALS"] = "BuildingMaterials";
    MitigationSubTypes["GLASS"] = "Glass";
    MitigationSubTypes["NON_FERROUS_METALS"] = "NonFerrousMetals";
    MitigationSubTypes["COKE_OVEN"] = "CokeOven";
    MitigationSubTypes["Mining"] = "Mining";
    MitigationSubTypes["CONSTRUCTION"] = "Construction";
    MitigationSubTypes["METAL_PRODUCTS"] = "MetalProducts";
    MitigationSubTypes["WOOD"] = "Wood";
    MitigationSubTypes["RECYCLING"] = "Recycling";
    MitigationSubTypes["CHEMICALS_HEAT"] = "ChemicalsHeat";
    MitigationSubTypes["PETROCHEMICALS_HEAT"] = "PetrochemicalsHeat";
    MitigationSubTypes["CARBON_BLACK_GAS"] = "CarbonBlackGas";
    MitigationSubTypes["CEMENT_HEAT"] = "CementHeat";
    MitigationSubTypes["IRON_STEEL_HEAT"] = "IronSteelHeat";
    MitigationSubTypes["BUILDING_MATERIALS_HEAT"] = "BuildingMaterialsHeat";
    MitigationSubTypes["GLASS_HEAT"] = "GlassHeat";
    MitigationSubTypes["NON_FERROUS_METALS_HEAT"] = "NonFerrousMetalsHeat";
    MitigationSubTypes["COKE_OVEN_GAS"] = "CokeOvenGas";
    MitigationSubTypes["HVAC_LIGHTING"] = "HvacLighting";
    MitigationSubTypes["AIR_CONDITIONING"] = "AirConditioning";
    MitigationSubTypes["EE_NEW_BUILDINGS"] = "EeNewBuildings";
    MitigationSubTypes["STREET_LIGHTING"] = "StreetLighting";
    MitigationSubTypes["LIGHTING_IN_SERVICE"] = "LightingInService";
    MitigationSubTypes["WATER_PUMPING"] = "WaterPumping";
    MitigationSubTypes["WATER_PURIFICATION"] = "WaterPurification";
    MitigationSubTypes["EE_PUBLIC_STOVES"] = "EePublicStoves";
    MitigationSubTypes["EE_PUBLIC_BUILDINGS"] = "EePublicBuildings";
    MitigationSubTypes["EE_COMMERCIAL_BUILDINGS"] = "EeCommercialBuildings";
    MitigationSubTypes["SINGLE_CYCLE_TO_COMBINED_CYCLE"] = "SingleCycleToCombinedCycle";
    MitigationSubTypes["COGENERATION"] = "Cogeneration";
    MitigationSubTypes["CO_FIRING_WITH_BIOMASS"] = "CoFiringWithBiomass";
    MitigationSubTypes["HIGHER_EFFICIENCY_COAL_POWER"] = "HigherEfficiencyCoalPower";
    MitigationSubTypes["HIGHER_EFFICIENCY_OIL_POWER"] = "HigherEfficiencyOilPower";
    MitigationSubTypes["HIGHER_EFFICIENCY_USING_WASTE_HEAT"] = "HigherEfficiencyUsingWasteHeat";
    MitigationSubTypes["POWER_PLANT_REHABILITATION"] = "PowerPlantRehabilitation";
    MitigationSubTypes["HIGHER_EFFICIENCY_STEAM_BOILER"] = "HigherEfficiencySteamBoiler";
    MitigationSubTypes["DISTRICT_HEATING"] = "DistrictHeating";
    MitigationSubTypes["REPLACEMENT_OF_DISTRICT_HEATING_BOILERS"] = "ReplacementOfDistrictHeatingBoilers";
    MitigationSubTypes["CONNECTION_OF_ISOLATED_GRID"] = "ConnectionOfIsolatedGrid";
    MitigationSubTypes["DISTRICT_COOLING"] = "DistrictCooling";
    MitigationSubTypes["EFFICIENT_ELECTRICITY_DISTRIBUTION"] = "EfficientElectricityDistribution";
    MitigationSubTypes["AFFORESTATION"] = "Afforestation";
    MitigationSubTypes["MANGROVES"] = "Mangroves";
    MitigationSubTypes["AGROFORESTRY"] = "Agroforestry";
    MitigationSubTypes["REFORESTATION"] = "Reforestation";
    MitigationSubTypes["COAL_TO_NATURAL_GAS"] = "CoalToNaturalGas";
    MitigationSubTypes["COAL_TO_OIL"] = "CoalToOil";
    MitigationSubTypes["LIGNITE_TO_NATURAL_GAS"] = "LigniteToNaturalGas";
    MitigationSubTypes["NEW_NATURAL_GAS_PLANT"] = "NewNaturalGasPlant";
    MitigationSubTypes["NEW_NATURAL_GAS_PLANT_USING_LNG"] = "NewNaturalGasPlantUsingLng";
    MitigationSubTypes["OIL_TO_ELECTRICITY"] = "OilToElectricity";
    MitigationSubTypes["OIL_TO_LPG"] = "OilToLpg";
    MitigationSubTypes["OIL_TO_NATURAL_GAS"] = "OilToNaturalGas";
    MitigationSubTypes["OIL_FIELD_FLARING_REDUCTION"] = "OilFieldFlaringReduction";
    MitigationSubTypes["OIL_AND_GAS_PROCESSING_FLARING"] = "OilAndGasProcessingFlaring";
    MitigationSubTypes["NATURAL_GAS_PIPELINES"] = "NaturalGasPipelines";
    MitigationSubTypes["NON_HYDROCARBON_MINING"] = "NonHydrocarbonMining";
    MitigationSubTypes["SPONTANEOUSLY_IGNITION_OF_COAL_PILES"] = "SpontaneouslyIgnitionOfCoalPiles";
    MitigationSubTypes["CHARCOAL_PRODUCTION"] = "CharcoalProduction";
    MitigationSubTypes["GEOTHERMAL_ELECTRICITY"] = "GeothermalElectricity";
    MitigationSubTypes["GEOTHERMAL_HEATING"] = "GeothermalHeating";
    MitigationSubTypes["HFC23"] = "Hfc23";
    MitigationSubTypes["HFC134A"] = "Hfc134A";
    MitigationSubTypes["PFCS"] = "Pfcs";
    MitigationSubTypes["SF6"] = "Sf6";
    MitigationSubTypes["RUN_OF_RIVER"] = "RunOfRiver";
    MitigationSubTypes["EXISTING_DAM"] = "ExistingDam";
    MitigationSubTypes["HIGHER_EFFICIENCY_HYDRO_POWER"] = "HigherEfficiencyHydroPower";
    MitigationSubTypes["NEW_DAM"] = "NewDam";
    MitigationSubTypes["LANDFILL_FLARING"] = "LandfillFlaring";
    MitigationSubTypes["LANDFILL_POWER"] = "LandfillPower";
    MitigationSubTypes["COMBUSTION_OF_MSW"] = "CombustionOfMsw";
    MitigationSubTypes["GASIFICATION_OF_MSW"] = "GasificationOfMsw";
    MitigationSubTypes["BIOGAS_FROM_MSW"] = "BiogasFromMsw";
    MitigationSubTypes["LANDFILL_AERATION"] = "LandfillAeration";
    MitigationSubTypes["INTEGRATED_SOLID_WASTE_MANAGEMENT"] = "IntegratedSolidWasteManagement";
    MitigationSubTypes["SWITCH_FROM_FOSSIL_FUEL_TO_PIPED_LANDFILL_GAS"] = "SwitchFromFossilFuelToPipedLandfillGas";
    MitigationSubTypes["LANDFILL_COMPOSTING"] = "LandfillComposting";
    MitigationSubTypes["MANURE"] = "Manure";
    MitigationSubTypes["DOMESTIC_MANURE"] = "DomesticManure";
    MitigationSubTypes["WASTE_WATER"] = "WasteWater";
    MitigationSubTypes["INDUSTRIAL_SOLID_WASTE"] = "IndustrialSolidWaste";
    MitigationSubTypes["PALM_OIL_WASTE"] = "PalmOilWaste";
    MitigationSubTypes["AEROBIC_TREATMENT_OF_WASTE_WATER"] = "AerobicTreatmentOfWasteWater";
    MitigationSubTypes["COMPOSTING"] = "Composting";
    MitigationSubTypes["ADIPIC_ACID"] = "AdipicAcid";
    MitigationSubTypes["NITRIC_ACID"] = "NitricAcid";
    MitigationSubTypes["CAPROLACTAM"] = "Caprolactam";
    MitigationSubTypes["SOLAR_PHOTOVOLTAICS_PV"] = "SolarPhotovoltaicsPV";
    MitigationSubTypes["SOLAR_WATER_PUMPING_OFF_GRID"] = "SolarWaterPumpingOffGrid";
    MitigationSubTypes["SOLAR_WATER_PUMPING_ON_GRID"] = "SolarWaterPumpingOnGrid";
    MitigationSubTypes["SOLAR_PV_WATER_DISINFECTION"] = "SolarPVWaterDisinfection";
    MitigationSubTypes["SOLAR_THERMAL_POWER"] = "SolarThermalPower";
    MitigationSubTypes["SOLAR_THERMAL_HEAT"] = "SolarThermalHeat";
    MitigationSubTypes["SOLAR_WATER_HEATING"] = "SolarWaterHeating";
    MitigationSubTypes["SOLAR_COOKING"] = "SolarCooking";
    MitigationSubTypes["BUS_RAPID_TRANSIT"] = "BusRapidTransit";
    MitigationSubTypes["BUS_RAPID_TRANSIT_GREEN_HYDROGEN"] = "BusRapidTransitGreenHydrogen";
    MitigationSubTypes["MOTORBIKES"] = "Motorbikes";
    MitigationSubTypes["MODE_SHIFT_ROAD_TO_RAIL"] = "ModeShiftRoadToRail";
    MitigationSubTypes["MORE_EFFICIENT_TRAIN_SYSTEM"] = "MoreEfficientTrainSystem";
    MitigationSubTypes["MORE_EFFICIENT_VEHICLES"] = "MoreEfficientVehicles";
    MitigationSubTypes["RAIL_REGENERATIVE_BRAKING"] = "RailRegenerativeBraking";
    MitigationSubTypes["RAIL_GREEN_HYDROGEN"] = "RailGreenHydrogen";
    MitigationSubTypes["RAIL_EFFICIENT_OPERATION"] = "RailEfficientOperation";
    MitigationSubTypes["METRO_EFFICIENT_OPERATION"] = "MetroEfficientOperation";
    MitigationSubTypes["CARS_GREEN_HYDROGEN"] = "CarsGreenHydrogen";
    MitigationSubTypes["CARS_EFFICIENT_OPERATION"] = "CarsEfficientOperation";
    MitigationSubTypes["SCRAPPING_OLD_VEHICLES"] = "ScrappingOldVehicles";
    MitigationSubTypes["BIODIESEL_FOR_TRANSPORT"] = "BiodieselForTransport";
    MitigationSubTypes["CABLE_CARS"] = "CableCars";
    MitigationSubTypes["WIND"] = "Wind";
    MitigationSubTypes["OFFSHORE_WIND"] = "OffshoreWind";
    MitigationSubTypes["CO2_RECYCLING"] = "CO2Recycling";
    MitigationSubTypes["CO2_REPLACEMENT"] = "CO2Replacement";
    MitigationSubTypes["TIDAL"] = "Tidal";
})(exports.MitigationSubTypes || (exports.MitigationSubTypes = {}));
var mitigationTypeList = [
    { value: exports.MitigationTypes.AGRICULTURE.valueOf(), label: "Agriculture" },
    { value: exports.MitigationTypes.SOLAR.valueOf(), label: "Solar" },
    { value: exports.MitigationTypes.BIOMASS_ENERGY.valueOf(), label: "Biomass energy" },
    { value: exports.MitigationTypes.CCS.valueOf(), label: "CCS" },
    { value: exports.MitigationTypes.CEMENT.valueOf(), label: "Cement" },
    {
        value: exports.MitigationTypes.COAL_MINE.valueOf(),
        label: "Coal bed/mine methane",
    },
    { value: exports.MitigationTypes.EE_HOUSEHOLDS.valueOf(), label: "EE households" },
    { value: exports.MitigationTypes.EE_INDUSTRY.valueOf(), label: "EE industry" },
    {
        value: exports.MitigationTypes.EE_OWN_GENERATION.valueOf(),
        label: "EE own generation",
    },
    { value: exports.MitigationTypes.EE_SERVICE.valueOf(), label: "EE service" },
    { value: exports.MitigationTypes.EE_SUPPLY_SIDE.valueOf(), label: "EE supply side" },
    {
        value: exports.MitigationTypes.ENERGY_DISTRIBUTION.valueOf(),
        label: "Energy distribution",
    },
    { value: exports.MitigationTypes.FORESTRY.valueOf(), label: "Forestry" },
    {
        value: exports.MitigationTypes.FOSSIL_FUEL.valueOf(),
        label: "Fossil fuel switch",
    },
    { value: exports.MitigationTypes.FUGITIVE.valueOf(), label: "Fugitive" },
    { value: exports.MitigationTypes.GEOTHERMAL.valueOf(), label: "Geothermal" },
    { value: exports.MitigationTypes.HFC_PFCS_SF6.valueOf(), label: "HFCs, PFCs, SF6" },
    { value: exports.MitigationTypes.HYDRO.valueOf(), label: "Hydro" },
    { value: exports.MitigationTypes.LANDFILLS.valueOf(), label: "Landfills" },
    { value: exports.MitigationTypes.MARINE.valueOf(), label: "Marine" },
    {
        value: exports.MitigationTypes.METHANE_AVOIDANCE.valueOf(),
        label: "Methane avoidance",
    },
    { value: exports.MitigationTypes.N20.valueOf(), label: "N2O" },
    { value: exports.MitigationTypes.TRANSPORT.valueOf(), label: "Transport" },
    { value: exports.MitigationTypes.WIND.valueOf(), label: "Wind" },
    { value: exports.MitigationTypes.CO2_USAGE.valueOf(), label: "CO2 usage" },
    { value: exports.MitigationTypes.TIDAL.valueOf(), label: "Tidal" },
];
var sectorMitigationTypesListMapped = {
    Energy: [
        {
            value: exports.MitigationTypes.BIOMASS_ENERGY.valueOf(),
            label: "Biomass energy",
        },
        {
            value: exports.MitigationTypes.COAL_MINE.valueOf(),
            label: "Coal bed/mine methane",
        },
        { value: exports.MitigationTypes.EE_HOUSEHOLDS.valueOf(), label: "EE households" },
        { value: exports.MitigationTypes.EE_INDUSTRY.valueOf(), label: "EE industry" },
        {
            value: exports.MitigationTypes.EE_OWN_GENERATION.valueOf(),
            label: "EE own generation",
        },
        { value: exports.MitigationTypes.EE_SERVICE.valueOf(), label: "EE service" },
        {
            value: exports.MitigationTypes.EE_SUPPLY_SIDE.valueOf(),
            label: "EE supply side",
        },
        {
            value: exports.MitigationTypes.ENERGY_DISTRIBUTION.valueOf(),
            label: "Energy distribution",
        },
        {
            value: exports.MitigationTypes.FOSSIL_FUEL.valueOf(),
            label: "Fossil fuel switch",
        },
        { value: exports.MitigationTypes.GEOTHERMAL.valueOf(), label: "Geothermal" },
        { value: exports.MitigationTypes.HYDRO.valueOf(), label: "Hydro" },
        { value: exports.MitigationTypes.SOLAR.valueOf(), label: "Solar" },
        { value: exports.MitigationTypes.WIND.valueOf(), label: "Wind" },
    ],
    Health: [],
    Education: [],
    Transport: [
        { value: exports.MitigationTypes.TRANSPORT.valueOf(), label: "Transport" },
    ],
    Manufacturing: [
        { value: exports.MitigationTypes.CEMENT.valueOf(), label: "Cement" },
        { value: exports.MitigationTypes.CCS.valueOf(), label: "CCS" },
        { value: exports.MitigationTypes.HFC_PFCS_SF6.valueOf(), label: "HFCs, PFCs, SF6" },
    ],
    Hospitality: [],
    Forestry: [{ value: exports.MitigationTypes.FORESTRY.valueOf(), label: "Forestry" }],
    Waste: [
        { value: exports.MitigationTypes.LANDFILLS.valueOf(), label: "Landfills" },
        { value: exports.MitigationTypes.FUGITIVE.valueOf(), label: "Fugitive" },
        {
            value: exports.MitigationTypes.METHANE_AVOIDANCE.valueOf(),
            label: "Methane avoidance",
        },
    ],
    Agriculture: [
        { value: exports.MitigationTypes.AGRICULTURE.valueOf(), label: "Agriculture" }
    ],
    Other: [
        { value: exports.MitigationTypes.MARINE.valueOf(), label: "Marine" },
        { value: exports.MitigationTypes.N20.valueOf(), label: "N2O" },
        { value: exports.MitigationTypes.CO2_USAGE.valueOf(), label: "CO2 usage" },
        { value: exports.MitigationTypes.TIDAL.valueOf(), label: "Tidal" },
    ],
};
var mitigationSubTypeList = [
    { label: "Irrigation", value: exports.MitigationSubTypes.IRRIGATION.valueOf() },
    { label: "Energy efficiency", value: exports.MitigationSubTypes.ENERGY_EFFICIENCY.valueOf() },
    { label: "Alternative fertilisers", value: exports.MitigationSubTypes.ALTERNATIVE_FERTILISER.valueOf() },
    { label: "No tillage", value: exports.MitigationSubTypes.NO_TILLAGE.valueOf() },
    { label: "Soil Enrichment / Biochar", value: exports.MitigationSubTypes.SOIL_ENRICHMENT_BIOCHAR.valueOf() },
    { label: "Rice crops", value: exports.MitigationSubTypes.RICE_CROPS.valueOf() },
    { label: "Bagasse power", value: exports.MitigationSubTypes.BAGASSE_POWER.valueOf() },
    { label: "Palm oil solid waste", value: exports.MitigationSubTypes.PALM_OIL_SOLID_WASTE.valueOf() },
    { label: "Agricultural residues: other kinds", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_OTHER_KINDS.valueOf() },
    { label: "Agricultural residues: rice husk", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_RICE_HUSK.valueOf() },
    { label: "Agricultural residues: mustard crop", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_MUSTARD_CROP.valueOf() },
    { label: "Agricultural residues: poultry litter", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_POULTRY_LITTER.valueOf() },
    { label: "Black liquor", value: exports.MitigationSubTypes.BLACK_LIQUOR.valueOf() },
    { label: "Forest residues: sawmill waste", value: exports.MitigationSubTypes.FOREST_RESIDUES_SAWMILL_WASTE.valueOf() },
    { label: "Forest residues: other", value: exports.MitigationSubTypes.FOREST_RESIDUES_OTHER.valueOf() },
    { label: "Forest biomass", value: exports.MitigationSubTypes.FOREST_BIOMASS.valueOf() },
    { label: "Industrial waste", value: exports.MitigationSubTypes.INDUSTRIAL_WASTE.valueOf() },
    { label: "Gasification of biomass", value: exports.MitigationSubTypes.GASIFICATION_OF_BIOMASS.valueOf() },
    { label: "Switch from fossil fuel to piped biogas", value: exports.MitigationSubTypes.SWITCH_FROM_FOSSIL_FUEL_TO_PIPED_BIOGAS.valueOf() },
    { label: "Biomass briquettes or pellets", value: exports.MitigationSubTypes.BIOMASS_BRIQUETTES_OR_PELLETS.valueOf() },
    { label: "Biodiesel", value: exports.MitigationSubTypes.BIODIESEL.valueOf() },
    { label: "Biodiesel from waste oil", value: exports.MitigationSubTypes.BIODIESEL_FROM_WASTE_OIL.valueOf() },
    { label: "Ethanol", value: exports.MitigationSubTypes.ETHANOL.valueOf() },
    { label: "Clinker replacement", value: exports.MitigationSubTypes.CLINKER_REPLACEMENT.valueOf() },
    { label: "Coal Mine Methane", value: exports.MitigationSubTypes.COAL_MINE_METHANE.valueOf() },
    { label: "Coal Bed Methane", value: exports.MitigationSubTypes.COAL_BED_METHANE.valueOf() },
    { label: "CMM & Ventilation Air Methane", value: exports.MitigationSubTypes.CMM_VENTILATION_AIR_METHANE.valueOf() },
    { label: "Ventilation Air Methane", value: exports.MitigationSubTypes.VENTILATION_AIR_METHANE.valueOf() },
    { label: "Lighting", value: exports.MitigationSubTypes.LIGHTING.valueOf() },
    { label: "Solar lamps", value: exports.MitigationSubTypes.SOLAR_LAMPS.valueOf() },
    { label: "Stoves", value: exports.MitigationSubTypes.STOVES.valueOf() },
    { label: "Stoves (School in Ghana)", value: exports.MitigationSubTypes.STOVES_SCHOOL_IN_GHANA.valueOf() },
    { label: "Stoves (Houses in Namibia)", value: exports.MitigationSubTypes.STOVES_HOUSES_IN_NAMIBIA.valueOf() },
    { label: "Lighting & Insulation & Solar", value: exports.MitigationSubTypes.LIGHTING_INSULATION_SOLAR.valueOf() },
    { label: "Appliances", value: exports.MitigationSubTypes.APPLIANCES.valueOf() },
    { label: "Chemicals", value: exports.MitigationSubTypes.CHEMICALS.valueOf() },
    { label: "Petrochemicals", value: exports.MitigationSubTypes.PETROCHEMICALS.valueOf() },
    { label: "Paper", value: exports.MitigationSubTypes.PAPER.valueOf() },
    { label: "Cement", value: exports.MitigationSubTypes.CEMENT.valueOf() },
    { label: "Iron & steel ", value: exports.MitigationSubTypes.IRON_STEEL.valueOf() },
    { label: "Machinery", value: exports.MitigationSubTypes.MACHINERY.valueOf() },
    { label: "Textiles", value: exports.MitigationSubTypes.TEXTILES.valueOf() },
    { label: "Electronics", value: exports.MitigationSubTypes.ELECTRONICS.valueOf() },
    { label: "Food", value: exports.MitigationSubTypes.FOOD.valueOf() },
    { label: "Building materials", value: exports.MitigationSubTypes.BUILDING_MATERIALS.valueOf() },
    { label: "Glass", value: exports.MitigationSubTypes.GLASS.valueOf() },
    { label: "Non-ferrous metals", value: exports.MitigationSubTypes.NON_FERROUS_METALS.valueOf() },
    { label: "Coke oven", value: exports.MitigationSubTypes.COKE_OVEN.valueOf() },
    { label: "Mining", value: exports.MitigationSubTypes.Mining.valueOf() },
    { label: "Construction", value: exports.MitigationSubTypes.CONSTRUCTION.valueOf() },
    { label: "Metal products", value: exports.MitigationSubTypes.METAL_PRODUCTS.valueOf() },
    { label: "Wood", value: exports.MitigationSubTypes.WOOD.valueOf() },
    { label: "Recycling", value: exports.MitigationSubTypes.RECYCLING.valueOf() },
    { label: "Chemicals heat", value: exports.MitigationSubTypes.CHEMICALS_HEAT.valueOf() },
    { label: "Petrochemicals heat", value: exports.MitigationSubTypes.PETROCHEMICALS_HEAT.valueOf() },
    { label: "Carbon black gas", value: exports.MitigationSubTypes.CARBON_BLACK_GAS.valueOf() },
    { label: "Cement heat", value: exports.MitigationSubTypes.CEMENT_HEAT.valueOf() },
    { label: "Iron & steel heat", value: exports.MitigationSubTypes.IRON_STEEL_HEAT.valueOf() },
    { label: "Building materials heat", value: exports.MitigationSubTypes.BUILDING_MATERIALS_HEAT.valueOf() },
    { label: "Glass heat", value: exports.MitigationSubTypes.GLASS_HEAT.valueOf() },
    { label: "Non-ferrous metals heat", value: exports.MitigationSubTypes.NON_FERROUS_METALS_HEAT.valueOf() },
    { label: "Coke oven gas", value: exports.MitigationSubTypes.COKE_OVEN_GAS.valueOf() },
    { label: "HVAC & lighting", value: exports.MitigationSubTypes.HVAC_LIGHTING.valueOf() },
    { label: "Air conditioning", value: exports.MitigationSubTypes.AIR_CONDITIONING.valueOf() },
    { label: "EE new buildings", value: exports.MitigationSubTypes.EE_NEW_BUILDINGS.valueOf() },
    { label: "Street lighting", value: exports.MitigationSubTypes.STREET_LIGHTING.valueOf() },
    { label: "Lighting in service", value: exports.MitigationSubTypes.LIGHTING_IN_SERVICE.valueOf() },
    { label: "Water pumping", value: exports.MitigationSubTypes.WATER_PUMPING.valueOf() },
    { label: "Water purification", value: exports.MitigationSubTypes.WATER_PURIFICATION.valueOf() },
    { label: "EE public stoves", value: exports.MitigationSubTypes.EE_PUBLIC_STOVES.valueOf() },
    { label: "EE public buildings", value: exports.MitigationSubTypes.EE_PUBLIC_BUILDINGS.valueOf() },
    { label: "EE commercial buildings", value: exports.MitigationSubTypes.EE_COMMERCIAL_BUILDINGS.valueOf() },
    { label: "Single cycle to combined cycle", value: exports.MitigationSubTypes.SINGLE_CYCLE_TO_COMBINED_CYCLE.valueOf() },
    { label: "Cogeneration", value: exports.MitigationSubTypes.COGENERATION.valueOf() },
    { label: "Co-firing with biomass", value: exports.MitigationSubTypes.CO_FIRING_WITH_BIOMASS.valueOf() },
    { label: "Higher efficiency coal power", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_COAL_POWER.valueOf() },
    { label: "Higher efficiency oil power", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_OIL_POWER.valueOf() },
    { label: "Higher efficiency using waste heat", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_USING_WASTE_HEAT.valueOf() },
    { label: "Power plant rehabilitation", value: exports.MitigationSubTypes.POWER_PLANT_REHABILITATION.valueOf() },
    { label: "Higher efficiency steam boiler", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_STEAM_BOILER.valueOf() },
    { label: "District heating", value: exports.MitigationSubTypes.DISTRICT_HEATING.valueOf() },
    { label: "Replacement of district heating boilers", value: exports.MitigationSubTypes.REPLACEMENT_OF_DISTRICT_HEATING_BOILERS.valueOf() },
    { label: "Connection of Isolated grid", value: exports.MitigationSubTypes.CONNECTION_OF_ISOLATED_GRID.valueOf() },
    { label: "District cooling", value: exports.MitigationSubTypes.DISTRICT_COOLING.valueOf() },
    { label: "Efficient electricity distribution", value: exports.MitigationSubTypes.EFFICIENT_ELECTRICITY_DISTRIBUTION.valueOf() },
    { label: "Afforestation", value: exports.MitigationSubTypes.AFFORESTATION.valueOf() },
    { label: "Mangroves", value: exports.MitigationSubTypes.MANGROVES.valueOf() },
    { label: "Agroforestry", value: exports.MitigationSubTypes.AGROFORESTRY.valueOf() },
    { label: "Reforestation", value: exports.MitigationSubTypes.REFORESTATION.valueOf() },
    { label: "Coal to natural gas", value: exports.MitigationSubTypes.COAL_TO_NATURAL_GAS.valueOf() },
    { label: "Coal to oil", value: exports.MitigationSubTypes.COAL_TO_OIL.valueOf() },
    { label: "Lignite to natural gas", value: exports.MitigationSubTypes.LIGNITE_TO_NATURAL_GAS.valueOf() },
    { label: "New natural gas plant", value: exports.MitigationSubTypes.NEW_NATURAL_GAS_PLANT.valueOf() },
    { label: "New natural gas plant using LNG", value: exports.MitigationSubTypes.NEW_NATURAL_GAS_PLANT_USING_LNG.valueOf() },
    { label: "Oil to electricity", value: exports.MitigationSubTypes.OIL_TO_ELECTRICITY.valueOf() },
    { label: "Oil to LPG", value: exports.MitigationSubTypes.OIL_TO_LPG.valueOf() },
    { label: "Oil to natural gas", value: exports.MitigationSubTypes.OIL_TO_NATURAL_GAS.valueOf() },
    { label: "Oil field flaring reduction", value: exports.MitigationSubTypes.OIL_FIELD_FLARING_REDUCTION.valueOf() },
    { label: "Oil and gas processing flaring", value: exports.MitigationSubTypes.OIL_AND_GAS_PROCESSING_FLARING.valueOf() },
    { label: "Natural gas pipelines", value: exports.MitigationSubTypes.NATURAL_GAS_PIPELINES.valueOf() },
    { label: "Non-hydrocarbon mining", value: exports.MitigationSubTypes.NON_HYDROCARBON_MINING.valueOf() },
    { label: "Spontaneously ignition of coal piles", value: exports.MitigationSubTypes.SPONTANEOUSLY_IGNITION_OF_COAL_PILES.valueOf() },
    { label: "Charcoal production", value: exports.MitigationSubTypes.CHARCOAL_PRODUCTION.valueOf() },
    { label: "Geothermal electricity", value: exports.MitigationSubTypes.GEOTHERMAL_ELECTRICITY.valueOf() },
    { label: "Geothermal heating", value: exports.MitigationSubTypes.GEOTHERMAL_HEATING.valueOf() },
    { label: "HFC23", value: exports.MitigationSubTypes.HFC23.valueOf() },
    { label: "HFC134a", value: exports.MitigationSubTypes.HFC134A.valueOf() },
    { label: "PFCs", value: exports.MitigationSubTypes.PFCS.valueOf() },
    { label: "SF6", value: exports.MitigationSubTypes.SF6.valueOf() },
    { label: "Run of river", value: exports.MitigationSubTypes.RUN_OF_RIVER.valueOf() },
    { label: "Existing dam", value: exports.MitigationSubTypes.EXISTING_DAM.valueOf() },
    { label: "Higher efficiency hydro power", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_HYDRO_POWER.valueOf() },
    { label: "New dam", value: exports.MitigationSubTypes.NEW_DAM.valueOf() },
    { label: "Landfill flaring", value: exports.MitigationSubTypes.LANDFILL_FLARING.valueOf() },
    { label: "Landfill power", value: exports.MitigationSubTypes.LANDFILL_POWER.valueOf() },
    { label: "Combustion of MSW", value: exports.MitigationSubTypes.COMBUSTION_OF_MSW.valueOf() },
    { label: "Gasification of MSW", value: exports.MitigationSubTypes.GASIFICATION_OF_MSW.valueOf() },
    { label: "Biogas from MSW", value: exports.MitigationSubTypes.BIOGAS_FROM_MSW.valueOf() },
    { label: "Landfill aeration", value: exports.MitigationSubTypes.LANDFILL_AERATION.valueOf() },
    { label: "Integrated solid waste management", value: exports.MitigationSubTypes.INTEGRATED_SOLID_WASTE_MANAGEMENT.valueOf() },
    { label: "Switch from fossil fuel to piped landfill gas", value: exports.MitigationSubTypes.SWITCH_FROM_FOSSIL_FUEL_TO_PIPED_LANDFILL_GAS.valueOf() },
    { label: "Landfill composting", value: exports.MitigationSubTypes.LANDFILL_COMPOSTING.valueOf() },
    { label: "Manure", value: exports.MitigationSubTypes.MANURE.valueOf() },
    { label: "Domestic manure", value: exports.MitigationSubTypes.DOMESTIC_MANURE.valueOf() },
    { label: "Waste water", value: exports.MitigationSubTypes.WASTE_WATER.valueOf() },
    { label: "Industrial solid waste", value: exports.MitigationSubTypes.INDUSTRIAL_SOLID_WASTE.valueOf() },
    { label: "Palm oil waste", value: exports.MitigationSubTypes.PALM_OIL_WASTE.valueOf() },
    { label: "Aerobic treatment of waste water", value: exports.MitigationSubTypes.AEROBIC_TREATMENT_OF_WASTE_WATER.valueOf() },
    { label: "Composting", value: exports.MitigationSubTypes.COMPOSTING.valueOf() },
    { label: "Adipic acid", value: exports.MitigationSubTypes.ADIPIC_ACID.valueOf() },
    { label: "Nitric acid", value: exports.MitigationSubTypes.NITRIC_ACID.valueOf() },
    { label: "Caprolactam", value: exports.MitigationSubTypes.CAPROLACTAM.valueOf() },
    { label: "Solar Photovoltaics(PV)", value: exports.MitigationSubTypes.SOLAR_PHOTOVOLTAICS_PV.valueOf() },
    { label: "Solar Water pumping (off-grid)", value: exports.MitigationSubTypes.SOLAR_WATER_PUMPING_OFF_GRID.valueOf() },
    { label: "Solar Water pumping (on-grid)", value: exports.MitigationSubTypes.SOLAR_WATER_PUMPING_ON_GRID.valueOf() },
    { label: "Solar PV water disinfection", value: exports.MitigationSubTypes.SOLAR_PV_WATER_DISINFECTION.valueOf() },
    { label: "Solar thermal power", value: exports.MitigationSubTypes.SOLAR_THERMAL_POWER.valueOf() },
    { label: "Solar thermal heat", value: exports.MitigationSubTypes.SOLAR_THERMAL_HEAT.valueOf() },
    { label: "Solar water heating", value: exports.MitigationSubTypes.SOLAR_WATER_HEATING.valueOf() },
    { label: "Solar cooking", value: exports.MitigationSubTypes.SOLAR_COOKING.valueOf() },
    { label: "Bus Rapid Transit", value: exports.MitigationSubTypes.BUS_RAPID_TRANSIT.valueOf() },
    { label: "Bus Rapid Transit: Green hydrogen", value: exports.MitigationSubTypes.BUS_RAPID_TRANSIT_GREEN_HYDROGEN.valueOf() },
    { label: "Motorbikes", value: exports.MitigationSubTypes.MOTORBIKES.valueOf() },
    { label: "Mode shift: Road to rail", value: exports.MitigationSubTypes.MODE_SHIFT_ROAD_TO_RAIL.valueOf() },
    { label: "More efficient train system", value: exports.MitigationSubTypes.MORE_EFFICIENT_VEHICLES.valueOf() },
    { label: "More efficient vehicles", value: exports.MitigationSubTypes.MORE_EFFICIENT_VEHICLES.valueOf() },
    { label: "Rail: regenerative braking", value: exports.MitigationSubTypes.RAIL_REGENERATIVE_BRAKING.valueOf() },
    { label: "Rail: Green hydrogen", value: exports.MitigationSubTypes.RAIL_GREEN_HYDROGEN.valueOf() },
    { label: "Rail: efficient operation", value: exports.MitigationSubTypes.RAIL_EFFICIENT_OPERATION.valueOf() },
    { label: "Metro: efficient operation", value: exports.MitigationSubTypes.METRO_EFFICIENT_OPERATION.valueOf() },
    { label: "Cars: Green hydrogen", value: exports.MitigationSubTypes.CARS_GREEN_HYDROGEN.valueOf() },
    { label: "Cars: efficient operation", value: exports.MitigationSubTypes.CARS_EFFICIENT_OPERATION.valueOf() },
    { label: "Scrapping old vehicles", value: exports.MitigationSubTypes.SCRAPPING_OLD_VEHICLES.valueOf() },
    { label: "Biodiesel for transport", value: exports.MitigationSubTypes.BIODIESEL_FOR_TRANSPORT.valueOf() },
    { label: "Cable cars", value: exports.MitigationSubTypes.CABLE_CARS.valueOf() },
    { label: "Wind", value: exports.MitigationSubTypes.WIND.valueOf() },
    { label: "Offshore wind", value: exports.MitigationSubTypes.OFFSHORE_WIND.valueOf() },
    { label: "CO2 recycling", value: exports.MitigationSubTypes.CO2_RECYCLING.valueOf() },
    { label: "CO2 replacement", value: exports.MitigationSubTypes.CO2_REPLACEMENT.valueOf() },
    { label: "Tidal", value: exports.MitigationSubTypes.TIDAL.valueOf() },
];
var mitigationSubTypesListMapped = {
    Agriculture: [
        { label: "Irrigation", value: exports.MitigationSubTypes.IRRIGATION.valueOf() },
        { label: "Energy efficiency", value: exports.MitigationSubTypes.ENERGY_EFFICIENCY.valueOf() },
        { label: "Alternative fertilisers", value: exports.MitigationSubTypes.ALTERNATIVE_FERTILISER.valueOf() },
        { label: "No tillage", value: exports.MitigationSubTypes.NO_TILLAGE.valueOf() },
        { label: "Soil Enrichment / Biochar", value: exports.MitigationSubTypes.SOIL_ENRICHMENT_BIOCHAR.valueOf() },
        { label: "Rice crops", value: exports.MitigationSubTypes.RICE_CROPS.valueOf() },
    ],
    BiomassEnergy: [
        { label: "Bagasse power", value: exports.MitigationSubTypes.BAGASSE_POWER.valueOf() },
        { label: "Palm oil solid waste", value: exports.MitigationSubTypes.PALM_OIL_SOLID_WASTE.valueOf() },
        { label: "Agricultural residues: other kinds", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_OTHER_KINDS.valueOf() },
        { label: "Agricultural residues: rice husk", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_RICE_HUSK.valueOf() },
        { label: "Agricultural residues: mustard crop", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_MUSTARD_CROP.valueOf() },
        { label: "Agricultural residues: poultry litter", value: exports.MitigationSubTypes.AGRICULTURAL_RESIDUES_POULTRY_LITTER.valueOf() },
        { label: "Black liquor", value: exports.MitigationSubTypes.BLACK_LIQUOR.valueOf() },
        { label: "Forest residues: sawmill waste", value: exports.MitigationSubTypes.FOREST_RESIDUES_SAWMILL_WASTE.valueOf() },
        { label: "Forest residues: other", value: exports.MitigationSubTypes.FOREST_RESIDUES_OTHER.valueOf() },
        { label: "Forest biomass", value: exports.MitigationSubTypes.FOREST_BIOMASS.valueOf() },
        { label: "Industrial waste", value: exports.MitigationSubTypes.INDUSTRIAL_WASTE.valueOf() },
        { label: "Gasification of biomass", value: exports.MitigationSubTypes.GASIFICATION_OF_BIOMASS.valueOf() },
        { label: "Switch from fossil fuel to piped biogas", value: exports.MitigationSubTypes.SWITCH_FROM_FOSSIL_FUEL_TO_PIPED_BIOGAS.valueOf() },
        { label: "Biomass briquettes or pellets", value: exports.MitigationSubTypes.BIOMASS_BRIQUETTES_OR_PELLETS.valueOf() },
        { label: "Biodiesel", value: exports.MitigationSubTypes.BIODIESEL.valueOf() },
        { label: "Biodiesel from waste oil", value: exports.MitigationSubTypes.BIODIESEL_FROM_WASTE_OIL.valueOf() },
        { label: "Ethanol", value: exports.MitigationSubTypes.ETHANOL.valueOf() },
    ],
    Cement: [
        { label: "Clinker replacement", value: exports.MitigationSubTypes.CLINKER_REPLACEMENT.valueOf() },
    ],
    "Coal/Mine": [
        { label: "Coal Mine Methane", value: exports.MitigationSubTypes.COAL_MINE_METHANE.valueOf() },
        { label: "Coal Bed Methane", value: exports.MitigationSubTypes.COAL_BED_METHANE.valueOf() },
        { label: "CMM & Ventilation Air Methane", value: exports.MitigationSubTypes.CMM_VENTILATION_AIR_METHANE.valueOf() },
        { label: "Ventilation Air Methane", value: exports.MitigationSubTypes.VENTILATION_AIR_METHANE.valueOf() },
    ],
    EEHouseholds: [
        { label: "Lighting", value: exports.MitigationSubTypes.LIGHTING.valueOf() },
        { label: "Solar lamps", value: exports.MitigationSubTypes.SOLAR_LAMPS.valueOf() },
        { label: "Stoves", value: exports.MitigationSubTypes.STOVES.valueOf() },
        { label: "Stoves (School in Ghana)", value: exports.MitigationSubTypes.STOVES_SCHOOL_IN_GHANA.valueOf() },
        { label: "Stoves (Houses in Namibia)", value: exports.MitigationSubTypes.STOVES_HOUSES_IN_NAMIBIA.valueOf() },
        { label: "Lighting & Insulation & Solar", value: exports.MitigationSubTypes.LIGHTING_INSULATION_SOLAR.valueOf() },
        { label: "Appliances", value: exports.MitigationSubTypes.APPLIANCES.valueOf() },
    ],
    EEIndustry: [
        { label: "Chemicals", value: exports.MitigationSubTypes.CHEMICALS.valueOf() },
        { label: "Petrochemicals", value: exports.MitigationSubTypes.PETROCHEMICALS.valueOf() },
        { label: "Paper", value: exports.MitigationSubTypes.PAPER.valueOf() },
        { label: "Cement", value: exports.MitigationSubTypes.CEMENT.valueOf() },
        { label: "Iron & steel ", value: exports.MitigationSubTypes.IRON_STEEL.valueOf() },
        { label: "Machinery", value: exports.MitigationSubTypes.MACHINERY.valueOf() },
        { label: "Textiles", value: exports.MitigationSubTypes.TEXTILES.valueOf() },
        { label: "Electronics", value: exports.MitigationSubTypes.ELECTRONICS.valueOf() },
        { label: "Food", value: exports.MitigationSubTypes.FOOD.valueOf() },
        { label: "Building materials", value: exports.MitigationSubTypes.BUILDING_MATERIALS.valueOf() },
        { label: "Glass", value: exports.MitigationSubTypes.GLASS.valueOf() },
        { label: "Non-ferrous metals", value: exports.MitigationSubTypes.NON_FERROUS_METALS.valueOf() },
        { label: "Coke oven", value: exports.MitigationSubTypes.COKE_OVEN.valueOf() },
        { label: "Mining", value: exports.MitigationSubTypes.Mining.valueOf() },
        { label: "Construction", value: exports.MitigationSubTypes.CONSTRUCTION.valueOf() },
        { label: "Metal products", value: exports.MitigationSubTypes.METAL_PRODUCTS.valueOf() },
        { label: "Wood", value: exports.MitigationSubTypes.WOOD.valueOf() },
        { label: "Recycling", value: exports.MitigationSubTypes.RECYCLING.valueOf() },
    ],
    EEOwnGeneration: [
        { label: "Chemicals heat", value: exports.MitigationSubTypes.CHEMICALS_HEAT.valueOf() },
        { label: "Petrochemicals heat", value: exports.MitigationSubTypes.PETROCHEMICALS_HEAT.valueOf() },
        { label: "Carbon black gas", value: exports.MitigationSubTypes.CARBON_BLACK_GAS.valueOf() },
        { label: "Cement heat", value: exports.MitigationSubTypes.CEMENT_HEAT.valueOf() },
        { label: "Iron & steel heat", value: exports.MitigationSubTypes.IRON_STEEL_HEAT.valueOf() },
        { label: "Building materials heat", value: exports.MitigationSubTypes.BUILDING_MATERIALS_HEAT.valueOf() },
        { label: "Glass heat", value: exports.MitigationSubTypes.GLASS_HEAT.valueOf() },
        { label: "Non-ferrous metals heat", value: exports.MitigationSubTypes.NON_FERROUS_METALS_HEAT.valueOf() },
        { label: "Coke oven gas", value: exports.MitigationSubTypes.COKE_OVEN_GAS.valueOf() },
    ],
    EEService: [
        { label: "HVAC & lighting", value: exports.MitigationSubTypes.HVAC_LIGHTING.valueOf() },
        { label: "Air conditioning", value: exports.MitigationSubTypes.AIR_CONDITIONING.valueOf() },
        { label: "EE new buildings", value: exports.MitigationSubTypes.EE_NEW_BUILDINGS.valueOf() },
        { label: "Street lighting", value: exports.MitigationSubTypes.STREET_LIGHTING.valueOf() },
        { label: "Lighting in service", value: exports.MitigationSubTypes.LIGHTING_IN_SERVICE.valueOf() },
        { label: "Water pumping", value: exports.MitigationSubTypes.WATER_PUMPING.valueOf() },
        { label: "Water purification", value: exports.MitigationSubTypes.WATER_PURIFICATION.valueOf() },
        { label: "EE public stoves", value: exports.MitigationSubTypes.EE_PUBLIC_STOVES.valueOf() },
        { label: "EE public buildings", value: exports.MitigationSubTypes.EE_PUBLIC_BUILDINGS.valueOf() },
        { label: "EE commercial buildings", value: exports.MitigationSubTypes.EE_COMMERCIAL_BUILDINGS.valueOf() },
    ],
    EESupplySide: [
        { label: "Single cycle to combined cycle", value: exports.MitigationSubTypes.SINGLE_CYCLE_TO_COMBINED_CYCLE.valueOf() },
        { label: "Cogeneration", value: exports.MitigationSubTypes.COGENERATION.valueOf() },
        { label: "Co-firing with biomass", value: exports.MitigationSubTypes.CO_FIRING_WITH_BIOMASS.valueOf() },
        { label: "Higher efficiency coal power", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_COAL_POWER.valueOf() },
        { label: "Higher efficiency oil power", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_OIL_POWER.valueOf() },
        { label: "Higher efficiency using waste heat", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_USING_WASTE_HEAT.valueOf() },
        { label: "Power plant rehabilitation", value: exports.MitigationSubTypes.POWER_PLANT_REHABILITATION.valueOf() },
        { label: "Higher efficiency steam boiler", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_STEAM_BOILER.valueOf() },
    ],
    EnergyDistribution: [
        { label: "District heating", value: exports.MitigationSubTypes.DISTRICT_HEATING.valueOf() },
        { label: "Replacement of district heating boilers", value: exports.MitigationSubTypes.REPLACEMENT_OF_DISTRICT_HEATING_BOILERS.valueOf() },
        { label: "Connection of Isolated grid", value: exports.MitigationSubTypes.CONNECTION_OF_ISOLATED_GRID.valueOf() },
        { label: "District cooling", value: exports.MitigationSubTypes.DISTRICT_COOLING.valueOf() },
        { label: "Efficient electricity distribution", value: exports.MitigationSubTypes.EFFICIENT_ELECTRICITY_DISTRIBUTION.valueOf() },
    ],
    Forestry: [
        { label: "Afforestation", value: exports.MitigationSubTypes.AFFORESTATION.valueOf() },
        { label: "Mangroves", value: exports.MitigationSubTypes.MANGROVES.valueOf() },
        { label: "Agroforestry", value: exports.MitigationSubTypes.AGROFORESTRY.valueOf() },
        { label: "Reforestation", value: exports.MitigationSubTypes.REFORESTATION.valueOf() },
    ],
    FossilFuel: [
        { label: "Coal to natural gas", value: exports.MitigationSubTypes.COAL_TO_NATURAL_GAS.valueOf() },
        { label: "Coal to oil", value: exports.MitigationSubTypes.COAL_TO_OIL.valueOf() },
        { label: "Lignite to natural gas", value: exports.MitigationSubTypes.LIGNITE_TO_NATURAL_GAS.valueOf() },
        { label: "New natural gas plant", value: exports.MitigationSubTypes.NEW_NATURAL_GAS_PLANT.valueOf() },
        { label: "New natural gas plant using LNG", value: exports.MitigationSubTypes.NEW_NATURAL_GAS_PLANT_USING_LNG.valueOf() },
        { label: "Oil to electricity", value: exports.MitigationSubTypes.OIL_TO_ELECTRICITY.valueOf() },
        { label: "Oil to LPG", value: exports.MitigationSubTypes.OIL_TO_LPG.valueOf() },
        { label: "Oil to natural gas", value: exports.MitigationSubTypes.OIL_TO_NATURAL_GAS.valueOf() },
    ],
    Fugitive: [
        { label: "Oil field flaring reduction", value: exports.MitigationSubTypes.OIL_FIELD_FLARING_REDUCTION.valueOf() },
        { label: "Oil and gas processing flaring", value: exports.MitigationSubTypes.OIL_AND_GAS_PROCESSING_FLARING.valueOf() },
        { label: "Natural gas pipelines", value: exports.MitigationSubTypes.NATURAL_GAS_PIPELINES.valueOf() },
        { label: "Non-hydrocarbon mining", value: exports.MitigationSubTypes.NON_HYDROCARBON_MINING.valueOf() },
        { label: "Spontaneously ignition of coal piles", value: exports.MitigationSubTypes.SPONTANEOUSLY_IGNITION_OF_COAL_PILES.valueOf() },
        { label: "Charcoal production", value: exports.MitigationSubTypes.CHARCOAL_PRODUCTION.valueOf() },
    ],
    Geothermal: [
        { label: "Geothermal electricity", value: exports.MitigationSubTypes.GEOTHERMAL_ELECTRICITY.valueOf() },
        { label: "Geothermal heating", value: exports.MitigationSubTypes.GEOTHERMAL_HEATING.valueOf() },
    ],
    HFC_PFCs_SF6: [
        { label: "HFC23", value: exports.MitigationSubTypes.HFC23.valueOf() },
        { label: "HFC134a", value: exports.MitigationSubTypes.HFC134A.valueOf() },
        { label: "PFCs", value: exports.MitigationSubTypes.PFCS.valueOf() },
        { label: "SF6", value: exports.MitigationSubTypes.SF6.valueOf() },
    ],
    Hydro: [
        { label: "Run of river", value: exports.MitigationSubTypes.RUN_OF_RIVER.valueOf() },
        { label: "Existing dam", value: exports.MitigationSubTypes.EXISTING_DAM.valueOf() },
        { label: "Higher efficiency hydro power", value: exports.MitigationSubTypes.HIGHER_EFFICIENCY_HYDRO_POWER.valueOf() },
        { label: "New dam", value: exports.MitigationSubTypes.NEW_DAM.valueOf() },
    ],
    Landfills: [
        { label: "Landfill flaring", value: exports.MitigationSubTypes.LANDFILL_FLARING.valueOf() },
        { label: "Landfill power", value: exports.MitigationSubTypes.LANDFILL_POWER.valueOf() },
        { label: "Combustion of MSW", value: exports.MitigationSubTypes.COMBUSTION_OF_MSW.valueOf() },
        { label: "Gasification of MSW", value: exports.MitigationSubTypes.GASIFICATION_OF_MSW.valueOf() },
        { label: "Biogas from MSW", value: exports.MitigationSubTypes.BIOGAS_FROM_MSW.valueOf() },
        { label: "Landfill aeration", value: exports.MitigationSubTypes.LANDFILL_AERATION.valueOf() },
        { label: "Integrated solid waste management", value: exports.MitigationSubTypes.INTEGRATED_SOLID_WASTE_MANAGEMENT.valueOf() },
        { label: "Switch from fossil fuel to piped landfill gas", value: exports.MitigationSubTypes.SWITCH_FROM_FOSSIL_FUEL_TO_PIPED_LANDFILL_GAS.valueOf() },
        { label: "Landfill composting", value: exports.MitigationSubTypes.LANDFILL_COMPOSTING.valueOf() },
    ],
    MethaneAvoidance: [
        { label: "Manure", value: exports.MitigationSubTypes.MANURE.valueOf() },
        { label: "Domestic manure", value: exports.MitigationSubTypes.DOMESTIC_MANURE.valueOf() },
        { label: "Waste water", value: exports.MitigationSubTypes.WASTE_WATER.valueOf() },
        { label: "Industrial solid waste", value: exports.MitigationSubTypes.INDUSTRIAL_SOLID_WASTE.valueOf() },
        { label: "Palm oil waste", value: exports.MitigationSubTypes.PALM_OIL_WASTE.valueOf() },
        { label: "Aerobic treatment of waste water", value: exports.MitigationSubTypes.AEROBIC_TREATMENT_OF_WASTE_WATER.valueOf() },
        { label: "Composting", value: exports.MitigationSubTypes.COMPOSTING.valueOf() },
    ],
    N20: [
        { label: "Adipic acid", value: exports.MitigationSubTypes.ADIPIC_ACID.valueOf() },
        { label: "Nitric acid", value: exports.MitigationSubTypes.NITRIC_ACID.valueOf() },
        { label: "Caprolactam", value: exports.MitigationSubTypes.CAPROLACTAM.valueOf() },
    ],
    Solar: [
        { label: "Solar Photovoltaics(PV)", value: exports.MitigationSubTypes.SOLAR_PHOTOVOLTAICS_PV.valueOf() },
        { label: "Solar Water pumping (off-grid)", value: exports.MitigationSubTypes.SOLAR_WATER_PUMPING_OFF_GRID.valueOf() },
        { label: "Solar Water pumping (on-grid)", value: exports.MitigationSubTypes.SOLAR_WATER_PUMPING_ON_GRID.valueOf() },
        { label: "Solar PV water disinfection", value: exports.MitigationSubTypes.SOLAR_PV_WATER_DISINFECTION.valueOf() },
        { label: "Solar thermal power", value: exports.MitigationSubTypes.SOLAR_THERMAL_POWER.valueOf() },
        { label: "Solar thermal heat", value: exports.MitigationSubTypes.SOLAR_THERMAL_HEAT.valueOf() },
        { label: "Solar water heating", value: exports.MitigationSubTypes.SOLAR_WATER_HEATING.valueOf() },
        { label: "Solar cooking", value: exports.MitigationSubTypes.SOLAR_COOKING.valueOf() },
    ],
    Transport: [
        { label: "Bus Rapid Transit", value: exports.MitigationSubTypes.BUS_RAPID_TRANSIT.valueOf() },
        { label: "Bus Rapid Transit: Green hydrogen", value: exports.MitigationSubTypes.BUS_RAPID_TRANSIT_GREEN_HYDROGEN.valueOf() },
        { label: "Motorbikes", value: exports.MitigationSubTypes.MOTORBIKES.valueOf() },
        { label: "Mode shift: Road to rail", value: exports.MitigationSubTypes.MODE_SHIFT_ROAD_TO_RAIL.valueOf() },
        { label: "More efficient train system", value: exports.MitigationSubTypes.MORE_EFFICIENT_TRAIN_SYSTEM.valueOf() },
        { label: "More efficient vehicles", value: exports.MitigationSubTypes.MORE_EFFICIENT_VEHICLES.valueOf() },
        { label: "Rail: regenerative braking", value: exports.MitigationSubTypes.RAIL_REGENERATIVE_BRAKING.valueOf() },
        { label: "Rail: Green hydrogen", value: exports.MitigationSubTypes.RAIL_GREEN_HYDROGEN.valueOf() },
        { label: "Rail: efficient operation", value: exports.MitigationSubTypes.RAIL_EFFICIENT_OPERATION.valueOf() },
        { label: "Metro: efficient operation", value: exports.MitigationSubTypes.METRO_EFFICIENT_OPERATION.valueOf() },
        { label: "Cars: Green hydrogen", value: exports.MitigationSubTypes.CARS_GREEN_HYDROGEN.valueOf() },
        { label: "Cars: efficient operation", value: exports.MitigationSubTypes.CARS_EFFICIENT_OPERATION.valueOf() },
        { label: "Scrapping old vehicles", value: exports.MitigationSubTypes.SCRAPPING_OLD_VEHICLES.valueOf() },
        { label: "Biodiesel for transport", value: exports.MitigationSubTypes.BIODIESEL_FOR_TRANSPORT.valueOf() },
        { label: "Cable cars", value: exports.MitigationSubTypes.CABLE_CARS.valueOf() },
    ],
    Wind: [
        { label: "Wind", value: exports.MitigationSubTypes.WIND.valueOf() },
        { label: "Offshore wind", value: exports.MitigationSubTypes.OFFSHORE_WIND.valueOf() },
    ],
    CO2Usage: [
        { label: "CO2 recycling", value: exports.MitigationSubTypes.CO2_RECYCLING.valueOf() },
        { label: "CO2 replacement", value: exports.MitigationSubTypes.CO2_REPLACEMENT.valueOf() },
    ],
    Tidal: [
        { label: "Tidal", value: exports.MitigationSubTypes.TIDAL.valueOf() },
    ],
};
var methodologyOptions = [
    "ACR - Truck Stop Electrification",
    "ACR - Advanced Refrigeration Systems",
    "ACR - Certified Reclaimed HFC Refrigerants, Propellants, and Fire Suppressants",
    "ACR - Destruction of Ozone Depleting Substances and High-GWP Foam",
    "ACR - Destruction of Ozone Depleting Substances from International Sources",
    "ACR - Transition to Advanced Formulation Blowing Agents in Foam Manufacturing and Use",
    "ACR - Afforestation and Reforestation of Degraded Lands",
    "ACR - Avoided Conversion of Grasslands and Shrublands to Crop Production",
    "ACR - Improved Forest Management (IFM) on Canadian Forestlands",
    "ACR - Improved Forest Management (IFM) on Non-Federal U.S. Forestlands",
    "ACR - Improved Forest Management (IFM) on Small Non-Industrial Private Forestlands",
    "ACR - Restoration of California Deltaic and Coastal Wetlands",
    "ACR - Restoration of Pocosin Wetlands",
    "ACR - Carbon Capture and Storage Projects",
    "ACR - Landfill Gas Destruction and Beneficial Use Projects",
    "CAR - Adipic Acid Production",
    "CAR - Biochar",
    "CAR - Canada Grassland",
    "CAR - Coal Mine Methane",
    "CAR - Forest",
    "CAR - Grassland",
    "CAR - Mexico Boiler Efficiency",
    "CAR - Mexico Forest",
    "CAR - Mexico Halocarbon",
    "CAR - Mexico Landfill",
    "CAR - Mexico Livestock",
    "CAR - Mexico Ozone Depleting Substances",
    "CAR - Nitric Acid Production",
    "CAR - Nitrogen Management",
    "CAR - Organic Waste Composting",
    "CAR - Organic Waste Digestion",
    "CAR - Ozone Depleting Substances",
    "CAR - Rice Cultivation",
    "CAR - Soil Enrichment",
    "CAR - Urban Forest Management",
    "CAR - Urban Tree Planting",
    "CAR - U.S. Landfill",
    "CAR - U.S. Livestock",
    "CDM - AM0001",
    "CDM - AM0007",
    "CDM - AM0009",
    "CDM - AM0017",
    "CDM - AM0018",
    "CDM - AM0019",
    "CDM - AM0020",
    "CDM - AM0021",
    "CDM - AM0023",
    "CDM - AM0026",
    "CDM - AM0027",
    "CDM - AM0028",
    "CDM - AM0030",
    "CDM - AM0031",
    "CDM - AM0035",
    "CDM - AM0036",
    "CDM - AM0037",
    "CDM - AM0038",
    "CDM - AM0043",
    "CDM - AM0044",
    "CDM - AM0045",
    "CDM - AM0046",
    "CDM - AM0048",
    "CDM - AM0049",
    "CDM - AM0050",
    "CDM - AM0052",
    "CDM - AM0053",
    "CDM - AM0055",
    "CDM - AM0056",
    "CDM - AM0057",
    "CDM - AM0058",
    "CDM - AM0059",
    "CDM - AM0060",
    "CDM - AM0061",
    "CDM - AM0062",
    "CDM - AM0063",
    "CDM - AM0064",
    "CDM - AM0065",
    "CDM - AM0066",
    "CDM - AM0067",
    "CDM - AM0068",
    "CDM - AM0069",
    "CDM - AM0070",
    "CDM - AM0071",
    "CDM - AM0072",
    "CDM - AM0073",
    "CDM - AM0074",
    "CDM - AM0075",
    "CDM - AM0076",
    "CDM - AM0077",
    "CDM - AM0078",
    "CDM - AM0079",
    "CDM - AM0080",
    "CDM - AM0081",
    "CDM - AM0082",
    "CDM - AM0083",
    "CDM - AM0084",
    "CDM - AM0086",
    "CDM - AM0088",
    "CDM - AM0089",
    "CDM - AM0090",
    "CDM - AM0091",
    "CDM - AM0092",
    "CDM - AM0093",
    "CDM - AM0094",
    "CDM - AM0095",
    "CDM - AM0096",
    "CDM - AM0097",
    "CDM - AM0098",
    "CDM - AM0099",
    "CDM - AM0100",
    "CDM - AM0101",
    "CDM - AM0103",
    "CDM - AM0104",
    "CDM - AM0105",
    "CDM - AM0106",
    "CDM - AM0107",
    "CDM - AM0108",
    "CDM - AM0109",
    "CDM - AM0110",
    "CDM - AM0111",
    "CDM - AM0112",
    "CDM - AM0113",
    "CDM - AM0114",
    "CDM - AM0115",
    "CDM - AM0116",
    "CDM - AM0117",
    "CDM - AM0118",
    "CDM - AM0119",
    "CDM - AM0120",
    "CDM - AM0121",
    "CDM - AM0122",
    "CDM - AMS-I.A.",
    "CDM - AMS-I.B.",
    "CDM - AMS-I.C.",
    "CDM - AMS-I.D.",
    "CDM - AMS-I.E.",
    "CDM - AMS-I.F.",
    "CDM - AMS-I.G.",
    "CDM - AMS-I.H.",
    "CDM - AMS-I.I.",
    "CDM - AMS-I.J.",
    "CDM - AMS-I.K.",
    "CDM - AMS-I.L.",
    "CDM - AMS-I.M.",
    "CDM - AMS-II.A.",
    "CDM - AMS-II.B.",
    "CDM - AMS-II.C.",
    "CDM - AMS-II.D.",
    "CDM - AMS-II.E.",
    "CDM - AMS-II.F.",
    "CDM - AMS-II.G.",
    "CDM - AMS-II.H.",
    "CDM - AMS-II.I.",
    "CDM - AMS-II.J.",
    "CDM - AMS-II.K.",
    "CDM - AMS-II.L.",
    "CDM - AMS-II.M.",
    "CDM - AMS-II.N.",
    "CDM - AMS-II.O.",
    "CDM - AMS-II.P.",
    "CDM - AMS-II.Q.",
    "CDM - AMS-II.R.",
    "CDM - AMS-II.S.",
    "CDM - AMS-II.T.",
    "CDM - AMS-III.A.",
    "CDM - AMS-III.B.",
    "CDM - AMS-III.C.",
    "CDM - AMS-III.D.",
    "CDM - AMS-III.E.",
    "CDM - AMS-III.F.",
    "CDM - AMS-III.G.",
    "CDM - AMS-III.H.",
    "CDM - AMS-III.I.",
    "CDM - AMS-III.J.",
    "CDM - AMS-III.K.",
    "CDM - AMS-III.L.",
    "CDM - AMS-III.M.",
    "CDM - AMS-III.N.",
    "CDM - AMS-III.O.",
    "CDM - AMS-III.P.",
    "CDM - AMS-III.Q.",
    "CDM - AMS-III.R.",
    "CDM - AMS-III.S.",
    "CDM - AMS-III.T.",
    "CDM - AMS-III.U.",
    "CDM - AMS-III.V.",
    "CDM - AMS-III.W.",
    "CDM - AMS-III.X.",
    "CDM - AMS-III.Y.",
    "CDM - AMS-III.Z.",
    "CDM - AMS-III.AA.",
    "CDM - AMS-III.AB.",
    "CDM - AMS-III.AC.",
    "CDM - AMS-III.AD.",
    "CDM - AMS-III.AE.",
    "CDM - AMS-III.AF.",
    "CDM - AMS-III.AG.",
    "CDM - AMS-III.AH.",
    "CDM - AMS-III.AI.",
    "CDM - AMS-III.AJ.",
    "CDM - AMS-III.AK.",
    "CDM - AMS-III.AL.",
    "CDM - AMS-III.AM.",
    "CDM - AMS-III.AN.",
    "CDM - AMS-III.AO.",
    "CDM - AMS-III.AP.",
    "CDM - AMS-III.AQ.",
    "CDM - AMS-III.AR.",
    "CDM - AMS-III.AS.",
    "CDM - AMS-III.AT.",
    "CDM - AMS-III.AU.",
    "CDM - AMS-III.AV.",
    "CDM - AMS-III.AW.",
    "CDM - AMS-III.AX.",
    "CDM - AMS-III.AY.",
    "CDM - AMS-III.BA.",
    "CDM - AMS-III.BB.",
    "CDM - AMS-III.BC.",
    "CDM - AMS-III.BD.",
    "CDM - AMS-III.BE.",
    "CDM - AMS-III.BF.",
    "CDM - AMS-III.BG.",
    "CDM - AMS-III.BH.",
    "CDM - AMS-III.BI.",
    "CDM - AMS-III.BJ.",
    "CDM - AMS-III.BK.",
    "CDM - AMS-III.BL.",
    "CDM - AMS-III.BM.",
    "CDM - AMS-III.BN.",
    "CDM - AMS-III.BO.",
    "CDM - AMS-III.BP.",
    "CDM - AR-AM0014",
    "CDM - AR-AMS0003",
    "CDM - AR-AMS0007",
    "GS - METHODOLOGY FOR METERED & MEASURED ENERGY COOKING DEVICES",
    "GS - METHODOLOGY FOR RETROFIT ENERGY EFFICIENCY MEASURES IN SHIPPING ",
    "GS - SOIL ORGANIC CARBON ACTIVITY MODULE FOR APPLICATION OF ORGANIC SOIL IMPROVERS FROM PULP AND PAPER MILL SLUDGES",
    "GS - REDUCED EMISSIONS FROM COOKING AND HEATING – TECHNOLOGIES AND PRACTICES TO DISPLACE DECENTRALIZED THERMAL ENERGY CONSUMPTION (TPDDTEC)",
    "GS - CARBON SEQUESTRATION THROUGH ACCELERATED CARBONATION OF CONCRETE AGGREGATE ",
    "VCS - VM0001",
    "VCS - VM0002",
    "VCS - VM0003",
    "VCS - VM0004",
    "VCS - VM0005",
    "VCS - VM0006",
    "VCS - VM0007",
    "VCS - VM0008",
    "VCS - VM0009",
    "VCS - VM0010",
    "VCS - VM0011",
    "VCS - VM0012",
    "VCS - VM0013",
    "VCS - VM0014",
    "VCS - VM0015",
    "VCS - VM0016",
    "VCS - VM0017",
    "VCS - VM0018",
    "VCS - VM0019",
    "VCS - VM0020",
    "VCS - VM0021",
    "VCS - VM0022",
    "VCS - VM0023",
    "VCS - VM0024",
    "VCS - VM0025",
    "VCS - VM0026",
    "VCS - VM0027",
    "VCS - VM0028",
    "VCS - VM0029",
    "VCS - VM0030",
    "VCS - VM0031",
    "VCS - VM0032",
    "VCS - VM0033",
    "VCS - VM0034",
    "VCS - VM0035",
    "VCS - VM0036",
    "VCS - VM0037",
    "VCS - VM0038",
    "VCS - VM0039",
    "VCS - VM0040",
    "VCS - VM0041",
    "VCS - VM0042",
    "VCS - VM0043",
    "VCS - VMR000",
    "VCS - VMR006",
    "ID_PM044",
    "ID_PM043",
    "ID_PM042",
    "ID_PM041",
    "ID_PM040",
    "ID_PM039",
    "ID_AM028",
    "ID_AM027",
    "ID_AM026",
    "ID_AM025",
    "ID_AM024",
    "ID_AM023",
    "ID_AM022",
    "ID_AM021",
    "ID_AM020",
    "ID_AM006",
    "VN_PM028",
    "ID_AM019",
    "VN_PM027",
    "ID_AM018",
    "ID_AM007",
    "TH_PM026",
    "VN_PM026",
    "VN_PM025",
    "TH_PM025",
    "ID_AM009",
    "VN_PM024",
    "ID_AM017",
    "TH_PM024",
    "ID_AM016",
    "VN_PM023",
    "TH_PM023",
    "ID_AM015",
    "TH_PM022",
    "VN_AM015",
    "VN_AM009",
    "ID_AM014",
    "TH_PM021",
    "TH_AM017",
    "ID_AM013",
    "VN_AM014",
    "VN_AM013",
    "TH_AM016",
    "VN_AM012",
    "TH_AM015",
    "ID_AM011",
    "TH_AM001",
    "VN_AM011",
    "ID_AM012",
    "VN_AM010",
    "TH_AM014",
    "ID_AM008",
    "VN_AM006",
    "TH_AM013",
    "TH_AM012",
    "VN_AM004",
    "ID_AM005",
    "ID_AM004",
    "TH_AM011",
    "VN_AM003",
    "ID_AM003",
    "VN_AM002",
    "TH_AM010",
    "ID_AM002",
    "TH_AM009",
    "ID_AM010",
    "VN_AM008",
    "TH_AM008",
    "TH_AM005",
    "VN_AM007",
    "TH_AM007",
    "VN_AM001",
    "MM_PM007",
    "TH_AM006",
    "MM_PM006",
    "VN_AM005",
    "KH_AM004",
    "TH_AM002",
    "KH_AM005",
    "BD_PM005",
    "MM_AM005",
    "TH_AM004",
    "LA_AM004",
    "BD_AM001",
    "MN_AM003",
    "MM_AM004",
    "KE_AM003",
    "LA_AM003",
    "MM_AM003",
    "CR_AM003",
    "KH_AM003",
    "PH_PM003",
    "TH_AM003",
    "CL_AM001",
    "ET_AM003",
    "BD_AM003",
    "BD_AM002",
    "ET_AM002",
    "KE_AM002",
    "CR_AM002",
    "LA_AM002",
    "KH_AM002",
    "MV_AM002",
    "MM_AM002",
    "PH_AM002",
    "MN_AM002",
    "CL_AM002",
    "PW_AM001",
    "PH_AM001",
    "KE_AM001",
    "KH_AM001",
    "SA_AM001",
    "MN_AM001",
    "MM_AM001",
    "CR_AM001",
    "ID_AM001",
    "MX_AM001",
    "ET_AM001",
    "LA_AM001",
    "MV_AM001",
    "Puro - BIO CHAR",
];

exports.ESGType = void 0;
(function (ESGType) {
    ESGType["AAA"] = "AAA";
    ESGType["AA"] = "AA";
    ESGType["A"] = "A";
    ESGType["AR"] = "A(R)";
    ESGType["BBB"] = "BBB";
    ESGType["BB"] = "BB";
    ESGType["B"] = "B";
    ESGType["BR"] = "B(R)";
    ESGType["B13"] = "B13";
    ESGType["B13R"] = "B13(R)";
    ESGType["CCC"] = "CCC";
    ESGType["C"] = "C";
    ESGType["CR"] = "C(R)";
    ESGType["FI"] = "FI";
})(exports.ESGType || (exports.ESGType = {}));

exports.Instrument = void 0;
(function (Instrument) {
    Instrument["LOAN"] = "Loan";
    Instrument["RESULT_BASED"] = "ResultBased";
    Instrument["GRANT"] = "Grant";
    Instrument["EQUITY"] = "Equity";
    Instrument["GUARANTEE"] = "Guarantee";
    Instrument["INKIND"] = "In-Kind";
    Instrument["CONLOAN"] = "ConcessionalLoan";
    Instrument["NONCONLOAN"] = "Non-ConcessionalLoan";
    Instrument["INSURANCE"] = "Insurance";
    Instrument["OTHER"] = "Other";
})(exports.Instrument || (exports.Instrument = {}));

exports.NdcActionStatus = void 0;
(function (NdcActionStatus) {
    NdcActionStatus["PENDING"] = "Pending";
    NdcActionStatus["APPROVED"] = "Approved";
})(exports.NdcActionStatus || (exports.NdcActionStatus = {}));
var getNdcActionStatusEnumVal$1 = function (value) {
    var index = Object.keys(exports.NdcActionStatus).indexOf(value);
    if (index < 0) {
        return value;
    }
    return Object.values(exports.NdcActionStatus)[index];
};
var getNdcStatusTagType = function (status) {
    switch (getNdcActionStatusEnumVal$1(status)) {
        case exports.NdcActionStatus.PENDING:
            return "success";
        case exports.NdcActionStatus.APPROVED:
            return "processing";
        default:
            return "default";
    }
};

exports.NdcActionTypes = void 0;
(function (NdcActionTypes) {
    NdcActionTypes["Mitigation"] = "mitigation";
    NdcActionTypes["Adaptation"] = "adaptation";
    NdcActionTypes["Enablement"] = "enablement";
    NdcActionTypes["CrossCutting"] = "crosscutting";
})(exports.NdcActionTypes || (exports.NdcActionTypes = {}));
var ndcActionTypeList = [
    // { value: NdcActionTypes.Adaptation.valueOf(), label: "Adaptation" },
    // { value: NdcActionTypes.CrossCutting.valueOf(), label: "Cross-cutting" },
    // { value: NdcActionTypes.Enablement.valueOf(), label: "Enablement" },
    { value: exports.NdcActionTypes.Mitigation.valueOf(), label: "Mitigation" },
];

exports.Role = void 0;
(function (Role) {
    Role["Root"] = "Root";
    Role["Admin"] = "Admin";
    Role["Manager"] = "Manager";
    Role["ViewOnly"] = "ViewOnly";
})(exports.Role || (exports.Role = {}));

exports.TypeOfMitigation = void 0;
(function (TypeOfMitigation) {
    TypeOfMitigation["AGRICULTURE"] = "Agriculture";
    TypeOfMitigation["SOLAR"] = "Solar";
    TypeOfMitigation["EE_HOUSEHOLDS"] = "EEHouseholds";
})(exports.TypeOfMitigation || (exports.TypeOfMitigation = {}));
// sub types of mitigation
exports.SubTypeOfMitigation = void 0;
(function (SubTypeOfMitigation) {
    SubTypeOfMitigation["SOIL_ENRICHMENT_BIOCHAR"] = "SoilEnrichmentBiochar";
    SubTypeOfMitigation["RICE_CROPS"] = "RiceCrops";
    SubTypeOfMitigation["SOLAR_PHOTOVOLTAICS_PV"] = "SolarPhotovoltaicsPV";
    SubTypeOfMitigation["SOLAR_WATER_PUMPING_OFF_GRID"] = "SolarWaterPumpingOffGrid";
    SubTypeOfMitigation["SOLAR_WATER_PUMPING_ON_GRID"] = "SolarWaterPumpingOnGrid";
    SubTypeOfMitigation["STOVES_HOUSES_IN_NAMIBIA"] = "StovesHousesInNamibia";
})(exports.SubTypeOfMitigation || (exports.SubTypeOfMitigation = {}));

exports.TxType = void 0;
(function (TxType) {
    TxType["CREATE"] = "0";
    TxType["REJECT"] = "1";
    TxType["ISSUE"] = "2";
    TxType["TRANSFER"] = "3";
    TxType["CERTIFY"] = "4";
    TxType["RETIRE"] = "5";
    TxType["REVOKE"] = "6";
    TxType["FREEZE"] = "7";
    TxType["AUTH"] = "8";
    TxType["UNFREEZE"] = "9";
    TxType["OWNERSHIP_UPDATE"] = "12";
})(exports.TxType || (exports.TxType = {}));

exports.RetireType = void 0;
(function (RetireType) {
    RetireType["CROSS_BORDER"] = "0";
    RetireType["LEGAL_ACTION"] = "1";
    RetireType["OTHER"] = "2";
})(exports.RetireType || (exports.RetireType = {}));

exports.EnergyGenerationUnits = void 0;
(function (EnergyGenerationUnits) {
    EnergyGenerationUnits["Wh"] = "Wh/year/unit";
    EnergyGenerationUnits["mWh"] = "mWh/year/unit";
    EnergyGenerationUnits["kWh"] = "kWh/year/unit";
    EnergyGenerationUnits["MWh"] = "MWh/year/unit";
    EnergyGenerationUnits["GWh"] = "GWh/year/unit";
    EnergyGenerationUnits["J"] = "J/year/unit";
    EnergyGenerationUnits["KJ"] = "kJ/year/unit";
})(exports.EnergyGenerationUnits || (exports.EnergyGenerationUnits = {}));
var energyGenerationUnitList = [
    { value: exports.EnergyGenerationUnits.Wh.valueOf(), label: "Wh" },
    { value: exports.EnergyGenerationUnits.mWh.valueOf(), label: "mWh" },
    { value: exports.EnergyGenerationUnits.kWh.valueOf(), label: "kWh" },
    { value: exports.EnergyGenerationUnits.MWh.valueOf(), label: "MWh" },
    { value: exports.EnergyGenerationUnits.GWh.valueOf(), label: "GWh" },
    { value: exports.EnergyGenerationUnits.J.valueOf(), label: "J" },
    { value: exports.EnergyGenerationUnits.KJ.valueOf(), label: "KJ" },
];

exports.LandAreaUnits = void 0;
(function (LandAreaUnits) {
    LandAreaUnits["mm2"] = "mm2";
    LandAreaUnits["cm2"] = "cm2";
    LandAreaUnits["m2"] = "m2";
    LandAreaUnits["ha"] = "ha";
    LandAreaUnits["km2"] = "km2";
    LandAreaUnits["in2"] = "in2";
    LandAreaUnits["ft2"] = "ft2";
    LandAreaUnits["ac"] = "ac";
    LandAreaUnits["Mi2"] = "Mi2";
})(exports.LandAreaUnits || (exports.LandAreaUnits = {}));
var landAreaUnitList = [
    { value: exports.LandAreaUnits.mm2.valueOf(), label: "mm2" },
    { value: exports.LandAreaUnits.cm2.valueOf(), label: "cm2" },
    { value: exports.LandAreaUnits.m2.valueOf(), label: "m2" },
    { value: exports.LandAreaUnits.ha.valueOf(), label: "ha" },
    { value: exports.LandAreaUnits.km2.valueOf(), label: "km2" },
    { value: exports.LandAreaUnits.in2.valueOf(), label: "in2" },
    { value: exports.LandAreaUnits.ft2.valueOf(), label: "ft2" },
    { value: exports.LandAreaUnits.ac.valueOf(), label: "ac" },
    { value: exports.LandAreaUnits.Mi2.valueOf(), label: "Mi2" },
];

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

var cjs = {};

var calculator = {};

var agricultureCal = {};

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/** Used to determine if values are of the language type Object */
var objectTypes$3 = {
  'boolean': false,
  'function': true,
  'object': true,
  'number': false,
  'string': false,
  'undefined': false
};

var lodash__objecttypes = objectTypes$3;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var objectTypes$2 = lodash__objecttypes;

/**
 * Checks if `value` is the language type of Object.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Objects
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject$4(value) {
  // check if the value is the ECMAScript language type of Object
  // http://es5.github.io/#x8
  // and avoid a V8 bug
  // http://code.google.com/p/v8/issues/detail?id=2291
  return !!(value && objectTypes$2[typeof value]);
}

var lodash_isobject = isObject$4;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/** Used for native method references */
var objectProto$1 = Object.prototype;

/** Used to resolve the internal [[Class]] of values */
var toString = objectProto$1.toString;

/** Used to detect if a method is native */
var reNative$4 = RegExp('^' +
  String(toString)
    .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
    .replace(/toString| for [^\]]+/g, '.*?') + '$'
);

var lodash__renative = reNative$4;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var objectTypes$1 = lodash__objecttypes;

/** Used for native method references */
var objectProto = Object.prototype;

/** Native method shortcuts */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A fallback implementation of `Object.keys` which produces an array of the
 * given object's own enumerable property names.
 *
 * @private
 * @type Function
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns an array of property names.
 */
var shimKeys$1 = function(object) {
  var index, iterable = object, result = [];
  if (!iterable) return result;
  if (!(objectTypes$1[typeof object])) return result;
    for (index in iterable) {
      if (hasOwnProperty.call(iterable, index)) {
        result.push(index);
      }
    }
  return result
};

var lodash__shimkeys = shimKeys$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var isObject$3 = lodash_isobject,
    reNative$3 = lodash__renative,
    shimKeys = lodash__shimkeys;

/* Native method shortcuts for methods with the same name as other `lodash` methods */
var nativeKeys = reNative$3.test(nativeKeys = Object.keys) && nativeKeys;

/**
 * Creates an array composed of the own enumerable property names of an object.
 *
 * @static
 * @memberOf _
 * @category Objects
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns an array of property names.
 * @example
 *
 * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
 * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
 */
var keys$3 = !nativeKeys ? shimKeys : function(object) {
  if (!isObject$3(object)) {
    return [];
  }
  return nativeKeys(object);
};

var lodash_keys = keys$3;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/**
 * A no-operation function.
 *
 * @static
 * @memberOf _
 * @category Utilities
 * @example
 *
 * var object = { 'name': 'fred' };
 * _.noop(object) === undefined;
 * // => true
 */
function noop$1() {
  // no operation performed
}

var lodash_noop = noop$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var isObject$2 = lodash_isobject,
    reNative$2 = lodash__renative;

/* Native method shortcuts for methods with the same name as other `lodash` methods */
var nativeCreate = reNative$2.test(nativeCreate = Object.create) && nativeCreate;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} prototype The object to inherit from.
 * @returns {Object} Returns the new object.
 */
function baseCreate$2(prototype, properties) {
  return isObject$2(prototype) ? nativeCreate(prototype) : {};
}
// fallback for browsers without `Object.create`
if (!nativeCreate) {
  baseCreate$2 = (function() {
    function Object() {}
    return function(prototype) {
      if (isObject$2(prototype)) {
        Object.prototype = prototype;
        var result = new Object;
        Object.prototype = null;
      }
      return result || commonjsGlobal.Object();
    };
  }());
}

var lodash__basecreate = baseCreate$2;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var noop = lodash_noop,
    reNative$1 = lodash__renative;

/** Used as the property descriptor for `__bindData__` */
var descriptor = {
  'configurable': false,
  'enumerable': false,
  'value': null,
  'writable': false
};

/** Used to set meta data on functions */
var defineProperty = (function() {
  // IE 8 only accepts DOM elements
  try {
    var o = {},
        func = reNative$1.test(func = Object.defineProperty) && func,
        result = func(o, o, o) && func;
  } catch(e) { }
  return result;
}());

/**
 * Sets `this` binding data on a given function.
 *
 * @private
 * @param {Function} func The function to set data on.
 * @param {Array} value The data array to set.
 */
var setBindData$3 = !defineProperty ? noop : function(func, value) {
  descriptor.value = value;
  defineProperty(func, '__bindData__', descriptor);
};

var lodash__setbinddata = setBindData$3;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var baseCreate$1 = lodash__basecreate,
    isObject$1 = lodash_isobject,
    setBindData$2 = lodash__setbinddata;

/**
 * Used for `Array` method references.
 *
 * Normally `Array.prototype` would suffice, however, using an array literal
 * avoids issues in Narwhal.
 */
var arrayRef$2 = [];

/** Native method shortcuts */
var push$2 = arrayRef$2.push;

/**
 * The base implementation of `_.bind` that creates the bound function and
 * sets its meta data.
 *
 * @private
 * @param {Array} bindData The bind data array.
 * @returns {Function} Returns the new bound function.
 */
function baseBind$1(bindData) {
  var func = bindData[0],
      partialArgs = bindData[2],
      thisArg = bindData[4];

  function bound() {
    // `Function#bind` spec
    // http://es5.github.io/#x15.3.4.5
    if (partialArgs) {
      var args = partialArgs.slice();
      push$2.apply(args, arguments);
    }
    // mimic the constructor's `return` behavior
    // http://es5.github.io/#x13.2.2
    if (this instanceof bound) {
      // ensure `new bound` is an instance of `func`
      var thisBinding = baseCreate$1(func.prototype),
          result = func.apply(thisBinding, args || arguments);
      return isObject$1(result) ? result : thisBinding;
    }
    return func.apply(thisArg, args || arguments);
  }
  setBindData$2(bound, bindData);
  return bound;
}

var lodash__basebind = baseBind$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/**
 * Slices the `collection` from the `start` index up to, but not including,
 * the `end` index.
 *
 * Note: This function is used instead of `Array#slice` to support node lists
 * in IE < 9 and to ensure dense arrays are returned.
 *
 * @private
 * @param {Array|Object|string} collection The collection to slice.
 * @param {number} start The start index.
 * @param {number} end The end index.
 * @returns {Array} Returns the new array.
 */
function slice$2(array, start, end) {
  start || (start = 0);
  if (typeof end == 'undefined') {
    end = array ? array.length : 0;
  }
  var index = -1,
      length = end - start || 0,
      result = Array(length < 0 ? 0 : length);

  while (++index < length) {
    result[index] = array[start + index];
  }
  return result;
}

var lodash__slice = slice$2;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var baseCreate = lodash__basecreate,
    isObject = lodash_isobject,
    setBindData$1 = lodash__setbinddata,
    slice$1 = lodash__slice;

/**
 * Used for `Array` method references.
 *
 * Normally `Array.prototype` would suffice, however, using an array literal
 * avoids issues in Narwhal.
 */
var arrayRef$1 = [];

/** Native method shortcuts */
var push$1 = arrayRef$1.push;

/**
 * The base implementation of `createWrapper` that creates the wrapper and
 * sets its meta data.
 *
 * @private
 * @param {Array} bindData The bind data array.
 * @returns {Function} Returns the new function.
 */
function baseCreateWrapper$1(bindData) {
  var func = bindData[0],
      bitmask = bindData[1],
      partialArgs = bindData[2],
      partialRightArgs = bindData[3],
      thisArg = bindData[4],
      arity = bindData[5];

  var isBind = bitmask & 1,
      isBindKey = bitmask & 2,
      isCurry = bitmask & 4,
      isCurryBound = bitmask & 8,
      key = func;

  function bound() {
    var thisBinding = isBind ? thisArg : this;
    if (partialArgs) {
      var args = partialArgs.slice();
      push$1.apply(args, arguments);
    }
    if (partialRightArgs || isCurry) {
      args || (args = slice$1(arguments));
      if (partialRightArgs) {
        push$1.apply(args, partialRightArgs);
      }
      if (isCurry && args.length < arity) {
        bitmask |= 16 & ~32;
        return baseCreateWrapper$1([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
      }
    }
    args || (args = arguments);
    if (isBindKey) {
      func = thisBinding[key];
    }
    if (this instanceof bound) {
      thisBinding = baseCreate(func.prototype);
      var result = func.apply(thisBinding, args);
      return isObject(result) ? result : thisBinding;
    }
    return func.apply(thisBinding, args);
  }
  setBindData$1(bound, bindData);
  return bound;
}

var lodash__basecreatewrapper = baseCreateWrapper$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/**
 * Checks if `value` is a function.
 *
 * @static
 * @memberOf _
 * @category Objects
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 */
function isFunction$1(value) {
  return typeof value == 'function';
}

var lodash_isfunction = isFunction$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var baseBind = lodash__basebind,
    baseCreateWrapper = lodash__basecreatewrapper,
    isFunction = lodash_isfunction;

/**
 * Used for `Array` method references.
 *
 * Normally `Array.prototype` would suffice, however, using an array literal
 * avoids issues in Narwhal.
 */
var arrayRef = [];

/** Native method shortcuts */
var push = arrayRef.push;

/**
 * Creates a function that, when called, either curries or invokes `func`
 * with an optional `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to reference.
 * @param {number} bitmask The bitmask of method flags to compose.
 *  The bitmask may be composed of the following flags:
 *  1 - `_.bind`
 *  2 - `_.bindKey`
 *  4 - `_.curry`
 *  8 - `_.curry` (bound)
 *  16 - `_.partial`
 *  32 - `_.partialRight`
 * @param {Array} [partialArgs] An array of arguments to prepend to those
 *  provided to the new function.
 * @param {Array} [partialRightArgs] An array of arguments to append to those
 *  provided to the new function.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new function.
 */
function createWrapper$1(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
  var isBind = bitmask & 1,
      isBindKey = bitmask & 2,
      isCurry = bitmask & 4,
      isPartial = bitmask & 16,
      isPartialRight = bitmask & 32;

  if (!isBindKey && !isFunction(func)) {
    throw new TypeError;
  }
  if (isPartial && !partialArgs.length) {
    bitmask &= ~16;
    isPartial = partialArgs = false;
  }
  if (isPartialRight && !partialRightArgs.length) {
    bitmask &= ~32;
    isPartialRight = partialRightArgs = false;
  }
  var bindData = func && func.__bindData__;
  if (bindData && bindData !== true) {
    bindData = bindData.slice();

    // set `thisBinding` is not previously bound
    if (isBind && !(bindData[1] & 1)) {
      bindData[4] = thisArg;
    }
    // set if previously bound but not currently (subsequent curried functions)
    if (!isBind && bindData[1] & 1) {
      bitmask |= 8;
    }
    // set curried arity if not yet set
    if (isCurry && !(bindData[1] & 4)) {
      bindData[5] = arity;
    }
    // append partial left arguments
    if (isPartial) {
      push.apply(bindData[2] || (bindData[2] = []), partialArgs);
    }
    // append partial right arguments
    if (isPartialRight) {
      push.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
    }
    // merge flags
    bindData[1] |= bitmask;
    return createWrapper$1.apply(null, bindData);
  }
  // fast path for `_.bind`
  var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
  return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
}

var lodash__createwrapper = createWrapper$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var createWrapper = lodash__createwrapper,
    slice = lodash__slice;

/**
 * Creates a function that, when called, invokes `func` with the `this`
 * binding of `thisArg` and prepends any additional `bind` arguments to those
 * provided to the bound function.
 *
 * @static
 * @memberOf _
 * @category Functions
 * @param {Function} func The function to bind.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {...*} [arg] Arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * var func = function(greeting) {
 *   return greeting + ' ' + this.name;
 * };
 *
 * func = _.bind(func, { 'name': 'fred' }, 'hi');
 * func();
 * // => 'hi fred'
 */
function bind$1(func, thisArg) {
  return arguments.length > 2
    ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
    : createWrapper(func, 1, null, null, thisArg);
}

var lodash_bind = bind$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/**
 * This method returns the first argument provided to it.
 *
 * @static
 * @memberOf _
 * @category Utilities
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'name': 'fred' };
 * _.identity(object) === object;
 * // => true
 */
function identity$1(value) {
  return value;
}

var lodash_identity = identity$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var reNative = lodash__renative;

/** Used to detect functions containing a `this` reference */
var reThis$1 = /\bthis\b/;

/**
 * An object used to flag environments features.
 *
 * @static
 * @memberOf _
 * @type Object
 */
var support$1 = {};

/**
 * Detect if functions can be decompiled by `Function#toString`
 * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
 *
 * @memberOf _.support
 * @type boolean
 */
support$1.funcDecomp = !reNative.test(commonjsGlobal.WinRTError) && reThis$1.test(function() { return this; });

/**
 * Detect if `Function#name` is supported (all but IE).
 *
 * @memberOf _.support
 * @type boolean
 */
support$1.funcNames = typeof Function.name == 'string';

var lodash_support = support$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var bind = lodash_bind,
    identity = lodash_identity,
    setBindData = lodash__setbinddata,
    support = lodash_support;

/** Used to detected named functions */
var reFuncName = /^\s*function[ \n\r\t]+\w/;

/** Used to detect functions containing a `this` reference */
var reThis = /\bthis\b/;

/** Native method shortcuts */
var fnToString = Function.prototype.toString;

/**
 * The base implementation of `_.createCallback` without support for creating
 * "_.pluck" or "_.where" style callbacks.
 *
 * @private
 * @param {*} [func=identity] The value to convert to a callback.
 * @param {*} [thisArg] The `this` binding of the created callback.
 * @param {number} [argCount] The number of arguments the callback accepts.
 * @returns {Function} Returns a callback function.
 */
function baseCreateCallback$2(func, thisArg, argCount) {
  if (typeof func != 'function') {
    return identity;
  }
  // exit early for no `thisArg` or already bound by `Function#bind`
  if (typeof thisArg == 'undefined' || !('prototype' in func)) {
    return func;
  }
  var bindData = func.__bindData__;
  if (typeof bindData == 'undefined') {
    if (support.funcNames) {
      bindData = !func.name;
    }
    bindData = bindData || !support.funcDecomp;
    if (!bindData) {
      var source = fnToString.call(func);
      if (!support.funcNames) {
        bindData = !reFuncName.test(source);
      }
      if (!bindData) {
        // checks if `func` references the `this` keyword and stores the result
        bindData = reThis.test(source);
        setBindData(func, bindData);
      }
    }
  }
  // exit early if there are no `this` references or `func` is bound
  if (bindData === false || (bindData !== true && bindData[1] & 1)) {
    return func;
  }
  switch (argCount) {
    case 1: return function(value) {
      return func.call(thisArg, value);
    };
    case 2: return function(a, b) {
      return func.call(thisArg, a, b);
    };
    case 3: return function(value, index, collection) {
      return func.call(thisArg, value, index, collection);
    };
    case 4: return function(accumulator, value, index, collection) {
      return func.call(thisArg, accumulator, value, index, collection);
    };
  }
  return bind(func, thisArg);
}

var lodash__basecreatecallback = baseCreateCallback$2;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var baseCreateCallback$1 = lodash__basecreatecallback,
    keys$2 = lodash_keys,
    objectTypes = lodash__objecttypes;

/**
 * Iterates over own enumerable properties of an object, executing the callback
 * for each property. The callback is bound to `thisArg` and invoked with three
 * arguments; (value, key, object). Callbacks may exit iteration early by
 * explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @type Function
 * @category Objects
 * @param {Object} object The object to iterate over.
 * @param {Function} [callback=identity] The function called per iteration.
 * @param {*} [thisArg] The `this` binding of `callback`.
 * @returns {Object} Returns `object`.
 * @example
 *
 * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
 *   console.log(key);
 * });
 * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
 */
var forOwn$1 = function(collection, callback, thisArg) {
  var index, iterable = collection, result = iterable;
  if (!iterable) return result;
  if (!objectTypes[typeof iterable]) return result;
  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback$1(callback, thisArg, 3);
    var ownIndex = -1,
        ownProps = objectTypes[typeof iterable] && keys$2(iterable),
        length = ownProps ? ownProps.length : 0;

    while (++ownIndex < length) {
      index = ownProps[ownIndex];
      if (callback(iterable[index], index, collection) === false) return result;
    }
  return result
};

var lodash_forown = forOwn$1;

/**
 * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

var baseCreateCallback = lodash__basecreatecallback,
    forOwn = lodash_forown;

/**
 * Iterates over elements of a collection, executing the callback for each
 * element. The callback is bound to `thisArg` and invoked with three arguments;
 * (value, index|key, collection). Callbacks may exit iteration early by
 * explicitly returning `false`.
 *
 * Note: As with other "Collections" methods, objects with a `length` property
 * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
 * may be used for object iteration.
 *
 * @static
 * @memberOf _
 * @alias each
 * @category Collections
 * @param {Array|Object|string} collection The collection to iterate over.
 * @param {Function} [callback=identity] The function called per iteration.
 * @param {*} [thisArg] The `this` binding of `callback`.
 * @returns {Array|Object|string} Returns `collection`.
 * @example
 *
 * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
 * // => logs each number and returns '1,2,3'
 *
 * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
 * // => logs each number and returns the object (property order is not guaranteed across environments)
 */
function forEach(collection, callback, thisArg) {
  var index = -1,
      length = collection ? collection.length : 0;

  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
  if (typeof length == 'number') {
    while (++index < length) {
      if (callback(collection[index], index, collection) === false) {
        break;
      }
    }
  } else {
    forOwn(collection, callback);
  }
  return collection;
}

var lodash_foreach = forEach;

var metric$b,
imperial$9;

metric$b = {
  mm: {
    name: {
      singular: 'Millimeter',
      plural: 'Millimeters'
    },
    to_anchor: 1/1000
  },
  cm: {
    name: {
      singular: 'Centimeter',
      plural: 'Centimeters'
    },
    to_anchor: 1/100
  },
  m: {
    name: {
      singular: 'Meter',
      plural: 'Meters'
    },
    to_anchor: 1
  },
  km: {
    name: {
      singular: 'Kilometer',
      plural: 'Kilometers'
    },
    to_anchor: 1000
  }
};

imperial$9 = {
  'in': {
    name: {
      singular: 'Inch',
      plural: 'Inches'
    },
    to_anchor: 1/12
  },
  yd: {
    name: {
      singular: 'Yard',
      plural: 'Yards'
    },
    to_anchor: 3
  },
  'ft-us': {
    name: {
      singular: 'US Survey Foot',
      plural: 'US Survey Feet'
    },
    to_anchor: 1.000002
  },
  ft: {
    name: {
      singular: 'Foot',
      plural: 'Feet'
    },
    to_anchor: 1
  },
  mi: {
    name: {
      singular: 'Mile',
      plural: 'Miles'
    },
    to_anchor: 5280
  }
};

var length = {
  metric: metric$b,
  imperial: imperial$9,
  _anchors: {
    metric: {
      unit: 'm',
      ratio: 3.28084
    },
    imperial: {
      unit: 'ft',
      ratio: 1/3.28084
    }
  }
};

var metric$a
  , imperial$8;

metric$a = {
  mm2: {
    name: {
      singular: 'Square Millimeter'
    , plural: 'Square Millimeters'
    }
  , to_anchor: 1/1000000
  }
, cm2: {
    name: {
      singular: 'Centimeter'
    , plural: 'Centimeters'
    }
  , to_anchor: 1/10000
  }
, m2: {
    name: {
      singular: 'Square Meter'
    , plural: 'Square Meters'
    }
  , to_anchor: 1
  }
, ha: {
    name: {
      singular: 'Hectare'
    , plural: 'Hectares'
    }
  , to_anchor: 10000
  }
, km2: {
    name: {
      singular: 'Square Kilometer'
    , plural: 'Square Kilometers'
    }
  , to_anchor: 1000000
  }
};

imperial$8 = {
  'in2': {
    name: {
      singular: 'Square Inch'
    , plural: 'Square Inches'
    }
  , to_anchor: 1/144
  }
, yd2: {
    name: {
      singular: 'Square Yard'
    , plural: 'Square Yards'  
    }
  , to_anchor: 9
  }
, ft2: {
    name: {
      singular: 'Square Foot'
    , plural: 'Square Feet'
    }
  , to_anchor: 1
  }
, ac: {
    name: {
      singular: 'Acre'
    , plural: 'Acres'
    }
  , to_anchor: 43560
  }
, mi2: {
    name: {
      singular: 'Square Mile'
    , plural: 'Square Miles'
    }
  , to_anchor: 27878400
  }
};

var area = {
  metric: metric$a
, imperial: imperial$8
, _anchors: {
    metric: {
      unit: 'm2'
    , ratio: 10.7639
    }
  , imperial: {
      unit: 'ft2'
    , ratio: 1/10.7639
    }
  }
};

var metric$9
  , imperial$7;

metric$9 = {
  mcg: {
    name: {
      singular: 'Microgram'
    , plural: 'Micrograms'
    }
  , to_anchor: 1/1000000
  }
, mg: {
    name: {
      singular: 'Milligram'
    , plural: 'Milligrams'
    }
  , to_anchor: 1/1000
  }
, g: {
    name: {
      singular: 'Gram'
    , plural: 'Grams'
    }
  , to_anchor: 1
  }
, kg: {
    name: {
      singular: 'Kilogram'
    , plural: 'Kilograms'
    }
  , to_anchor: 1000
}
, mt: {
    name: {
      singular: 'Metric Tonne'
    , plural: 'Metric Tonnes'
    }
  , to_anchor: 1000000
  }
};

imperial$7 = {
  oz: {
    name: {
      singular: 'Ounce'
    , plural: 'Ounces'
    }
  , to_anchor: 1/16
  }
, lb: {
    name: {
      singular: 'Pound'
    , plural: 'Pounds'
    }
  , to_anchor: 1
}, t: {
  name: {
    singular: 'Ton',
    plural: 'Tons',
  },
    to_anchor: 2000,
  },
};

var mass = {
  metric: metric$9
, imperial: imperial$7
, _anchors: {
    metric: {
      unit: 'g'
    , ratio: 1/453.592
    }
  , imperial: {
      unit: 'lb'
    , ratio: 453.592
    }
  }
};

var metric$8
  , imperial$6;

metric$8 = {
  mm3: {
      name: {
        singular: 'Cubic Millimeter'
      , plural: 'Cubic Millimeters'
      }
    , to_anchor: 1/1000000
  }
, cm3: {
    name: {
      singular: 'Cubic Centimeter'
    , plural: 'Cubic Centimeters'
    }
  , to_anchor: 1/1000
  }
, ml: {
    name: {
      singular: 'Millilitre'
    , plural: 'Millilitres'
    }
  , to_anchor: 1/1000
  }
, cl: {
    name: {
      singular: 'Centilitre'
    , plural: 'Centilitres'
    }
  , to_anchor: 1/100
  }
, dl: {
    name: {
      singular: 'Decilitre'
    , plural: 'Decilitres'
    }
  , to_anchor: 1/10
  }
, l: {
    name: {
      singular: 'Litre'
    , plural: 'Litres'
    }
  , to_anchor: 1
  }
, kl: {
    name: {
      singular: 'Kilolitre'
    , plural: 'Kilolitres'
    }
  , to_anchor: 1000
  }
, m3: {
    name: {
      singular: 'Cubic meter'
    , plural: 'Cubic meters'
    }
  , to_anchor: 1000
  }
, km3: {
    name: {
      singular: 'Cubic kilometer'
    , plural: 'Cubic kilometers'
    }
  , to_anchor: 1000000000000
  }

// Swedish units
, krm: {
  name: {
    singular: 'Matsked'
    , plural: 'Matskedar'
  }
  , to_anchor: 1/1000
}
, tsk: {
    name: {
      singular: 'Tesked'
    , plural: 'Teskedar'
    }
  , to_anchor: 5/1000
  }
, msk: {
    name: {
      singular: 'Matsked'
      , plural: 'Matskedar'
    }
    , to_anchor: 15/1000
  }
, kkp: {
    name: {
      singular: 'Kaffekopp'
      , plural: 'Kaffekoppar'
    }
    , to_anchor: 150/1000
  }
, glas: {
    name: {
      singular: 'Glas'
      , plural: 'Glas'
    }
    , to_anchor: 200/1000
  }
, kanna: {
    name: {
      singular: 'Kanna'
    , plural: 'Kannor'
    }
  , to_anchor: 2.617
  }
};

imperial$6 = {
  tsp: {
    name: {
      singular: 'Teaspoon'
    , plural: 'Teaspoons'
    }
  , to_anchor: 1/6
  }
, Tbs: {
    name: {
      singular: 'Tablespoon'
    , plural: 'Tablespoons'
    }
  , to_anchor: 1/2
  }
, in3: {
    name: {
      singular: 'Cubic inch'
    , plural: 'Cubic inches'
    }
  , to_anchor: 0.55411
  }
, 'fl-oz': {
    name: {
      singular: 'Fluid Ounce'
    , plural: 'Fluid Ounces'
    }
  , to_anchor: 1
  }
, cup: {
    name: {
      singular: 'Cup'
    , plural: 'Cups'
    }
  , to_anchor: 8
  }
, pnt: {
    name: {
      singular: 'Pint'
    , plural: 'Pints'
    }
  , to_anchor: 16
  }
, qt: {
    name: {
      singular: 'Quart'
    , plural: 'Quarts'
    }
  , to_anchor: 32
  }
, gal: {
    name: {
      singular: 'Gallon'
    , plural: 'Gallons'
    }
  , to_anchor: 128
  }
, ft3: {
    name: {
      singular: 'Cubic foot'
    , plural: 'Cubic feet'
    }
  , to_anchor: 957.506
  }
, yd3: {
    name: {
      singular: 'Cubic yard'
    , plural: 'Cubic yards'
    }
  , to_anchor: 25852.7
  }
};

var volume = {
  metric: metric$8
, imperial: imperial$6
, _anchors: {
    metric: {
      unit: 'l'
    , ratio: 33.8140226
    }
  , imperial: {
      unit: 'fl-oz'
    , ratio: 1/33.8140226
    }
  }
};

var metric$7
  ;

metric$7 = {
  ea: {
    name: {
      singular: 'Each'
    , plural: 'Each'
    }
  , to_anchor: 1
  },
  dz: {
    name: {
      singular: 'Dozen'
    , plural: 'Dozens'
    }
  , to_anchor: 12
  }
};

var each$1 = {
  metric: metric$7
, imperial: {}
, _anchors: {
    metric: {
      unit: 'ea'
    , ratio: 1
    }
  }
};

var metric$6
  , imperial$5;

metric$6 = {
  C: {
    name: {
      singular: 'degree Celsius'
    , plural: 'degrees Celsius'
    }
  , to_anchor: 1
  , anchor_shift: 0
  },
  K: {
    name: {
      singular: 'degree Kelvin'
    , plural: 'degrees Kelvin'
    }
  , to_anchor: 1
  , anchor_shift: 273.15
  }
};

imperial$5 = {
  F: {
    name: {
      singular: 'degree Fahrenheit'
    , plural: 'degrees Fahrenheit'
    }
  , to_anchor: 1
  },
  R: {
    name: {
      singular: 'degree Rankine'
    , plural: 'degrees Rankine'
    }
  , to_anchor: 1
  , anchor_shift: 459.67
  }
};

var temperature = {
  metric: metric$6
, imperial: imperial$5
, _anchors: {
    metric: {
      unit: 'C'
    , transform: function (C) { return C / (5/9) + 32 }
    }
  , imperial: {
      unit: 'F'
    , transform: function (F) { return (F - 32) * (5/9) }
    }
  }
};

var time;
var daysInYear = 365.25;

time = {
  ns: {
    name: {
      singular: 'Nanosecond'
    , plural: 'Nanoseconds'
    }
  , to_anchor: 1/1000000000
  }
, mu: {
    name: {
      singular: 'Microsecond'
    , plural: 'Microseconds'
    }
  , to_anchor: 1/1000000
  }
, ms: {
    name: {
      singular: 'Millisecond'
    , plural: 'Milliseconds'
    }
  , to_anchor: 1/1000
  }
, s: {
    name: {
      singular: 'Second'
    , plural: 'Seconds'
    }
  , to_anchor: 1
  }
, min: {
    name: {
      singular: 'Minute'
    , plural: 'Minutes'
    }
  , to_anchor: 60
  }
, h: {
    name: {
      singular: 'Hour'
    , plural: 'Hours'
    }
  , to_anchor: 60 * 60 
  }
, d: {
    name: {
      singular: 'Day'
    , plural: 'Days'
    }
  , to_anchor: 60 * 60 * 24
  }
, week: {
    name: {
      singular: 'Week'
    , plural: 'Weeks'
    }
  , to_anchor: 60 * 60 * 24 * 7
  }
, month: {
    name: {
      singular: 'Month'
    , plural: 'Months'
    }
  , to_anchor: 60 * 60 * 24 * daysInYear / 12
  }
, year: {
    name: {
      singular: 'Year'
    , plural: 'Years'
    }
  , to_anchor: 60 * 60 * 24 * daysInYear
  }
};


var time_1 = {
  metric: time 
, _anchors: {
    metric: {
      unit: 's'
    , ratio: 1
    }
  }
};

var bits
  , bytes;

bits = {
  b: {
    name: {
      singular: 'Bit'
    , plural: 'Bits'
    }
  , to_anchor: 1
  }
, Kb: {
    name: {
      singular: 'Kilobit'
    , plural: 'Kilobits'
    }
  , to_anchor: 1024
  }
, Mb: {
    name: {
      singular: 'Megabit'
    , plural: 'Megabits'
    }
  , to_anchor: 1048576
  }
, Gb: {
    name: {
      singular: 'Gigabit'
    , plural: 'Gigabits'
    }
  , to_anchor: 1073741824
  }
, Tb: {
    name: {
      singular: 'Terabit'
    , plural: 'Terabits'
    }
  , to_anchor: 1099511627776
  }
};

bytes = {
  B: {
    name: {
      singular: 'Byte'
    , plural: 'Bytes'
    }
  , to_anchor: 1
  }
, KB: {
    name: {
      singular: 'Kilobyte'
    , plural: 'Kilobytes'
    }
  , to_anchor: 1024
  }
, MB: {
    name: {
      singular: 'Megabyte'
    , plural: 'Megabytes'
    }
  , to_anchor: 1048576
  }
, GB: {
    name: {
      singular: 'Gigabyte'
    , plural: 'Gigabytes'
    }
  , to_anchor: 1073741824
  }
, TB: {
    name: {
      singular: 'Terabyte'
    , plural: 'Terabytes'
    }
  , to_anchor: 1099511627776
  }
};

var digital = {
  bits: bits
, bytes: bytes
, _anchors: {
    bits: {
      unit: 'b'
    , ratio: 1/8
    }
  , bytes: {
      unit: 'B'
    , ratio: 8
    }
  }
};

var metric$5
  ;

metric$5 = {
  ppm: {
    name: {
      singular: 'Part-per Million'
      , plural: 'Parts-per Million'
    }
    , to_anchor: 1
  }
  , ppb: {
    name: {
      singular: 'Part-per Billion'
      , plural: 'Parts-per Billion'
    }
    , to_anchor: .001
  }
  , ppt: {
    name: {
      singular: 'Part-per Trillion'
      , plural: 'Parts-per Trillion'
    }
    , to_anchor: .000001
  }
  , ppq: {
    name: {
      singular: 'Part-per Quadrillion'
      , plural: 'Parts-per Quadrillion'
    }
    , to_anchor: .000000001
  }
};

var partsPer = {
  metric: metric$5
  , imperial: {}
  , _anchors: {
    metric: {
      unit: 'ppm'
      , ratio: .000001
    }
  }
};

var metric$4
  , imperial$4;

metric$4 = {
  'm/s': {
    name: {
      singular: 'Metre per second'
    , plural: 'Metres per second'
    }
  , to_anchor: 3.6
  }
, 'km/h': {
    name: {
      singular: 'Kilometre per hour'
    , plural: 'Kilometres per hour'
    }
  , to_anchor: 1
  }
};

  imperial$4 = {
    'm/h': {
      name: {
        singular: 'Mile per hour'
      , plural: 'Miles per hour'
      }
    , to_anchor: 1
    }
  , knot: {
      name: {
        singular: 'Knot'
      , plural: 'Knots'
      }
    , to_anchor: 1.150779
    }
  , 'ft/s': {
      name: {
        singular: 'Foot per second'
      , plural: 'Feet per second'
      }
    , to_anchor: 0.681818
      }
};

var speed = {
  metric: metric$4
, imperial: imperial$4
, _anchors: {
    metric: {
      unit: 'km/h'
    , ratio: 1/1.609344
    }
  , imperial: {
      unit: 'm/h'
    , ratio: 1.609344
    }
  }
};

var metric$3
  , imperial$3;

metric$3 = {
  'min/km': {
    name: {
      singular: 'Minute per kilometre'
    , plural: 'Minutes per kilometre'
    }
  , to_anchor: 0.06
  }
  ,'s/m': {
    name: {
      singular: 'Second per metre'
    , plural: 'Seconds per metre'
    }
  , to_anchor: 1
  }
};

imperial$3 = {
    'min/mi': {
      name: {
        singular: 'Minute per mile'
      , plural: 'Minutes per mile'
      }
    , to_anchor: 0.0113636
   }
   , 's/ft': {
      name: {
        singular: 'Second per foot'
      , plural: 'Seconds per foot'
      }
    , to_anchor: 1
   }
};

var pace = {
  metric: metric$3
, imperial: imperial$3
, _anchors: {
    metric: {
      unit: 's/m'
    , ratio: 0.3048
    }
  , imperial: {
      unit: 's/ft'
    , ratio: 1/0.3048
    }
  }
};

var metric$2
  , imperial$2;

metric$2 = {
  Pa: {
    name: {
      singular: 'pascal'
    , plural: 'pascals'
    }
  , to_anchor: 1/1000
  }
, kPa: {
    name: {
      singular: 'kilopascal'
    , plural: 'kilopascals'
    }
  , to_anchor: 1
  }
, MPa: {
    name: {
      singular: 'megapascal'
    , plural: 'megapascals'
    }
  , to_anchor: 1000
  }
, hPa: {
    name: {
      singular: 'hectopascal'
    , plural: 'hectopascals'
    }
  , to_anchor: 1/10
  }
, bar: {
    name: {
      singular: 'bar'
    , plural: 'bar'
    }
  , to_anchor: 100
  }
, torr: {
    name: {
      singular: 'torr'
    , plural: 'torr'
    }
  , to_anchor: 101325/760000
  }
};

imperial$2 = {
  psi: {
    name: {
      singular: 'pound per square inch'
    , plural: 'pounds per square inch'
    }
  , to_anchor: 1/1000
  }
, ksi: {
    name: {
      singular: 'kilopound per square inch'
    , plural: 'kilopound per square inch'
    }
  , to_anchor: 1
  }
};

var pressure = {
  metric: metric$2
, imperial: imperial$2
, _anchors: {
    metric: {
      unit: 'kPa'
    , ratio: 0.00014503768078
    }
  , imperial: {
      unit: 'psi'
    , ratio: 1/0.00014503768078
    }
  }
};

var current;

current = {
  A: {
    name: {
      singular: 'Ampere'
    , plural: 'Amperes'
    }
  , to_anchor: 1
  }
, mA: {
    name: {
      singular: 'Milliampere'
      , plural: 'Milliamperes'
    }
    , to_anchor: .001
  }
, kA: {
    name: {
      singular: 'Kiloampere'
    , plural: 'Kiloamperes'
    }
  , to_anchor: 1000
  }
};

var current_1 = {
  metric: current
, _anchors: {
    metric: {
      unit: 'A'
    , ratio: 1
    }
  }
};

var voltage;

voltage = {
  V: {
    name: {
      singular: 'Volt'
    , plural: 'Volts'
    }
  , to_anchor: 1
  }
, mV: {
    name: {
      singular: 'Millivolt'
      , plural: 'Millivolts'
    }
    , to_anchor: .001
  }
, kV: {
    name: {
      singular: 'Kilovolt'
    , plural: 'Kilovolts'
    }
  , to_anchor: 1000
  }
};

var voltage_1 = {
  metric: voltage
, _anchors: {
    metric: {
      unit: 'V'
    , ratio: 1
    }
  }
};

var power;

power = {
  W: {
    name: {
      singular: 'Watt'
    , plural: 'Watts'
    }
  , to_anchor: 1
  }
, mW: {
    name: {
      singular: 'Milliwatt'
      , plural: 'Milliwatts'
    }
    , to_anchor: .001
  }
, kW: {
    name: {
      singular: 'Kilowatt'
    , plural: 'Kilowatts'
    }
  , to_anchor: 1000
  }
, MW: {
    name: {
      singular: 'Megawatt'
    , plural: 'Megawatts'
    }
  , to_anchor: 1000000
  }
, GW: {
    name: {
      singular: 'Gigawatt'
    , plural: 'Gigawatts'
    }
  , to_anchor: 1000000000
  }
};

var power_1 = {
  metric: power
, _anchors: {
    metric: {
      unit: 'W'
    , ratio: 1
    }
  }
};

var reactivePower;

reactivePower = {
  VAR: {
    name: {
      singular: 'Volt-Ampere Reactive'
    , plural: 'Volt-Amperes Reactive'
    }
  , to_anchor: 1
  }
, mVAR: {
    name: {
      singular: 'Millivolt-Ampere Reactive'
      , plural: 'Millivolt-Amperes Reactive'
    }
    , to_anchor: .001
  }
, kVAR: {
    name: {
      singular: 'Kilovolt-Ampere Reactive'
    , plural: 'Kilovolt-Amperes Reactive'
    }
  , to_anchor: 1000
  }
, MVAR: {
    name: {
      singular: 'Megavolt-Ampere Reactive'
    , plural: 'Megavolt-Amperes Reactive'
    }
  , to_anchor: 1000000
  }
, GVAR: {
    name: {
      singular: 'Gigavolt-Ampere Reactive'
    , plural: 'Gigavolt-Amperes Reactive'
    }
  , to_anchor: 1000000000
  }
};

var reactivePower_1 = {
  metric: reactivePower
, _anchors: {
    metric: {
      unit: 'VAR'
    , ratio: 1
    }
  }
};

var apparentPower;

apparentPower = {
  VA: {
    name: {
      singular: 'Volt-Ampere'
    , plural: 'Volt-Amperes'
    }
  , to_anchor: 1
  }
, mVA: {
    name: {
      singular: 'Millivolt-Ampere'
      , plural: 'Millivolt-Amperes'
    }
    , to_anchor: .001
  }
, kVA: {
    name: {
      singular: 'Kilovolt-Ampere'
    , plural: 'Kilovolt-Amperes'
    }
  , to_anchor: 1000
  }
, MVA: {
    name: {
      singular: 'Megavolt-Ampere'
    , plural: 'Megavolt-Amperes'
    }
  , to_anchor: 1000000
  }
, GVA: {
    name: {
      singular: 'Gigavolt-Ampere'
    , plural: 'Gigavolt-Amperes'
    }
  , to_anchor: 1000000000
  }
};

var apparentPower_1 = {
  metric: apparentPower
, _anchors: {
    metric: {
      unit: 'VA'
    , ratio: 1
    }
  }
};

var energy;

energy = {
  Wh: {
    name: {
      singular: 'Watt-hour'
    , plural: 'Watt-hours'
    }
  , to_anchor: 3600
  }
, mWh: {
    name: {
      singular: 'Milliwatt-hour'
      , plural: 'Milliwatt-hours'
    }
    , to_anchor: 3.6
  }
, kWh: {
    name: {
      singular: 'Kilowatt-hour'
    , plural: 'Kilowatt-hours'
    }
  , to_anchor: 3600000
  }
, MWh: {
    name: {
      singular: 'Megawatt-hour'
    , plural: 'Megawatt-hours'
    }
  , to_anchor: 3600000000
  }
, GWh: {
    name: {
      singular: 'Gigawatt-hour'
    , plural: 'Gigawatt-hours'
    }
  , to_anchor: 3600000000000
  }
, J: {
    name: {
      singular: 'Joule'
    , plural: 'Joules'
    }
  , to_anchor: 1
  }
, kJ: {
    name: {
      singular: 'Kilojoule'
    , plural: 'Kilojoules'
    }
  , to_anchor: 1000
  }
};

var energy_1 = {
  metric: energy
, _anchors: {
    metric: {
      unit: 'J'
    , ratio: 1
    }
  }
};

var reactiveEnergy;

reactiveEnergy = {
  VARh: {
    name: {
      singular: 'Volt-Ampere Reactive Hour'
    , plural: 'Volt-Amperes Reactive Hour'
    }
  , to_anchor: 1
  }
, mVARh: {
    name: {
      singular: 'Millivolt-Ampere Reactive Hour'
      , plural: 'Millivolt-Amperes Reactive Hour'
    }
    , to_anchor: .001
  }
, kVARh: {
    name: {
      singular: 'Kilovolt-Ampere Reactive Hour'
    , plural: 'Kilovolt-Amperes Reactive Hour'
    }
  , to_anchor: 1000
  }
, MVARh: {
    name: {
      singular: 'Megavolt-Ampere Reactive Hour'
    , plural: 'Megavolt-Amperes Reactive Hour'
    }
  , to_anchor: 1000000
  }
, GVARh: {
    name: {
      singular: 'Gigavolt-Ampere Reactive Hour'
    , plural: 'Gigavolt-Amperes Reactive Hour'
    }
  , to_anchor: 1000000000
  }
};

var reactiveEnergy_1 = {
  metric: reactiveEnergy
, _anchors: {
    metric: {
      unit: 'VARh'
    , ratio: 1
    }
  }
};

var metric$1
  , imperial$1;

metric$1 = {
  'mm3/s': {
      name: {
        singular: 'Cubic Millimeter per second'
      , plural: 'Cubic Millimeters per second'
      }
    , to_anchor: 1/1000000
  }
, 'cm3/s': {
    name: {
      singular: 'Cubic Centimeter per second'
    , plural: 'Cubic Centimeters per second'
    }
  , to_anchor: 1/1000
  }
, 'ml/s': {
    name: {
      singular: 'Millilitre per second'
    , plural: 'Millilitres per second'
    }
  , to_anchor: 1/1000
  }
, 'cl/s': {
    name: {
      singular: 'Centilitre per second'
    , plural: 'Centilitres per second'
    }
  , to_anchor: 1/100
  }
, 'dl/s': {
    name: {
      singular: 'Decilitre per second'
    , plural: 'Decilitres per second'
    }
  , to_anchor: 1/10
  }
, 'l/s': {
    name: {
      singular: 'Litre per second'
    , plural: 'Litres per second'
    }
  , to_anchor: 1
  }
, 'l/min': {
    name: {
      singular: 'Litre per minute'
    , plural: 'Litres per minute'
    }
  , to_anchor: 1/60
  }
, 'l/h': {
    name: {
      singular: 'Litre per hour'
    , plural: 'Litres per hour'
    }
  , to_anchor: 1/3600
  }
, 'kl/s': {
    name: {
      singular: 'Kilolitre per second'
    , plural: 'Kilolitres per second'
    }
  , to_anchor: 1000
  }
, 'kl/min': {
    name: {
      singular: 'Kilolitre per minute'
    , plural: 'Kilolitres per minute'
    }
  , to_anchor: 50/3
  }
, 'kl/h': {
    name: {
      singular: 'Kilolitre per hour'
    , plural: 'Kilolitres per hour'
    }
  , to_anchor: 5/18
  }
, 'm3/s': {
    name: {
      singular: 'Cubic meter per second'
    , plural: 'Cubic meters per second'
    }
  , to_anchor: 1000
  }
, 'm3/min': {
    name: {
      singular: 'Cubic meter per minute'
    , plural: 'Cubic meters per minute'
    }
  , to_anchor: 50/3
  }
, 'm3/h': {
    name: {
      singular: 'Cubic meter per hour'
    , plural: 'Cubic meters per hour'
    }
  , to_anchor: 5/18
  }
, 'km3/s': {
    name: {
      singular: 'Cubic kilometer per second'
    , plural: 'Cubic kilometers per second'
    }
  , to_anchor: 1000000000000
  }
};

imperial$1 = {
  'tsp/s': {
    name: {
      singular: 'Teaspoon per second'
    , plural: 'Teaspoons per second'
    }
  , to_anchor: 1/6
  }
, 'Tbs/s': {
    name: {
      singular: 'Tablespoon per second'
    , plural: 'Tablespoons per second'
    }
  , to_anchor: 1/2
  }
, 'in3/s': {
    name: {
      singular: 'Cubic inch per second'
    , plural: 'Cubic inches per second'
    }
  , to_anchor: 0.55411
  }
, 'in3/min': {
    name: {
      singular: 'Cubic inch per minute'
    , plural: 'Cubic inches per minute'
    }
  , to_anchor: 0.55411/60
  }
, 'in3/h': {
    name: {
      singular: 'Cubic inch per hour'
    , plural: 'Cubic inches per hour'
    }
  , to_anchor: 0.55411/3600
  }
, 'fl-oz/s': {
    name: {
      singular: 'Fluid Ounce per second'
    , plural: 'Fluid Ounces per second'
    }
  , to_anchor: 1
  }
, 'fl-oz/min': {
    name: {
      singular: 'Fluid Ounce per minute'
    , plural: 'Fluid Ounces per minute'
    }
  , to_anchor: 1/60
  }
, 'fl-oz/h': {
    name: {
      singular: 'Fluid Ounce per hour'
    , plural: 'Fluid Ounces per hour'
    }
  , to_anchor: 1/3600
  }
, 'cup/s': {
    name: {
      singular: 'Cup per second'
    , plural: 'Cups per second'
    }
  , to_anchor: 8
  }
, 'pnt/s': {
    name: {
      singular: 'Pint per second'
    , plural: 'Pints per second'
    }
  , to_anchor: 16
  }
, 'pnt/min': {
    name: {
      singular: 'Pint per minute'
    , plural: 'Pints per minute'
    }
  , to_anchor: 4/15
  }
, 'pnt/h': {
    name: {
      singular: 'Pint per hour'
    , plural: 'Pints per hour'
    }
  , to_anchor: 1/225
  }
, 'qt/s': {
    name: {
      singular: 'Quart per second'
    , plural: 'Quarts per second'
    }
  , to_anchor: 32
  }
, 'gal/s': {
    name: {
      singular: 'Gallon per second'
    , plural: 'Gallons per second'
    }
  , to_anchor: 128
  }
, 'gal/min': {
    name: {
      singular: 'Gallon per minute'
    , plural: 'Gallons per minute'
    }
  , to_anchor: 32/15
  }
, 'gal/h': {
    name: {
      singular: 'Gallon per hour'
    , plural: 'Gallons per hour'
    }
  , to_anchor: 8/225
  }
, 'ft3/s': {
    name: {
      singular: 'Cubic foot per second'
    , plural: 'Cubic feet per second'
    }
  , to_anchor: 957.506
  }
, 'ft3/min': {
    name: {
      singular: 'Cubic foot per minute'
    , plural: 'Cubic feet per minute'
    }
  , to_anchor: 957.506/60
  }
, 'ft3/h': {
    name: {
      singular: 'Cubic foot per hour'
    , plural: 'Cubic feet per hour'
    }
  , to_anchor: 957.506/3600
  }
, 'yd3/s': {
    name: {
      singular: 'Cubic yard per second'
    , plural: 'Cubic yards per second'
    }
  , to_anchor: 25852.7
  }
, 'yd3/min': {
    name: {
      singular: 'Cubic yard per minute'
    , plural: 'Cubic yards per minute'
    }
  , to_anchor: 25852.7/60
  }
, 'yd3/h': {
    name: {
      singular: 'Cubic yard per hour'
    , plural: 'Cubic yards per hour'
    }
  , to_anchor: 25852.7/3600
  }
};

var volumeFlowRate = {
  metric: metric$1
, imperial: imperial$1
, _anchors: {
    metric: {
      unit: 'l/s'
    , ratio: 33.8140227
    }
  , imperial: {
      unit: 'fl-oz/s'
    , ratio: 1/33.8140227
    }
  }
};

var metric,
imperial;

metric = {
  'lx': {
    name: {
      singular: 'Lux',
      plural: 'Lux'
    },
    to_anchor: 1
  }
};

imperial = {
  'ft-cd': {
    name: {
      singular: 'Foot-candle',
      plural: 'Foot-candles'
    },
    to_anchor: 1
  }
};

var illuminance = {
  metric: metric,
  imperial: imperial,
  _anchors: {
    metric: {
      unit: 'lx',
      ratio: 1/10.76391
    },
    imperial: {
      unit: 'ft-cd',      
	  ratio: 10.76391
    }
  }
};

var frequency;

frequency = {
  mHz: {
    name: {
      singular: 'millihertz'
    , plural: 'millihertz'
    }
  , to_anchor: 1/1000
  }
, Hz: {
    name: {
      singular: 'hertz'
    , plural: 'hertz'
    }
  , to_anchor: 1
  }
, kHz: {
    name: {
      singular: 'kilohertz'
    , plural: 'kilohertz'
    }
  , to_anchor: 1000
  }
, MHz: {
    name: {
      singular: 'megahertz'
    , plural: 'megahertz'
    }
  , to_anchor: 1000 * 1000
  }
, GHz: {
    name: {
      singular: 'gigahertz'
    , plural: 'gigahertz'
    }
  , to_anchor: 1000 * 1000 * 1000
  }
, THz: {
    name: {
      singular: 'terahertz'
    , plural: 'terahertz'
    }
  , to_anchor: 1000 * 1000 * 1000 * 1000
  }
, rpm: {
    name: {
      singular: 'rotation per minute'
    , plural: 'rotations per minute'
    }
  , to_anchor: 1/60
  }
, "deg/s": {
    name: {
      singular: 'degree per second'
    , plural: 'degrees per second'
    }
  , to_anchor: 1/360
  }
, "rad/s": {
    name: {
      singular: 'radian per second'
    , plural: 'radians per second'
    }
  , to_anchor: 1/(Math.PI * 2)
  }
};


var frequency_1 = {
  metric: frequency
, _anchors: {
    frequency: {
      unit: 'hz'
    , ratio: 1
    }
  }
};

var angle;

angle = {
  rad: {
    name: {
      singular: 'radian'
    , plural: 'radians'
    }
  , to_anchor: 180/Math.PI
  }
, deg: {
    name: {
      singular: 'degree'
    , plural: 'degrees'
    }
  , to_anchor: 1
  }
, grad: {
    name: {
      singular: 'gradian'
    , plural: 'gradians'
    }
  , to_anchor: 9/10
  }
, arcmin: {
    name: {
      singular: 'arcminute'
    , plural: 'arcminutes'
    }
  , to_anchor: 1/60
  }
, arcsec: {
    name: {
      singular: 'arcsecond'
    , plural: 'arcseconds'
    }
  , to_anchor: 1/3600
  }
};

var angle_1 = {
  metric: angle
, _anchors: {
    metric: {
      unit: 'deg'
    , ratio: 1
    }
  }
};

var convert
  , keys$1 = lodash_keys
  , each = lodash_foreach
  , measures = {
      length: length
    , area: area
    , mass: mass
    , volume: volume
    , each: each$1
    , temperature: temperature
    , time: time_1
    , digital: digital
    , partsPer: partsPer
    , speed: speed
    , pace: pace
    , pressure: pressure
    , current: current_1
    , voltage: voltage_1
    , power: power_1
    , reactivePower: reactivePower_1
    , apparentPower: apparentPower_1
    , energy: energy_1
    , reactiveEnergy: reactiveEnergy_1
    , volumeFlowRate: volumeFlowRate
    , illuminance: illuminance
    , frequency: frequency_1
    , angle : angle_1
    }
  , Converter;

Converter = function (numerator, denominator) {
  if(denominator)
    this.val = numerator / denominator;
  else
    this.val = numerator;
};

/**
* Lets the converter know the source unit abbreviation
*/
Converter.prototype.from = function (from) {
  if(this.destination)
    throw new Error('.from must be called before .to');

  this.origin = this.getUnit(from);

  if(!this.origin) {
    this.throwUnsupportedUnitError(from);
  }

  return this;
};

/**
* Converts the unit and returns the value
*/
Converter.prototype.to = function (to) {
  if(!this.origin)
    throw new Error('.to must be called after .from');

  this.destination = this.getUnit(to);

  var result
    , transform;

  if(!this.destination) {
    this.throwUnsupportedUnitError(to);
  }

  // Don't change the value if origin and destination are the same
  if (this.origin.abbr === this.destination.abbr) {
    return this.val;
  }

  // You can't go from liquid to mass, for example
  if(this.destination.measure != this.origin.measure) {
    throw new Error('Cannot convert incompatible measures of '
      + this.destination.measure + ' and ' + this.origin.measure);
  }

  /**
  * Convert from the source value to its anchor inside the system
  */
  result = this.val * this.origin.unit.to_anchor;

  /**
  * For some changes it's a simple shift (C to K)
  * So we'll add it when convering into the unit (later)
  * and subtract it when converting from the unit
  */
  if (this.origin.unit.anchor_shift) {
    result -= this.origin.unit.anchor_shift;
  }

  /**
  * Convert from one system to another through the anchor ratio. Some conversions
  * aren't ratio based or require more than a simple shift. We can provide a custom
  * transform here to provide the direct result
  */
  if(this.origin.system != this.destination.system) {
    transform = measures[this.origin.measure]._anchors[this.origin.system].transform;
    if (typeof transform === 'function') {
      result = transform(result);
    }
    else {
      result *= measures[this.origin.measure]._anchors[this.origin.system].ratio;
    }
  }

  /**
  * This shift has to be done after the system conversion business
  */
  if (this.destination.unit.anchor_shift) {
    result += this.destination.unit.anchor_shift;
  }

  /**
  * Convert to another unit inside the destination system
  */
  return result / this.destination.unit.to_anchor;
};

/**
* Converts the unit to the best available unit.
*/
Converter.prototype.toBest = function(options) {
  if(!this.origin)
    throw new Error('.toBest must be called after .from');

  var options = Object.assign({
    exclude: [],
    cutOffNumber: 1,
  }, options);

  var best;
  /**
    Looks through every possibility for the 'best' available unit.
    i.e. Where the value has the fewest numbers before the decimal point,
    but is still higher than 1.
  */
  each(this.possibilities(), function(possibility) {
    var unit = this.describe(possibility);
    var isIncluded = options.exclude.indexOf(possibility) === -1;

    if (isIncluded && unit.system === this.origin.system) {
      var result = this.to(possibility);
      if (!best || (result >= options.cutOffNumber && result < best.val)) {
        best = {
          val: result,
          unit: possibility,
          singular: unit.singular,
          plural: unit.plural
        };
      }
    }
  }.bind(this));

  return best;
};

/**
* Finds the unit
*/
Converter.prototype.getUnit = function (abbr) {
  var found;

  each(measures, function (systems, measure) {
    each(systems, function (units, system) {
      if(system == '_anchors')
        return false;

      each(units, function (unit, testAbbr) {
        if(testAbbr == abbr) {
          found = {
            abbr: abbr
          , measure: measure
          , system: system
          , unit: unit
          };
          return false;
        }
      });

      if(found)
        return false;
    });

    if(found)
      return false;
  });

  return found;
};

var describe = function(resp) {
  return {
    abbr: resp.abbr
  , measure: resp.measure
  , system: resp.system
  , singular: resp.unit.name.singular
  , plural: resp.unit.name.plural
  };
};

/**
* An alias for getUnit
*/
Converter.prototype.describe = function (abbr) {
  var resp = Converter.prototype.getUnit(abbr);
  var desc = null;

  try {
    desc = describe(resp);
  } catch(err) {
    this.throwUnsupportedUnitError(abbr);
  }

  return desc;
};

/**
* Detailed list of all supported units
*/
Converter.prototype.list = function (measure) {
  var list = [];

  each(measures, function (systems, testMeasure) {
    if(measure && measure !== testMeasure)
      return;

    each(systems, function (units, system) {
      if(system == '_anchors')
        return false;

      each(units, function (unit, abbr) {
        list = list.concat(describe({
          abbr: abbr,
          measure: testMeasure
        , system: system
        , unit: unit
        }));
      });
    });
  });

  return list;
};

Converter.prototype.throwUnsupportedUnitError = function (what) {
  var validUnits = [];

  each(measures, function (systems, measure) {
    each(systems, function (units, system) {
      if(system == '_anchors')
        return false;

      validUnits = validUnits.concat(keys$1(units));
    });
  });

  throw new Error('Unsupported unit ' + what + ', use one of: ' + validUnits.join(', '));
};

/**
* Returns the abbreviated measures that the value can be
* converted to.
*/
Converter.prototype.possibilities = function (measure) {
  var possibilities = [];
  if(!this.origin && !measure) {
	  each(keys$1(measures), function (measure){
		  each(measures[measure], function (units, system) {
		    if(system == '_anchors')
		      return false;

		    possibilities = possibilities.concat(keys$1(units));
		  });
	  });
  } else {
	  measure = measure || this.origin.measure;
	  each(measures[measure], function (units, system) {
	    if(system == '_anchors')
	      return false;

	    possibilities = possibilities.concat(keys$1(units));
	  });
  }

  return possibilities;
};

/**
* Returns the abbreviated measures that the value can be
* converted to.
*/
Converter.prototype.measures = function () {
  return keys$1(measures);
};

convert = function (value) {
  return new Converter(value);
};

var lib = convert;

var hasRequiredAgricultureCal;

function requireAgricultureCal () {
	if (hasRequiredAgricultureCal) return agricultureCal;
	hasRequiredAgricultureCal = 1;
	Object.defineProperty(agricultureCal, "__esModule", { value: true });
	agricultureCal.AgricultureCal = void 0;
	const calculator_1 = requireCalculator();
	var convert = lib;
	class AgricultureCal {
	    static calculate(req) {
	        const constants = req.agricultureConstants;
	        const unitParts = constants.emissionFactorUnit.split('/');
	        if (unitParts.length != 3) {
	            throw Error("Invalid emission factor unit " + constants.emissionFactorUnit);
	        }
	        const landArea = convert(req.landArea).from(req.landAreaUnit).to(unitParts[1]);
	        const duration = convert(req.duration).from(req.durationUnit).to(unitParts[2]);
	        return Number((constants.emissionFactor * landArea * duration).toFixed(calculator_1.PRECISION));
	    }
	}
	agricultureCal.AgricultureCal = AgricultureCal;
	return agricultureCal;
}

var soilEnrichmentCal = {};

var hasRequiredSoilEnrichmentCal;

function requireSoilEnrichmentCal () {
	if (hasRequiredSoilEnrichmentCal) return soilEnrichmentCal;
	hasRequiredSoilEnrichmentCal = 1;
	Object.defineProperty(soilEnrichmentCal, "__esModule", { value: true });
	soilEnrichmentCal.SoilEnrichmentCal = void 0;
	const calculator_1 = requireCalculator();
	class SoilEnrichmentCal {
	    static calculate(req) {
	        const constants = req.soilEnrichmentConstants;
	        return Number((constants.emissionFactor * req.weight).toFixed(calculator_1.PRECISION));
	    }
	}
	soilEnrichmentCal.SoilEnrichmentCal = SoilEnrichmentCal;
	return soilEnrichmentCal;
}

var solarCal = {};

var hasRequiredSolarCal;

function requireSolarCal () {
	if (hasRequiredSolarCal) return solarCal;
	hasRequiredSolarCal = 1;
	Object.defineProperty(solarCal, "__esModule", { value: true });
	solarCal.SolarCal = void 0;
	const calculator_1 = requireCalculator();
	var convert = lib;
	class SolarCal {
	    static calculate(req) {
	        const constants = req.solarConstants;
	        const emissionUnitParts = constants.emissionFactorUnit.split('/');
	        if (emissionUnitParts.length != 2) {
	            throw Error("Invalid emission factor unit " + constants.emissionFactorUnit);
	        }
	        const measuredUnitParts = req.energyGenerationUnit.split('/');
	        if (measuredUnitParts.length != 3) {
	            throw Error("Invalid measured unit " + req.energyGenerationUnit);
	        }
	        let threshold = constants.buildingTypes[req.buildingType];
	        if (!threshold) {
	            throw Error("Invalid building type " + req.buildingType);
	        }
	        if (req.energyGenerationUnit != constants.thresholdUnit) {
	            const thresholdUnitParts = constants.thresholdUnit.split('/');
	            if (thresholdUnitParts.length != 2) {
	                throw Error("Invalid threshold unit " + constants.thresholdUnit);
	            }
	            let factor = convert(1).from(thresholdUnitParts[0]).to(measuredUnitParts[0]);
	            factor = factor / convert(1).from(thresholdUnitParts[1]).to(measuredUnitParts[1]);
	            threshold = Number(threshold * factor);
	        }
	        const unitX = convert(1).from(measuredUnitParts[0]).to(emissionUnitParts[1]);
	        const highFactor = Number(constants.highEmissionFactor * unitX);
	        const lowFactor = Number(constants.lowEmissionFactor * unitX);
	        let value;
	        if (req.energyGeneration < threshold) {
	            value = req.energyGeneration * highFactor;
	        }
	        else {
	            value = threshold * highFactor + (req.energyGeneration - threshold) * lowFactor;
	        }
	        return Number(value.toFixed(calculator_1.PRECISION));
	    }
	}
	solarCal.SolarCal = SolarCal;
	return solarCal;
}

var agricultureCreationRequest = {};

var agricultureConstants = {};

Object.defineProperty(agricultureConstants, "__esModule", { value: true });
agricultureConstants.AgricultureConstants = void 0;
class AgricultureConstants {
    constructor() {
        this.emissionFactor = 0.046;
        this.emissionFactorUnit = "tCO2e/ha/d";
    }
}
agricultureConstants.AgricultureConstants = AgricultureConstants;

Object.defineProperty(agricultureCreationRequest, "__esModule", { value: true });
agricultureCreationRequest.AgricultureCreationRequest = void 0;
const agricultureConstants_1 = agricultureConstants;
class AgricultureCreationRequest {
    constructor() {
        this.agricultureConstants = new agricultureConstants_1.AgricultureConstants();
    }
}
agricultureCreationRequest.AgricultureCreationRequest = AgricultureCreationRequest;

var soilEnrichmentCreationRequest = {};

var soilEnrichmentConstants = {};

Object.defineProperty(soilEnrichmentConstants, "__esModule", { value: true });
soilEnrichmentConstants.SoilEnrichmentConstants = void 0;
class SoilEnrichmentConstants {
    constructor() {
        this.emissionFactor = 3.66;
        this.emissionFactorUnit = "tCO2e"; // emission factor
    }
}
soilEnrichmentConstants.SoilEnrichmentConstants = SoilEnrichmentConstants;

Object.defineProperty(soilEnrichmentCreationRequest, "__esModule", { value: true });
soilEnrichmentCreationRequest.SoilEnrichmentCreationRequest = void 0;
const soilEnrichmentConstants_1 = soilEnrichmentConstants;
class SoilEnrichmentCreationRequest {
    constructor() {
        this.soilEnrichmentConstants = new soilEnrichmentConstants_1.SoilEnrichmentConstants();
    }
}
soilEnrichmentCreationRequest.SoilEnrichmentCreationRequest = SoilEnrichmentCreationRequest;

var stovesHousesNamibiaCreationRequest = {};

var stovesHousesNamibiaConstants = {};

Object.defineProperty(stovesHousesNamibiaConstants, "__esModule", { value: true });
stovesHousesNamibiaConstants.StovesHousesNamibiaConstants = void 0;
class StovesHousesNamibiaConstants {
    constructor() {
        this.emissionFactor = 0.1;
    }
}
stovesHousesNamibiaConstants.StovesHousesNamibiaConstants = StovesHousesNamibiaConstants;

Object.defineProperty(stovesHousesNamibiaCreationRequest, "__esModule", { value: true });
stovesHousesNamibiaCreationRequest.StovesHousesNamibiaCreationRequest = void 0;
const stovesHousesNamibiaConstants_1 = stovesHousesNamibiaConstants;
class StovesHousesNamibiaCreationRequest {
    constructor() {
        this.stovesHousesNamibiaConstants = new stovesHousesNamibiaConstants_1.StovesHousesNamibiaConstants();
    }
}
stovesHousesNamibiaCreationRequest.StovesHousesNamibiaCreationRequest = StovesHousesNamibiaCreationRequest;

var solarCreationRequest = {};

var solarConstants = {};

Object.defineProperty(solarConstants, "__esModule", { value: true });
solarConstants.SolarConstants = void 0;
class SolarConstants {
    constructor() {
        this.highEmissionFactor = 6.8;
        this.lowEmissionFactor = 1.3;
        this.emissionFactorUnit = "tCO2/MWh";
        this.thresholdUnit = "kWh/year";
        this.buildingTypes = {
            Household: 55,
            HealthCenter: 825,
            Dispensary: 825,
            School: 275,
            PrimarySchool: 275,
            SecondarySchool: 275,
            PublicAdministration: 55,
            TradingPlace: 825,
            BusStop: 200,
        };
    }
}
solarConstants.SolarConstants = SolarConstants;

Object.defineProperty(solarCreationRequest, "__esModule", { value: true });
solarCreationRequest.SolarCreationRequest = void 0;
const solarConstants_1 = solarConstants;
class SolarCreationRequest {
    constructor() {
        this.solarConstants = new solarConstants_1.SolarConstants();
    }
}
solarCreationRequest.SolarCreationRequest = SolarCreationRequest;

var stovesHousesNamibiaCal = {};

var hasRequiredStovesHousesNamibiaCal;

function requireStovesHousesNamibiaCal () {
	if (hasRequiredStovesHousesNamibiaCal) return stovesHousesNamibiaCal;
	hasRequiredStovesHousesNamibiaCal = 1;
	Object.defineProperty(stovesHousesNamibiaCal, "__esModule", { value: true });
	stovesHousesNamibiaCal.StovesHousesNamibiaCal = void 0;
	const calculator_1 = requireCalculator();
	class StovesHousesNamibiaCal {
	    static calculate(req) {
	        const constants = req.stovesHousesNamibiaConstants;
	        return Number((constants.emissionFactor * req.numberOfDays * req.numberOfPeopleInHousehold).toFixed(calculator_1.PRECISION));
	    }
	}
	stovesHousesNamibiaCal.StovesHousesNamibiaCal = StovesHousesNamibiaCal;
	return stovesHousesNamibiaCal;
}

var solarWaterPumpingOffGridCreationRequest = {};

var solarWaterPumpingOffGridConstants = {};

Object.defineProperty(solarWaterPumpingOffGridConstants, "__esModule", { value: true });
solarWaterPumpingOffGridConstants.SolarWaterPumpingOffGridConstants = void 0;
class SolarWaterPumpingOffGridConstants {
    constructor() {
        this.emissionFactor = 1.3;
        this.emissionFactorUnit = "kWh/year";
    }
}
solarWaterPumpingOffGridConstants.SolarWaterPumpingOffGridConstants = SolarWaterPumpingOffGridConstants;

Object.defineProperty(solarWaterPumpingOffGridCreationRequest, "__esModule", { value: true });
solarWaterPumpingOffGridCreationRequest.SolarWaterPumpingOffGridCreationRequest = void 0;
const solarWaterPumpingOffGridConstants_1 = solarWaterPumpingOffGridConstants;
class SolarWaterPumpingOffGridCreationRequest {
    constructor() {
        this.solarWaterPumpingOffGridConstants = new solarWaterPumpingOffGridConstants_1.SolarWaterPumpingOffGridConstants();
    }
}
solarWaterPumpingOffGridCreationRequest.SolarWaterPumpingOffGridCreationRequest = SolarWaterPumpingOffGridCreationRequest;

var solarWaterPumpingOffGridCal = {};

var hasRequiredSolarWaterPumpingOffGridCal;

function requireSolarWaterPumpingOffGridCal () {
	if (hasRequiredSolarWaterPumpingOffGridCal) return solarWaterPumpingOffGridCal;
	hasRequiredSolarWaterPumpingOffGridCal = 1;
	Object.defineProperty(solarWaterPumpingOffGridCal, "__esModule", { value: true });
	solarWaterPumpingOffGridCal.solarWaterPumpingOffGridCal = void 0;
	const calculator_1 = requireCalculator();
	var convert = lib;
	let solarWaterPumpingOffGridCal$1 = class solarWaterPumpingOffGridCal {
	    static calculate(req) {
	        const constants = req.solarWaterPumpingOffGridConstants;
	        const emissionUnitParts = constants.emissionFactorUnit.split('/');
	        if (emissionUnitParts.length != 2) {
	            throw Error("Invalid emission factor unit " + constants.emissionFactorUnit);
	        }
	        const measuredUnitParts = req.energyGenerationUnit.split('/');
	        if (measuredUnitParts.length != 3) {
	            throw Error("Invalid measured unit " + req.energyGenerationUnit);
	        }
	        const unitX = convert(req.energyGeneration).from(measuredUnitParts[0]).to(emissionUnitParts[0]);
	        return Number((constants.emissionFactor * unitX).toFixed(calculator_1.PRECISION));
	    }
	};
	solarWaterPumpingOffGridCal.solarWaterPumpingOffGridCal = solarWaterPumpingOffGridCal$1;
	return solarWaterPumpingOffGridCal;
}

var solarWaterPumpingOnGridCreationRequest = {};

var solarWaterPumpingOnGridConstants = {};

Object.defineProperty(solarWaterPumpingOnGridConstants, "__esModule", { value: true });
solarWaterPumpingOnGridConstants.SolarWaterPumpingOnGridConstants = void 0;
class SolarWaterPumpingOnGridConstants {
    constructor() {
        this.emissionFactor = 1.06;
        this.emissionFactorUnit = "kWh/year";
    }
}
solarWaterPumpingOnGridConstants.SolarWaterPumpingOnGridConstants = SolarWaterPumpingOnGridConstants;

Object.defineProperty(solarWaterPumpingOnGridCreationRequest, "__esModule", { value: true });
solarWaterPumpingOnGridCreationRequest.SolarWaterPumpingOnGridCreationRequest = void 0;
const solarWaterPumpingOnGridConstants_1 = solarWaterPumpingOnGridConstants;
class SolarWaterPumpingOnGridCreationRequest {
    constructor() {
        this.solarWaterPumpingOnGridConstants = new solarWaterPumpingOnGridConstants_1.SolarWaterPumpingOnGridConstants();
    }
}
solarWaterPumpingOnGridCreationRequest.SolarWaterPumpingOnGridCreationRequest = SolarWaterPumpingOnGridCreationRequest;

var solarWaterPumpingOnGridCal = {};

var hasRequiredSolarWaterPumpingOnGridCal;

function requireSolarWaterPumpingOnGridCal () {
	if (hasRequiredSolarWaterPumpingOnGridCal) return solarWaterPumpingOnGridCal;
	hasRequiredSolarWaterPumpingOnGridCal = 1;
	Object.defineProperty(solarWaterPumpingOnGridCal, "__esModule", { value: true });
	solarWaterPumpingOnGridCal.solarWaterPumpingOnGridCal = void 0;
	const calculator_1 = requireCalculator();
	var convert = lib;
	let solarWaterPumpingOnGridCal$1 = class solarWaterPumpingOnGridCal {
	    static calculate(req) {
	        const constants = req.solarWaterPumpingOnGridConstants;
	        const emissionUnitParts = constants.emissionFactorUnit.split('/');
	        if (emissionUnitParts.length != 2) {
	            throw Error("Invalid emission factor unit " + constants.emissionFactorUnit);
	        }
	        const measuredUnitParts = req.energyGenerationUnit.split('/');
	        if (measuredUnitParts.length != 3) {
	            throw Error("Invalid measured unit " + req.energyGenerationUnit);
	        }
	        const unitX = convert(req.energyGeneration).from(measuredUnitParts[0]).to(emissionUnitParts[0]);
	        return Number((constants.emissionFactor * unitX).toFixed(calculator_1.PRECISION));
	    }
	};
	solarWaterPumpingOnGridCal.solarWaterPumpingOnGridCal = solarWaterPumpingOnGridCal$1;
	return solarWaterPumpingOnGridCal;
}

var hasRequiredCalculator;

function requireCalculator () {
	if (hasRequiredCalculator) return calculator;
	hasRequiredCalculator = 1;
	Object.defineProperty(calculator, "__esModule", { value: true });
	calculator.calculateCredit = calculator.PRECISION = void 0;
	const agricultureCal_1 = requireAgricultureCal();
	const soilEnrichmentCal_1 = requireSoilEnrichmentCal();
	const solarCal_1 = requireSolarCal();
	const agricultureCreationRequest_1 = agricultureCreationRequest;
	const soilEnrichmentCreationRequest_1 = soilEnrichmentCreationRequest;
	const stovesHousesNamibiaCreationRequest_1 = stovesHousesNamibiaCreationRequest;
	const solarCreationRequest_1 = solarCreationRequest;
	const stovesHousesNamibiaCal_1 = requireStovesHousesNamibiaCal();
	const solarWaterPumpingOffGridCreationRequest_1 = solarWaterPumpingOffGridCreationRequest;
	const solarWaterPumpingOffGridCal_1 = requireSolarWaterPumpingOffGridCal();
	const solarWaterPumpingOnGridCreationRequest_1 = solarWaterPumpingOnGridCreationRequest;
	const solarWaterPumpingOnGridCal_1 = requireSolarWaterPumpingOnGridCal();
	calculator.PRECISION = 2;
	const calculateCredit = (request) => {
	    if (request instanceof agricultureCreationRequest_1.AgricultureCreationRequest) {
	        return agricultureCal_1.AgricultureCal.calculate(request);
	    }
	    else if (request instanceof solarCreationRequest_1.SolarCreationRequest) {
	        return solarCal_1.SolarCal.calculate(request);
	    }
	    else if (request instanceof soilEnrichmentCreationRequest_1.SoilEnrichmentCreationRequest) {
	        return soilEnrichmentCal_1.SoilEnrichmentCal.calculate(request);
	    }
	    else if (request instanceof stovesHousesNamibiaCreationRequest_1.StovesHousesNamibiaCreationRequest) {
	        return stovesHousesNamibiaCal_1.StovesHousesNamibiaCal.calculate(request);
	    }
	    else if (request instanceof solarWaterPumpingOffGridCreationRequest_1.SolarWaterPumpingOffGridCreationRequest) {
	        return solarWaterPumpingOffGridCal_1.solarWaterPumpingOffGridCal.calculate(request);
	    }
	    else if (request instanceof solarWaterPumpingOnGridCreationRequest_1.SolarWaterPumpingOnGridCreationRequest) {
	        return solarWaterPumpingOnGridCal_1.solarWaterPumpingOnGridCal.calculate(request);
	    }
	    else {
	        throw Error("Not implemented");
	    }
	};
	calculator.calculateCredit = calculateCredit;
	return calculator;
}

var building_type_enum = {};

Object.defineProperty(building_type_enum, "__esModule", { value: true });
building_type_enum.BuildingType = void 0;
var BuildingType;
(function (BuildingType) {
    BuildingType["Household"] = "Household";
    BuildingType["HealthCenter"] = "HealthCenter";
    BuildingType["Dispensary"] = "Dispensary";
    BuildingType["School"] = "School";
    BuildingType["PrimarySchool"] = "PrimarySchool";
    BuildingType["SecondarySchool"] = "SecondarySchool";
    BuildingType["PublicAdministration"] = "PublicAdministration";
    BuildingType["TradingPlace"] = "TradingPlace";
    BuildingType["BusStop"] = "BusStop";
})(BuildingType || (building_type_enum.BuildingType = BuildingType = {}));

(function (exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.SolarWaterPumpingOnGridCreationRequest = exports.SolarWaterPumpingOnGridConstants = exports.SolarWaterPumpingOffGridCreationRequest = exports.SolarWaterPumpingOffGridConstants = exports.StovesHousesNamibiaCreationRequest = exports.StovesHousesNamibiaConstants = exports.SoilEnrichmentCreationRequest = exports.SoilEnrichmentConstants = exports.BuildingType = exports.SolarConstants = exports.AgricultureConstants = exports.AgricultureCreationRequest = exports.SolarCreationRequest = exports.calculateCredit = void 0;
	const calculator_1 = requireCalculator();
	Object.defineProperty(exports, "calculateCredit", { enumerable: true, get: function () { return calculator_1.calculateCredit; } });
	const agricultureConstants_1 = agricultureConstants;
	Object.defineProperty(exports, "AgricultureConstants", { enumerable: true, get: function () { return agricultureConstants_1.AgricultureConstants; } });
	const building_type_enum_1 = building_type_enum;
	Object.defineProperty(exports, "BuildingType", { enumerable: true, get: function () { return building_type_enum_1.BuildingType; } });
	const solarConstants_1 = solarConstants;
	Object.defineProperty(exports, "SolarConstants", { enumerable: true, get: function () { return solarConstants_1.SolarConstants; } });
	const agricultureCreationRequest_1 = agricultureCreationRequest;
	Object.defineProperty(exports, "AgricultureCreationRequest", { enumerable: true, get: function () { return agricultureCreationRequest_1.AgricultureCreationRequest; } });
	const solarCreationRequest_1 = solarCreationRequest;
	Object.defineProperty(exports, "SolarCreationRequest", { enumerable: true, get: function () { return solarCreationRequest_1.SolarCreationRequest; } });
	const soilEnrichmentConstants_1 = soilEnrichmentConstants;
	Object.defineProperty(exports, "SoilEnrichmentConstants", { enumerable: true, get: function () { return soilEnrichmentConstants_1.SoilEnrichmentConstants; } });
	const soilEnrichmentCreationRequest_1 = soilEnrichmentCreationRequest;
	Object.defineProperty(exports, "SoilEnrichmentCreationRequest", { enumerable: true, get: function () { return soilEnrichmentCreationRequest_1.SoilEnrichmentCreationRequest; } });
	const stovesHousesNamibiaConstants_1 = stovesHousesNamibiaConstants;
	Object.defineProperty(exports, "StovesHousesNamibiaConstants", { enumerable: true, get: function () { return stovesHousesNamibiaConstants_1.StovesHousesNamibiaConstants; } });
	const stovesHousesNamibiaCreationRequest_1 = stovesHousesNamibiaCreationRequest;
	Object.defineProperty(exports, "StovesHousesNamibiaCreationRequest", { enumerable: true, get: function () { return stovesHousesNamibiaCreationRequest_1.StovesHousesNamibiaCreationRequest; } });
	const solarWaterPumpingOffGridConstants_1 = solarWaterPumpingOffGridConstants;
	Object.defineProperty(exports, "SolarWaterPumpingOffGridConstants", { enumerable: true, get: function () { return solarWaterPumpingOffGridConstants_1.SolarWaterPumpingOffGridConstants; } });
	const solarWaterPumpingOffGridCreationRequest_1 = solarWaterPumpingOffGridCreationRequest;
	Object.defineProperty(exports, "SolarWaterPumpingOffGridCreationRequest", { enumerable: true, get: function () { return solarWaterPumpingOffGridCreationRequest_1.SolarWaterPumpingOffGridCreationRequest; } });
	const solarWaterPumpingOnGridConstants_1 = solarWaterPumpingOnGridConstants;
	Object.defineProperty(exports, "SolarWaterPumpingOnGridConstants", { enumerable: true, get: function () { return solarWaterPumpingOnGridConstants_1.SolarWaterPumpingOnGridConstants; } });
	const solarWaterPumpingOnGridCreationRequest_1 = solarWaterPumpingOnGridCreationRequest;
	Object.defineProperty(exports, "SolarWaterPumpingOnGridCreationRequest", { enumerable: true, get: function () { return solarWaterPumpingOnGridCreationRequest_1.SolarWaterPumpingOnGridCreationRequest; } }); 
} (cjs));

var consumerGroupList = [
    { value: cjs.BuildingType.Household.valueOf(), label: "Household" },
    { value: cjs.BuildingType.HealthCenter.valueOf(), label: "Health Center" },
    { value: cjs.BuildingType.Dispensary.valueOf(), label: "Dispensary" },
    { value: cjs.BuildingType.School.valueOf(), label: "School" },
    { value: cjs.BuildingType.PrimarySchool.valueOf(), label: "Primary School" },
    { value: cjs.BuildingType.SecondarySchool.valueOf(), label: "Secondary School" },
    {
        value: cjs.BuildingType.PublicAdministration.valueOf(),
        label: "Public Administration",
    },
    { value: cjs.BuildingType.TradingPlace.valueOf(), label: "Trading Place" },
    { value: cjs.BuildingType.BusStop.valueOf(), label: "Bus Stop" },
];

exports.Sector = void 0;
(function (Sector) {
    Sector["Energy"] = "Energy";
    Sector["Health"] = "Health";
    Sector["Education"] = "Education";
    Sector["Transport"] = "Transport";
    Sector["Manufacturing"] = "Manufacturing";
    Sector["Hospitality"] = "Hospitality";
    Sector["Forestry"] = "Forestry";
    Sector["Waste"] = "Waste";
    Sector["Agriculture"] = "Agriculture";
    Sector["Other"] = "Other";
})(exports.Sector || (exports.Sector = {}));
exports.EmissionSector = void 0;
(function (EmissionSector) {
    EmissionSector["energyEmissions"] = "Energy";
    EmissionSector["industrialProcessesProductUse"] = "Industrial Processes & Product Use";
    EmissionSector["agricultureForestryOtherLandUse"] = "Agriculture, Forestry, and Other Land Use";
    EmissionSector["waste"] = "Waste";
    EmissionSector["other"] = "Other";
})(exports.EmissionSector || (exports.EmissionSector = {}));
exports.EmissionGas = void 0;
(function (EmissionGas) {
    EmissionGas["co2"] = "CO<sub>2</sub>";
    EmissionGas["ch4"] = "CH<sub>4</sub>";
    EmissionGas["n2o"] = "N<sub>2</sub>O";
    EmissionGas["co2eq"] = "CO<sub>2</sub>-eq";
})(exports.EmissionGas || (exports.EmissionGas = {}));
exports.EmissionSubSectors = void 0;
(function (EmissionSubSectors) {
    EmissionSubSectors["fuelCombustionActivities"] = "Fuel Combustion Activities";
    EmissionSubSectors["fugitiveEmissionsFromFuels"] = "Fugitive emissions from fuels";
    EmissionSubSectors["carbonDioxideTransportStorage"] = "Carbon dioxide Transport and Storage";
    EmissionSubSectors["mineralIndustry"] = "Mineral Industry";
    EmissionSubSectors["chemicalIndustry"] = "Chemical Industry";
    EmissionSubSectors["metalIndustry"] = "Metal Industry";
    EmissionSubSectors["nonEnergyProductsFuelsSolventUse"] = "Non-Energy Products from Fuels and Solvent Use";
    EmissionSubSectors["electronicsIndustry"] = "Electronics Industry";
    EmissionSubSectors["productUsesSubstOzoneDepletingSubs"] = "Product Uses as Substitutes for Ozone Depleting Substances";
    EmissionSubSectors["otherProductManufactureUse"] = "Other Product Manufacture and Use";
    EmissionSubSectors["otherIndustrialProcessesProductUse"] = "Other (Industrial Processes & Product Use)";
    EmissionSubSectors["livestock"] = "Livestock";
    EmissionSubSectors["land"] = "Land";
    EmissionSubSectors["aggregateNonCo2SourcesLand"] = "Aggregate sources and non-CO2 emissions sources on land";
    EmissionSubSectors["otherAgricultureForestryOtherLandUse"] = "Other (Agriculture, Forestry, and Other Land Use)";
    EmissionSubSectors["solidWasteDisposal"] = "Solid Waste Disposal";
    EmissionSubSectors["biologicalTreatmentSolidWaste"] = "Biological Treatment of Solid Waste";
    EmissionSubSectors["incinerationOpenBurningWaste"] = "Incineration and Open Burning of Waste";
    EmissionSubSectors["wastewaterTreatmentDischarge"] = "Wastewater Treatment and Discharge";
    EmissionSubSectors["otherWaste"] = "Other (Waste)";
    EmissionSubSectors["indirectN2oEmissions"] = "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3";
    EmissionSubSectors["other"] = "Other";
})(exports.EmissionSubSectors || (exports.EmissionSubSectors = {}));
exports.ProjectionTypes = void 0;
(function (ProjectionTypes) {
    ProjectionTypes["bau"] = "BAU";
    ProjectionTypes["conditionalNdc"] = "Conditional NDC";
    ProjectionTypes["unconditionalNdc"] = "Unconditional NDC";
    ProjectionTypes["actual"] = "Actual";
})(exports.ProjectionTypes || (exports.ProjectionTypes = {}));

exports.RadioButtonStatus = void 0;
(function (RadioButtonStatus) {
    RadioButtonStatus["YES"] = "YES";
    RadioButtonStatus["NO"] = "NO";
    RadioButtonStatus["NA"] = "N/A";
})(exports.RadioButtonStatus || (exports.RadioButtonStatus = {}));
exports.RadioButtonStatus2 = void 0;
(function (RadioButtonStatus2) {
    RadioButtonStatus2["YES"] = "YES";
    RadioButtonStatus2["NO"] = "NO";
    RadioButtonStatus2["MAYBE"] = "MAYBE";
})(exports.RadioButtonStatus2 || (exports.RadioButtonStatus2 = {}));
exports.Titles = void 0;
(function (Titles) {
    Titles["Mr"] = "Mr";
    Titles["Mrs"] = "Mrs";
})(exports.Titles || (exports.Titles = {}));
var titleList = [
    { value: exports.Titles.Mr, label: "Mr" },
    { value: exports.Titles.Mrs, label: "Mrs" },
];
exports.FormElementType = void 0;
(function (FormElementType) {
    FormElementType[FormElementType["Radio"] = 0] = "Radio";
    FormElementType[FormElementType["Label"] = 1] = "Label";
    FormElementType[FormElementType["Input"] = 2] = "Input";
})(exports.FormElementType || (exports.FormElementType = {}));

exports.SdgGoals = void 0;
(function (SdgGoals) {
    SdgGoals["noPoverty"] = "No Poverty";
    SdgGoals["zeroHunger"] = "Zero Hunger";
    SdgGoals["gdHealth"] = "Good Health and Well-being";
    SdgGoals["qualityEducation"] = "Quality Education";
    SdgGoals["genderEq"] = "Gender Equality";
    SdgGoals["cleanWatr"] = "Clean Water and Sanitation";
    SdgGoals["affEnergy"] = "Affordable and Clean Energy";
    SdgGoals["decentWork"] = "Decent Work and Economic Growth";
    SdgGoals["industry"] = "Industry, Innovation and Infrastructure";
    SdgGoals["reducedInEq"] = "Reduced Inequalities";
    SdgGoals["sustainableCities"] = "Sustainable Cities and Communities";
    SdgGoals["responsibleConsumption"] = "Responsible Consumption and Production";
    SdgGoals["climateAction"] = "Climate Action";
    SdgGoals["lifeBelowWater"] = "Life Below Water";
    SdgGoals["lifeOnLand"] = "Life On Land";
    SdgGoals["peace"] = "Peace, Justice and Strong Institutions";
    SdgGoals["partnership"] = "Partnerships for the Goals";
})(exports.SdgGoals || (exports.SdgGoals = {}));

exports.DocType = void 0;
(function (DocType) {
    DocType["DESIGN_DOCUMENT"] = "0";
    DocType["METHODOLOGY_DOCUMENT"] = "1";
    DocType["MONITORING_REPORT"] = "2";
    DocType["VERIFICATION_REPORT"] = "3";
    DocType["ENVIRONMENTAL_IMPACT_ASSESSMENT"] = "7";
})(exports.DocType || (exports.DocType = {}));

exports.DocumentStatus = void 0;
(function (DocumentStatus) {
    DocumentStatus["PENDING"] = "Pending";
    DocumentStatus["ACCEPTED"] = "Accepted";
    DocumentStatus["REJECTED"] = "Rejected";
})(exports.DocumentStatus || (exports.DocumentStatus = {}));

exports.CompanyState = void 0;
(function (CompanyState) {
    CompanyState[CompanyState["SUSPENDED"] = 0] = "SUSPENDED";
    CompanyState[CompanyState["ACTIVE"] = 1] = "ACTIVE";
    CompanyState[CompanyState["PENDING"] = 2] = "PENDING";
    CompanyState[CompanyState["REJECTED"] = 3] = "REJECTED";
})(exports.CompanyState || (exports.CompanyState = {}));

exports.WidgetType = void 0;
(function (WidgetType) {
    WidgetType["PIE"] = "Pie";
    WidgetType["MAP"] = "Map";
    WidgetType["LIST"] = "List";
    WidgetType["BAR"] = "Bar";
    WidgetType["BAR_ESTIMATED_AND_ACTUAL"] = "Bar Estimated And Actual";
})(exports.WidgetType || (exports.WidgetType = {}));

exports.StatsCardsTypes = void 0;
(function (StatsCardsTypes) {
    StatsCardsTypes["PROGRAMMES_PENDING"] = "Projects Pending";
    StatsCardsTypes["TRANSFER_REQUEST_RECEIVED"] = "Pending Transfers Received";
    StatsCardsTypes["PROGRAMMES_UNCERTIFIED"] = "Projects Certifiable";
    StatsCardsTypes["TRANSFER_REQUEST_SENT"] = "Pending Transfers Sent";
    StatsCardsTypes["PROGRAMMES_CERTIFIED"] = "Projects Certified";
    StatsCardsTypes["CREDIT_BALANCE"] = "Credit Balance";
    StatsCardsTypes["CREDIT_CERTIFIED"] = "Credits Certified";
    StatsCardsTypes["PROGRAMMES"] = "Programmes";
    StatsCardsTypes["CREDITS"] = "Credits";
    StatsCardsTypes["CERTIFIED_CREDITS"] = "Certified Credits";
    StatsCardsTypes["TOTAL_PROGRAMMES"] = "Total Programmes";
    StatsCardsTypes["TOTAL_PROGRAMMES_SECTOR"] = "Total Programmes: Sector";
    StatsCardsTypes["TOTAL_CREDITS"] = "Total Credits";
    StatsCardsTypes["TOTAL_CREDITS_CERTIFIED"] = "Total Credits Certified";
    StatsCardsTypes["PROGRAMME_LOCATIONS"] = "Programme Locations";
    StatsCardsTypes["TRANSFER_LOCATIONS_INTERNATIONAL"] = "Transfer Locations International";
})(exports.StatsCardsTypes || (exports.StatsCardsTypes = {}));
exports.MrvStatsCardsTypes = void 0;
(function (MrvStatsCardsTypes) {
    MrvStatsCardsTypes["AGG_PROGRAMME_BY_SECTOR"] = "AGG_PROGRAMME_BY_SECTOR";
    // MY_AGG_PROGRAMME_BY_SECTOR = "MY_AGG_PROGRAMME_BY_SECTOR",
    MrvStatsCardsTypes["AGG_NDC_ACTION_BY_TYPE"] = "AGG_NDC_ACTION_BY_TYPE";
    // MY_AGG_NDC_ACTION_BY_TYPE = "MY_AGG_NDC_ACTION_BY_TYPE",
    MrvStatsCardsTypes["AGG_NDC_ACTION_BY_SECTOR"] = "AGG_NDC_ACTION_BY_SECTOR";
    // MY_AGG_NDC_ACTION_BY_SECTOR = "MY_AGG_NDC_ACTION_BY_SECTOR",
    MrvStatsCardsTypes["TOTAL_EMISSIONS"] = "TOTAL_EMISSIONS";
    // MY_TOTAL_EMISSIONS = "MY_TOTAL_EMISSIONS",
    MrvStatsCardsTypes["PROGRAMME_LOCATION"] = "PROGRAMME_LOCATION";
    // MY_PROGRAMME_LOCATION = "MY_PROGRAMME_LOCATION",
    MrvStatsCardsTypes["INVESTMENT_LOCATION"] = "INVESTMENT_LOCATION";
    // MY_INVESTMENT_LOCATION = "MY_INVESTMENT_LOCATION"
    MrvStatsCardsTypes["AGG_INVESTMENT_BY_TYPE"] = "AGG_INVESTMENT_BY_TYPE";
    // MY_AGG_INVESTMENT_BY_TYPE = "MY_AGG_INVESTMENT_BY_TYPE",
})(exports.MrvStatsCardsTypes || (exports.MrvStatsCardsTypes = {}));
exports.SystemNames = void 0;
(function (SystemNames) {
    SystemNames["CARBON_REGISTRY"] = "CARBON_REGISTRY_SYSTEM";
    SystemNames["CARBON_TRANSPARENCY"] = "CARBON_TRANSPARENCY_SYSTEM";
})(exports.SystemNames || (exports.SystemNames = {}));
exports.GhgStatCardTypes = void 0;
(function (GhgStatCardTypes) {
    GhgStatCardTypes["AGG_EMISSIONS_BY_SECTOR"] = "AGG_EMISSIONS_BY_SECTOR";
    GhgStatCardTypes["AGG_EMISSIONS_BY_GAS"] = "AGG_EMISSIONS_BY_GAS";
    GhgStatCardTypes["AGG_EMISSIONS_MITIGATION_POTENTIAL_BY_SECTOR"] = "AGG_EMISSIONS_MITIGATION_POTENTIAL_BY_SECTOR";
    GhgStatCardTypes["AGG_REDUCTION_PERCENT_BAU_BY_SECTOR"] = "AGG_REDUCTION_PERCENT_BAU_BY_SECTOR";
    GhgStatCardTypes["AGG_EMISSIONS_COMPARISON"] = "AGG_EMISSIONS_COMPARISON";
})(exports.GhgStatCardTypes || (exports.GhgStatCardTypes = {}));

exports.GovDepartment = void 0;
(function (GovDepartment) {
    GovDepartment["Cocoa Research Institute"] = "1";
    GovDepartment["National Agricultural Extension, Research and Liaison Services"] = "2";
    GovDepartment["National Veterinary Research Institute"] = "3";
    GovDepartment["Agricultural Insurance Corporation"] = "4";
    GovDepartment["National Root Crops Research Institute"] = "5";
    GovDepartment["Agricultural Research Council"] = "6";
    GovDepartment["Institute for Oceanography and Marine Research"] = "7";
    GovDepartment["Institute for Oil Palm Research"] = "8";
    GovDepartment["Agricultural Quarantine Service"] = "9";
    GovDepartment["National Horticultural Research Institute"] = "10";
    GovDepartment["Federal Airports Authority"] = "11";
    GovDepartment["Airspace Management Agency"] = "12";
    GovDepartment["Civil Aviation Authority"] = "13";
    GovDepartment["Safety Investigation Bureau"] = "14";
    GovDepartment["Meteorological Agency"] = "15";
    GovDepartment["College of Aviation Technology"] = "16";
    GovDepartment["National Information Technology Development Agency"] = "17";
    GovDepartment["Satellite Limited"] = "18";
    GovDepartment["Broadcasting Commission"] = "19";
    GovDepartment["Commission"] = "20";
    GovDepartment["Postal Service"] = "21";
    GovDepartment["National Frequency Management Council"] = "22";
    GovDepartment["Television Authority"] = "23";
    GovDepartment["Galaxy Backbone"] = "24";
    GovDepartment["Asset Management Corporation"] = "25";
    GovDepartment["Social Security Administration"] = "26";
    GovDepartment["Budget Office of the Federation"] = "27";
    GovDepartment["Bureau of Public Enterprises"] = "28";
    GovDepartment["Bureau of Public Procurement"] = "29";
    GovDepartment["Central Bank"] = "30";
    GovDepartment["Corporate Affairs Commission"] = "31";
    GovDepartment["Debt Management Office"] = "32";
    GovDepartment["Inland Revenue Service"] = "33";
    GovDepartment["Mortgage Bank"] = "34";
    GovDepartment["Fiscal Responsibility Commission"] = "35";
    GovDepartment["Infrastructure Concession Regulatory Commission"] = "36";
    GovDepartment["National Bureau of Statistics"] = "37";
    GovDepartment["National Council on Privatisation"] = "38";
    GovDepartment["National Insurance Commission"] = "39";
    GovDepartment["National Pension Commission"] = "40";
    GovDepartment["National Planning Commission"] = "41";
    GovDepartment["National Sugar Development Council"] = "42";
    GovDepartment["Niger Delta Development Commission"] = "43";
    GovDepartment["Customs Service"] = "44";
    GovDepartment["Deposit Insurance Corporation"] = "45";
    GovDepartment["Investment Promotion Commission"] = "46";
    GovDepartment["Export - Import Bank"] = "47";
    GovDepartment["Export Promotion Council"] = "48";
    GovDepartment["Oil and Gas Free Zones Authority"] = "49";
    GovDepartment["Export Processing Zones Authority"] = "50";
    GovDepartment["Revenue Mobilisation Allocation and Fiscal Commission"] = "51";
    GovDepartment["Securities and Exchange Commission"] = "52";
    GovDepartment["Standards Organisation"] = "53";
    GovDepartment["Small and Medium Enterprise Development Agency"] = "54";
    GovDepartment["National Board for Arabic And Islamic Studies"] = "55";
    GovDepartment["Joint Admissions and Matriculation Board"] = "56";
    GovDepartment["National Examination Council"] = "115";
    GovDepartment["National Open University"] = "57";
    GovDepartment["National Teachers Institute"] = "58";
    GovDepartment["National Universities Commission"] = "59";
    GovDepartment["Tertiary Education Trust Fund"] = "60";
    GovDepartment["Teachers Registration Council"] = "61";
    GovDepartment["National Business and Technical Examinations Board"] = "62";
    GovDepartment["Universal Basic Education Commission"] = "63";
    GovDepartment["West African Examination Council"] = "64";
    GovDepartment["National Commission for Colleges of Education"] = "65";
    GovDepartment["National Library"] = "66";
    GovDepartment["Midstream and Downstream Petroleum Regulatory Authority"] = "67";
    GovDepartment["Upstream Petroleum Regulatory Commission"] = "68";
    GovDepartment["Electricity Management Services Limited"] = "69";
    GovDepartment["Energy Commission"] = "70";
    GovDepartment["National Power Training Institute"] = "71";
    GovDepartment["Electricity Regulatory Commission"] = "72";
    GovDepartment["Content Monitoring and Development Board"] = "73";
    GovDepartment["National Petroleum Corporation"] = "74";
    GovDepartment["Petroleum Product Pricing Regulatory Agency"] = "76";
    GovDepartment["Power Holding Company (defunct)"] = "77";
    GovDepartment["Rural Electrification Agency"] = "78";
    GovDepartment["Transmission Company"] = "79";
    GovDepartment["Environmental Protection Agency (defunct)"] = "80";
    GovDepartment["Forestry Research Institute"] = "81";
    GovDepartment["National Biosafety Management Agency"] = "82";
    GovDepartment["National Environmental Standards and Regulations Enforcement Agency"] = "83";
    GovDepartment["National Oil Spill Detection and Response Agency"] = "84";
    GovDepartment["Environmental Health Officers Registration Council"] = "85";
    GovDepartment["National Health Insurance Scheme"] = "86";
    GovDepartment["Institute for Pharmaceutical Research and Development"] = "87";
    GovDepartment["Agency for the Control of AIDS"] = "88";
    GovDepartment["Agency for Food and Drug Administration and Control"] = "89";
    GovDepartment["Primary Health Care Development Agency"] = "90";
    GovDepartment["Institute of Medical Research"] = "91";
    GovDepartment["Centre for Disease Control"] = "92";
    GovDepartment["Drug Law Enforcement Agency"] = "93";
    GovDepartment["Defence Intelligence Agency"] = "94";
    GovDepartment["State Security Service"] = "95";
    GovDepartment["National Intelligence Agency"] = "96";
    GovDepartment["Financial Intelligence Unit"] = "97";
    GovDepartment["National Judicial Council"] = "98";
    GovDepartment["Federal Judicial Service Commission"] = "99";
    GovDepartment["National Judicial Institute"] = "100";
    GovDepartment["Maritime Administration and Safety Agency"] = "101";
    GovDepartment["Ports Authority"] = "102";
    GovDepartment["Shippers' Council"] = "103";
    GovDepartment["Broadcasting Organisation"] = "104";
    GovDepartment["News Agency"] = "105";
    GovDepartment["Press Council"] = "106";
    GovDepartment["Agency For Science and Engineering Infrastructure"] = "108";
    GovDepartment["Biotechnology Development Agency"] = "109";
    GovDepartment["Centre for Remote Sensing"] = "110";
    GovDepartment["Science and Technology Complex"] = "111";
    GovDepartment["Office for Technology Acquisition and Promotion"] = "112";
    GovDepartment["Space Research and Development Agency"] = "113";
    GovDepartment["Nuclear Regulatory Authority"] = "114";
    GovDepartment["Raw Materials Research and Development Council"] = "116";
    GovDepartment["Communications Satellite Ltd"] = "117";
    GovDepartment["Centre for Technology Management"] = "118";
    GovDepartment["Hydrological Services Agency"] = "119";
    GovDepartment["Integrated Water Resources Commission"] = "120";
    GovDepartment["Water Resources Institute"] = "121";
    GovDepartment["River Basin Development Authorities"] = "122";
    GovDepartment["Centre for Black and African Arts and Civilization"] = "123";
    GovDepartment["Automotive Design and Development Council"] = "124";
    GovDepartment["Code of Conduct Bureau"] = "125";
    GovDepartment["Computer Professionals Registration Council"] = "126";
    GovDepartment["Consumer Protection Council"] = "127";
    GovDepartment["Economic and Financial Crimes Commission"] = "128";
    GovDepartment["Federal Character Commission"] = "129";
    GovDepartment["Federal Housing Authority"] = "130";
    GovDepartment["Corrupt Practices and Other Related Offences Commission"] = "131";
    GovDepartment["Independent National Electoral Commission"] = "132";
    GovDepartment["Industrial Training Fund"] = "133";
    GovDepartment["Legal Aid Council"] = "134";
    GovDepartment["Agency for the Prohibition of Trafficking in Persons"] = "135";
    GovDepartment["National Boundary Commission"] = "136";
    GovDepartment["National Council of Arts and Culture"] = "137";
    GovDepartment["Economic Reconstruction Fund"] = "138";
    GovDepartment["Emergency Management Agency"] = "139";
    GovDepartment["Hajj Commission"] = "140";
    GovDepartment["Human Rights Commission"] = "141";
    GovDepartment["Identity Management Commission"] = "142";
    GovDepartment["Institute for Hospitality Tourism"] = "143";
    GovDepartment["Lottery Regulatory Commission"] = "144";
    GovDepartment["Orientation Agency"] = "145";
    GovDepartment["Population Commission"] = "146";
    GovDepartment["Poverty Eradication Programme (defunct)"] = "147";
    GovDepartment["Salaries, Incomes and Wages Commission"] = "148";
    GovDepartment["Sports Commission"] = "149";
    GovDepartment["Extractive Industries Transparency Initiative"] = "150";
    GovDepartment["Immigration Service"] = "151";
    GovDepartment["Building and Road Research Institute"] = "152";
    GovDepartment["Institute of Building"] = "153";
    GovDepartment["Christian Pilgrim Commission"] = "154";
    GovDepartment["Copyright Commission"] = "155";
    GovDepartment["Tourism Development Corporation"] = "156";
    GovDepartment["Public Complaints Commission"] = "157";
    GovDepartment["Surveyors Council"] = "158";
    GovDepartment["National Lottery Trust Fund"] = "159";
})(exports.GovDepartment || (exports.GovDepartment = {}));

exports.Ministry = void 0;
(function (Ministry) {
    Ministry["Agriculture"] = "Agriculture";
    Ministry["Aviation"] = "Aviation";
    Ministry["Communications"] = "Communications";
    Ministry["Economy"] = "Economy";
    Ministry["Education"] = "Education";
    Ministry["Energy"] = "Energy";
    Ministry["Environment"] = "Environment";
    Ministry["Health"] = "Health";
    Ministry["Intelligence"] = "Intelligence";
    Ministry["Judiciary"] = "Judiciary";
    Ministry["Maritime"] = "Maritime";
    Ministry["Media"] = "Media";
    Ministry["ScienceAndTechnology"] = "Science And Technology";
    Ministry["WaterResources"] = "Water Resources";
    Ministry["Other"] = "Other";
})(exports.Ministry || (exports.Ministry = {}));

exports.ConfigurationSettingsType = void 0;
(function (ConfigurationSettingsType) {
    ConfigurationSettingsType[ConfigurationSettingsType["isTransferFrozen"] = 0] = "isTransferFrozen";
})(exports.ConfigurationSettingsType || (exports.ConfigurationSettingsType = {}));

exports.MapTypes = void 0;
(function (MapTypes) {
    MapTypes["Mapbox"] = "Mapbox";
    MapTypes["None"] = "None";
})(exports.MapTypes || (exports.MapTypes = {}));

var dateTimeFormat = 'dd LLLL yyyy @ HH:mm';
var dateFormat = 'dd LLLL yyyy';
var creditUnit = 'ITMO';

var BaseEntity = /** @class */ (function () {
    function BaseEntity() {
    }
    return BaseEntity;
}());

var ProgrammeTransfer = /** @class */ (function () {
    function ProgrammeTransfer() {
    }
    return ProgrammeTransfer;
}());

var User = /** @class */ (function () {
    function User() {
    }
    return User;
}());

var ProgrammeEntity = /** @class */ (function () {
    function ProgrammeEntity() {
    }
    return ProgrammeEntity;
}());

var ProgrammeCertify = /** @class */ (function () {
    function ProgrammeCertify() {
    }
    return ProgrammeCertify;
}());

var Emission = /** @class */ (function () {
    function Emission() {
    }
    return Emission;
}());

var Projection = /** @class */ (function () {
    function Projection() {
    }
    return Projection;
}());

var IdeaNote = /** @class */ (function () {
    function IdeaNote() {
    }
    return IdeaNote;
}());

var css_248z$w = ".company-profile {\n  padding: 0px 50px; }\n  .company-profile .company-name {\n    font-weight: 600; }\n  .company-profile .title-bar {\n    display: flex;\n    justify-content: space-between; }\n    .company-profile .title-bar .flex-display {\n      margin-left: 15px; }\n  .company-profile .card-container {\n    margin-bottom: 20px;\n    width: 100%;\n    border-radius: 10px; }\n  .company-profile .mg-left-1 {\n    margin-left: 1rem; }\n  .company-profile .mg-top-1 {\n    margin-top: 1rem; }\n  .company-profile .mg-right-5 {\n    margin-right: 5rem; }\n  .company-profile .padding-top-1 {\n    padding-top: 1rem; }\n  .company-profile .padding-top-2 {\n    padding-top: 2rem; }\n  .company-profile .profile-img {\n    width: 200px; }\n  .company-profile .btn-danger {\n    color: #ff4d4f !important;\n    border-color: #ff8183 !important; }\n  .company-profile .btn-activate {\n    color: #008f39 !important;\n    border-color: #008f39 !important; }\n  .company-profile .ant-btn[disabled] {\n    border-color: #d9d9d9 !important;\n    background: #f5f5f5 !important;\n    color: #d9d9d9 !important; }\n  .company-profile .btn-approve {\n    color: white !important;\n    background-color: #008f39 !important; }\n  .company-profile .btn-reject {\n    color: #ff4d4f !important;\n    border-color: #ff4d4f !important;\n    background-color: white !important;\n    outline: auto !important; }\n";
styleInject(css_248z$w);

var IdeaNoteDetail2Component = function (props) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
    props.t; var IdeaNoteDetail = props.IdeaNoteDetail, lettre_non_objection = props.lettre_non_objection, lettre_eligibilite = props.lettre_eligibilite, lettre_eligibilite_signe = props.lettre_eligibilite_signe, lettre_non_objection_signe = props.lettre_non_objection_signe, onUploadModalConfirm = props.onUploadModalConfirm, statusnoteidee = props.statusnoteidee; props.isLoading; props.systemType;
    return (React.createElement(antd.Card, { className: "card-container" },
        React.createElement("div", { className: "info-view" },
            React.createElement("div", { className: "title" },
                React.createElement("span", { className: "title-icon" },
                    React.createElement(icons.BookOutlined, null)),
                React.createElement("span", { className: "title-text" }, "Note d'id\u00E9e")),
            React.createElement(antd.Skeleton, { loading: false, active: true },
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, "R\u00E9f\u00E9rences :"),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, ((_a = IdeaNoteDetail[0]) === null || _a === void 0 ? void 0 : _a.ref_note_idee)
                        ? (_b = IdeaNoteDetail[0]) === null || _b === void 0 ? void 0 : _b.ref_note_idee
                        : "-")),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, "Document de note d'id\u00E9e :"),
                    React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" },
                        React.createElement("a", { href: ((_c = IdeaNoteDetail[0]) === null || _c === void 0 ? void 0 : _c.note_idee)
                                ? (_d = IdeaNoteDetail[0]) === null || _d === void 0 ? void 0 : _d.note_idee
                                : "-", target: "_blank", rel: "noopener noreferrer", download: true },
                            React.createElement(icons.FileOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, "Document de conformit\u00E9 :"),
                    React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" },
                        React.createElement("a", { href: ((_e = IdeaNoteDetail[0]) === null || _e === void 0 ? void 0 : _e.document_conformite)
                                ? (_f = IdeaNoteDetail[0]) === null || _f === void 0 ? void 0 : _f.document_conformite
                                : "-", target: "_blank", rel: "noopener noreferrer", download: true },
                            React.createElement(icons.FileOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, "Date de d\u00E9p\u00F4t :"),
                    React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" }, ((_g = IdeaNoteDetail[0]) === null || _g === void 0 ? void 0 : _g.date_creation)
                        ? (_h = IdeaNoteDetail[0]) === null || _h === void 0 ? void 0 : _h.date_creation
                        : "-")),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, "Statut"),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, statusnoteidee === "en_attente"
                        ? "En attente"
                        : statusnoteidee === "valide"
                            ? "Eligible"
                            : statusnoteidee === "refuse"
                                ? "Rejetée"
                                : statusnoteidee === "recours"
                                    ? "En recours"
                                    : statusnoteidee === "cloturer_refuse"
                                        ? "Rejet definitif"
                                        : "")),
                statusnoteidee === "recours" && (React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, "Commentaire de recours"),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, ((_j = IdeaNoteDetail[0]) === null || _j === void 0 ? void 0 : _j.Commentaire_recours)
                        ? (_k = IdeaNoteDetail[0]) === null || _k === void 0 ? void 0 : _k.Commentaire_recours
                        : "-"))),
                lettre_eligibilite_signe !== "" ? (React.createElement(antd.Row, { className: "field", key: "Eligibility Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: "label-uploaded" }, "Lettre d'Eligibilit\u00E9"),
                            React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: "3px" } }))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: lettre_eligibilite_signe, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))))) : (React.createElement("div", null, lettre_eligibilite !== "" && (React.createElement(antd.Row, { className: "field", key: "Eligibility Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-uploaded" }, "Lettre d'Eligibilit\u00E9")),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: lettre_eligibilite, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement(icons.FileAddOutlined, { onClick: function () {
                                    onUploadModalConfirm();
                                }, className: "common-progress-icon", style: {
                                    color: "#976ED7",
                                    paddingTop: "3px",
                                    margin: "0px 0px 1.5px 0px",
                                } }))))))),
                lettre_non_objection_signe !== "" ? (React.createElement(antd.Row, { className: "field", key: "Eligibility Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: "label-uploaded" }, "Lettre de Non objection"),
                            React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: "3px" } }))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: lettre_non_objection_signe, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))))) : (React.createElement("div", null, lettre_non_objection !== "" && (React.createElement(antd.Row, { className: "field", key: "Eligibility Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-uploaded" }, "Lettre de Non objection")),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: lettre_non_objection, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement(icons.FileAddOutlined, { onClick: function () {
                                    onUploadModalConfirm();
                                }, className: "common-progress-icon", style: {
                                    color: "#976ED7",
                                    paddingTop: "3px",
                                    margin: "0px 0px 1.5px 0px",
                                } })))))))))));
};

var IdeaNoteDetailComponent = function (props) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    var t = props.t, useAbilityContext = props.useAbilityContext, useLocation = props.useLocation, onNavigateToCompanyManagement = props.onNavigateToCompanyManagement, systemType = props.systemType;
    var _k = useConnection(); _k.get; var put = _k.put; _k.post;
    var _l = React.useState([]), IdeaNoteDetail = _l[0], setIdeaNoteDetails = _l[1];
    var _m = React.useState(undefined); _m[0]; _m[1];
    var state = useLocation().state;
    var _o = React.useState(true), isLoading = _o[0], setIsLoading = _o[1];
    var _p = React.useState({}), actionInfo = _p[0], setActionInfo = _p[1];
    var _q = React.useState(false), openDeauthorisationModal = _q[0], setOpenDeauthorisationModal = _q[1];
    var _r = React.useState(false), openReactivateModal = _r[0], setOpenReactivateModal = _r[1];
    var _s = React.useState(null), selectedFile = _s[0], setSelectedFile = _s[1];
    var _t = React.useState(false), openApproveModal = _t[0], setOpenApproveModal = _t[1];
    var _u = React.useState(false), openUploadModalConfirm = _u[0], setOpenUploadModalConfirm = _u[1];
    var _v = React.useState(false), openRejectModal = _v[0], setOpenRejectModal = _v[1];
    var _w = React.useState(""), errorMsg = _w[0], setErrorMsg = _w[1];
    var _x = React.useState(""), lettre_eligibilite = _x[0], setlettre_eligibilite = _x[1];
    var _y = React.useState(""), lettre_non_objection = _y[0], setlettre_non_objection = _y[1];
    var _z = React.useState(""), lettre_eligibilite_signe = _z[0], setlettre_eligibilite_signe = _z[1];
    var _0 = React.useState(""), lettre_non_objection_signe = _0[0], setlettre_non_objection_signe = _0[1];
    var _1 = React.useState(""), statusnoteidee = _1[0], setstatusnoteidee = _1[1];
    var _2 = React.useState(""), type_of_letter = _2[0], settype_of_letter = _2[1];
    var _3 = React.useState(""); _3[0]; _3[1];
    var _4 = React.useState(""); _4[0]; _4[1];
    useAbilityContext();
    var handleFileChange = function (event) {
        console.log(event);
        setSelectedFile(event.target.files[0]);
    };
    var getIdeaNoteDetails = function (ref_note_idee) { return __awaiter(void 0, void 0, void 0, function () {
        var headers, method, url, data;
        return __generator(this, function (_a) {
            setIsLoading(true);
            try {
                console.log(ref_note_idee);
                headers = {
                    authorization: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnRpdHVsZSI6InN5c3RlbV9jYXJib25fcmVnaXN0cnkiLCJpYXQiOjE3MTYzMzkzODcsImV4cCI6NDg2OTkzOTM4N30.778fs30YX0hossKnCacm7bPYiJsYtWja7wL_NX_ttrc",
                };
                method = "post";
                url = "http://localhost:3005/users/apiv1/listNote_idee_by_ref_formate";
                data = {
                    Ref_note_idee: ref_note_idee,
                };
                axios({
                    method: method,
                    url: url,
                    data: data,
                    headers: headers,
                }).then(function (response) {
                    if (response && response.data) {
                        console.log(response.data);
                        console.log(ref_note_idee);
                        var availableIdeaNote = response.data;
                        setIdeaNoteDetails(availableIdeaNote);
                        setstatusnoteidee(availableIdeaNote[0].statut);
                        // Correction de l'accès aux données
                        console.log("Statut: " + statusnoteidee);
                    }
                });
                setIsLoading(false);
            }
            catch (error) {
                antd.message.open({
                    type: "error",
                    content: error.message,
                    duration: 3,
                    style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                });
                setIsLoading(false);
            }
            return [2 /*return*/];
        });
    }); };
    // Generer une lettre de non objection
    /*const generer_une_lettre_non_objection = async (note_idee_Id: string) => {
  
          setlettre_non_objection('http://localhost:3000/documents/METHODOLOGY_DOCUMENT_020_V1.pdf');
  
    }
  
  */
    React.useEffect(function () {
        if (!state) {
            onNavigateToCompanyManagement();
        }
        else {
            getIdeaNoteDetails(state.record.ref_note_idee);
            getletter_note(state.record.ref_note_idee);
            //onGetNoteIdee('test1','test2','fr');
        }
    }, []);
    var onDeauthoriseOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var exception_1;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _c.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    return [4 /*yield*/, put("national/organisation/suspend?id=".concat(IdeaNoteDetail.companyId), {
                            remarks: remarks,
                        })];
                case 1:
                    _c.sent();
                    setOpenDeauthorisationModal(false);
                    antd.message.open({
                        type: "success",
                        content: t("companyProfile:deauthorisationSuccess"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    getIdeaNoteDetails(((_a = IdeaNoteDetail[0]) === null || _a === void 0 ? void 0 : _a.note_idee) ? (_b = IdeaNoteDetail[0]) === null || _b === void 0 ? void 0 : _b.note_idee : "-");
                    return [3 /*break*/, 4];
                case 2:
                    exception_1 = _c.sent();
                    setErrorMsg(exception_1.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onReactivateOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var exception_2;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _c.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    return [4 /*yield*/, put("national/organisation/activate?id=".concat(IdeaNoteDetail.companyId), {
                            remarks: remarks,
                        })];
                case 1:
                    _c.sent();
                    setOpenReactivateModal(false);
                    antd.message.open({
                        type: "success",
                        content: t("companyProfile:reactivationSuccess"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    getIdeaNoteDetails(((_a = IdeaNoteDetail[0]) === null || _a === void 0 ? void 0 : _a.note_idee) ? (_b = IdeaNoteDetail[0]) === null || _b === void 0 ? void 0 : _b.note_idee : "-");
                    return [3 /*break*/, 4];
                case 2:
                    exception_2 = _c.sent();
                    setErrorMsg(exception_2.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onApproveOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var type_de_lettre, headers, method, url, data;
        var _a, _b;
        return __generator(this, function (_c) {
            // console.log("JE SUIS ICI POUR TEST");
            setIsLoading(true);
            type_de_lettre = "";
            if (type_of_letter != "reject") {
                type_de_lettre = "";
                if (type_of_letter == "letter_of_non_objection") {
                    type_de_lettre = "objection_letter";
                }
                else if (type_of_letter == "letter_of_eligibility") {
                    type_de_lettre = "eligibilite_letter";
                }
                try {
                    headers = {
                        authorization: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RpbmciLCJpYXQiOjE3MTcxMjg0MjEsImV4cCI6MTcyNzQ5NjQyMX0.fuU7TGjn2BIVkjM1puGCmwCS-CDkGXHDTfZxJno5kzQ",
                    };
                    method = "post";
                    url = "https://docregister.ci.skyvisionafrica.com/api/v1/doc/create_idea";
                    data = {
                        IdIdea: ((_a = IdeaNoteDetail[0]) === null || _a === void 0 ? void 0 : _a.ref_note_idee)
                            ? (_b = IdeaNoteDetail[0]) === null || _b === void 0 ? void 0 : _b.ref_note_idee
                            : "0",
                        Type: type_de_lettre,
                        Lang: "fr",
                    };
                    axios({
                        method: method,
                        url: url,
                        data: data,
                        headers: headers,
                    }).then(function (response) {
                        if (response && response.data) {
                            console.log(response.data);
                            //setstatusnoteidee('valide');
                            if (type_of_letter == "letter_of_non_objection") {
                                setlettre_non_objection(response.data.data.Url);
                            }
                            else if (type_of_letter == "letter_of_eligibility") {
                                setlettre_eligibilite(response.data.data.Url);
                            }
                        }
                    });
                    setOpenApproveModal(false);
                    antd.message.open({
                        type: "success",
                        content: "Lettre non signée générée avec succes",
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    //  getIdeaNoteDetails(IdeaNoteDetail.companyId);
                    //   getUserDetails(IdeaNoteDetail.companyId);
                }
                catch (exception) {
                    setErrorMsg(exception.message);
                }
                finally {
                    setIsLoading(false);
                }
            }
            return [2 /*return*/];
        });
    }); };
    var getletter_note = function (NoteId) {
        try {
            var headers = {
                authorization: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RpbmciLCJpYXQiOjE3MTcxMjg0MjEsImV4cCI6MTcyNzQ5NjQyMX0.fuU7TGjn2BIVkjM1puGCmwCS-CDkGXHDTfZxJno5kzQ",
            };
            var method = "post";
            var url = "https://docregister.ci.skyvisionafrica.com/api/v1/doc/read_global";
            var data = {
                Id: NoteId,
                Type: "Note",
            };
            axios({
                method: method,
                url: url,
                data: data,
                headers: headers,
            }).then(function (response) {
                if (response && response.data) {
                    console.log(response.data);
                    //Modifier l'url de la lettre d'approbation
                    //setAuthorisationDocUrlsigne();
                    if (response.data.data.objection_letter.exist == true) {
                        if (response.data.data.objection_letter.signed == true) {
                            setlettre_non_objection_signe(response.data.data.objection_letter.link);
                            setstatusnoteidee("valide");
                            settype_of_letter("letter_of_non_objection");
                        }
                        else {
                            setlettre_non_objection(response.data.data.objection_letter.link);
                            //setstatusnoteidee('valide');
                            settype_of_letter("letter_of_non_objection");
                        }
                    }
                    if (response.data.data.eligibilite_letter.exist == true) {
                        if (response.data.data.eligibilite_letter.signed == true) {
                            setlettre_eligibilite_signe(response.data.data.eligibilite_letter.link);
                            setstatusnoteidee("valide");
                            settype_of_letter("letter_of_eligibility");
                        }
                        else {
                            setlettre_eligibilite(response.data.data.eligibilite_letter.link);
                            settype_of_letter("letter_of_eligibility");
                            // setstatusnoteidee('valide');
                        }
                    }
                }
            });
        }
        catch (error) {
            console.error("Error", error);
            antd.message.open({
                type: "error",
                content: "Erreur de chargement",
                duration: 3,
                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
            });
        }
    };
    var onUploadLetter = function () { return __awaiter(void 0, void 0, void 0, function () {
        var type_de_lettre, formData, headers, response, formData1, headers_1, response1, error_2;
        var _a, _b, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    console.log(selectedFile);
                    if (!selectedFile) {
                        antd.message.open({
                            type: "error",
                            content: "Please select a file before uploading.",
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        return [2 /*return*/];
                    }
                    setIsLoading(true);
                    type_de_lettre = "";
                    if (!(type_of_letter != "reject")) return [3 /*break*/, 7];
                    type_de_lettre = "";
                    if (type_of_letter == "letter_of_non_objection") {
                        type_de_lettre = "objection_letter";
                    }
                    else if (type_of_letter == "letter_of_eligibility") {
                        type_de_lettre = "eligibilite_letter";
                    }
                    formData = new FormData();
                    formData.append("file", selectedFile);
                    formData.append("Type", type_de_lettre); // Replace with the actual type
                    formData.append("Id_pro_idea", ((_a = IdeaNoteDetail[0]) === null || _a === void 0 ? void 0 : _a.ref_note_idee)
                        ? (_b = IdeaNoteDetail[0]) === null || _b === void 0 ? void 0 : _b.ref_note_idee
                        : "0"); // Replace with the actual ID
                    headers = {
                        Authorization: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RpbmciLCJpYXQiOjE3MTcxMjg0MjEsImV4cCI6MTcyNzQ5NjQyMX0.fuU7TGjn2BIVkjM1puGCmwCS-CDkGXHDTfZxJno5kzQ", // Replace with the actual token
                    };
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 5, 6, 7]);
                    return [4 /*yield*/, axios.post("https://docregister.ci.skyvisionafrica.com/api/v1/doc/add_doc_sign", // Replace with the actual URL
                        formData, { headers: headers })];
                case 2:
                    response = _d.sent();
                    if (!(response && response.data)) return [3 /*break*/, 4];
                    console.log(response.data);
                    if (type_of_letter == "letter_of_non_objection") {
                        setlettre_non_objection_signe(response.data.data.link);
                    }
                    else if (type_of_letter == "letter_of_eligibility") {
                        setlettre_eligibilite_signe(response.data.data.link);
                    }
                    setstatusnoteidee("valide");
                    formData1 = new FormData();
                    formData1.append("Statut", "valide"); // Replace with the actual type
                    formData1.append("Note_ideeid", (_c = IdeaNoteDetail[0]) === null || _c === void 0 ? void 0 : _c.id_note_idee); // Replace with the actual ID
                    headers_1 = {
                        authorization: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnRpdHVsZSI6InN5c3RlbV9jYXJib25fcmVnaXN0cnkiLCJpYXQiOjE3MTYzMzkzODcsImV4cCI6NDg2OTkzOTM4N30.778fs30YX0hossKnCacm7bPYiJsYtWja7wL_NX_ttrc",
                    };
                    return [4 /*yield*/, axios.post("http://localhost:3005/users/apiv1/editNote_idee", // Replace with the actual URL
                        formData1, { headers: headers_1 })];
                case 3:
                    response1 = _d.sent();
                    console.log("Note bien approuvée: " + response1);
                    antd.message.open({
                        type: "success",
                        content: "File uploaded successfully.",
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    _d.label = 4;
                case 4: return [3 /*break*/, 7];
                case 5:
                    error_2 = _d.sent();
                    console.error("Error uploading file:", error_2);
                    antd.message.open({
                        type: "error",
                        content: "Erreur  d'upload du fichier.",
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 7];
                case 6:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 7: return [2 /*return*/];
            }
        });
    }); };
    var onApproveOrgCanceled = function () {
        setOpenApproveModal(false);
    };
    var onUploadModalConfirm = function () {
        setActionInfo({
            action: "Confirmer",
            headerText: "Chargez votre lettre sign\u00E9e",
            text: "".concat(t("companyProfile:approveConfirmText")),
            type: "primary",
            icon: React.createElement(Icon__namespace.ClipboardCheck, null),
        });
        setErrorMsg("");
        setOpenUploadModalConfirm(true);
    };
    var onUploadModalCanceled = function () {
        setOpenUploadModalConfirm(false);
    };
    var onRejectOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var formData, headers, response, exception_3;
        var _a, _b, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    _d.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    formData = new FormData();
                    formData.append("Statut", "refuse"); // Replace with the actual type
                    formData.append("Note_ideeid", (_a = IdeaNoteDetail[0]) === null || _a === void 0 ? void 0 : _a.id_note_idee); // Replace with the actual ID
                    headers = {
                        authorization: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnRpdHVsZSI6InN5c3RlbV9jYXJib25fcmVnaXN0cnkiLCJpYXQiOjE3MTYzMzkzODcsImV4cCI6NDg2OTkzOTM4N30.778fs30YX0hossKnCacm7bPYiJsYtWja7wL_NX_ttrc",
                    };
                    return [4 /*yield*/, axios.post("http://localhost:3005/users/apiv1/editNote_idee", // Replace with the actual URL
                        formData, { headers: headers })];
                case 1:
                    response = _d.sent();
                    setOpenRejectModal(false);
                    console.log("Note bien refusée: " + response);
                    antd.message.open({
                        type: "success",
                        content: t("companyProfile:rejectedSuccessfully"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    getIdeaNoteDetails(((_b = IdeaNoteDetail[0]) === null || _b === void 0 ? void 0 : _b.note_idee) ? (_c = IdeaNoteDetail[0]) === null || _c === void 0 ? void 0 : _c.note_idee : "-");
                    return [3 /*break*/, 4];
                case 2:
                    exception_3 = _d.sent();
                    setErrorMsg(exception_3.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onRejectOrgCanceled = function () {
        setOpenRejectModal(false);
    };
    var onDeauthoriseOrgCanceled = function () {
        setOpenDeauthorisationModal(false);
    };
    var onReactivateOrgCanceled = function () {
        setOpenReactivateModal(false);
    };
    var onGenerateLetterEligibility = function () {
        setActionInfo({
            action: "".concat(t("companyProfile:approve")),
            headerText: "".concat(t("companyProfile:eligibility_letter_generator_confirm_text")),
            text: "".concat(t("companyProfile:approveConfirmText")),
            type: "primary",
            icon: React.createElement(Icon__namespace.ClipboardCheck, null),
        });
        setErrorMsg("");
        settype_of_letter("letter_of_eligibility");
        setOpenApproveModal(true);
    };
    var onGenerateLetterNonObjection = function () {
        setActionInfo({
            action: "".concat(t("companyProfile:approve")),
            headerText: "".concat(t("companyProfile:nonobjection_letter_generator_confirm_text")),
            text: "".concat(t("companyProfile:approveConfirmText")),
            type: "primary",
            icon: React.createElement(Icon__namespace.ClipboardCheck, null),
        });
        setErrorMsg("");
        settype_of_letter("letter_of_non_objection");
        setOpenApproveModal(true);
    };
    var onRejectIdeaNote = function () {
        setActionInfo({
            action: "".concat(t("companyProfile:reject")),
            headerText: "".concat(t("companyProfile:rejectConfirmIdeaNoteText")),
            text: "".concat(t("companyProfile:rejectConfirmText")),
            type: "danger",
            icon: React.createElement(Icon__namespace.ClipboardX, null),
        });
        setErrorMsg("");
        settype_of_letter("reject");
        setOpenRejectModal(true);
    };
    return (React.createElement("div", { className: "content-container company-profile" },
        React.createElement("div", { className: "title-bar" },
            React.createElement("div", null,
                React.createElement("div", { className: "body-title" },
                    " ",
                    t("companyProfile:IdeaNoteDetailTitle"))),
            React.createElement("div", { className: "flex-display" }, statusnoteidee == "en_attente" || statusnoteidee == "recours" ? (React.createElement(antd.Row, { justify: "end" },
                React.createElement(antd.Button, { className: "mg-left-1 btn-danger mg-bottom-1", onClick: function () {
                        onRejectIdeaNote();
                    } }, t("companyProfile:reject")),
                React.createElement(antd.Button, { className: "mg-left-1 mg-bottom-1", type: "primary", onClick: function () {
                        onGenerateLetterEligibility();
                    } }, t("companyProfile:letter_eligibility")),
                React.createElement(antd.Button, { className: "mg-left-1 mg-bottom-1", type: "primary", onClick: function () {
                        onGenerateLetterNonObjection();
                    } }, t("companyProfile:letter_no_objection")))) : (""))),
        !IdeaNoteDetail && (React.createElement("div", { className: "content-body" },
            React.createElement(antd.Skeleton, { active: true, loading: false }))),
        IdeaNoteDetail && (React.createElement("div", { className: "content-body" },
            React.createElement(antd.Row, { gutter: 16 },
                React.createElement(antd.Col, { md: 24, lg: 8 },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement(antd.Skeleton, { loading: false, active: true },
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement("img", { className: "profile-img", alt: "profile image", src: (_a = IdeaNoteDetail[1]) === null || _a === void 0 ? void 0 : _a.logo })),
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement("div", { className: "padding-top-1 company-name" }, (_b = IdeaNoteDetail[1]) === null || _b === void 0 ? void 0 : _b.denomination)),
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement("div", { className: "padding-top-1 company-name" }, (_c = IdeaNoteDetail[1]) === null || _c === void 0 ? void 0 : _c.site_web)),
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement("div", { className: "padding-top-1 company-name" }, (_d = IdeaNoteDetail[1]) === null || _d === void 0 ? void 0 : _d.email_admin_organisation)),
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement("div", { className: "padding-top-1 company-name" }, (_e = IdeaNoteDetail[1]) === null || _e === void 0 ? void 0 : _e.numero_tel_organisation)),
                            React.createElement(antd.Row, { className: "field" },
                                React.createElement(antd.Col, { span: 12, className: "field-key" }, "Documents:"),
                                React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" },
                                    React.createElement("a", { href: ((_f = IdeaNoteDetail[1]) === null || _f === void 0 ? void 0 : _f.DFE) ? (_g = IdeaNoteDetail[1]) === null || _g === void 0 ? void 0 : _g.DFE : "-", target: "_blank", rel: "noopener noreferrer", download: true },
                                        React.createElement(icons.FileOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })),
                                    React.createElement("a", { href: ((_h = IdeaNoteDetail[1]) === null || _h === void 0 ? void 0 : _h.RCCM)
                                            ? (_j = IdeaNoteDetail[1]) === null || _j === void 0 ? void 0 : _j.RCCM
                                            : "-", target: "_blank", rel: "noopener noreferrer", download: true },
                                        React.createElement(icons.FileOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } }))))))),
                console.log("Lettre non objection to be displayed:", lettre_non_objection),
                React.createElement(antd.Col, { md: 24, lg: 16 },
                    React.createElement(IdeaNoteDetail2Component, { t: t, IdeaNoteDetail: IdeaNoteDetail, lettre_non_objection: lettre_non_objection, lettre_eligibilite: lettre_eligibilite, lettre_eligibilite_signe: lettre_eligibilite_signe, lettre_non_objection_signe: lettre_non_objection_signe, onUploadModalConfirm: onUploadModalConfirm, statusnoteidee: statusnoteidee, isLoading: isLoading, systemType: systemType }))))),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onDeauthoriseOrgConfirmed, onActionCanceled: onDeauthoriseOrgCanceled, openModal: openDeauthorisationModal, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onUploadLetter, onActionCanceled: onUploadModalCanceled, openModal: openUploadModalConfirm, uploadmodal: openUploadModalConfirm, onUploadLetter: onUploadLetter, handleFileChange: handleFileChange, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onReactivateOrgConfirmed, onActionCanceled: onReactivateOrgCanceled, openModal: openReactivateModal, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onApproveOrgConfirmed, onActionCanceled: onApproveOrgCanceled, openModal: openApproveModal, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onRejectOrgConfirmed, onActionCanceled: onRejectOrgCanceled, openModal: openRejectModal, errorMsg: errorMsg, loading: isLoading })));
};

var css_248z$v = ".company-details-form-container {\n  width: 100%; }\n  .company-details-form-container .company-details-form .steps-actions {\n    display: flex;\n    flex-direction: row-reverse; }\n    .company-details-form-container .company-details-form .steps-actions .mg-left-1 {\n      margin-left: 1rem; }\n  .company-details-form-container .company-details-form .row .website .ant-input {\n    margin-left: 0.3rem; }\n  .company-details-form-container .company-details-form .row .website .ant-input-group-addon {\n    border: 1px solid #d9d9d9; }\n  .company-details-form-container .company-details-form .row .logo-upload-section {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: start;\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .logo-upload-section .ant-upload {\n      width: 20%; }\n    .company-details-form-container .company-details-form .row .logo-upload-section .ant-upload-list {\n      align-items: center;\n      justify-content: center;\n      width: 75%; }\n      .company-details-form-container .company-details-form .row .logo-upload-section .ant-upload-list .ant-upload-list-item {\n        margin-top: 0; }\n  .company-details-form-container .company-details-form .row .details-part-one .space-container {\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .details-part-one .space-container .ant-space-item {\n      width: 100%; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .certifier-radio-container {\n    width: 30%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .certifier-radio-container .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n) {\n      color: #519e4f !important;\n      border-color: #519e4f !important;\n      box-shadow: none; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .certifier-radio-container .anticon {\n      background: #eeeeee;\n      border-radius: 50px;\n      padding: 0.2rem;\n      color: #519e4f; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .dev-radio-container {\n    width: 30%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .dev-radio-container .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n) {\n      color: #ffa070 !important;\n      border-color: #ffa070 !important;\n      box-shadow: none; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .dev-radio-container .anticon {\n      background: #eeeeee;\n      border-radius: 50px;\n      padding: 0.2rem;\n      color: #ffa070; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .minister-radio-container {\n    width: 30%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .minister-radio-container .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n) {\n      color: #9155fd !important;\n      border-color: #9155fd !important;\n      box-shadow: none; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .minister-radio-container .anticon {\n      background: #eeeeee;\n      border-radius: 50px;\n      padding: 0.2rem;\n      color: #9155fd; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .gov-radio-container {\n    width: 45%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .gov-radio-container .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n) {\n      color: #008f39 !important;\n      border-color: #008f39 !important;\n      box-shadow: none; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .gov-radio-container .anticon {\n      background: #eeeeee;\n      border-radius: 50px;\n      padding: 0.2rem;\n      color: #008f39; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .observer-radio-container {\n    width: 25%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .observer-radio-container .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n) {\n      color: #707070 !important;\n      border-color: #707070 !important;\n      box-shadow: none; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .observer-radio-container .anticon {\n      background: #eeeeee;\n      border-radius: 50px;\n      padding: 0.2rem;\n      color: #707070; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .ant-radio-button-wrapper::before {\n    background-color: transparent; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .ant-radio-button-wrapper {\n    border: 1px solid #d9d9d9; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .anticon {\n    margin-right: 0.5rem; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .certifier {\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .certifier .ant-radio-button-checked {\n      background: rgba(128, 255, 0, 0.12);\n      color: #519e4f; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .dev {\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .dev .ant-radio-button-checked {\n      background: rgba(254, 241, 173, 0.5);\n      color: #ffa070; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .gov {\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .gov .ant-radio-button-checked {\n      background: rgba(185, 226, 244, 0.56);\n      color: #008f39; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .minister {\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .minister .ant-radio-button-checked {\n      background: rgba(198, 144, 251, 0.12);\n      color: #9155fd; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .observer {\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .details-part-two .role-group .observer .ant-radio-button-checked {\n      background: rgba(176, 190, 197, 0.23);\n      color: #707070; }\n  .company-details-form-container .company-details-form .row .details-part-two .role-group .role-icons {\n    margin-right: 5px; }\n  .company-details-form-container .company-details-form .row .details-part-two .space-container {\n    width: 100%; }\n    .company-details-form-container .company-details-form .row .details-part-two .space-container .ant-space-item {\n      width: 100%; }\n\n.step-title-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem; }\n  .step-title-container .step-count {\n    font-size: 2.2rem;\n    font-weight: 800;\n    margin-right: 0.4rem;\n    color: rgba(58, 53, 65, 0.8); }\n  .step-title-container .title {\n    font-size: 1rem;\n    font-weight: 600;\n    color: #3a3541; }\n\n.add-company-main-container {\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  padding: 0 50px; }\n  .add-company-main-container .title-container {\n    display: flex;\n    flex-direction: column;\n    border-radius: 5px; }\n    .add-company-main-container .title-container .main {\n      font-size: 1.25rem;\n      font-weight: 500;\n      color: #008f39; }\n    .add-company-main-container .title-container .sub {\n      font-size: 0.8rem;\n      color: #555657; }\n  .add-company-main-container .adding-section {\n    display: flex;\n    flex-direction: column;\n    background-color: #ffffff;\n    margin: 1rem 0 1rem 0;\n    border-radius: 10px;\n    padding: 2.5rem 1.5rem 2.5rem 1.5rem; }\n    .add-company-main-container .adding-section .form-section {\n      display: flex;\n      margin-bottom: 2rem; }\n      .add-company-main-container .adding-section .form-section .form-one {\n        width: 100%; }\n      .add-company-main-container .adding-section .form-section .steps {\n        width: 15%; }\n      .add-company-main-container .adding-section .form-section .steps-content {\n        width: 85%; }\n    .add-company-main-container .adding-section .steps-action {\n      display: flex;\n      flex-direction: row-reverse; }\n\n.ant-upload-list-picture .ant-upload-list-item-error,\n.ant-upload-list-picture-card .ant-upload-list-item-error {\n  height: auto;\n  max-height: 200px; }\n\n.hide {\n  display: none !important; }\n";
styleInject(css_248z$v);

var ministries = [
    "Agriculture",
    "Aviation",
    "Communications",
    "Economy",
    "Education",
    "Energy",
    "Environment",
    "Health",
    "Intelligence",
    "Judiciary",
    "Maritime",
    "Media",
    "Science And Technology",
    "Water Resources",
    "Other",
];
var ministryOrgs = {
    Agriculture: [
        "Cocoa Research Institute",
        "National Agricultural Extension, Research and Liaison Services",
        "National Veterinary Research Institute",
        "Agricultural Insurance Corporation",
        "National Root Crops Research Institute",
        "Agricultural Research Council",
        "Institute for Oceanography and Marine Research",
        "Institute for Oil Palm Research",
        "Agricultural Quarantine Service",
        "National Horticultural Research Institute",
    ],
    Aviation: [
        "Federal Airports Authority",
        "Airspace Management Agency",
        "Civil Aviation Authority",
        "Safety Investigation Bureau",
        "Meteorological Agency",
        "College of Aviation Technology",
    ],
    Communications: [
        "National Information Technology Development Agency",
        "Satellite Limited",
        "Broadcasting Commission",
        "Commission",
        "Postal Service",
        "National Frequency Management Council",
        "Television Authority",
        "Galaxy Backbone",
    ],
    Economy: [
        "Asset Management Corporation",
        "Social Security Administration",
        "Budget Office of the Federation",
        "Bureau of Public Enterprises",
        "Bureau of Public Procurement",
        "Central Bank",
        "Corporate Affairs Commission",
        "Debt Management Office",
        "Inland Revenue Service",
        "Mortgage Bank",
        "Fiscal Responsibility Commission",
        "Infrastructure Concession Regulatory Commission",
        "National Bureau of Statistics",
        "National Council on Privatisation",
        "National Insurance Commission",
        "National Pension Commission",
        "National Planning Commission",
        "National Sugar Development Council",
        "Niger Delta Development Commission",
        "Customs Service",
        "Deposit Insurance Corporation",
        "Investment Promotion Commission",
        "Export - Import Bank",
        "Export Promotion Council",
        "Oil and Gas Free Zones Authority",
        "Export Processing Zones Authority",
        "Revenue Mobilisation Allocation and Fiscal Commission",
        "Securities and Exchange Commission",
        "Standards Organisation",
        "Small and Medium Enterprise Development Agency",
    ],
    Education: [
        "National Board for Arabic And Islamic Studies",
        "Joint Admissions and Matriculation Board",
        "National Examination Council",
        "National Open University",
        "National Teachers Institute",
        "National Universities Commission",
        "Tertiary Education Trust Fund",
        "Teachers Registration Council",
        "National Business and Technical Examinations Board",
        "Universal Basic Education Commission",
        "West African Examination Council",
        "National Commission for Colleges of Education",
        "National Library",
    ],
    Energy: [
        "Midstream and Downstream Petroleum Regulatory Authority",
        "Upstream Petroleum Regulatory Commission",
        "Electricity Management Services Limited",
        "Energy Commission",
        "National Power Training Institute",
        "Electricity Regulatory Commission",
        "Content Monitoring and Development Board",
        "National Petroleum Corporation",
        "Nuclear Regulatory Authority",
        "Petroleum Product Pricing Regulatory Agency",
        "Power Holding Company (defunct)",
        "Rural Electrification Agency",
        "Transmission Company",
    ],
    Environment: [
        "Environmental Protection Agency (defunct)",
        "Forestry Research Institute",
        "National Biosafety Management Agency",
        "National Environmental Standards and Regulations Enforcement Agency",
        "National Oil Spill Detection and Response Agency",
        "Environmental Health Officers Registration Council",
    ],
    Health: [
        "National Health Insurance Scheme",
        "Institute for Pharmaceutical Research and Development",
        "Agency for the Control of AIDS",
        "Agency for Food and Drug Administration and Control",
        "Primary Health Care Development Agency",
        "Institute of Medical Research",
        "Centre for Disease Control",
        "Drug Law Enforcement Agency",
    ],
    Intelligence: [
        "Defence Intelligence Agency",
        "State Security Service",
        "National Intelligence Agency",
        "Financial Intelligence Unit",
    ],
    Judiciary: [
        "National Judicial Council",
        "Federal Judicial Service Commission",
        "National Judicial Institute",
    ],
    Maritime: [
        "Maritime Administration and Safety Agency",
        "Ports Authority",
        "Shippers' Council",
    ],
    Media: [
        "Broadcasting Organisation",
        "News Agency",
        "Press Council",
        "Television Authority",
    ],
    ScienceAndTechnology: [
        "Agency For Science and Engineering Infrastructure",
        "Biotechnology Development Agency",
        "Centre for Remote Sensing",
        "Science and Technology Complex",
        "Office for Technology Acquisition and Promotion",
        "Space Research and Development Agency",
        "Nuclear Regulatory Authority",
        "Raw Materials Research and Development Council",
        "Communications Satellite Ltd",
        "Centre for Technology Management",
    ],
    WaterResources: [
        "Hydrological Services Agency",
        "Integrated Water Resources Commission",
        "Water Resources Institute",
        "River Basin Development Authorities",
    ],
    Other: [
        "Centre for Black and African Arts and Civilization",
        "Automotive Design and Development Council",
        "Code of Conduct Bureau",
        "Computer Professionals Registration Council",
        "Consumer Protection Council",
        "Economic and Financial Crimes Commission",
        "Federal Character Commission",
        "Federal Housing Authority",
        "Corrupt Practices and Other Related Offences Commission",
        "Independent National Electoral Commission",
        "Industrial Training Fund",
        "Legal Aid Council",
        "Agency for the Prohibition of Trafficking in Persons",
        "National Boundary Commission",
        "National Council of Arts and Culture",
        "Economic Reconstruction Fund",
        "Emergency Management Agency",
        "Hajj Commission",
        "Human Rights Commission",
        "Identity Management Commission",
        "Institute for Hospitality Tourism",
        "Lottery Regulatory Commission",
        "Orientation Agency",
        "Population Commission",
        "Poverty Eradication Programme (defunct)",
        "Salaries, Incomes and Wages Commission",
        "Sports Commission",
        "Extractive Industries Transparency Initiative",
        "Immigration Service",
        "Building and Road Research Institute",
        "Institute of Building",
        "Christian Pilgrim Commission",
        "Copyright Commission",
        "Tourism Development Corporation",
        "Public Complaints Commission",
        "Surveyors Council",
        "National Lottery Trust Fund",
    ],
};
var AddNewCompanyComponent = function (props) {
    var _a, _b, _c, _d, _e;
    var t = props.t, onNavigateToCompanyManagement = props.onNavigateToCompanyManagement, maximumImageSize = props.maximumImageSize, useLocation = props.useLocation, regionField = props.regionField, isGuest = props.isGuest, onNavigateToHome = props.onNavigateToHome, systemType = props.systemType;
    var formOne = antd.Form.useForm()[0];
    var formTwo = antd.Form.useForm()[0];
    var _f = React.useState(), stepOneData = _f[0], setStepOneData = _f[1];
    var _g = React.useState(false), loading = _g[0], setLoading = _g[1];
    var contactNoInput = React.useState()[0];
    var _h = React.useState(0), current = _h[0], setCurrent = _h[1];
    var _j = React.useState(false), isUpdate = _j[0], setIsUpdate = _j[1];
    var _k = useConnection(), put = _k.put, get = _k.get, post = _k.post;
    var _l = useUserContext(), setUserInfo = _l.setUserInfo, userInfoState = _l.userInfoState;
    var state = useLocation().state;
    var _m = React.useState([]), fileList = _m[0], setFileList = _m[1];
    var _o = React.useState([]), countries = _o[0], setCountries = _o[1];
    var _p = React.useState(false), loadingList = _p[0], setLoadingList = _p[1];
    var _q = React.useState([]), regionsList = _q[0], setRegionsList = _q[1];
    var _r = React.useState((_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.companyRole), companyRole = _r[0], setCompanyRole = _r[1];
    var _s = React.useState(""), selectedMinistry = _s[0], setSelectedMinistry = _s[1];
    var _t = React.useState([]), existgovDep = _t[0], setexistGovdep = _t[1];
    var _u = React.useState(ministries), ministryDropdown = _u[0], setMinistryDropdown = _u[1];
    var _v = React.useState(((_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.govDep) ? (_c = state === null || state === void 0 ? void 0 : state.record) === null || _c === void 0 ? void 0 : _c.govDep : ""), intialGovDep = _v[0]; _v[1];
    var _w = React.useState(((_d = state === null || state === void 0 ? void 0 : state.record) === null || _d === void 0 ? void 0 : _d.ministry) ? (_e = state === null || state === void 0 ? void 0 : state.record) === null || _e === void 0 ? void 0 : _e.ministry : ""), initialMinistry = _w[0]; _w[1];
    var selectedGovDepatments = ministryOrgs[selectedMinistry];
    if (existgovDep && existgovDep.length > 0) {
        selectedGovDepatments = selectedGovDepatments.filter(function (x) { return !existgovDep.includes(x); });
    }
    var onChangeMinistry = function (val) { return __awaiter(void 0, void 0, void 0, function () {
        var key;
        return __generator(this, function (_a) {
            key = Object.keys(exports.Ministry)[Object.values(exports.Ministry).indexOf(val)];
            setSelectedMinistry(String(key));
            if (isUpdate && val === initialMinistry) {
                formOne.setFieldValue("govDep", Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(intialGovDep)]);
            }
            else {
                formOne.setFieldValue("govDep", "");
            }
            getGovDep(val);
            return [2 /*return*/];
        });
    }); };
    var getMinistryList = function () { return __awaiter(void 0, void 0, void 0, function () {
        var leftmins, excludingmin_1, _i, ministries_1, min, response, minkey, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingList(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 6, 7, 8]);
                    leftmins = [];
                    excludingmin_1 = [];
                    _i = 0, ministries_1 = ministries;
                    _a.label = 2;
                case 2:
                    if (!(_i < ministries_1.length)) return [3 /*break*/, 5];
                    min = ministries_1[_i];
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "ministry",
                                    operation: "=",
                                    value: min,
                                },
                            ],
                        })];
                case 3:
                    response = _a.sent();
                    minkey = Object.keys(exports.Ministry)[Object.values(exports.Ministry).indexOf(min)];
                    if (response.data.length === ministryOrgs[minkey].length) {
                        if (!isUpdate && min !== initialMinistry) {
                            excludingmin_1.push(min);
                        }
                    }
                    _a.label = 4;
                case 4:
                    _i++;
                    return [3 /*break*/, 2];
                case 5:
                    leftmins = ministries.filter(function (x) { return !excludingmin_1.includes(x); });
                    setMinistryDropdown(leftmins);
                    return [3 /*break*/, 8];
                case 6:
                    error_1 = _a.sent();
                    console.log("Error in getting min list", error_1);
                    return [3 /*break*/, 8];
                case 7:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    }); };
    var getCountryList = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, alpha2Names;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, get("national/organisation/countries")];
                case 1:
                    response = _a.sent();
                    if (response.data) {
                        alpha2Names = response.data.map(function (item) {
                            return item.alpha2;
                        });
                        setCountries(alpha2Names);
                    }
                    return [2 /*return*/];
            }
        });
    }); };
    var getRegionList = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, regionNames, uniqueRegionNames, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingList(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/organisation/regions", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "lang",
                                    operation: "=",
                                    value: "fr",
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        regionNames = response.data.map(function (item) { return item.regionName; });
                        uniqueRegionNames = Array.from(new Set(regionNames));
                        setRegionsList(__spreadArray([t("national")], uniqueRegionNames, true));
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_2 = _a.sent();
                    console.log("Error in getting regions list", error_2);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getGovDep = function (val) { return __awaiter(void 0, void 0, void 0, function () {
        var response, existDep, i, departName, error_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingList(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 200,
                            filterAnd: [
                                {
                                    key: "ministry",
                                    operation: "=",
                                    value: val,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        existDep = [];
                        for (i in response.data) {
                            if (response.data[i].govDep && response.data[i].govDep.length > 0) {
                                departName = Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(response.data[i].govDep)];
                                if (response.data[i].govDep !== intialGovDep) {
                                    existDep.push(departName);
                                }
                                else {
                                    continue;
                                }
                            }
                        }
                        setexistGovdep(existDep);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_3 = _a.sent();
                    console.log("Error in getting exist Government Department list", error_3);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        var _a, _b, _c, _d, _e, _f;
        setIsUpdate((state === null || state === void 0 ? void 0 : state.record) ? true : false);
        getCountryList();
        getRegionList();
        getMinistryList();
        if ((_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.logo) {
            setFileList([
                {
                    uid: "1",
                    name: "".concat((_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.name, ".png"),
                    status: "done",
                    url: (_c = state === null || state === void 0 ? void 0 : state.record) === null || _c === void 0 ? void 0 : _c.logo,
                    type: "image/png",
                },
            ]);
        }
        if ((_d = state === null || state === void 0 ? void 0 : state.record) === null || _d === void 0 ? void 0 : _d.ministry) {
            var key = Object.keys(exports.Ministry)[Object.values(exports.Ministry).indexOf((_e = state === null || state === void 0 ? void 0 : state.record) === null || _e === void 0 ? void 0 : _e.ministry)];
            setSelectedMinistry(key);
            getGovDep((_f = state === null || state === void 0 ? void 0 : state.record) === null || _f === void 0 ? void 0 : _f.ministry);
        }
    }, []);
    var normFile = function (e) {
        if (Array.isArray(e)) {
            return e;
        }
        return e === null || e === void 0 ? void 0 : e.fileList;
    };
    var nextOne = function (val) {
        setCurrent(current + 1);
        setStepOneData(val);
    };
    var prevOne = function () {
        setCurrent(current - 1);
    };
    var onFinishStepOne = function (values) {
        nextOne(values);
    };
    var onChangeRegion = function (values) {
        if (values.includes(t("national"))) {
            var buyerCountryValues = regionsList;
            var newBuyerValues = buyerCountryValues === null || buyerCountryValues === void 0 ? void 0 : buyerCountryValues.filter(function (item) { return item !== t("national"); });
            formOne.setFieldValue("regions", __spreadArray([], newBuyerValues, true));
        }
    };
    var onFinishStepTwo = function (values) { return __awaiter(void 0, void 0, void 0, function () {
        var requestData, logoBase64, logoUrls, response, response, error_4;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    requestData = __assign(__assign({}, values), { role: "Admin", company: __assign({}, stepOneData) });
                    setLoading(true);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 7, 8, 9]);
                    if (requestData.phoneNo && requestData.phoneNo.length > 4) {
                        requestData.phoneNo = PhoneInput.formatPhoneNumberIntl(requestData.phoneNo);
                    }
                    else {
                        requestData.phoneNo = undefined;
                    }
                    requestData.company.phoneNo = PhoneInput.formatPhoneNumberIntl(requestData.company.phoneNo);
                    if (requestData.company.website) {
                        requestData.company.website = "https://" + requestData.company.website;
                    }
                    else {
                        requestData.company.website = undefined;
                    }
                    return [4 /*yield*/, getBase64((_b = (_a = requestData === null || requestData === void 0 ? void 0 : requestData.company) === null || _a === void 0 ? void 0 : _a.logo[0]) === null || _b === void 0 ? void 0 : _b.originFileObj)];
                case 2:
                    logoBase64 = _c.sent();
                    logoUrls = logoBase64.split(",");
                    requestData.company.logo = logoUrls[1];
                    if (companyRole === exports.CompanyRole.MINISTRY) {
                        requestData.company.name =
                            "Ministry of " + requestData.company.ministry;
                    }
                    if (!isGuest) return [3 /*break*/, 4];
                    return [4 /*yield*/, post("national/user/register", requestData)];
                case 3:
                    response = _c.sent();
                    if (response.status === 200 || response.status === 201) {
                        antd.message.open({
                            type: "success",
                            content: t("companyRegisteredSuccess"),
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        onNavigateToHome();
                        setLoading(false);
                    }
                    return [3 /*break*/, 6];
                case 4: return [4 /*yield*/, post("national/user/add", requestData)];
                case 5:
                    response = _c.sent();
                    if (response.status === 200 || response.status === 201) {
                        if (isUpdate) {
                            setUserInfo({
                                companyLogo: response.data.logo,
                            });
                        }
                        antd.message.open({
                            type: "success",
                            content: t("companyAddedSuccess"),
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        onNavigateToCompanyManagement();
                        setLoading(false);
                    }
                    _c.label = 6;
                case 6: return [3 /*break*/, 9];
                case 7:
                    error_4 = _c.sent();
                    antd.message.open({
                        type: "error",
                        content: "".concat(error_4.message),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 9];
                case 8:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 9: return [2 /*return*/];
            }
        });
    }); };
    var onUpdateCompany = function () { return __awaiter(void 0, void 0, void 0, function () {
        var formOneValues, values, key, logoBase64, logoUrls, response, error_5;
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
        return __generator(this, function (_o) {
            switch (_o.label) {
                case 0:
                    setLoading(true);
                    formOneValues = formOne.getFieldsValue();
                    formOneValues.phoneNo = PhoneInput.formatPhoneNumberIntl(formOneValues.phoneNo);
                    _o.label = 1;
                case 1:
                    _o.trys.push([1, 5, , 6]);
                    values = {};
                    if (regionField) {
                        values = {
                            companyId: (_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.companyId,
                            name: formOneValues.name,
                            email: formOneValues.email,
                            phoneNo: formOneValues.phoneNo,
                            address: formOneValues.address,
                            regions: formOneValues.regions,
                            companyRole: (_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.companyRole,
                        };
                    }
                    else {
                        values = {
                            companyId: (_c = state === null || state === void 0 ? void 0 : state.record) === null || _c === void 0 ? void 0 : _c.companyId,
                            name: formOneValues.name,
                            email: formOneValues.email,
                            phoneNo: formOneValues.phoneNo,
                            address: formOneValues.address,
                            companyRole: (_d = state === null || state === void 0 ? void 0 : state.record) === null || _d === void 0 ? void 0 : _d.companyRole,
                        };
                    }
                    if (((_e = state === null || state === void 0 ? void 0 : state.record) === null || _e === void 0 ? void 0 : _e.companyRole) !== exports.CompanyRole.GOVERNMENT &&
                        ((_f = state === null || state === void 0 ? void 0 : state.record) === null || _f === void 0 ? void 0 : _f.companyRole) !== exports.CompanyRole.MINISTRY) {
                        values.taxId = formOneValues.taxId;
                        values.paymentId = formOneValues.paymentId;
                    }
                    if (((_g = state === null || state === void 0 ? void 0 : state.record) === null || _g === void 0 ? void 0 : _g.companyRole) === exports.CompanyRole.MINISTRY ||
                        ((_h = state === null || state === void 0 ? void 0 : state.record) === null || _h === void 0 ? void 0 : _h.companyRole) === exports.CompanyRole.GOVERNMENT) {
                        if (formOneValues.govDep in exports.GovDepartment) {
                            key = formOneValues.govDep;
                            values.govDep = exports.GovDepartment[key];
                        }
                        else {
                            values.govDep = formOneValues.govDep;
                        }
                        values.ministry = formOneValues.ministry;
                    }
                    if (((_j = state === null || state === void 0 ? void 0 : state.record) === null || _j === void 0 ? void 0 : _j.companyRole) === exports.CompanyRole.MINISTRY) {
                        values.sectoralScope = formOneValues.sectoralScope;
                        values.nameOfMinister = formOneValues.nameOfMinister;
                        values.name = "Ministry of " + formOneValues.ministry;
                    }
                    if (((_k = state === null || state === void 0 ? void 0 : state.record) === null || _k === void 0 ? void 0 : _k.companyRole) === exports.CompanyRole.GOVERNMENT) {
                        values.omgePercentage = Math.round(Number(formOneValues.omgePercentage));
                    }
                    if (((_l = state === null || state === void 0 ? void 0 : state.record) === null || _l === void 0 ? void 0 : _l.companyRole) === exports.CompanyRole.GOVERNMENT) {
                        values.nationalSopValue = Math.floor(Number(formOneValues.nationalSopValue));
                    }
                    if (formOneValues.website) {
                        values.website = "https://" + formOneValues.website;
                    }
                    else {
                        values.website = undefined;
                    }
                    if (!formOneValues.logo) return [3 /*break*/, 3];
                    if (!(formOneValues.logo.length !== 0)) return [3 /*break*/, 3];
                    return [4 /*yield*/, getBase64((_m = formOneValues.logo[0]) === null || _m === void 0 ? void 0 : _m.originFileObj)];
                case 2:
                    logoBase64 = _o.sent();
                    logoUrls = logoBase64.split(",");
                    values.logo = logoUrls[1];
                    _o.label = 3;
                case 3: return [4 /*yield*/, put("national/organisation/update", values)];
                case 4:
                    response = _o.sent();
                    if (response.status === 200 || response.status === 201) {
                        setUserInfo({
                            companyLogo: response.data.logo,
                        });
                        antd.message.open({
                            type: "success",
                            content: t("companyUpdatedSuccess"),
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        onNavigateToCompanyManagement();
                    }
                    setLoading(false);
                    return [3 /*break*/, 6];
                case 5:
                    error_5 = _o.sent();
                    antd.message.open({
                        type: "error",
                        content: "".concat(t("errorInUpdatingCompany"), " ").concat(error_5.message),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 6];
                case 6: return [2 /*return*/];
            }
        });
    }); };
    var onCancel = function () {
        onNavigateToCompanyManagement();
    };
    var onChangeCompanyRole = function (event) {
        var value = event.target.value;
        setCompanyRole(value);
    };
    var CompanyDetailsForm = function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
        var companyRoleClassName = companyRole === exports.CompanyRole.CERTIFIER
            ? "certifier"
            : companyRole === exports.CompanyRole.PROGRAMME_DEVELOPER
                ? "dev"
                : companyRole === exports.CompanyRole.MINISTRY
                    ? "minister"
                    : "gov";
        return (React.createElement("div", { className: "company-details-form-container" },
            React.createElement("div", { className: "company-details-form" },
                React.createElement(antd.Form, { name: "company-details", className: "company-details-form", layout: "vertical", requiredMark: true, form: formOne, onFinish: isUpdate ? onUpdateCompany : onFinishStepOne },
                    React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                        React.createElement(antd.Col, { xl: 12, md: 24 },
                            React.createElement("div", { className: "details-part-one" },
                                companyRole !== exports.CompanyRole.MINISTRY && (React.createElement(antd.Form.Item, { label: t("addCompany:name"), name: "name", initialValue: (_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.name, rules: [
                                        {
                                            required: true,
                                            message: "",
                                        },
                                        {
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                return __generator(this, function (_a) {
                                                    if (String(value).trim() === "" ||
                                                        String(value).trim() === undefined ||
                                                        value === null ||
                                                        value === undefined) {
                                                        throw new Error("".concat(t("addCompany:name"), " ").concat(t("isRequired")));
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] },
                                    React.createElement(antd.Input, { size: "large" }))),
                                companyRole !== exports.CompanyRole.MINISTRY
                                    ? (!isUpdate ||
                                        (isUpdate &&
                                            companyRole !== exports.CompanyRole.GOVERNMENT)) && (React.createElement(antd.Form.Item, { label: t("addCompany:taxId"), initialValue: (_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.taxId, name: "taxId", rules: [
                                            {
                                                required: true,
                                                message: "",
                                            },
                                            {
                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                    return __generator(this, function (_a) {
                                                        if (String(value).trim() === "" ||
                                                            String(value).trim() === undefined ||
                                                            value === null ||
                                                            value === undefined) {
                                                            throw new Error("".concat(t("addCompany:taxId"), " ").concat(t("isRequired")));
                                                        }
                                                        return [2 /*return*/];
                                                    });
                                                }); },
                                            },
                                        ] },
                                        React.createElement(antd.Input, { disabled: isUpdate, size: "large" })))
                                    : null,
                                companyRole !== exports.CompanyRole.MINISTRY
                                    ? (!isUpdate ||
                                        (isUpdate &&
                                            companyRole !== exports.CompanyRole.GOVERNMENT)) && (React.createElement(antd.Form.Item, { label: t("addCompany:paymentId"), initialValue: (_c = state === null || state === void 0 ? void 0 : state.record) === null || _c === void 0 ? void 0 : _c.paymentId, name: "paymentId", rules: [
                                            {
                                                required: true,
                                                message: "",
                                            },
                                            {
                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                    return __generator(this, function (_a) {
                                                        if (String(value).trim() === "" ||
                                                            String(value).trim() === undefined ||
                                                            value === null ||
                                                            value === undefined) {
                                                            throw new Error("".concat(t("addCompany:paymentId"), " ").concat(t("isRequired")));
                                                        }
                                                        return [2 /*return*/];
                                                    });
                                                }); },
                                            },
                                        ] },
                                        React.createElement(antd.Input, { size: "large" })))
                                    : null,
                                companyRole !== exports.CompanyRole.GOVERNMENT && (React.createElement(antd.Form.Item, { label: t("addCompany:email"), name: "email", initialValue: (_d = state === null || state === void 0 ? void 0 : state.record) === null || _d === void 0 ? void 0 : _d.email, rules: [
                                        {
                                            required: true,
                                            message: "",
                                        },
                                        {
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                var val, reg, matches;
                                                return __generator(this, function (_a) {
                                                    if (String(value).trim() === "" ||
                                                        String(value).trim() === undefined ||
                                                        value === null ||
                                                        value === undefined) {
                                                        throw new Error("".concat(t("addCompany:email"), " ").concat(t("isRequired")));
                                                    }
                                                    else {
                                                        val = value.trim();
                                                        reg = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                                        matches = val.match(reg)
                                                            ? val.match(reg)
                                                            : [];
                                                        if (matches.length === 0) {
                                                            throw new Error("".concat(t("addCompany:email"), " ").concat(t("isInvalid")));
                                                        }
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] },
                                    React.createElement(antd.Input, { size: "large" }))),
                                (companyRole === exports.CompanyRole.MINISTRY ||
                                    companyRole === exports.CompanyRole.GOVERNMENT) && (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                    React.createElement(antd.Form.Item, { label: t("addCompany:ministry"), name: "ministry", initialValue: (_e = state === null || state === void 0 ? void 0 : state.record) === null || _e === void 0 ? void 0 : _e.ministry, rules: [
                                            {
                                                required: true,
                                                message: "".concat(t("addCompany:ministry"), " ").concat(t("isRequired")),
                                            },
                                        ] }, (companyRole !== exports.CompanyRole.GOVERNMENT &&
                                        (ministryDropdown &&
                                            ministryDropdown.length > 0)) ? (React.createElement(antd.Select, { size: "large", onChange: onChangeMinistry }, ministryDropdown.map(function (ministry) { return (React.createElement(antd.Select.Option, { value: ministry }, ministry)); }))) : (React.createElement(antd.Select, { size: "large", disabled: true }))),
                                    companyRole === exports.CompanyRole.GOVERNMENT && (React.createElement(antd.Form.Item, { label: t("addCompany:email"), name: "email", initialValue: (_f = state === null || state === void 0 ? void 0 : state.record) === null || _f === void 0 ? void 0 : _f.email, rules: [
                                            {
                                                required: true,
                                                message: "",
                                            },
                                            {
                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                    var val, reg, matches;
                                                    return __generator(this, function (_a) {
                                                        if (String(value).trim() === "" ||
                                                            String(value).trim() === undefined ||
                                                            value === null ||
                                                            value === undefined) {
                                                            throw new Error("".concat(t("addCompany:email"), " ").concat(t("isRequired")));
                                                        }
                                                        else {
                                                            val = value.trim();
                                                            reg = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                                            matches = val.match(reg)
                                                                ? val.match(reg)
                                                                : [];
                                                            if (matches.length === 0) {
                                                                throw new Error("".concat(t("addCompany:email"), " ").concat(t("isInvalid")));
                                                            }
                                                        }
                                                        return [2 /*return*/];
                                                    });
                                                }); },
                                            },
                                        ] },
                                        React.createElement(antd.Input, { size: "large" }))),
                                    companyRole === exports.CompanyRole.MINISTRY && (React.createElement(antd.Form.Item, { label: t("addCompany:ministerName"), name: "nameOfMinister", initialValue: (_g = state === null || state === void 0 ? void 0 : state.record) === null || _g === void 0 ? void 0 : _g.nameOfMinister, rules: [
                                            {
                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                    return __generator(this, function (_a) {
                                                        if (String(value).trim() === "" ||
                                                            String(value).trim() === undefined ||
                                                            value === null ||
                                                            value === undefined) {
                                                            throw new Error("".concat(t("addCompany:ministerName"), " ").concat(t("isRequired")));
                                                        }
                                                        return [2 /*return*/];
                                                    });
                                                }); },
                                            },
                                        ] },
                                        React.createElement(antd.Input, { size: "large" }))))),
                                React.createElement(antd.Form.Item, { className: "website", label: t("addCompany:website"), initialValue: (_j = (_h = state === null || state === void 0 ? void 0 : state.record) === null || _h === void 0 ? void 0 : _h.website) === null || _j === void 0 ? void 0 : _j.split("://")[1], name: "website", rules: [
                                        {
                                            required: false,
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                return __generator(this, function (_a) {
                                                    if (String(value).trim() !== "" ||
                                                        String(value).trim() !== undefined ||
                                                        value !== null ||
                                                        value !== undefined) {
                                                        if (value && !validator.isURL("https://" + value))
                                                            throw new Error("".concat(t("addCompany:website"), " ").concat(t("isInvalid")));
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ], getValueFromEvent: function (event) { var _a; return (_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.value.trim(); } },
                                    React.createElement(antd.Input, { addonBefore: "https://", size: "large" })),
                                companyRole === exports.CompanyRole.MINISTRY && (React.createElement(antd.Form.Item, { name: "address", label: t("addCompany:addresss"), initialValue: (_k = state === null || state === void 0 ? void 0 : state.record) === null || _k === void 0 ? void 0 : _k.address, rules: [
                                        { required: true, message: "" },
                                        {
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                return __generator(this, function (_a) {
                                                    if (String(value).trim() === "" ||
                                                        String(value).trim() === undefined ||
                                                        value === null ||
                                                        value === undefined) {
                                                        throw new Error("".concat(t("addCompany:addresss"), " ").concat(t("isRequired")));
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] },
                                    React.createElement(antd.Input.TextArea, { rows: 3, maxLength: 100 }))),
                                React.createElement(antd.Form.Item, { name: "logo", label: t("addCompany:companyLogoWithType"), valuePropName: "fileList", getValueFromEvent: normFile, required: true, rules: [
                                        {
                                            validator: function (rule, file) { return __awaiter(void 0, void 0, void 0, function () {
                                                var isCorrectFormat;
                                                var _a, _b, _c, _d, _e;
                                                return __generator(this, function (_f) {
                                                    if (file === null || file === undefined) {
                                                        if (!((_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.logo))
                                                            throw new Error("".concat(t("addCompany:companyLogo"), " ").concat(t("isRequired")));
                                                    }
                                                    else {
                                                        if (file.length === 0) {
                                                            throw new Error("".concat(t("addCompany:companyLogo"), " ").concat(t("isRequired")));
                                                        }
                                                        else {
                                                            isCorrectFormat = false;
                                                            if (((_b = file[0]) === null || _b === void 0 ? void 0 : _b.type) === "image/png") {
                                                                isCorrectFormat = true;
                                                            }
                                                            else if (((_c = file[0]) === null || _c === void 0 ? void 0 : _c.type) === "image/jpeg") {
                                                                isCorrectFormat = true;
                                                            }
                                                            else if (((_d = file[0]) === null || _d === void 0 ? void 0 : _d.type) === "image/svg") {
                                                                isCorrectFormat = true;
                                                            }
                                                            if (!isCorrectFormat) {
                                                                throw new Error("".concat(t("unsupportedFormat")));
                                                            }
                                                            else if (((_e = file[0]) === null || _e === void 0 ? void 0 : _e.size) > maximumImageSize) {
                                                                // default size format of files would be in bytes -> 1MB = 1000000bytes
                                                                throw new Error("".concat(t("maxUploadSize")));
                                                            }
                                                        }
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] },
                                    React.createElement(antd.Upload, { beforeUpload: function (file) {
                                            return false;
                                        }, className: "logo-upload-section", name: "logo", action: "/upload.do", listType: "picture", multiple: false, defaultFileList: fileList, maxCount: 1 },
                                        React.createElement(antd.Button, { size: "large", icon: React.createElement(icons.UploadOutlined, null) }, t("addCompany:upload")))),
                                companyRole === exports.CompanyRole.GOVERNMENT && (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                    React.createElement(antd.Space, { wrap: true, style: {
                                            display: "flex",
                                            marginBottom: 8,
                                        }, align: "center", size: "large" },
                                        React.createElement(antd.Form.Item, { style: { width: "100%" }, name: "nationalSopValue", label: t("addCompany:nationalSopValue"), initialValue: (_l = state === null || state === void 0 ? void 0 : state.record) === null || _l === void 0 ? void 0 : _l.nationalSopValue, rules: [
                                                { required: true, message: "" },
                                                {
                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                        return __generator(this, function (_a) {
                                                            if (String(value).trim() === "" ||
                                                                String(value).trim() === undefined ||
                                                                value === null ||
                                                                value === undefined) {
                                                                throw new Error("".concat(t("addCompany:nationalSopValue"), " s").concat(t("isRequired")));
                                                            }
                                                            return [2 /*return*/];
                                                        });
                                                    }); },
                                                },
                                            ] },
                                            React.createElement(antd.InputNumber, { style: { width: "100%" }, size: "large", min: 0, max: 99, formatter: function (value) { return "".concat(value, "%"); }, parser: function (value) { return value.replace("%", ""); }, disabled: systemType == exports.CarbonSystemType.REGISTRY }))))))),
                        React.createElement(antd.Col, { xl: 12, md: 24 },
                            React.createElement("div", { className: "details-part-two" },
                                React.createElement(antd.Form.Item, { className: "role-group", label: t("addCompany:role"), name: "companyRole", initialValue: companyRole, rules: [
                                        {
                                            required: true,
                                            message: "".concat(t("addCompany:role"), " ").concat(t("isRequired")),
                                        },
                                    ] },
                                    React.createElement(antd.Radio.Group, { size: "large", disabled: isUpdate, onChange: onChangeCompanyRole, style: isGuest && { justifyContent: "start" } }, isUpdate ? (React.createElement("div", { className: "".concat(companyRoleClassName, "-radio-container") },
                                        React.createElement(antd.Radio.Button, { className: companyRoleClassName, value: companyRole },
                                            companyRole === exports.CompanyRole.CERTIFIER ? (React.createElement(icons.SafetyOutlined, { className: "role-icons" })) : companyRole ===
                                                exports.CompanyRole.PROGRAMME_DEVELOPER ? (React.createElement(icons.ExperimentOutlined, { className: "role-icons" })) : companyRole === exports.CompanyRole.MINISTRY ? (React.createElement(icons.AuditOutlined, { className: "role-icons" })) : (React.createElement(icons.BankOutlined, { className: "role-icons" })),
                                            (companyRole === exports.CompanyRole.PROGRAMME_DEVELOPER) ? "Developer" : companyRole))) : (React.createElement(React.Fragment, null,
                                        React.createElement("div", { className: "certifier-radio-container", style: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                exports.CompanyRole.MINISTRY
                                                ? {
                                                    width: "45%",
                                                }
                                                : {} },
                                            React.createElement(antd.Tooltip, { placement: "top", title: t("addCompany:viewerToolTip") },
                                                React.createElement(antd.Radio.Button, { className: "certifier", value: "Certifier" },
                                                    React.createElement(icons.SafetyOutlined, { className: "role-icons" }),
                                                    t("addCompany:certifier")))),
                                        React.createElement("div", { className: "dev-radio-container", style: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                exports.CompanyRole.MINISTRY
                                                ? {
                                                    width: "45%",
                                                    marginLeft: isGuest ? "30px" : 0,
                                                }
                                                : { marginLeft: isGuest ? "30px" : 0 } },
                                            React.createElement(antd.Tooltip, { placement: "top", title: t("addCompany:programmeDeveleperToolTip") },
                                                React.createElement(antd.Radio.Button, { className: "dev", value: "ProgrammeDeveloper" },
                                                    React.createElement(icons.ExperimentOutlined, { className: "role-icons" }),
                                                    t("addCompany:programmeDeveleper")))),
                                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !==
                                            exports.CompanyRole.MINISTRY &&
                                            !isGuest && (React.createElement("div", { className: "minister-radio-container" }, ministryDropdown.length > 0 ? (React.createElement(antd.Tooltip, { placement: "top", title: t("addCompany:ministryToolTip") },
                                            React.createElement(antd.Radio.Button, { className: "minister", value: "Ministry" },
                                                React.createElement(icons.AuditOutlined, { className: "role-icons" }),
                                                t("addCompany:min")))) : (React.createElement(antd.Tooltip, { placement: "top", title: t("addCompany:allmincreated") },
                                            React.createElement(antd.Radio.Button, { className: "minister", value: "Ministry", disabled: true },
                                                React.createElement(icons.AuditOutlined, { className: "role-icons" }),
                                                t("addCompany:min")))))))))),
                                (companyRole === exports.CompanyRole.MINISTRY ||
                                    companyRole === exports.CompanyRole.GOVERNMENT) && (React.createElement(antd.Form.Item, { label: t("addCompany:govdep"), name: "govDep", initialValue: Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(intialGovDep)], rules: [
                                        {
                                            required: true,
                                            message: "".concat(t("addCompany:govdep"), " ").concat(t("isRequired")),
                                        },
                                        {
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                var val;
                                                return __generator(this, function (_a) {
                                                    val = Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(value)];
                                                    if (val &&
                                                        val.length > 0 &&
                                                        selectedGovDepatments &&
                                                        !selectedGovDepatments.includes(val)) {
                                                        throw new Error("".concat(t("addCompany:govdepnotexist")));
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] }, (companyRole !== exports.CompanyRole.GOVERNMENT &&
                                    (selectedGovDepatments &&
                                        selectedGovDepatments.length > 0)) ? (React.createElement(antd.Select, { size: "large" }, selectedGovDepatments === null || selectedGovDepatments === void 0 ? void 0 : selectedGovDepatments.map(function (val) {
                                    if (val in exports.GovDepartment) {
                                        var key = val;
                                        return (React.createElement(antd.Select.Option, { key: exports.GovDepartment[key], value: exports.GovDepartment[key] }, val));
                                    }
                                    return null;
                                }))) : (React.createElement(antd.Select, { size: "large", disabled: true })))),
                                companyRole === exports.CompanyRole.MINISTRY && (React.createElement(antd.Form.Item, { label: t("addCompany:sectoralScope"), name: "sectoralScope", rules: [
                                        {
                                            required: true,
                                            message: "".concat(t("addCompany:sectoralScope"), " ").concat(t("isRequired")),
                                        },
                                    ], initialValue: (_m = state === null || state === void 0 ? void 0 : state.record) === null || _m === void 0 ? void 0 : _m.sectoralScope },
                                    React.createElement(antd.Select, { mode: "multiple", size: "large", maxTagCount: 2, allowClear: true }, Object.entries(exports.SectoralScope).map(function (_a) {
                                        var key = _a[0], value = _a[1];
                                        return (React.createElement(antd.Select.Option, { key: value, value: value }, key));
                                    })))),
                                React.createElement(antd.Form.Item, { name: "phoneNo", label: t("addCompany:phoneNo"), initialValue: (_o = state === null || state === void 0 ? void 0 : state.record) === null || _o === void 0 ? void 0 : _o.phoneNo, rules: [
                                        {
                                            required: true,
                                            message: "",
                                        },
                                        {
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                var phoneNo;
                                                return __generator(this, function (_a) {
                                                    if (String(value).trim() === "" ||
                                                        String(value).trim() === undefined ||
                                                        value === null ||
                                                        value === undefined) {
                                                        throw new Error("".concat(t("addCompany:phoneNo"), " ").concat(t("isRequired")));
                                                    }
                                                    else {
                                                        phoneNo = PhoneInput.formatPhoneNumber(String(value));
                                                        if (String(value).trim() !== "") {
                                                            if (phoneNo === null ||
                                                                phoneNo === "" ||
                                                                phoneNo === undefined) {
                                                                throw new Error("".concat(t("addCompany:phoneNo"), " ").concat(t("isRequired")));
                                                            }
                                                            else {
                                                                if (!PhoneInput.isPossiblePhoneNumber(String(value))) {
                                                                    throw new Error("".concat(t("addCompany:phoneNo"), " ").concat(t("isInvalid")));
                                                                }
                                                            }
                                                        }
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] },
                                    React.createElement(PhoneInput, { placeholder: t("addCompany:phoneNo"), international: true, value: PhoneInput.formatPhoneNumberIntl(contactNoInput), defaultCountry: "CI", countryCallingCodeEditable: false, onChange: function (v) { }, countries: countries })),
                                regionField && (React.createElement(antd.Form.Item, { label: t("addCompany:region"), name: "regions", initialValue: (_p = state === null || state === void 0 ? void 0 : state.record) === null || _p === void 0 ? void 0 : _p.regions, rules: [
                                        {
                                            required: true,
                                            message: "".concat(t("addCompany:region"), " ").concat(t("isRequired")),
                                        },
                                    ] },
                                    React.createElement(antd.Select, { mode: "multiple", size: "large", maxTagCount: 2, onChange: onChangeRegion, loading: loadingList, allowClear: true }, regionsList.map(function (region) { return (React.createElement(antd.Select.Option, { value: region }, region)); })))),
                                companyRole !== exports.CompanyRole.MINISTRY && (React.createElement(antd.Form.Item, { name: "address", label: t("addCompany:addresss"), initialValue: (_q = state === null || state === void 0 ? void 0 : state.record) === null || _q === void 0 ? void 0 : _q.address, rules: [
                                        { required: true, message: "" },
                                        {
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                return __generator(this, function (_a) {
                                                    if (String(value).trim() === "" ||
                                                        String(value).trim() === undefined ||
                                                        value === null ||
                                                        value === undefined) {
                                                        throw new Error("".concat(t("addCompany:addresss"), " ").concat(t("isRequired")));
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] },
                                    React.createElement(antd.Input.TextArea, { rows: 3, maxLength: 100 }))),
                                companyRole === exports.CompanyRole.GOVERNMENT &&
                                    systemType !== exports.CarbonSystemType.MRV && (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                    React.createElement(antd.Space, { wrap: true, style: {
                                            display: "flex",
                                            marginBottom: 8,
                                        }, align: "center", size: "large" },
                                        React.createElement(antd.Form.Item, { style: { width: "100%" }, name: "omgePercentage", label: t("addCompany:omgePercentage"), initialValue: (_r = state === null || state === void 0 ? void 0 : state.record) === null || _r === void 0 ? void 0 : _r.omgePercentage, rules: [
                                                { required: true, message: "" },
                                                {
                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                        return __generator(this, function (_a) {
                                                            if (String(value).trim() === "" ||
                                                                String(value).trim() === undefined ||
                                                                value === null ||
                                                                value === undefined) {
                                                                throw new Error("".concat(t("addCompany:omgePercentage"), "  ").concat(t("isRequired")));
                                                            }
                                                            return [2 /*return*/];
                                                        });
                                                    }); },
                                                },
                                            ] },
                                            React.createElement(antd.InputNumber, { style: { width: "100%" }, size: "large", min: 0, max: 99, formatter: function (value) {
                                                    return "".concat(value ? Math.round(value) : "", "%");
                                                }, parser: function (value) { return value.replace("%", ""); } })))))))),
                    React.createElement("div", { className: "steps-actions" }, isUpdate ? (React.createElement(antd.Row, null,
                        React.createElement(antd.Button, { loading: loading, onClick: onCancel }, t("addCompany:cancel")),
                        React.createElement(antd.Button, { loading: loading, className: "mg-left-1", type: "primary", htmlType: "submit" }, t("addCompany:submit")))) : (current === 0 && (React.createElement(antd.Button, { type: "primary", htmlType: "submit" }, t("addCompany:next")))))))));
    };
    var CompanyAdminDetailsForm = function () {
        return (React.createElement("div", { className: "company-details-form-container" },
            React.createElement(antd.Form, { name: "company-admin-details", className: "company-details-form", layout: "vertical", requiredMark: true, form: formTwo, onFinish: onFinishStepTwo },
                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                    React.createElement(antd.Col, { xl: 12, md: 24 },
                        React.createElement("div", { className: "details-part-one" },
                            React.createElement(antd.Form.Item, { label: t("addCompany:name"), name: "name", rules: [
                                    {
                                        required: true,
                                        message: "",
                                    },
                                    {
                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                            return __generator(this, function (_a) {
                                                if (String(value).trim() === "" ||
                                                    String(value).trim() === undefined ||
                                                    value === null ||
                                                    value === undefined) {
                                                    throw new Error("".concat(t("addCompany:name"), " ").concat(t("isRequired")));
                                                }
                                                return [2 /*return*/];
                                            });
                                        }); },
                                    },
                                ] },
                                React.createElement(antd.Input, { size: "large" })),
                            React.createElement(antd.Form.Item, { name: "phoneNo", label: t("addCompany:phoneNo"), rules: [
                                    {
                                        required: false,
                                    },
                                    {
                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                            var phoneNo;
                                            return __generator(this, function (_a) {
                                                phoneNo = PhoneInput.formatPhoneNumber(String(value));
                                                if (String(value).trim() !== "") {
                                                    if (((String(value).trim() !== "" &&
                                                        String(value).trim() !== undefined &&
                                                        value !== null &&
                                                        value !== undefined) &&
                                                        (phoneNo !== null &&
                                                            phoneNo !== "" &&
                                                            phoneNo !== undefined) &&
                                                        !PhoneInput.isPossiblePhoneNumber(String(value))) || (value === null || value === void 0 ? void 0 : value.length) > 17) {
                                                        throw new Error("".concat(t("addCompany:phoneNo"), " ").concat(t("isInvalid")));
                                                    }
                                                }
                                                return [2 /*return*/];
                                            });
                                        }); },
                                    },
                                ] },
                                React.createElement(PhoneInput, { placeholder: t("addCompany:phoneNo"), international: true, value: PhoneInput.formatPhoneNumberIntl(contactNoInput), defaultCountry: "LK", countryCallingCodeEditable: false, onChange: function (v) { } })))),
                    React.createElement(antd.Col, { xl: 12, md: 24 },
                        React.createElement("div", { className: "details-part-two" },
                            React.createElement(antd.Form.Item, { label: t("addCompany:email"), name: "email", rules: [
                                    {
                                        required: true,
                                        message: "",
                                    },
                                    {
                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                            var val, reg, matches;
                                            return __generator(this, function (_a) {
                                                if (String(value).trim() === "" ||
                                                    String(value).trim() === undefined ||
                                                    value === null ||
                                                    value === undefined) {
                                                    throw new Error("".concat(t("addCompany:email"), " ").concat(t("isRequired")));
                                                }
                                                else {
                                                    val = value.trim();
                                                    reg = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                                    matches = val.match(reg) ? val.match(reg) : [];
                                                    if (matches.length === 0) {
                                                        throw new Error("".concat(t("addCompany:email"), " ").concat(t("isInvalid")));
                                                    }
                                                }
                                                return [2 /*return*/];
                                            });
                                        }); },
                                    },
                                ] },
                                React.createElement(antd.Input, { size: "large" }))))),
                React.createElement("div", { className: "steps-actions" },
                    current === 1 && (state === null || state === void 0 ? void 0 : state.record) ? (React.createElement(antd.Button, { className: "mg-left-1", type: "primary", onClick: onUpdateCompany, loading: loading }, "UPDATE")) : (React.createElement(antd.Button, { className: "mg-left-1", type: "primary", htmlType: "submit", loading: loading }, t("addCompany:submit"))),
                    current === 1 && (React.createElement(antd.Button, { onClick: function () { return prevOne(); }, loading: loading }, t("addCompany:back")))))));
    };
    return (React.createElement("div", { className: "add-company-main-container" },
        React.createElement("div", { className: "title-container" },
            React.createElement("div", { className: "main" }, isUpdate
                ? t("addCompany:editCompany")
                : t("addCompany:addNewCompany")),
            React.createElement("div", { className: "sub" }, isUpdate
                ? t("addCompany:editCompanySub")
                : t("addCompany:addCompanySub"))),
        React.createElement("div", { className: "adding-section" }, isUpdate ? (React.createElement(React.Fragment, null,
            React.createElement("div", { className: "step-title-container" },
                React.createElement("div", { className: "title" }, t("addCompany:companyDetailsTitle"))),
            React.createElement(CompanyDetailsForm, null))) : (React.createElement("div", { className: "form-section" },
            React.createElement(antd.Steps, { progressDot: true, direction: "vertical", current: current, items: [
                    {
                        title: (React.createElement("div", { className: "step-title-container" },
                            React.createElement("div", { className: "step-count" }, "01"),
                            React.createElement("div", { className: "title" }, t("addCompany:companyDetailsTitle")))),
                        description: current === 0 && React.createElement(CompanyDetailsForm, null),
                    },
                    {
                        title: (React.createElement("div", { className: "step-title-container" },
                            React.createElement("div", { className: "step-count" }, "02"),
                            React.createElement("div", { className: "title" }, t("addCompany:companyAdminDetailsTitle")))),
                        description: current === 1 && React.createElement(CompanyAdminDetailsForm, null),
                    },
                ] }))))));
};

var css_248z$u = ".company-profile {\n  padding: 0px 50px; }\n  .company-profile .company-name {\n    font-weight: 600; }\n  .company-profile .title-bar {\n    display: flex;\n    justify-content: space-between; }\n    .company-profile .title-bar .flex-display {\n      margin-left: 15px; }\n  .company-profile .card-container {\n    margin-bottom: 20px;\n    width: 100%;\n    border-radius: 10px; }\n  .company-profile .mg-left-1 {\n    margin-left: 1rem; }\n  .company-profile .mg-top-1 {\n    margin-top: 1rem; }\n  .company-profile .mg-right-5 {\n    margin-right: 5rem; }\n  .company-profile .padding-top-1 {\n    padding-top: 1rem; }\n  .company-profile .padding-top-2 {\n    padding-top: 2rem; }\n  .company-profile .profile-img {\n    width: 200px; }\n  .company-profile .btn-danger {\n    color: #ff4d4f !important;\n    border-color: #ff8183 !important; }\n  .company-profile .btn-activate {\n    color: #008f39 !important;\n    border-color: #008f39 !important; }\n  .company-profile .ant-btn[disabled] {\n    border-color: #d9d9d9 !important;\n    background: #f5f5f5 !important;\n    color: #d9d9d9 !important; }\n  .company-profile .btn-approve {\n    color: white !important;\n    background-color: #008f39 !important; }\n  .company-profile .btn-reject {\n    color: #ff4d4f !important;\n    border-color: #ff4d4f !important;\n    background-color: white !important;\n    outline: auto !important; }\n";
styleInject(css_248z$u);

var CompanyRoleIcon = function (props) {
    var role = props.role;
    return (React.createElement("div", { style: { display: 'flex', alignItems: 'center' } },
        role === 'Government' ? (React.createElement(RoleIcon, { icon: React.createElement(icons.BankOutlined, null), bg: GovBGColor, color: GovColor })) : role === 'Certifier' ? (React.createElement(RoleIcon, { icon: React.createElement(icons.SafetyOutlined, null), bg: CertBGColor, color: CertColor })) : role === 'ProgrammeDeveloper' ? (React.createElement(RoleIcon, { icon: React.createElement(icons.ExperimentOutlined, null), bg: DevBGColor, color: DevColor })) : React.createElement(RoleIcon, { icon: React.createElement(icons.AuditOutlined, null), bg: MinBGColor, color: MinColor }),
        role === 'ProgrammeDeveloper' ? React.createElement("div", null, 'Developer') : React.createElement("div", null, role)));
};

var css_248z$t = ".company-profile {\n  padding: 0px 50px; }\n  .company-profile .company-name {\n    font-weight: 600; }\n  .company-profile .title-bar {\n    display: flex;\n    justify-content: space-between; }\n    .company-profile .title-bar .flex-display {\n      margin-left: 15px; }\n  .company-profile .card-container {\n    margin-bottom: 20px;\n    width: 100%;\n    border-radius: 10px; }\n  .company-profile .mg-left-1 {\n    margin-left: 1rem; }\n  .company-profile .mg-top-1 {\n    margin-top: 1rem; }\n  .company-profile .mg-right-5 {\n    margin-right: 5rem; }\n  .company-profile .padding-top-1 {\n    padding-top: 1rem; }\n  .company-profile .padding-top-2 {\n    padding-top: 2rem; }\n  .company-profile .profile-img {\n    width: 200px; }\n  .company-profile .btn-danger {\n    color: #ff4d4f !important;\n    border-color: #ff8183 !important; }\n  .company-profile .btn-activate {\n    color: #008f39 !important;\n    border-color: #008f39 !important; }\n  .company-profile .ant-btn[disabled] {\n    border-color: #d9d9d9 !important;\n    background: #f5f5f5 !important;\n    color: #d9d9d9 !important; }\n  .company-profile .btn-approve {\n    color: white !important;\n    background-color: #008f39 !important; }\n  .company-profile .btn-reject {\n    color: #ff4d4f !important;\n    border-color: #ff4d4f !important;\n    background-color: white !important;\n    outline: auto !important; }\n";
styleInject(css_248z$t);

var CompanyDetailsComponent = function (props) {
    var t = props.t, companyDetails = props.companyDetails; props.userDetails; var isLoading = props.isLoading, regionField = props.regionField, systemType = props.systemType;
    var getEnumKeysFromValues = function (values) {
        var enumKeys = [];
        for (var key in exports.SectoralScope) {
            if (values.includes(exports.SectoralScope[key])) {
                enumKeys.push(key);
            }
        }
        return enumKeys;
    };
    return (React.createElement(antd.Card, { className: "card-container" },
        React.createElement("div", { className: "info-view" },
            React.createElement("div", { className: "title" },
                React.createElement("span", { className: "title-icon" },
                    React.createElement(icons.BankOutlined, null)),
                React.createElement("span", { className: "title-text" }, t("companyDetails:organisationDetailsHeading"))),
            React.createElement(antd.Skeleton, { loading: isLoading, active: true },
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:name")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.name ? companyDetails.name : "-")),
                ((companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.companyRole) === exports.CompanyRole.GOVERNMENT ||
                    (companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.companyRole) === exports.CompanyRole.MINISTRY) && (React.createElement(React.Fragment, null,
                    React.createElement(antd.Row, { className: "field" },
                        React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:ministry")),
                        React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.ministry ? companyDetails.ministry : "-")),
                    React.createElement(antd.Row, { className: "field" },
                        React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:govDep")),
                        React.createElement(antd.Col, { span: 12, className: "field-value" }, (companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.govDep)
                            ? Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.govDep)]
                            : "-")))),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:taxId")),
                    React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" }, companyDetails.taxId &&
                        (companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.companyRole) !== exports.CompanyRole.GOVERNMENT
                        ? companyDetails.taxId
                        : "-")),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:paymentId")),
                    React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" }, companyDetails.paymentId
                        ? companyDetails.paymentId
                        : "-")),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:companyRole")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" },
                        React.createElement(CompanyRoleIcon, { role: companyDetails.companyRole }))),
                (companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.companyRole) === exports.CompanyRole.MINISTRY && (React.createElement(React.Fragment, null,
                    React.createElement(antd.Row, { className: "field" },
                        React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:ministerName")),
                        React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.nameOfMinister
                            ? companyDetails.nameOfMinister
                            : "-")),
                    React.createElement(antd.Row, { className: "field" },
                        React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:sectoralScope")),
                        React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.sectoralScope
                            ? getEnumKeysFromValues(companyDetails.sectoralScope).join(", ")
                            : "-")))),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:email")),
                    React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" }, companyDetails.email ? companyDetails.email : "-")),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:phoneNo")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.phoneNo ? companyDetails.phoneNo : "-")),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:website")),
                    React.createElement(antd.Col, { span: 12, className: "field-value ellipsis-overflow" }, companyDetails.website ? (React.createElement("a", { target: "blank", href: companyDetails.website }, companyDetails.website)) : ("-"))),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:address")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.address ? companyDetails.address : "-")),
                regionField && (React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:region")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.regions
                        ? companyDetails.regions.join(", ")
                        : "-"))),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:programmeCount")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.programmeCount
                        ? companyDetails.programmeCount
                        : "-")),
                React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:creditBalance")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.creditBalance
                        ? addCommSep(companyDetails.creditBalance)
                        : "-")),
                parseInt(companyDetails.state) === 0 ? (React.createElement(antd.Row, { className: "field" },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:remarks")),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.remarks
                        ? companyDetails.remarks
                        : "-"))) : (""),
                (companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.companyRole) === exports.CompanyRole.GOVERNMENT &&
                    systemType !== exports.CarbonSystemType.MRV && (React.createElement(React.Fragment, null,
                    React.createElement(antd.Row, { className: "field" },
                        React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:omgePercentage")),
                        React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.omgePercentage
                            ? companyDetails.omgePercentage
                            : "-")))),
                (companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.companyRole) === exports.CompanyRole.GOVERNMENT && (React.createElement(React.Fragment, null,
                    React.createElement(antd.Row, { className: "field" },
                        React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyDetails:nationalSopValue")),
                        React.createElement(antd.Col, { span: 12, className: "field-value" }, companyDetails.nationalSopValue
                            ? companyDetails.nationalSopValue
                            : "-"))))))));
};

var CompanyProfileComponent = function (props) {
    var t = props.t, useAbilityContext = props.useAbilityContext, useLocation = props.useLocation, onNavigateToCompanyManagement = props.onNavigateToCompanyManagement, onNavigateToCompanyEdit = props.onNavigateToCompanyEdit; props.regionField; var systemType = props.systemType;
    var _a = useConnection(), get = _a.get, put = _a.put, post = _a.post;
    var _b = React.useState(undefined), companyDetails = _b[0], setCompanyDetails = _b[1];
    var _c = React.useState(undefined), userDetails = _c[0], setUserDetails = _c[1];
    var state = useLocation().state;
    var _d = React.useState(true), isLoading = _d[0], setIsLoading = _d[1];
    var _e = React.useState({}), actionInfo = _e[0], setActionInfo = _e[1];
    var _f = React.useState(false), openDeauthorisationModal = _f[0], setOpenDeauthorisationModal = _f[1];
    var _g = React.useState(false), openReactivateModal = _g[0], setOpenReactivateModal = _g[1];
    var _h = React.useState(false), openApproveModal = _h[0], setOpenApproveModal = _h[1];
    var _j = React.useState(false), openRejectModal = _j[0], setOpenRejectModal = _j[1];
    var _k = React.useState(""), errorMsg = _k[0], setErrorMsg = _k[1];
    var _l = React.useState(""); _l[0]; var setUserRole = _l[1];
    var _m = React.useState(""); _m[0]; var setCompanyRole = _m[1];
    var ability = useAbilityContext();
    var getCompanyDetails = function (companyId) { return __awaiter(void 0, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    setIsLoading(true);
                    return [4 /*yield*/, get("national/organisation/profile?id=".concat(companyId))];
                case 1:
                    response = _a.sent();
                    if (response.data) {
                        setCompanyDetails(response.data);
                        setIsLoading(false);
                    }
                    return [3 /*break*/, 3];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var getUserDetails = function (companyId) { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setIsLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "companyId",
                                    operation: "=",
                                    value: companyId,
                                },
                                {
                                    key: "isPending",
                                    operation: "=",
                                    value: true,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        setUserDetails(response.data[0]);
                    }
                    setIsLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting users", error_1);
                    setIsLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        var _a, _b;
        if (!state) {
            onNavigateToCompanyManagement();
        }
        else {
            getCompanyDetails(state.record.companyId);
            var userRoleValue = localStorage.getItem("userRole");
            setUserRole(userRoleValue);
            setCompanyRole(localStorage.getItem("companyRole"));
            if (((_a = state.record) === null || _a === void 0 ? void 0 : _a.state) == "2" || ((_b = state.record) === null || _b === void 0 ? void 0 : _b.state) == "3") {
                getUserDetails(state.record.companyId);
            }
        }
    }, []);
    var onDeauthoriseOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var exception_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    return [4 /*yield*/, put("national/organisation/suspend?id=".concat(companyDetails.companyId), {
                            remarks: remarks,
                        })];
                case 1:
                    _a.sent();
                    setOpenDeauthorisationModal(false);
                    antd.message.open({
                        type: "success",
                        content: t("companyProfile:deauthorisationSuccess"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    getCompanyDetails(companyDetails.companyId);
                    return [3 /*break*/, 4];
                case 2:
                    exception_2 = _a.sent();
                    setErrorMsg(exception_2.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onReactivateOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var exception_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    return [4 /*yield*/, put("national/organisation/activate?id=".concat(companyDetails.companyId), {
                            remarks: remarks,
                        })];
                case 1:
                    _a.sent();
                    setOpenReactivateModal(false);
                    antd.message.open({
                        type: "success",
                        content: t("companyProfile:reactivationSuccess"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    getCompanyDetails(companyDetails.companyId);
                    return [3 /*break*/, 4];
                case 2:
                    exception_3 = _a.sent();
                    setErrorMsg(exception_3.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onApproveOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var exception_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    return [4 /*yield*/, put("national/organisation/approve?id=".concat(companyDetails.companyId), {
                            remarks: remarks,
                        })];
                case 1:
                    _a.sent();
                    setOpenApproveModal(false);
                    antd.message.open({
                        type: "success",
                        content: t("companyProfile:approvedSuccessfully"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    getCompanyDetails(companyDetails.companyId);
                    getUserDetails(companyDetails.companyId);
                    return [3 /*break*/, 4];
                case 2:
                    exception_4 = _a.sent();
                    setErrorMsg(exception_4.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onApproveOrgCanceled = function () {
        setOpenApproveModal(false);
    };
    var onRejectOrgConfirmed = function (remarks) { return __awaiter(void 0, void 0, void 0, function () {
        var exception_5;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    return [4 /*yield*/, put("national/organisation/reject?id=".concat(companyDetails.companyId), {
                            remarks: remarks,
                        })];
                case 1:
                    _a.sent();
                    setOpenRejectModal(false);
                    antd.message.open({
                        type: "success",
                        content: t("companyProfile:rejectedSuccessfully"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    getCompanyDetails(companyDetails.companyId);
                    return [3 /*break*/, 4];
                case 2:
                    exception_5 = _a.sent();
                    setErrorMsg(exception_5.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onRejectOrgCanceled = function () {
        setOpenRejectModal(false);
    };
    var onDeauthoriseOrgCanceled = function () {
        setOpenDeauthorisationModal(false);
    };
    var onReactivateOrgCanceled = function () {
        setOpenReactivateModal(false);
    };
    var onDeauthoriseOrganisation = function () {
        setActionInfo({
            action: "".concat(t("companyProfile:deauthorise")),
            headerText: "".concat(t("companyProfile:deauthoriseConfirmHeaderText")),
            text: "".concat(t("companyProfile:deauthoriseConfirmText")),
            type: "danger",
            icon: React.createElement(Icon__namespace.BuildingDash, null),
        });
        setErrorMsg("");
        setOpenDeauthorisationModal(true);
    };
    var onReActivateOrganisation = function () {
        setActionInfo({
            action: "".concat(t("companyProfile:reActivate")),
            headerText: "".concat(t("companyProfile:reActivateConfirmHeaderText")),
            text: "".concat(t("companyProfile:reActivateConfirmText")),
            type: "primary",
            icon: React.createElement(Icon__namespace.BuildingCheck, null),
        });
        setErrorMsg("");
        setOpenReactivateModal(true);
    };
    var onApproveOrganisation = function () {
        setActionInfo({
            action: "".concat(t("companyProfile:approve")),
            headerText: "".concat(t("companyProfile:approveConfirmHeaderText")),
            text: "".concat(t("companyProfile:approveConfirmText")),
            type: "primary",
            icon: React.createElement(Icon__namespace.ClipboardCheck, null),
        });
        setErrorMsg("");
        setOpenApproveModal(true);
    };
    var onRejectOrganisation = function () {
        setActionInfo({
            action: "".concat(t("companyProfile:reject")),
            headerText: "".concat(t("companyProfile:rejectConfirmHeaderText")),
            text: "".concat(t("companyProfile:rejectConfirmText")),
            type: "danger",
            icon: React.createElement(Icon__namespace.ClipboardX, null),
        });
        setErrorMsg("");
        setOpenRejectModal(true);
    };
    return (React.createElement("div", { className: "content-container company-profile" },
        React.createElement("div", { className: "title-bar" },
            React.createElement("div", null,
                React.createElement("div", { className: "body-title" }, t("companyProfile:title"))),
            React.createElement("div", { className: "flex-display" },
                ability.can(exports.Action.Delete, classTransformer.plainToClass(Company, companyDetails)) &&
                    !isLoading &&
                    parseInt(companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.state) === 1 ? (React.createElement(antd.Button, { danger: true, className: "btn-danger", onClick: onDeauthoriseOrganisation }, t("companyProfile:deauthorise"))) : (""),
                ability.can(exports.Action.Delete, classTransformer.plainToClass(Company, companyDetails)) &&
                    !isLoading &&
                    parseInt(companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.state) === 0 ? (React.createElement(antd.Button, { className: "btn-activate", onClick: onReActivateOrganisation }, t("companyProfile:reActivate"))) : (""),
                ability.can(exports.Action.Update, classTransformer.plainToClass(Company, companyDetails)) &&
                    !isLoading &&
                    companyDetails && (React.createElement(antd.Button, { className: "mg-left-1", type: "primary", onClick: function () { return onNavigateToCompanyEdit(companyDetails); } }, t("common:edit"))),
                parseInt(companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.state) === 2 &&
                    ability.can(exports.Action.Reject, classTransformer.plainToClass(Company, companyDetails)) &&
                    !isLoading &&
                    companyDetails && (React.createElement(antd.Button, { className: "btn-danger", onClick: onRejectOrganisation }, t("common:reject"))),
                (parseInt(companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.state) === 2 ||
                    parseInt(companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.state) === 3) &&
                    ability.can(exports.Action.Approve, classTransformer.plainToClass(Company, companyDetails)) &&
                    !isLoading &&
                    companyDetails && (React.createElement(antd.Button, { className: "mg-left-1", type: "primary", onClick: onApproveOrganisation }, t("common:approve"))))),
        !companyDetails && (React.createElement("div", { className: "content-body" },
            React.createElement(antd.Skeleton, { active: true, loading: true }))),
        companyDetails && (React.createElement("div", { className: "content-body" },
            React.createElement(antd.Row, { gutter: 16 },
                React.createElement(antd.Col, { md: 24, lg: 8 },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement(antd.Skeleton, { loading: isLoading, active: true },
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement("img", { className: "profile-img", alt: "profile image", src: companyDetails.logo })),
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement("div", { className: "padding-top-1 company-name" }, companyDetails.name)),
                            React.createElement(antd.Row, { justify: "center" },
                                React.createElement(OrganisationStatus, { t: t, organisationStatus: parseInt(companyDetails.state) }))))),
                React.createElement(antd.Col, { md: 24, lg: 16 },
                    React.createElement(CompanyDetailsComponent, { t: t, companyDetails: companyDetails, userDetails: userDetails, isLoading: isLoading, regionField: true, systemType: systemType }),
                    ((companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.state) == "2" ||
                        (companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.state) == "3") && (React.createElement(antd.Card, { className: "card-container" },
                        React.createElement("div", { className: "info-view" },
                            React.createElement("div", { className: "title" },
                                React.createElement("span", { className: "title-icon" },
                                    React.createElement(icons.UserOutlined, null)),
                                React.createElement("span", { className: "title-text" }, t("companyProfile:adminDetailsHeading"))),
                            React.createElement(antd.Row, { className: "field" },
                                React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyProfile:adminName")),
                                React.createElement(antd.Col, { span: 12, className: "field-value" }, (userDetails === null || userDetails === void 0 ? void 0 : userDetails.name) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.name : "-")),
                            React.createElement(antd.Row, { className: "field" },
                                React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyProfile:adminEmail")),
                                React.createElement(antd.Col, { span: 12, className: "field-value" }, (userDetails === null || userDetails === void 0 ? void 0 : userDetails.email) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.email : "-")),
                            React.createElement(antd.Row, { className: "field" },
                                React.createElement(antd.Col, { span: 12, className: "field-key" }, t("companyProfile:adminPhone")),
                                React.createElement(antd.Col, { span: 12, className: "field-value" }, (userDetails === null || userDetails === void 0 ? void 0 : userDetails.phoneNo) ? userDetails === null || userDetails === void 0 ? void 0 : userDetails.phoneNo : "-"))))))))),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onDeauthoriseOrgConfirmed, onActionCanceled: onDeauthoriseOrgCanceled, openModal: openDeauthorisationModal, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onReactivateOrgConfirmed, onActionCanceled: onReactivateOrgCanceled, openModal: openReactivateModal, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onApproveOrgConfirmed, onActionCanceled: onApproveOrgCanceled, openModal: openApproveModal, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onRejectOrgConfirmed, onActionCanceled: onRejectOrgCanceled, openModal: openRejectModal, errorMsg: errorMsg, loading: isLoading })));
};

var css_248z$s = ".programme-management .programme-title-bar {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0px 0px 0px 0px; }\n  .programme-management .programme-title-bar .title {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; }\n  .programme-management .programme-title-bar .actions {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end; }\n  .programme-management .programme-title-bar .flex-display {\n    margin-left: 15px; }\n\n.programme-management .certify-list {\n  width: 88px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap; }\n  .programme-management .certify-list .profile-icon {\n    margin-bottom: 4px;\n    margin-right: 4px; }\n\n.programme-management .org-list {\n  width: 88px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap; }\n  .programme-management .org-list .profile-icon {\n    margin-bottom: 4px;\n    margin-right: 4px; }\n\n.programme-management .table-actions-section {\n  margin-bottom: 0px; }\n  .programme-management .table-actions-section input {\n    font-family: \"Inter\";\n    font-size: 0.8rem; }\n\n.programme-management .all-check {\n  margin-right: 10px; }\n  .programme-management .all-check .ant-checkbox-inner::after {\n    background-color: rgba(58, 53, 65, 0.5); }\n  .programme-management .all-check .ant-checkbox-checked .ant-checkbox-inner::after {\n    background-color: transparent; }\n  .programme-management .all-check .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: rgba(58, 53, 65, 0.5);\n    border: none; }\n\n.programme-management .ant-checkbox-checked .ant-checkbox-input[value=\"Retired\"] + .ant-checkbox-inner {\n  background-color: rgba(58, 53, 65, 0.4);\n  border: none; }\n\n.programme-management .ant-checkbox-checked .ant-checkbox-input[value=\"AwaitingAuthorization\"] + .ant-checkbox-inner {\n  background-color: rgba(237, 77, 71, 0.6);\n  border: none; }\n\n.programme-management .ant-checkbox-checked .ant-checkbox-input[value=\"Rejected\"] + .ant-checkbox-inner {\n  background-color: rgba(58, 53, 65, 0.4);\n  border: none; }\n\n.programme-management .ant-checkbox-checked .ant-checkbox-input[value=\"Authorised\"] + .ant-checkbox-inner {\n  background-color: #008f39;\n  border: none; }\n\n.programme-management .ant-checkbox-checked .ant-checkbox-input[value=\"Approved\"] + .ant-checkbox-inner {\n  background-color: rgba(145, 85, 253, 0.6);\n  border: none; }\n\n.programme-management .ant-checkbox-checked .ant-checkbox-input[value=\"Transferred\"] + .ant-checkbox-inner {\n  background-color: rgba(118, 195, 39, 0.6);\n  border: none; }\n";
styleInject(css_248z$s);

var Search$1 = antd.Input.Search;
var ProgrammeManagementComponent = function (props) {
    var t = props.t, visibleColumns = props.visibleColumns, onNavigateToProgrammeView = props.onNavigateToProgrammeView, onClickAddProgramme = props.onClickAddProgramme, enableAddProgramme = props.enableAddProgramme, useAbilityContext = props.useAbilityContext;
    var _a = useConnection(); _a.get; _a.delete; var post = _a.post;
    var _b = React.useState(), totalProgramme = _b[0], setTotalProgramme = _b[1];
    var _c = React.useState(false), loading = _c[0], setLoading = _c[1];
    var _d = React.useState([]), tableData = _d[0], setTableData = _d[1];
    var _e = React.useState(1), currentPage = _e[0], setCurrentPage = _e[1];
    var _f = React.useState(10), pageSize = _f[0], setPageSize = _f[1];
    var _g = React.useState(), search = _g[0], setSearch = _g[1];
    var _h = React.useState(), searchText = _h[0], setSearchText = _h[1];
    var _j = React.useState(), statusFilter = _j[0], setStatusFilter = _j[1];
    var _k = React.useState(), dataFilter = _k[0], setDataFilter = _k[1];
    var _l = React.useState(), sortOrder = _l[0], setSortOrder = _l[1];
    var _m = React.useState(), sortField = _m[0], setSortField = _m[1];
    var _o = React.useState([]), ministrySectoralScope = _o[0], setMinistrySectoralScope = _o[1];
    var _p = React.useState(false), ministryLevelFilter = _p[0], setMinistryLevelFilter = _p[1];
    var userInfoState = useUserContext().userInfoState;
    var ability = useAbilityContext();
    var _q = React.useState(), dataQuery = _q[0], setDataQuery = _q[1];
    var stageObject = enableAddProgramme ? exports.ProgrammeStageMRV : exports.ProgrammeStageR;
    var statusOptions = Object.keys(stageObject).map(function (k, index) { return ({
        label: Object.values(stageObject)[index],
        value: k,
    }); });
    var _r = React.useState(statusOptions.map(function (e) { return e.value; })), selectedStatus = _r[0], setSelectedStatus = _r[1];
    var _s = React.useState(false), indeterminate = _s[0], setIndeterminate = _s[1];
    var _t = React.useState(true), checkAll = _t[0], setCheckAll = _t[1];
    var onStatusQuery = function (checkedValues) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            console.log(checkedValues);
            if (checkedValues !== selectedStatus) {
                setSelectedStatus(checkedValues);
                setIndeterminate(!!checkedValues.length &&
                    checkedValues.length < Object.keys(statusOptions).length);
                setCheckAll(checkedValues.length === Object.keys(statusOptions).length);
            }
            if (checkedValues.length === 0) {
                setTableData([]);
                setTotalProgramme(0);
                return [2 /*return*/];
            }
            // setFilter([
            //   {
            //     key: 'currentStage',
            //     operation: 'in',
            //     value: checkedValues,
            //   },
            // ]);
            setStatusFilter({
                key: "currentStage",
                operation: "in",
                value: checkedValues,
            });
            return [2 /*return*/];
        });
    }); };
    var onCheckAllChange = function (e) {
        var nw = e.target.checked ? statusOptions.map(function (el) { return el.value; }) : [];
        setSelectedStatus(nw);
        setIndeterminate(false);
        setCheckAll(e.target.checked);
        onStatusQuery(nw);
    };
    var actionMenu = function (record) {
        return (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                {
                    text: t("programme:view"),
                    icon: React.createElement(Icon__namespace.InfoCircle, null),
                    click: function () {
                        onNavigateToProgrammeView(record);
                    },
                },
            ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                React.createElement(antd.Typography.Text, { className: "action-icon color-primary" }, item.icon),
                React.createElement("span", null, item.text))); } }));
    };
    var columns = [
        {
            title: t("programme:title"),
            dataIndex: "title",
            key: exports.ProgrammeManagementColumns.title,
            sorter: true,
            align: "left",
            render: function (item) {
                return React.createElement("span", { className: "clickable" }, item);
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        onNavigateToProgrammeView(record);
                    },
                };
            },
        },
        {
            title: t("common:company"),
            dataIndex: "company",
            key: exports.ProgrammeManagementColumns.company,
            align: "left",
            render: function (item, itemObj) {
                var elements = item.map(function (obj) {
                    return (React.createElement(antd.Tooltip, { title: obj.name, color: TooltipColor, key: TooltipColor },
                        React.createElement("div", null,
                            React.createElement(ProfileIcon, { icon: obj.logo, bg: getCompanyBgColor(obj.companyRole), name: obj.name }))));
                });
                return React.createElement("div", { className: "org-list" }, elements);
            },
        },
        {
            title: t("programme:sector"),
            dataIndex: "sector",
            sorter: true,
            key: exports.ProgrammeManagementColumns.sector,
            align: "left",
        },
        {
            title: t("programme:status"),
            dataIndex: "currentStage",
            key: exports.ProgrammeManagementColumns.currentStage,
            sorter: true,
            align: "center",
            render: function (item) {
                return (React.createElement(antd.Tag, { className: "clickable", color: getStageTagTypeMRV(item) }, getStageEnumVal(item)));
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        setSelectedStatus([record.currentStage]);
                        onStatusQuery([record.currentStage]);
                    },
                };
            },
        },
        {
            title: t("programme:issued"),
            dataIndex: "creditIssued",
            key: exports.ProgrammeManagementColumns.creditIssued,
            sorter: true,
            align: "right",
            render: function (item) {
                return item ? addCommSep(Number(item)) : "-";
            },
        },
        {
            title: t("programme:balance"),
            dataIndex: "creditBalance",
            key: exports.ProgrammeManagementColumns.creditBalance,
            sorter: true,
            align: "right",
            render: function (item) {
                return item ? addCommSep(Number(item)) : "-";
            },
        },
        {
            title: t("programme:transferred"),
            dataIndex: "creditTransferred",
            key: exports.ProgrammeManagementColumns.creditTransferred,
            sorter: true,
            align: "right",
            render: function (item) {
                return item ? addCommSep(sumArray(item)) : "-";
            },
        },
        {
            title: t("programme:emissionsReductionExpected"),
            dataIndex: "emissionReductionExpected",
            key: exports.ProgrammeManagementColumns.emissionReductionExpected,
            align: "right",
            render: function (item) {
                return item ? addCommSep(item) : "-";
            },
        },
        {
            title: t("programme:emissionsReductionAchieved"),
            dataIndex: "emissionReductionAchieved",
            key: exports.ProgrammeManagementColumns.emissionReductionAchieved,
            align: "right",
            render: function (item) {
                return item ? addCommSep(item) : "-";
            },
        },
        {
            title: t("programme:emissionReductionAchievedandCreditIssued"),
            dataIndex: "emissionReductionAchieved",
            key: exports.ProgrammeManagementColumns.emissionReductionAchievedandCreditIssued,
            align: "right",
            render: function (item) {
                return item ? addCommSep(item) : "-";
            },
        },
        {
            title: t("programme:certifiers"),
            dataIndex: "certifierId",
            key: exports.ProgrammeManagementColumns.certifierId,
            align: "left",
            sorter: true,
            render: function (item, itemObj) {
                if (item === null) {
                    return "-";
                }
                var cMap = {};
                for (var _i = 0, _a = itemObj.certifier; _i < _a.length; _i++) {
                    var c = _a[_i];
                    cMap[c.companyId] = c;
                }
                var elements = item.map(function (id) {
                    var obj = cMap[id];
                    if (!obj) {
                        return;
                    }
                    return (React.createElement(antd.Tooltip, { title: obj.name, color: TooltipColor, key: TooltipColor },
                        React.createElement("div", null,
                            React.createElement(ProfileIcon, { icon: obj.logo, bg: getCompanyBgColor(obj.companyRole), name: obj.name }))));
                });
                return React.createElement("div", { className: "certify-list" }, elements);
            },
        },
        {
            title: t("programme:serialNoh"),
            dataIndex: "serialNo",
            key: exports.ProgrammeManagementColumns.serialNo,
            align: "left",
        },
        {
            title: t(""),
            width: 6,
            align: "right",
            key: exports.ProgrammeManagementColumns.action,
            render: function (_, record) {
                var menu = actionMenu(record);
                return menu && (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } })));
            },
        },
    ].filter(function (column) { return visibleColumns.includes(column.key); });
    var getAllProgramme = function () { return __awaiter(void 0, void 0, void 0, function () {
        var filter, filterOr, sort, response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    filter = [];
                    filterOr = [];
                    if (dataFilter) {
                        filter.push(dataFilter);
                    }
                    if (statusFilter) {
                        filter.push(statusFilter);
                    }
                    if (search && search !== "") {
                        filter.push({
                            key: "title",
                            operation: "like",
                            value: "%".concat(search, "%"),
                        });
                    }
                    if (ministryLevelFilter) {
                        ministrySectoralScope === null || ministrySectoralScope === void 0 ? void 0 : ministrySectoralScope.map(function (secScope) {
                            filterOr.push({
                                key: "sectoralScope",
                                operation: "=",
                                value: secScope,
                            });
                        });
                    }
                    if (sortOrder && sortField) {
                        sort = {
                            key: sortField === "certifierId" ? "certifierId[1]" : sortField,
                            order: sortOrder,
                            nullFirst: false,
                        };
                    }
                    else {
                        sort = {
                            key: "createdTime",
                            order: "DESC",
                        };
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/query", {
                            page: currentPage,
                            size: pageSize,
                            filterAnd: filter,
                            filterOr: (filterOr === null || filterOr === void 0 ? void 0 : filterOr.length) > 0 ? filterOr : undefined,
                            sort: sort,
                        })];
                case 2:
                    response = _a.sent();
                    setTableData(response.data);
                    setTotalProgramme(response.response.data.total);
                    setLoading(false);
                    setDataQuery({
                        filterAnd: filter,
                        filterOr: (filterOr === null || filterOr === void 0 ? void 0 : filterOr.length) > 0 ? filterOr : undefined,
                        sort: sort,
                    });
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting programme", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var getUserDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_2;
        var _a, _b, _c, _d, _e, _f;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    setLoading(true);
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id,
                                },
                            ],
                        })];
                case 2:
                    response = _g.sent();
                    if (response && response.data) {
                        if (((_a = response === null || response === void 0 ? void 0 : response.data[0]) === null || _a === void 0 ? void 0 : _a.companyRole) === exports.CompanyRole.MINISTRY &&
                            ((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.company) &&
                            ((_d = (_c = response === null || response === void 0 ? void 0 : response.data[0]) === null || _c === void 0 ? void 0 : _c.company) === null || _d === void 0 ? void 0 : _d.sectoralScope)) {
                            setMinistrySectoralScope((_f = (_e = response === null || response === void 0 ? void 0 : response.data[0]) === null || _e === void 0 ? void 0 : _e.company) === null || _f === void 0 ? void 0 : _f.sectoralScope);
                        }
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_2 = _g.sent();
                    console.log("Error in getting users", error_2);
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var downloadProgrammeData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, url, a, error_3;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setLoading(true);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/download", {
                            filterAnd: dataQuery.filterAnd,
                            filterOr: ((_a = dataQuery.filterOr) === null || _a === void 0 ? void 0 : _a.length) > 0 ? dataQuery.filterOr : undefined,
                            sort: dataQuery.sort,
                        })];
                case 2:
                    response = _b.sent();
                    if (response && response.data) {
                        url = response.data.url;
                        a = document.createElement('a');
                        a.href = url;
                        a.download = response.data.csvFile; // Specify the filename for the downloaded file
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a); // Clean up the created <a> element
                        window.URL.revokeObjectURL(url);
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_3 = _b.sent();
                    console.log("Error in exporting programmes", error_3);
                    antd.message.open({
                        type: "error",
                        content: error_3.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onSearch = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setSearch(searchText);
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        if (currentPage !== 1) {
            setCurrentPage(1);
        }
        else {
            getAllProgramme();
        }
    }, [statusFilter, dataFilter]);
    React.useEffect(function () {
        getAllProgramme();
    }, [
        currentPage,
        pageSize,
        sortField,
        sortOrder,
        search,
        ministryLevelFilter,
    ]);
    React.useEffect(function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            getUserDetails();
        }
    }, []);
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var handleTableChange = function (pag, sorter) {
        console.log(pag, sorter);
        setSortOrder(sorter.order === "ascend"
            ? "ASC"
            : sorter.order === "descend"
                ? "DESC"
                : undefined);
        setSortField(sorter.columnKey);
        // setCurrentPage(1);
    };
    return (React.createElement("div", { className: "content-container programme-management" },
        React.createElement("div", { className: "programme-title-bar" },
            React.createElement("div", { className: "title-bar" },
                React.createElement("div", { className: "body-title" }, t("programme:viewProgrammes"))),
            React.createElement("div", { className: "actions" }, ability.can(exports.Action.Manage, ProgrammeEntity) &&
                enableAddProgramme && (React.createElement("div", { className: "action-bar" },
                React.createElement(antd.Button, { type: "primary", size: "large", block: true, icon: React.createElement(icons.PlusOutlined, null), onClick: onClickAddProgramme }, t("programme:addProgramme")))))),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, { className: "table-actions-section" },
                React.createElement(antd.Col, { lg: { span: 15 }, md: { span: 14 } },
                    React.createElement("div", { className: "action-bar" },
                        React.createElement(antd.Checkbox, { className: "all-check", disabled: loading, indeterminate: indeterminate, onChange: onCheckAllChange, checked: checkAll, defaultChecked: true }, t("programme:all")),
                        React.createElement(antd.Checkbox.Group, { disabled: loading, options: statusOptions, defaultValue: statusOptions.map(function (e) { return e.value; }), value: selectedStatus, onChange: onStatusQuery }))),
                React.createElement(antd.Col, { lg: { span: 9 }, md: { span: 10 } },
                    React.createElement("div", { className: "filter-section" },
                        React.createElement("div", { className: "search-filter" },
                            React.createElement(antd.Checkbox, { className: "label", onChange: function (v) {
                                    if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
                                        if (v.target.checked) {
                                            setMinistryLevelFilter(true);
                                        }
                                        else {
                                            setMinistryLevelFilter(false);
                                        }
                                    }
                                    else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER) {
                                        setDataFilter(v.target.checked
                                            ? {
                                                key: "certifierId",
                                                operation: "ANY",
                                                value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                                            }
                                            : undefined);
                                    }
                                    else {
                                        setDataFilter(v.target.checked
                                            ? {
                                                key: "companyId",
                                                operation: "ANY",
                                                value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                                            }
                                            : undefined);
                                    }
                                } }, (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY
                                ? t("view:ministryLevel")
                                : t("view:seeMine"))),
                        React.createElement("div", { className: "search-bar" },
                            React.createElement(Search$1, { onPressEnter: onSearch, placeholder: "".concat(t("programme:searchByName")), allowClear: true, 
                                // onChange={(e) => setSearchText(e.target.value)}
                                onChange: function (e) {
                                    return e.target.value === ""
                                        ? setSearch(e.target.value)
                                        : setSearchText(e.target.value);
                                }, onSearch: setSearch, style: { width: 265 } })),
                        React.createElement("div", { className: "download-data-btn" },
                            React.createElement("a", { onClick: downloadProgrammeData },
                                React.createElement(icons.DownloadOutlined, { style: {
                                        color: "rgba(58, 53, 65, 0.3)",
                                        fontSize: "20px",
                                    } })))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "programmeManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalProgramme,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, 
                            // scroll={{ x: 1500 }}
                            locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0
                                        ? t("programme:noProgrammes")
                                        : null })),
                            } })))))));
};

var css_248z$r = ".programme-details-form-container,\n.programme-sought-form-container {\n  width: 100%; }\n  .programme-details-form-container .programme-details-form,\n  .programme-details-form-container .programme-sought-form,\n  .programme-sought-form-container .programme-details-form,\n  .programme-sought-form-container .programme-sought-form {\n    width: 100%; }\n    .programme-details-form-container .programme-details-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input,\n    .programme-details-form-container .programme-details-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input:hover,\n    .programme-details-form-container .programme-sought-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input,\n    .programme-details-form-container .programme-sought-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input:hover,\n    .programme-sought-form-container .programme-details-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input,\n    .programme-sought-form-container .programme-details-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input:hover,\n    .programme-sought-form-container .programme-sought-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input,\n    .programme-sought-form-container .programme-sought-form .ant-input-status-error:not(.ant-input-disabled):not(\n    .ant-input-borderless\n).ant-input:hover {\n      border-color: #ff4d4f !important; }\n    .programme-details-form-container .programme-details-form .ant-picker-large,\n    .programme-details-form-container .programme-sought-form .ant-picker-large,\n    .programme-sought-form-container .programme-details-form .ant-picker-large,\n    .programme-sought-form-container .programme-sought-form .ant-picker-large {\n      height: 40px !important;\n      width: 100%; }\n    .programme-details-form-container .programme-details-form .ant-upload-list-item-name,\n    .programme-details-form-container .programme-sought-form .ant-upload-list-item-name,\n    .programme-sought-form-container .programme-details-form .ant-upload-list-item-name,\n    .programme-sought-form-container .programme-sought-form .ant-upload-list-item-name {\n      color: #008f39; }\n    .programme-details-form-container .programme-details-form .steps-actions,\n    .programme-details-form-container .programme-sought-form .steps-actions,\n    .programme-sought-form-container .programme-details-form .steps-actions,\n    .programme-sought-form-container .programme-sought-form .steps-actions {\n      display: flex;\n      flex-direction: row-reverse;\n      margin-right: 1rem; }\n      .programme-details-form-container .programme-details-form .steps-actions .action-btn,\n      .programme-details-form-container .programme-sought-form .steps-actions .action-btn,\n      .programme-sought-form-container .programme-details-form .steps-actions .action-btn,\n      .programme-sought-form-container .programme-sought-form .steps-actions .action-btn {\n        border: 1px solid #008f39;\n        color: #008f39;\n        margin-right: 1rem; }\n      .programme-details-form-container .programme-details-form .steps-actions .back-btn,\n      .programme-details-form-container .programme-sought-form .steps-actions .back-btn,\n      .programme-sought-form-container .programme-details-form .steps-actions .back-btn,\n      .programme-sought-form-container .programme-sought-form .steps-actions .back-btn {\n        border: 1px solid rgba(140, 140, 140, 0.7);\n        color: rgba(140, 140, 140, 0.7);\n        margin-right: 1rem; }\n      .programme-details-form-container .programme-details-form .steps-actions .mg-left-1,\n      .programme-details-form-container .programme-sought-form .steps-actions .mg-left-1,\n      .programme-sought-form-container .programme-details-form .steps-actions .mg-left-1,\n      .programme-sought-form-container .programme-sought-form .steps-actions .mg-left-1 {\n        margin-left: 1rem; }\n    .programme-details-form-container .programme-details-form .options-programme,\n    .programme-details-form-container .programme-sought-form .options-programme,\n    .programme-sought-form-container .programme-details-form .options-programme,\n    .programme-sought-form-container .programme-sought-form .options-programme {\n      width: 100%; }\n      .programme-details-form-container .programme-details-form .options-programme .role-group .ant-radio-group,\n      .programme-details-form-container .programme-sought-form .options-programme .role-group .ant-radio-group,\n      .programme-sought-form-container .programme-details-form .options-programme .role-group .ant-radio-group,\n      .programme-sought-form-container .programme-sought-form .options-programme .role-group .ant-radio-group {\n        width: 50%; }\n      .programme-details-form-container .programme-details-form .options-programme .role-group .condition-radio-container,\n      .programme-details-form-container .programme-sought-form .options-programme .role-group .condition-radio-container,\n      .programme-sought-form-container .programme-details-form .options-programme .role-group .condition-radio-container,\n      .programme-sought-form-container .programme-sought-form .options-programme .role-group .condition-radio-container {\n        width: 30%;\n        text-align: center; }\n        .programme-details-form-container .programme-details-form .options-programme .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n),\n        .programme-details-form-container .programme-sought-form .options-programme .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n),\n        .programme-sought-form-container .programme-details-form .options-programme .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n),\n        .programme-sought-form-container .programme-sought-form .options-programme .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n) {\n          color: #ffffff !important;\n          border-color: #9155fd;\n          box-shadow: none; }\n      .programme-details-form-container .programme-details-form .options-programme .role-group .ant-radio-button-wrapper::before,\n      .programme-details-form-container .programme-sought-form .options-programme .role-group .ant-radio-button-wrapper::before,\n      .programme-sought-form-container .programme-details-form .options-programme .role-group .ant-radio-button-wrapper::before,\n      .programme-sought-form-container .programme-sought-form .options-programme .role-group .ant-radio-button-wrapper::before {\n        background-color: transparent; }\n      .programme-details-form-container .programme-details-form .options-programme .role-group .ant-radio-button-wrapper,\n      .programme-details-form-container .programme-sought-form .options-programme .role-group .ant-radio-button-wrapper,\n      .programme-sought-form-container .programme-details-form .options-programme .role-group .ant-radio-button-wrapper,\n      .programme-sought-form-container .programme-sought-form .options-programme .role-group .ant-radio-button-wrapper {\n        border: 1px solid #d9d9d9; }\n      .programme-details-form-container .programme-details-form .options-programme .role-group .anticon,\n      .programme-details-form-container .programme-sought-form .options-programme .role-group .anticon,\n      .programme-sought-form-container .programme-details-form .options-programme .role-group .anticon,\n      .programme-sought-form-container .programme-sought-form .options-programme .role-group .anticon {\n        margin-right: 0.5rem; }\n      .programme-details-form-container .programme-details-form .options-programme .role-group .condition-radio,\n      .programme-details-form-container .programme-sought-form .options-programme .role-group .condition-radio,\n      .programme-sought-form-container .programme-details-form .options-programme .role-group .condition-radio,\n      .programme-sought-form-container .programme-sought-form .options-programme .role-group .condition-radio {\n        width: 100%; }\n        .programme-details-form-container .programme-details-form .options-programme .role-group .condition-radio .ant-radio-button-checked,\n        .programme-details-form-container .programme-sought-form .options-programme .role-group .condition-radio .ant-radio-button-checked,\n        .programme-sought-form-container .programme-details-form .options-programme .role-group .condition-radio .ant-radio-button-checked,\n        .programme-sought-form-container .programme-sought-form .options-programme .role-group .condition-radio .ant-radio-button-checked {\n          background: #9155fd;\n          color: #ffffff; }\n      .programme-details-form-container .programme-details-form .options-programme .role-group .role-icons,\n      .programme-details-form-container .programme-sought-form .options-programme .role-group .role-icons,\n      .programme-sought-form-container .programme-details-form .options-programme .role-group .role-icons,\n      .programme-sought-form-container .programme-sought-form .options-programme .role-group .role-icons {\n        margin-right: 5px; }\n    .programme-details-form-container .programme-details-form .row,\n    .programme-details-form-container .programme-sought-form .row,\n    .programme-sought-form-container .programme-details-form .row,\n    .programme-sought-form-container .programme-sought-form .row {\n      width: 100%; }\n      .programme-details-form-container .programme-details-form .row .org-col .details-part-three,\n      .programme-details-form-container .programme-sought-form .row .org-col .details-part-three,\n      .programme-sought-form-container .programme-details-form .row .org-col .details-part-three,\n      .programme-sought-form-container .programme-sought-form .row .org-col .details-part-three {\n        width: 100%; }\n      .programme-details-form-container .programme-details-form .row .website .ant-input,\n      .programme-details-form-container .programme-sought-form .row .website .ant-input,\n      .programme-sought-form-container .programme-details-form .row .website .ant-input,\n      .programme-sought-form-container .programme-sought-form .row .website .ant-input {\n        margin-left: 0.3rem; }\n      .programme-details-form-container .programme-details-form .row .website .ant-input-group-addon,\n      .programme-details-form-container .programme-sought-form .row .website .ant-input-group-addon,\n      .programme-sought-form-container .programme-details-form .row .website .ant-input-group-addon,\n      .programme-sought-form-container .programme-sought-form .row .website .ant-input-group-addon {\n        border: 1px solid #d9d9d9; }\n      .programme-details-form-container .programme-details-form .row .design-upload-section,\n      .programme-details-form-container .programme-sought-form .row .design-upload-section,\n      .programme-sought-form-container .programme-details-form .row .design-upload-section,\n      .programme-sought-form-container .programme-sought-form .row .design-upload-section {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: start;\n        width: 100%; }\n        .programme-details-form-container .programme-details-form .row .design-upload-section .icon-color,\n        .programme-details-form-container .programme-sought-form .row .design-upload-section .icon-color,\n        .programme-sought-form-container .programme-details-form .row .design-upload-section .icon-color,\n        .programme-sought-form-container .programme-sought-form .row .design-upload-section .icon-color {\n          color: #008f39 !important; }\n        .programme-details-form-container .programme-details-form .row .design-upload-section .ant-upload,\n        .programme-details-form-container .programme-sought-form .row .design-upload-section .ant-upload,\n        .programme-sought-form-container .programme-details-form .row .design-upload-section .ant-upload,\n        .programme-sought-form-container .programme-sought-form .row .design-upload-section .ant-upload {\n          width: 20%; }\n        .programme-details-form-container .programme-details-form .row .design-upload-section .ant-upload-list,\n        .programme-details-form-container .programme-sought-form .row .design-upload-section .ant-upload-list,\n        .programme-sought-form-container .programme-details-form .row .design-upload-section .ant-upload-list,\n        .programme-sought-form-container .programme-sought-form .row .design-upload-section .ant-upload-list {\n          align-items: center;\n          justify-content: center;\n          width: 75%; }\n          .programme-details-form-container .programme-details-form .row .design-upload-section .ant-upload-list .ant-upload-list-item,\n          .programme-details-form-container .programme-sought-form .row .design-upload-section .ant-upload-list .ant-upload-list-item,\n          .programme-sought-form-container .programme-details-form .row .design-upload-section .ant-upload-list .ant-upload-list-item,\n          .programme-sought-form-container .programme-sought-form .row .design-upload-section .ant-upload-list .ant-upload-list-item {\n            margin-top: 0; }\n      .programme-details-form-container .programme-details-form .row .details-part-one .upload-doc,\n      .programme-details-form-container .programme-sought-form .row .details-part-one .upload-doc,\n      .programme-sought-form-container .programme-details-form .row .details-part-one .upload-doc,\n      .programme-sought-form-container .programme-sought-form .row .details-part-one .upload-doc {\n        height: 40px !important; }\n      .programme-details-form-container .programme-details-form .row .details-part-one .ant-upload-list-item,\n      .programme-details-form-container .programme-sought-form .row .details-part-one .ant-upload-list-item,\n      .programme-sought-form-container .programme-details-form .row .details-part-one .ant-upload-list-item,\n      .programme-sought-form-container .programme-sought-form .row .details-part-one .ant-upload-list-item {\n        border-radius: 5px !important;\n        height: 40px !important; }\n      .programme-details-form-container .programme-details-form .row .details-part-one .add-Document,\n      .programme-details-form-container .programme-sought-form .row .details-part-one .add-Document,\n      .programme-sought-form-container .programme-details-form .row .details-part-one .add-Document,\n      .programme-sought-form-container .programme-sought-form .row .details-part-one .add-Document {\n        display: flex; }\n        .programme-details-form-container .programme-details-form .row .details-part-one .add-Document .ant-form-item,\n        .programme-details-form-container .programme-sought-form .row .details-part-one .add-Document .ant-form-item,\n        .programme-sought-form-container .programme-details-form .row .details-part-one .add-Document .ant-form-item,\n        .programme-sought-form-container .programme-sought-form .row .details-part-one .add-Document .ant-form-item {\n          width: 100%; }\n        .programme-details-form-container .programme-details-form .row .details-part-one .add-Document .addDoc-info,\n        .programme-details-form-container .programme-sought-form .row .details-part-one .add-Document .addDoc-info,\n        .programme-sought-form-container .programme-details-form .row .details-part-one .add-Document .addDoc-info,\n        .programme-sought-form-container .programme-sought-form .row .details-part-one .add-Document .addDoc-info {\n          position: absolute;\n          margin-left: 130px;\n          margin-top: 1.1px; }\n      .programme-details-form-container .programme-details-form .row .details-part-one .space-container,\n      .programme-details-form-container .programme-sought-form .row .details-part-one .space-container,\n      .programme-sought-form-container .programme-details-form .row .details-part-one .space-container,\n      .programme-sought-form-container .programme-sought-form .row .details-part-one .space-container {\n        width: 100%; }\n        .programme-details-form-container .programme-details-form .row .details-part-one .space-container .ownership-list-item,\n        .programme-details-form-container .programme-sought-form .row .details-part-one .space-container .ownership-list-item,\n        .programme-sought-form-container .programme-details-form .row .details-part-one .space-container .ownership-list-item,\n        .programme-sought-form-container .programme-sought-form .row .details-part-one .space-container .ownership-list-item {\n          display: flex;\n          width: 100%;\n          align-items: center; }\n        .programme-details-form-container .programme-details-form .row .details-part-one .space-container .ant-space-item,\n        .programme-details-form-container .programme-sought-form .row .details-part-one .space-container .ant-space-item,\n        .programme-sought-form-container .programme-details-form .row .details-part-one .space-container .ant-space-item,\n        .programme-sought-form-container .programme-sought-form .row .details-part-one .space-container .ant-space-item {\n          width: 100%; }\n          .programme-details-form-container .programme-details-form .row .details-part-one .space-container .ant-space-item .organisation,\n          .programme-details-form-container .programme-sought-form .row .details-part-one .space-container .ant-space-item .organisation,\n          .programme-sought-form-container .programme-details-form .row .details-part-one .space-container .ant-space-item .organisation,\n          .programme-sought-form-container .programme-sought-form .row .details-part-one .space-container .ant-space-item .organisation {\n            width: 60%; }\n        .programme-details-form-container .programme-details-form .row .details-part-one .space-container .ownership-percent,\n        .programme-details-form-container .programme-sought-form .row .details-part-one .space-container .ownership-percent,\n        .programme-sought-form-container .programme-details-form .row .details-part-one .space-container .ownership-percent,\n        .programme-sought-form-container .programme-sought-form .row .details-part-one .space-container .ownership-percent {\n          width: 35%;\n          margin-left: 1rem; }\n          .programme-details-form-container .programme-details-form .row .details-part-one .space-container .ownership-percent .ant-input-number,\n          .programme-details-form-container .programme-sought-form .row .details-part-one .space-container .ownership-percent .ant-input-number,\n          .programme-sought-form-container .programme-details-form .row .details-part-one .space-container .ownership-percent .ant-input-number,\n          .programme-sought-form-container .programme-sought-form .row .details-part-one .space-container .ownership-percent .ant-input-number {\n            width: 80%; }\n          .programme-details-form-container .programme-details-form .row .details-part-one .space-container .ownership-percent .ant-form-item-explain-error,\n          .programme-details-form-container .programme-sought-form .row .details-part-one .space-container .ownership-percent .ant-form-item-explain-error,\n          .programme-sought-form-container .programme-details-form .row .details-part-one .space-container .ownership-percent .ant-form-item-explain-error,\n          .programme-sought-form-container .programme-sought-form .row .details-part-one .space-container .ownership-percent .ant-form-item-explain-error {\n            width: 250px !important; }\n      .programme-details-form-container .programme-details-form .row .details-part-two .role-group .condition-radio-container,\n      .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio-container,\n      .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .condition-radio-container,\n      .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio-container {\n        width: 48%;\n        text-align: center; }\n        .programme-details-form-container .programme-details-form .row .details-part-two .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n),\n        .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n),\n        .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n),\n        .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(\n        .ant-radio-button-wrapper-disabled\n) {\n          color: #ffffff !important;\n          border-color: #9155fd;\n          border-radius: 4px;\n          box-shadow: none; }\n      .programme-details-form-container .programme-details-form .row .details-part-two .role-group .ant-radio-button-wrapper::before,\n      .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .ant-radio-button-wrapper::before,\n      .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .ant-radio-button-wrapper::before,\n      .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .ant-radio-button-wrapper::before {\n        background-color: transparent; }\n      .programme-details-form-container .programme-details-form .row .details-part-two .role-group .ant-radio-button-wrapper,\n      .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .ant-radio-button-wrapper,\n      .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .ant-radio-button-wrapper,\n      .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .ant-radio-button-wrapper {\n        border: 1px solid #d9d9d9; }\n      .programme-details-form-container .programme-details-form .row .details-part-two .role-group .anticon,\n      .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .anticon,\n      .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .anticon,\n      .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .anticon {\n        margin-right: 0.5rem; }\n      .programme-details-form-container .programme-details-form .row .details-part-two .role-group .condition-radio,\n      .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio,\n      .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .condition-radio,\n      .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio {\n        width: 100%; }\n        .programme-details-form-container .programme-details-form .row .details-part-two .role-group .condition-radio .ant-radio-button-checked,\n        .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio .ant-radio-button-checked,\n        .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .condition-radio .ant-radio-button-checked,\n        .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .condition-radio .ant-radio-button-checked {\n          background: #9155fd;\n          color: #ffffff; }\n      .programme-details-form-container .programme-details-form .row .details-part-two .role-group .role-icons,\n      .programme-details-form-container .programme-sought-form .row .details-part-two .role-group .role-icons,\n      .programme-sought-form-container .programme-details-form .row .details-part-two .role-group .role-icons,\n      .programme-sought-form-container .programme-sought-form .row .details-part-two .role-group .role-icons {\n        margin-right: 5px; }\n    .programme-details-form-container .programme-details-form .row-org,\n    .programme-details-form-container .programme-sought-form .row-org,\n    .programme-sought-form-container .programme-details-form .row-org,\n    .programme-sought-form-container .programme-sought-form .row-org {\n      width: 100%; }\n      .programme-details-form-container .programme-details-form .row-org .org-col .details-part-three,\n      .programme-details-form-container .programme-sought-form .row-org .org-col .details-part-three,\n      .programme-sought-form-container .programme-details-form .row-org .org-col .details-part-three,\n      .programme-sought-form-container .programme-sought-form .row-org .org-col .details-part-three {\n        width: 100%; }\n    .programme-details-form-container .programme-details-form .selection-details-row,\n    .programme-details-form-container .programme-sought-form .selection-details-row,\n    .programme-sought-form-container .programme-details-form .selection-details-row,\n    .programme-sought-form-container .programme-sought-form .selection-details-row {\n      width: 100%;\n      margin-bottom: 1rem; }\n      .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-col,\n      .programme-details-form-container .programme-details-form .selection-details-row .in-nap-col,\n      .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-col,\n      .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-col,\n      .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-col,\n      .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-col,\n      .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-col,\n      .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-col {\n        width: 100%; }\n      .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row,\n      .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row,\n      .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row,\n      .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row,\n      .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row,\n      .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row,\n      .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row,\n      .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row {\n        width: 100%;\n        align-items: center; }\n        .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-label,\n        .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-label,\n        .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-label,\n        .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-label,\n        .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-label,\n        .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-label,\n        .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-label,\n        .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-label {\n          display: flex;\n          flex-direction: row;\n          width: fit-content;\n          align-items: center;\n          justify-content: space-between;\n          font-size: 14px;\n          color: rgba(58, 53, 65, 0.5); }\n          .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-label .info-container,\n          .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-label .info-container,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-label .info-container,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-label .info-container,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-label .info-container,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-label .info-container,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-label .info-container,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-label .info-container {\n            display: flex;\n            flex-direction: row;\n            width: 10%;\n            height: 30px;\n            align-items: center;\n            justify-content: flex-end; }\n        .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val,\n        .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-val,\n        .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val,\n        .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val,\n        .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val,\n        .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-val,\n        .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val,\n        .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val {\n          width: 100%; }\n          .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container,\n          .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container {\n            width: max-content;\n            text-align: center;\n            margin-right: 1rem; }\n            .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n),\n            .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n),\n            .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n),\n            .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n),\n            .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n),\n            .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n),\n            .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n),\n            .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n            .ant-radio-button-wrapper-disabled\n) {\n              color: #ffffff !important;\n              border-color: #9155fd;\n              box-shadow: none;\n              border-radius: 4px; }\n          .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper::before,\n          .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper::before,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper::before,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper::before,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper::before,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper::before,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper::before,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper::before {\n            background-color: transparent;\n            border-radius: 4px; }\n          .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper,\n          .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .ant-radio-button-wrapper,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .ant-radio-button-wrapper {\n            border: 1px solid #d9d9d9;\n            border-radius: 4px;\n            color: #8c8c8c; }\n          .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .anticon,\n          .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .anticon,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .anticon,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .anticon,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .anticon,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .anticon,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .anticon,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .anticon {\n            margin-right: 0.5rem; }\n          .programme-details-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .yes-no-radio .ant-radio-button-checked,\n          .programme-details-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .yes-no-radio .ant-radio-button-checked,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .yes-no-radio .ant-radio-button-checked,\n          .programme-details-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .yes-no-radio .ant-radio-button-checked,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-ndc-row .included-val .yes-no-radio .ant-radio-button-checked,\n          .programme-sought-form-container .programme-details-form .selection-details-row .in-nap-row .included-val .yes-no-radio .ant-radio-button-checked,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-ndc-row .included-val .yes-no-radio .ant-radio-button-checked,\n          .programme-sought-form-container .programme-sought-form .selection-details-row .in-nap-row .included-val .yes-no-radio .ant-radio-button-checked {\n            background: #008f39;\n            color: #ffffff; }\n\n.step-title-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem; }\n  .step-title-container .step-count {\n    font-size: 2.2rem;\n    font-weight: 800;\n    margin-right: 0.4rem;\n    color: rgba(58, 53, 65, 0.8); }\n  .step-title-container .title {\n    font-size: 1rem;\n    font-weight: 600;\n    color: #3a3541; }\n\n.add-programme-main-container {\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  padding: 0 50px; }\n  .add-programme-main-container .title-container {\n    display: flex;\n    flex-direction: column;\n    border-radius: 5px; }\n    .add-programme-main-container .title-container .main {\n      font-size: 1.25rem;\n      font-weight: 500;\n      color: #008f39; }\n    .add-programme-main-container .title-container .sub {\n      font-size: 0.8rem;\n      color: #555657; }\n  .add-programme-main-container .adding-section {\n    display: flex;\n    flex-direction: column;\n    background-color: #ffffff;\n    margin: 1rem 0 1rem 0;\n    border-radius: 10px;\n    padding: 2.5rem 1.5rem 2.5rem 1.5rem; }\n    .add-programme-main-container .adding-section .form-section {\n      display: flex;\n      margin-bottom: 2rem; }\n      .add-programme-main-container .adding-section .form-section .form-one {\n        width: 100%; }\n      .add-programme-main-container .adding-section .form-section .steps {\n        width: 15%; }\n      .add-programme-main-container .adding-section .form-section .steps-content {\n        width: 85%; }\n    .add-programme-main-container .adding-section .steps-action {\n      display: flex;\n      flex-direction: row-reverse; }\n\n.ant-upload-list-picture .ant-upload-list-item-error,\n.ant-upload-list-picture-card .ant-upload-list-item-error {\n  height: auto;\n  max-height: 200px; }\n";
styleInject(css_248z$r);

function commonjsRequire(path) {
	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}

var moment$1 = {exports: {}};

(function (module, exports) {
(function (global, factory) {
	    module.exports = factory() ;
	}(commonjsGlobal, (function () {
	    var hookCallback;

	    function hooks() {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback(callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return (
	            input instanceof Array ||
	            Object.prototype.toString.call(input) === '[object Array]'
	        );
	    }

	    function isObject(input) {
	        // IE8 will treat undefined and null as object if it wasn't for
	        // input != null
	        return (
	            input != null &&
	            Object.prototype.toString.call(input) === '[object Object]'
	        );
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function isObjectEmpty(obj) {
	        if (Object.getOwnPropertyNames) {
	            return Object.getOwnPropertyNames(obj).length === 0;
	        } else {
	            var k;
	            for (k in obj) {
	                if (hasOwnProp(obj, k)) {
	                    return false;
	                }
	            }
	            return true;
	        }
	    }

	    function isUndefined(input) {
	        return input === void 0;
	    }

	    function isNumber(input) {
	        return (
	            typeof input === 'number' ||
	            Object.prototype.toString.call(input) === '[object Number]'
	        );
	    }

	    function isDate(input) {
	        return (
	            input instanceof Date ||
	            Object.prototype.toString.call(input) === '[object Date]'
	        );
	    }

	    function map(arr, fn) {
	        var res = [],
	            i,
	            arrLen = arr.length;
	        for (i = 0; i < arrLen; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function createUTC(input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty: false,
	            unusedTokens: [],
	            unusedInput: [],
	            overflow: -2,
	            charsLeftOver: 0,
	            nullInput: false,
	            invalidEra: null,
	            invalidMonth: null,
	            invalidFormat: false,
	            userInvalidated: false,
	            iso: false,
	            parsedDateParts: [],
	            era: null,
	            meridiem: null,
	            rfc2822: false,
	            weekdayMismatch: false,
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this),
	                len = t.length >>> 0,
	                i;

	            for (i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }

	            return false;
	        };
	    }

	    function isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m),
	                parsedParts = some.call(flags.parsedDateParts, function (i) {
	                    return i != null;
	                }),
	                isNowValid =
	                    !isNaN(m._d.getTime()) &&
	                    flags.overflow < 0 &&
	                    !flags.empty &&
	                    !flags.invalidEra &&
	                    !flags.invalidMonth &&
	                    !flags.invalidWeekday &&
	                    !flags.weekdayMismatch &&
	                    !flags.nullInput &&
	                    !flags.invalidFormat &&
	                    !flags.userInvalidated &&
	                    (!flags.meridiem || (flags.meridiem && parsedParts));

	            if (m._strict) {
	                isNowValid =
	                    isNowValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }

	            if (Object.isFrozen == null || !Object.isFrozen(m)) {
	                m._isValid = isNowValid;
	            } else {
	                return isNowValid;
	            }
	        }
	        return m._isValid;
	    }

	    function createInvalid(flags) {
	        var m = createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        } else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = (hooks.momentProperties = []),
	        updateInProgress = false;

	    function copyConfig(to, from) {
	        var i,
	            prop,
	            val,
	            momentPropertiesLen = momentProperties.length;

	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }

	        if (momentPropertiesLen > 0) {
	            for (i = 0; i < momentPropertiesLen; i++) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        if (!this.isValid()) {
	            this._d = new Date(NaN);
	        }
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment(obj) {
	        return (
	            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
	        );
	    }

	    function warn(msg) {
	        if (
	            hooks.suppressDeprecationWarnings === false &&
	            typeof console !== 'undefined' &&
	            console.warn
	        ) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (hooks.deprecationHandler != null) {
	                hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                var args = [],
	                    arg,
	                    i,
	                    key,
	                    argLen = arguments.length;
	                for (i = 0; i < argLen; i++) {
	                    arg = '';
	                    if (typeof arguments[i] === 'object') {
	                        arg += '\n[' + i + '] ';
	                        for (key in arguments[0]) {
	                            if (hasOwnProp(arguments[0], key)) {
	                                arg += key + ': ' + arguments[0][key] + ', ';
	                            }
	                        }
	                        arg = arg.slice(0, -2); // Remove trailing comma and space
	                    } else {
	                        arg = arguments[i];
	                    }
	                    args.push(arg);
	                }
	                warn(
	                    msg +
	                        '\nArguments: ' +
	                        Array.prototype.slice.call(args).join('') +
	                        '\n' +
	                        new Error().stack
	                );
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    hooks.suppressDeprecationWarnings = false;
	    hooks.deprecationHandler = null;

	    function isFunction(input) {
	        return (
	            (typeof Function !== 'undefined' && input instanceof Function) ||
	            Object.prototype.toString.call(input) === '[object Function]'
	        );
	    }

	    function set(config) {
	        var prop, i;
	        for (i in config) {
	            if (hasOwnProp(config, i)) {
	                prop = config[i];
	                if (isFunction(prop)) {
	                    this[i] = prop;
	                } else {
	                    this['_' + i] = prop;
	                }
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        this._dayOfMonthOrdinalParseLenient = new RegExp(
	            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
	                '|' +
	                /\d{1,2}/.source
	        );
	    }

	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig),
	            prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        for (prop in parentConfig) {
	            if (
	                hasOwnProp(parentConfig, prop) &&
	                !hasOwnProp(childConfig, prop) &&
	                isObject(parentConfig[prop])
	            ) {
	                // make sure changes to properties don't modify parent config
	                res[prop] = extend({}, res[prop]);
	            }
	        }
	        return res;
	    }

	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }

	    var keys;

	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i,
	                res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }

	    var defaultCalendar = {
	        sameDay: '[Today at] LT',
	        nextDay: '[Tomorrow at] LT',
	        nextWeek: 'dddd [at] LT',
	        lastDay: '[Yesterday at] LT',
	        lastWeek: '[Last] dddd [at] LT',
	        sameElse: 'L',
	    };

	    function calendar(key, mom, now) {
	        var output = this._calendar[key] || this._calendar['sameElse'];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (
	            (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
	            absNumber
	        );
	    }

	    var formattingTokens =
	            /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
	        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
	        formatFunctions = {},
	        formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken(token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(
	                    func.apply(this, arguments),
	                    token
	                );
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens),
	            i,
	            length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '',
	                i;
	            for (i = 0; i < length; i++) {
	                output += isFunction(array[i])
	                    ? array[i].call(mom, format)
	                    : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] =
	            formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(
	                localFormattingTokens,
	                replaceLongDateFormatTokens
	            );
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var defaultLongDateFormat = {
	        LTS: 'h:mm:ss A',
	        LT: 'h:mm A',
	        L: 'MM/DD/YYYY',
	        LL: 'MMMM D, YYYY',
	        LLL: 'MMMM D, YYYY h:mm A',
	        LLLL: 'dddd, MMMM D, YYYY h:mm A',
	    };

	    function longDateFormat(key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper
	            .match(formattingTokens)
	            .map(function (tok) {
	                if (
	                    tok === 'MMMM' ||
	                    tok === 'MM' ||
	                    tok === 'DD' ||
	                    tok === 'dddd'
	                ) {
	                    return tok.slice(1);
	                }
	                return tok;
	            })
	            .join('');

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate() {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d',
	        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

	    function ordinal(number) {
	        return this._ordinal.replace('%d', number);
	    }

	    var defaultRelativeTime = {
	        future: 'in %s',
	        past: '%s ago',
	        s: 'a few seconds',
	        ss: '%d seconds',
	        m: 'a minute',
	        mm: '%d minutes',
	        h: 'an hour',
	        hh: '%d hours',
	        d: 'a day',
	        dd: '%d days',
	        w: 'a week',
	        ww: '%d weeks',
	        M: 'a month',
	        MM: '%d months',
	        y: 'a year',
	        yy: '%d years',
	    };

	    function relativeTime(number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return isFunction(output)
	            ? output(number, withoutSuffix, string, isFuture)
	            : output.replace(/%d/i, number);
	    }

	    function pastFuture(diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }

	    var aliases = {};

	    function addUnitAlias(unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string'
	            ? aliases[units] || aliases[units.toLowerCase()]
	            : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    var priorities = {};

	    function addUnitPriority(unit, priority) {
	        priorities[unit] = priority;
	    }

	    function getPrioritizedUnits(unitsObj) {
	        var units = [],
	            u;
	        for (u in unitsObj) {
	            if (hasOwnProp(unitsObj, u)) {
	                units.push({ unit: u, priority: priorities[u] });
	            }
	        }
	        units.sort(function (a, b) {
	            return a.priority - b.priority;
	        });
	        return units;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    function absFloor(number) {
	        if (number < 0) {
	            // -0 -> 0
	            return Math.ceil(number) || 0;
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    function makeGetSet(unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                set$1(this, unit, value);
	                hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get(this, unit);
	            }
	        };
	    }

	    function get(mom, unit) {
	        return mom.isValid()
	            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
	            : NaN;
	    }

	    function set$1(mom, unit, value) {
	        if (mom.isValid() && !isNaN(value)) {
	            if (
	                unit === 'FullYear' &&
	                isLeapYear(mom.year()) &&
	                mom.month() === 1 &&
	                mom.date() === 29
	            ) {
	                value = toInt(value);
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
	                    value,
	                    mom.month(),
	                    daysInMonth(value, mom.month())
	                );
	            } else {
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	            }
	        }
	    }

	    // MOMENTS

	    function stringGet(units) {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units]();
	        }
	        return this;
	    }

	    function stringSet(units, value) {
	        if (typeof units === 'object') {
	            units = normalizeObjectUnits(units);
	            var prioritized = getPrioritizedUnits(units),
	                i,
	                prioritizedLen = prioritized.length;
	            for (i = 0; i < prioritizedLen; i++) {
	                this[prioritized[i].unit](units[prioritized[i].unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    var match1 = /\d/, //       0 - 9
	        match2 = /\d\d/, //      00 - 99
	        match3 = /\d{3}/, //     000 - 999
	        match4 = /\d{4}/, //    0000 - 9999
	        match6 = /[+-]?\d{6}/, // -999999 - 999999
	        match1to2 = /\d\d?/, //       0 - 99
	        match3to4 = /\d\d\d\d?/, //     999 - 9999
	        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
	        match1to3 = /\d{1,3}/, //       0 - 999
	        match1to4 = /\d{1,4}/, //       0 - 9999
	        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
	        matchUnsigned = /\d+/, //       0 - inf
	        matchSigned = /[+-]?\d+/, //    -inf - inf
	        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
	        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
	        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
	        // any word (or two) characters or numbers including two/three word month in arabic.
	        // includes scottish gaelic two word and hyphenated months
	        matchWord =
	            /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
	        regexes;

	    regexes = {};

	    function addRegexToken(token, regex, strictRegex) {
	        regexes[token] = isFunction(regex)
	            ? regex
	            : function (isStrict, localeData) {
	                  return isStrict && strictRegex ? strictRegex : regex;
	              };
	    }

	    function getParseRegexForToken(token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(
	            s
	                .replace('\\', '')
	                .replace(
	                    /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
	                    function (matched, p1, p2, p3, p4) {
	                        return p1 || p2 || p3 || p4;
	                    }
	                )
	        );
	    }

	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken(token, callback) {
	        var i,
	            func = callback,
	            tokenLen;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (isNumber(callback)) {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        tokenLen = token.length;
	        for (i = 0; i < tokenLen; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken(token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0,
	        MONTH = 1,
	        DATE = 2,
	        HOUR = 3,
	        MINUTE = 4,
	        SECOND = 5,
	        MILLISECOND = 6,
	        WEEK = 7,
	        WEEKDAY = 8;

	    function mod(n, x) {
	        return ((n % x) + x) % x;
	    }

	    var indexOf;

	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }

	    function daysInMonth(year, month) {
	        if (isNaN(year) || isNaN(month)) {
	            return NaN;
	        }
	        var modMonth = mod(month, 12);
	        year += (month - modMonth) / 12;
	        return modMonth === 1
	            ? isLeapYear(year)
	                ? 29
	                : 28
	            : 31 - ((modMonth % 7) % 2);
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PRIORITY

	    addUnitPriority('month', 8);

	    // PARSING

	    addRegexToken('M', match1to2);
	    addRegexToken('MM', match1to2, match2);
	    addRegexToken('MMM', function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var defaultLocaleMonths =
	            'January_February_March_April_May_June_July_August_September_October_November_December'.split(
	                '_'
	            ),
	        defaultLocaleMonthsShort =
	            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
	        defaultMonthsShortRegex = matchWord,
	        defaultMonthsRegex = matchWord;

	    function localeMonths(m, format) {
	        if (!m) {
	            return isArray(this._months)
	                ? this._months
	                : this._months['standalone'];
	        }
	        return isArray(this._months)
	            ? this._months[m.month()]
	            : this._months[
	                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
	                      ? 'format'
	                      : 'standalone'
	              ][m.month()];
	    }

	    function localeMonthsShort(m, format) {
	        if (!m) {
	            return isArray(this._monthsShort)
	                ? this._monthsShort
	                : this._monthsShort['standalone'];
	        }
	        return isArray(this._monthsShort)
	            ? this._monthsShort[m.month()]
	            : this._monthsShort[
	                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
	              ][m.month()];
	    }

	    function handleStrictParse(monthName, format, strict) {
	        var i,
	            ii,
	            mom,
	            llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeMonthsParse(monthName, format, strict) {
	        var i, mom, regex;

	        if (this._monthsParseExact) {
	            return handleStrictParse.call(this, monthName, format, strict);
	        }

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp(
	                    '^' + this.months(mom, '').replace('.', '') + '$',
	                    'i'
	                );
	                this._shortMonthsParse[i] = new RegExp(
	                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
	                    'i'
	                );
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex =
	                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (
	                strict &&
	                format === 'MMMM' &&
	                this._longMonthsParse[i].test(monthName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'MMM' &&
	                this._shortMonthsParse[i].test(monthName)
	            ) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth(mom, value) {
	        var dayOfMonth;

	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }

	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (!isNumber(value)) {
	                    return mom;
	                }
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth(value) {
	        if (value != null) {
	            setMonth(this, value);
	            hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get(this, 'Month');
	        }
	    }

	    function getDaysInMonth() {
	        return daysInMonth(this.year(), this.month());
	    }

	    function monthsShortRegex(isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsShortRegex')) {
	                this._monthsShortRegex = defaultMonthsShortRegex;
	            }
	            return this._monthsShortStrictRegex && isStrict
	                ? this._monthsShortStrictRegex
	                : this._monthsShortRegex;
	        }
	    }

	    function monthsRegex(isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                this._monthsRegex = defaultMonthsRegex;
	            }
	            return this._monthsStrictRegex && isStrict
	                ? this._monthsStrictRegex
	                : this._monthsRegex;
	        }
	    }

	    function computeMonthsParse() {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var shortPieces = [],
	            longPieces = [],
	            mixedPieces = [],
	            i,
	            mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	        }
	        for (i = 0; i < 24; i++) {
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }

	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp(
	            '^(' + longPieces.join('|') + ')',
	            'i'
	        );
	        this._monthsShortStrictRegex = new RegExp(
	            '^(' + shortPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
	    });

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY', 4], 0, 'year');
	    addFormatToken(0, ['YYYYY', 5], 0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PRIORITIES

	    addUnitPriority('year', 1);

	    // PARSING

	    addRegexToken('Y', matchSigned);
	    addRegexToken('YY', match1to2, match2);
	    addRegexToken('YYYY', match1to4, match4);
	    addRegexToken('YYYYY', match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] =
	            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    // HOOKS

	    hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', true);

	    function getIsLeapYear() {
	        return isLeapYear(this.year());
	    }

	    function createDate(y, m, d, h, M, s, ms) {
	        // can't just apply() to create a date:
	        // https://stackoverflow.com/q/181348
	        var date;
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            date = new Date(y + 400, m, d, h, M, s, ms);
	            if (isFinite(date.getFullYear())) {
	                date.setFullYear(y);
	            }
	        } else {
	            date = new Date(y, m, d, h, M, s, ms);
	        }

	        return date;
	    }

	    function createUTCDate(y) {
	        var date, args;
	        // the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            args = Array.prototype.slice.call(arguments);
	            // preserve leap years using a full 400 year cycle, then reset
	            args[0] = y + 400;
	            date = new Date(Date.UTC.apply(null, args));
	            if (isFinite(date.getUTCFullYear())) {
	                date.setUTCFullYear(y);
	            }
	        } else {
	            date = new Date(Date.UTC.apply(null, arguments));
	        }

	        return date;
	    }

	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

	        return -fwdlw + fwd - 1;
	    }

	    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear,
	            resDayOfYear;

	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }

	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear,
	        };
	    }

	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek,
	            resYear;

	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }

	        return {
	            week: resWeek,
	            year: resYear,
	        };
	    }

	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }

	    // FORMATTING

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PRIORITIES

	    addUnitPriority('week', 5);
	    addUnitPriority('isoWeek', 5);

	    // PARSING

	    addRegexToken('w', match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W', match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(
	        ['w', 'ww', 'W', 'WW'],
	        function (input, week, config, token) {
	            week[token.substr(0, 1)] = toInt(input);
	        }
	    );

	    // HELPERS

	    // LOCALES

	    function localeWeek(mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow: 0, // Sunday is the first day of the week.
	        doy: 6, // The week that contains Jan 6th is the first week of the year.
	    };

	    function localeFirstDayOfWeek() {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear() {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek(input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek(input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    // FORMATTING

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PRIORITY
	    addUnitPriority('day', 11);
	    addUnitPriority('weekday', 11);
	    addUnitPriority('isoWeekday', 11);

	    // PARSING

	    addRegexToken('d', match1to2);
	    addRegexToken('e', match1to2);
	    addRegexToken('E', match1to2);
	    addRegexToken('dd', function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd', function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd', function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    function parseIsoWeekday(input, locale) {
	        if (typeof input === 'string') {
	            return locale.weekdaysParse(input) % 7 || 7;
	        }
	        return isNaN(input) ? null : input;
	    }

	    // LOCALES
	    function shiftWeekdays(ws, n) {
	        return ws.slice(n, 7).concat(ws.slice(0, n));
	    }

	    var defaultLocaleWeekdays =
	            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        defaultWeekdaysRegex = matchWord,
	        defaultWeekdaysShortRegex = matchWord,
	        defaultWeekdaysMinRegex = matchWord;

	    function localeWeekdays(m, format) {
	        var weekdays = isArray(this._weekdays)
	            ? this._weekdays
	            : this._weekdays[
	                  m && m !== true && this._weekdays.isFormat.test(format)
	                      ? 'format'
	                      : 'standalone'
	              ];
	        return m === true
	            ? shiftWeekdays(weekdays, this._week.dow)
	            : m
	            ? weekdays[m.day()]
	            : weekdays;
	    }

	    function localeWeekdaysShort(m) {
	        return m === true
	            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
	            : m
	            ? this._weekdaysShort[m.day()]
	            : this._weekdaysShort;
	    }

	    function localeWeekdaysMin(m) {
	        return m === true
	            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
	            : m
	            ? this._weekdaysMin[m.day()]
	            : this._weekdaysMin;
	    }

	    function handleStrictParse$1(weekdayName, format, strict) {
	        var i,
	            ii,
	            mom,
	            llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];

	            for (i = 0; i < 7; ++i) {
	                mom = createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeWeekdaysParse(weekdayName, format, strict) {
	        var i, mom, regex;

	        if (this._weekdaysParseExact) {
	            return handleStrictParse$1.call(this, weekdayName, format, strict);
	        }

	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already

	            mom = createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	                this._shortWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	                this._minWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	            }
	            if (!this._weekdaysParse[i]) {
	                regex =
	                    '^' +
	                    this.weekdays(mom, '') +
	                    '|^' +
	                    this.weekdaysShort(mom, '') +
	                    '|^' +
	                    this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (
	                strict &&
	                format === 'dddd' &&
	                this._fullWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'ddd' &&
	                this._shortWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'dd' &&
	                this._minWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }

	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.

	        if (input != null) {
	            var weekday = parseIsoWeekday(input, this.localeData());
	            return this.day(this.day() % 7 ? weekday : weekday - 7);
	        } else {
	            return this.day() || 7;
	        }
	    }

	    function weekdaysRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                this._weekdaysRegex = defaultWeekdaysRegex;
	            }
	            return this._weekdaysStrictRegex && isStrict
	                ? this._weekdaysStrictRegex
	                : this._weekdaysRegex;
	        }
	    }

	    function weekdaysShortRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	            }
	            return this._weekdaysShortStrictRegex && isStrict
	                ? this._weekdaysShortStrictRegex
	                : this._weekdaysShortRegex;
	        }
	    }

	    function weekdaysMinRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	            }
	            return this._weekdaysMinStrictRegex && isStrict
	                ? this._weekdaysMinStrictRegex
	                : this._weekdaysMinRegex;
	        }
	    }

	    function computeWeekdaysParse() {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var minPieces = [],
	            shortPieces = [],
	            longPieces = [],
	            mixedPieces = [],
	            i,
	            mom,
	            minp,
	            shortp,
	            longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, 1]).day(i);
	            minp = regexEscape(this.weekdaysMin(mom, ''));
	            shortp = regexEscape(this.weekdaysShort(mom, ''));
	            longp = regexEscape(this.weekdays(mom, ''));
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);

	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;

	        this._weekdaysStrictRegex = new RegExp(
	            '^(' + longPieces.join('|') + ')',
	            'i'
	        );
	        this._weekdaysShortStrictRegex = new RegExp(
	            '^(' + shortPieces.join('|') + ')',
	            'i'
	        );
	        this._weekdaysMinStrictRegex = new RegExp(
	            '^(' + minPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }

	    function kFormat() {
	        return this.hours() || 24;
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);

	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('hmmss', 0, 0, function () {
	        return (
	            '' +
	            hFormat.apply(this) +
	            zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2)
	        );
	    });

	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('Hmmss', 0, 0, function () {
	        return (
	            '' +
	            this.hours() +
	            zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2)
	        );
	    });

	    function meridiem(token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(
	                this.hours(),
	                this.minutes(),
	                lowercase
	            );
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PRIORITY
	    addUnitPriority('hour', 13);

	    // PARSING

	    function matchMeridiem(isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a', matchMeridiem);
	    addRegexToken('A', matchMeridiem);
	    addRegexToken('H', match1to2);
	    addRegexToken('h', match1to2);
	    addRegexToken('k', match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);
	    addRegexToken('kk', match1to2, match2);

	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['k', 'kk'], function (input, array, config) {
	        var kInput = toInt(input);
	        array[HOUR] = kInput === 24 ? 0 : kInput;
	    });
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4,
	            pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4,
	            pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });

	    // LOCALES

	    function localeIsPM(input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return (input + '').toLowerCase().charAt(0) === 'p';
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
	        // Setting the hour should keep the time, because the user explicitly
	        // specified which hour they want. So trying to maintain the same hour (in
	        // a new timezone) makes sense. Adding/subtracting hours does not follow
	        // this rule.
	        getSetHour = makeGetSet('Hours', true);

	    function localeMeridiem(hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }

	    var baseConfig = {
	        calendar: defaultCalendar,
	        longDateFormat: defaultLongDateFormat,
	        invalidDate: defaultInvalidDate,
	        ordinal: defaultOrdinal,
	        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
	        relativeTime: defaultRelativeTime,

	        months: defaultLocaleMonths,
	        monthsShort: defaultLocaleMonthsShort,

	        week: defaultLocaleWeek,

	        weekdays: defaultLocaleWeekdays,
	        weekdaysMin: defaultLocaleWeekdaysMin,
	        weekdaysShort: defaultLocaleWeekdaysShort,

	        meridiemParse: defaultLocaleMeridiemParse,
	    };

	    // internal storage for locale config files
	    var locales = {},
	        localeFamilies = {},
	        globalLocale;

	    function commonPrefix(arr1, arr2) {
	        var i,
	            minl = Math.min(arr1.length, arr2.length);
	        for (i = 0; i < minl; i += 1) {
	            if (arr1[i] !== arr2[i]) {
	                return i;
	            }
	        }
	        return minl;
	    }

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0,
	            j,
	            next,
	            locale,
	            split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (
	                    next &&
	                    next.length >= j &&
	                    commonPrefix(split, next) >= j - 1
	                ) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return globalLocale;
	    }

	    function isLocaleNameSane(name) {
	        // Prevent names that look like filesystem paths, i.e contain '/' or '\'
	        return name.match('^[^/\\\\]*$') != null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null,
	            aliasedRequire;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (
	            locales[name] === undefined &&
	            'object' !== 'undefined' &&
	            module &&
	            module.exports &&
	            isLocaleNameSane(name)
	        ) {
	            try {
	                oldLocale = globalLocale._abbr;
	                aliasedRequire = commonjsRequire;
	                aliasedRequire('./locale/' + name);
	                getSetGlobalLocale(oldLocale);
	            } catch (e) {
	                // mark as not found to avoid repeating expensive file require call causing high CPU
	                // when trying to find en-US, en_US, en-us for every format call
	                locales[name] = null; // null means not found
	            }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function getSetGlobalLocale(key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = getLocale(key);
	            } else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            } else {
	                if (typeof console !== 'undefined' && console.warn) {
	                    //warn user if arguments are passed but the locale could not be set
	                    console.warn(
	                        'Locale ' + key + ' not found. Did you forget to load it?'
	                    );
	                }
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale(name, config) {
	        if (config !== null) {
	            var locale,
	                parentConfig = baseConfig;
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple(
	                    'defineLocaleOverride',
	                    'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale ' +
	                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
	                );
	                parentConfig = locales[name]._config;
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    parentConfig = locales[config.parentLocale]._config;
	                } else {
	                    locale = loadLocale(config.parentLocale);
	                    if (locale != null) {
	                        parentConfig = locale._config;
	                    } else {
	                        if (!localeFamilies[config.parentLocale]) {
	                            localeFamilies[config.parentLocale] = [];
	                        }
	                        localeFamilies[config.parentLocale].push({
	                            name: name,
	                            config: config,
	                        });
	                        return null;
	                    }
	                }
	            }
	            locales[name] = new Locale(mergeConfigs(parentConfig, config));

	            if (localeFamilies[name]) {
	                localeFamilies[name].forEach(function (x) {
	                    defineLocale(x.name, x.config);
	                });
	            }

	            // backwards compat for now: also set the locale
	            // make sure we set the locale AFTER all child locales have been
	            // created, so we won't end up with the child locale set.
	            getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale,
	                tmpLocale,
	                parentConfig = baseConfig;

	            if (locales[name] != null && locales[name].parentLocale != null) {
	                // Update existing child locale in-place to avoid memory-leaks
	                locales[name].set(mergeConfigs(locales[name]._config, config));
	            } else {
	                // MERGE
	                tmpLocale = loadLocale(name);
	                if (tmpLocale != null) {
	                    parentConfig = tmpLocale._config;
	                }
	                config = mergeConfigs(parentConfig, config);
	                if (tmpLocale == null) {
	                    // updateLocale is called for creating a new locale
	                    // Set abbr so it will have a name (getters return
	                    // undefined otherwise).
	                    config.abbr = name;
	                }
	                locale = new Locale(config);
	                locale.parentLocale = locales[name];
	                locales[name] = locale;
	            }

	            // backwards compat for now: also set the locale
	            getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                    if (name === getSetGlobalLocale()) {
	                        getSetGlobalLocale(name);
	                    }
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }

	    // returns locale data
	    function getLocale(key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    function listLocales() {
	        return keys(locales);
	    }

	    function checkOverflow(m) {
	        var overflow,
	            a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH] < 0 || a[MONTH] > 11
	                    ? MONTH
	                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
	                    ? DATE
	                    : a[HOUR] < 0 ||
	                      a[HOUR] > 24 ||
	                      (a[HOUR] === 24 &&
	                          (a[MINUTE] !== 0 ||
	                              a[SECOND] !== 0 ||
	                              a[MILLISECOND] !== 0))
	                    ? HOUR
	                    : a[MINUTE] < 0 || a[MINUTE] > 59
	                    ? MINUTE
	                    : a[SECOND] < 0 || a[SECOND] > 59
	                    ? SECOND
	                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
	                    ? MILLISECOND
	                    : -1;

	            if (
	                getParsingFlags(m)._overflowDayOfYear &&
	                (overflow < YEAR || overflow > DATE)
	            ) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex =
	            /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
	        basicIsoRegex =
	            /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
	        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
	        isoDates = [
	            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	            ['YYYY-DDD', /\d{4}-\d{3}/],
	            ['YYYY-MM', /\d{4}-\d\d/, false],
	            ['YYYYYYMMDD', /[+-]\d{10}/],
	            ['YYYYMMDD', /\d{8}/],
	            ['GGGG[W]WWE', /\d{4}W\d{3}/],
	            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	            ['YYYYDDD', /\d{7}/],
	            ['YYYYMM', /\d{6}/, false],
	            ['YYYY', /\d{4}/, false],
	        ],
	        // iso time formats and regexes
	        isoTimes = [
	            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	            ['HH:mm', /\d\d:\d\d/],
	            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	            ['HHmmss', /\d\d\d\d\d\d/],
	            ['HHmm', /\d\d\d\d/],
	            ['HH', /\d\d/],
	        ],
	        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
	        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	        rfc2822 =
	            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
	        obsOffsets = {
	            UT: 0,
	            GMT: 0,
	            EDT: -4 * 60,
	            EST: -5 * 60,
	            CDT: -5 * 60,
	            CST: -6 * 60,
	            MDT: -6 * 60,
	            MST: -7 * 60,
	            PDT: -7 * 60,
	            PST: -8 * 60,
	        };

	    // date from iso format
	    function configFromISO(config) {
	        var i,
	            l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime,
	            dateFormat,
	            timeFormat,
	            tzFormat,
	            isoDatesLen = isoDates.length,
	            isoTimesLen = isoTimes.length;

	        if (match) {
	            getParsingFlags(config).iso = true;
	            for (i = 0, l = isoDatesLen; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimesLen; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    function extractFromRFC2822Strings(
	        yearStr,
	        monthStr,
	        dayStr,
	        hourStr,
	        minuteStr,
	        secondStr
	    ) {
	        var result = [
	            untruncateYear(yearStr),
	            defaultLocaleMonthsShort.indexOf(monthStr),
	            parseInt(dayStr, 10),
	            parseInt(hourStr, 10),
	            parseInt(minuteStr, 10),
	        ];

	        if (secondStr) {
	            result.push(parseInt(secondStr, 10));
	        }

	        return result;
	    }

	    function untruncateYear(yearStr) {
	        var year = parseInt(yearStr, 10);
	        if (year <= 49) {
	            return 2000 + year;
	        } else if (year <= 999) {
	            return 1900 + year;
	        }
	        return year;
	    }

	    function preprocessRFC2822(s) {
	        // Remove comments and folding whitespace and replace multiple-spaces with a single space
	        return s
	            .replace(/\([^()]*\)|[\n\t]/g, ' ')
	            .replace(/(\s\s+)/g, ' ')
	            .replace(/^\s\s*/, '')
	            .replace(/\s\s*$/, '');
	    }

	    function checkWeekday(weekdayStr, parsedInput, config) {
	        if (weekdayStr) {
	            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
	            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
	                weekdayActual = new Date(
	                    parsedInput[0],
	                    parsedInput[1],
	                    parsedInput[2]
	                ).getDay();
	            if (weekdayProvided !== weekdayActual) {
	                getParsingFlags(config).weekdayMismatch = true;
	                config._isValid = false;
	                return false;
	            }
	        }
	        return true;
	    }

	    function calculateOffset(obsOffset, militaryOffset, numOffset) {
	        if (obsOffset) {
	            return obsOffsets[obsOffset];
	        } else if (militaryOffset) {
	            // the only allowed military tz is Z
	            return 0;
	        } else {
	            var hm = parseInt(numOffset, 10),
	                m = hm % 100,
	                h = (hm - m) / 100;
	            return h * 60 + m;
	        }
	    }

	    // date and time from ref 2822 format
	    function configFromRFC2822(config) {
	        var match = rfc2822.exec(preprocessRFC2822(config._i)),
	            parsedArray;
	        if (match) {
	            parsedArray = extractFromRFC2822Strings(
	                match[4],
	                match[3],
	                match[2],
	                match[5],
	                match[6],
	                match[7]
	            );
	            if (!checkWeekday(match[1], parsedArray, config)) {
	                return;
	            }

	            config._a = parsedArray;
	            config._tzm = calculateOffset(match[8], match[9], match[10]);

	            config._d = createUTCDate.apply(null, config._a);
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

	            getParsingFlags(config).rfc2822 = true;
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);
	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }

	        configFromRFC2822(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }

	        if (config._strict) {
	            config._isValid = false;
	        } else {
	            // Final attempt, use Input Fallback
	            hooks.createFromInputFallback(config);
	        }
	    }

	    hooks.createFromInputFallback = deprecate(
	        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
	            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
	            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(hooks.now());
	        if (config._useUTC) {
	            return [
	                nowValue.getUTCFullYear(),
	                nowValue.getUTCMonth(),
	                nowValue.getUTCDate(),
	            ];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray(config) {
	        var i,
	            date,
	            input = [],
	            currentDate,
	            expectedWeekday,
	            yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear != null) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (
	                config._dayOfYear > daysInYear(yearToUse) ||
	                config._dayOfYear === 0
	            ) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] =
	                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (
	            config._a[HOUR] === 24 &&
	            config._a[MINUTE] === 0 &&
	            config._a[SECOND] === 0 &&
	            config._a[MILLISECOND] === 0
	        ) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(
	            null,
	            input
	        );
	        expectedWeekday = config._useUTC
	            ? config._d.getUTCDay()
	            : config._d.getDay();

	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }

	        // check for mismatching day of week
	        if (
	            config._w &&
	            typeof config._w.d !== 'undefined' &&
	            config._w.d !== expectedWeekday
	        ) {
	            getParsingFlags(config).weekdayMismatch = true;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(
	                w.GG,
	                config._a[YEAR],
	                weekOfYear(createLocal(), 1, 4).year
	            );
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            curWeek = weekOfYear(createLocal(), dow, doy);

	            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

	            // Default to current week.
	            week = defaults(w.w, curWeek.week);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from beginning of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to beginning of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }

	    // constant that refers to the ISO standard
	    hooks.ISO_8601 = function () {};

	    // constant that refers to the RFC 2822 form
	    hooks.RFC_2822 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }
	        if (config._f === hooks.RFC_2822) {
	            configFromRFC2822(config);
	            return;
	        }
	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i,
	            parsedInput,
	            tokens,
	            token,
	            skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0,
	            era,
	            tokenLen;

	        tokens =
	            expandFormat(config._f, config._locale).match(formattingTokens) || [];
	        tokenLen = tokens.length;
	        for (i = 0; i < tokenLen; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
	                [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(
	                    string.indexOf(parsedInput) + parsedInput.length
	                );
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                } else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            } else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver =
	            stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (
	            config._a[HOUR] <= 12 &&
	            getParsingFlags(config).bigHour === true &&
	            config._a[HOUR] > 0
	        ) {
	            getParsingFlags(config).bigHour = undefined;
	        }

	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(
	            config._locale,
	            config._a[HOUR],
	            config._meridiem
	        );

	        // handle era
	        era = getParsingFlags(config).era;
	        if (era !== null) {
	            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
	        }

	        configFromArray(config);
	        checkOverflow(config);
	    }

	    function meridiemFixWrap(locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,
	            scoreToBeat,
	            i,
	            currentScore,
	            validFormatFound,
	            bestFormatIsValid = false,
	            configfLen = config._f.length;

	        if (configfLen === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < configfLen; i++) {
	            currentScore = 0;
	            validFormatFound = false;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (isValid(tempConfig)) {
	                validFormatFound = true;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (!bestFormatIsValid) {
	                if (
	                    scoreToBeat == null ||
	                    currentScore < scoreToBeat ||
	                    validFormatFound
	                ) {
	                    scoreToBeat = currentScore;
	                    bestMoment = tempConfig;
	                    if (validFormatFound) {
	                        bestFormatIsValid = true;
	                    }
	                }
	            } else {
	                if (currentScore < scoreToBeat) {
	                    scoreToBeat = currentScore;
	                    bestMoment = tempConfig;
	                }
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i),
	            dayOrDate = i.day === undefined ? i.date : i.day;
	        config._a = map(
	            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
	            function (obj) {
	                return obj && parseInt(obj, 10);
	            }
	        );

	        configFromArray(config);
	    }

	    function createFromConfig(config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig(config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return createInvalid({ nullInput: true });
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isDate(input)) {
	            config._d = input;
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else {
	            configFromInput(config);
	        }

	        if (!isValid(config)) {
	            config._d = null;
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (isUndefined(input)) {
	            config._d = new Date(hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (isObject(input)) {
	            configFromObject(config);
	        } else if (isNumber(input)) {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC(input, format, locale, strict, isUTC) {
	        var c = {};

	        if (format === true || format === false) {
	            strict = format;
	            format = undefined;
	        }

	        if (locale === true || locale === false) {
	            strict = locale;
	            locale = undefined;
	        }

	        if (
	            (isObject(input) && isObjectEmpty(input)) ||
	            (isArray(input) && input.length === 0)
	        ) {
	            input = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function createLocal(input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	            function () {
	                var other = createLocal.apply(null, arguments);
	                if (this.isValid() && other.isValid()) {
	                    return other < this ? this : other;
	                } else {
	                    return createInvalid();
	                }
	            }
	        ),
	        prototypeMax = deprecate(
	            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	            function () {
	                var other = createLocal.apply(null, arguments);
	                if (this.isValid() && other.isValid()) {
	                    return other > this ? this : other;
	                } else {
	                    return createInvalid();
	                }
	            }
	        );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min() {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max() {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    var now = function () {
	        return Date.now ? Date.now() : +new Date();
	    };

	    var ordering = [
	        'year',
	        'quarter',
	        'month',
	        'week',
	        'day',
	        'hour',
	        'minute',
	        'second',
	        'millisecond',
	    ];

	    function isDurationValid(m) {
	        var key,
	            unitHasDecimal = false,
	            i,
	            orderLen = ordering.length;
	        for (key in m) {
	            if (
	                hasOwnProp(m, key) &&
	                !(
	                    indexOf.call(ordering, key) !== -1 &&
	                    (m[key] == null || !isNaN(m[key]))
	                )
	            ) {
	                return false;
	            }
	        }

	        for (i = 0; i < orderLen; ++i) {
	            if (m[ordering[i]]) {
	                if (unitHasDecimal) {
	                    return false; // only allow non-integers for smallest unit
	                }
	                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
	                    unitHasDecimal = true;
	                }
	            }
	        }

	        return true;
	    }

	    function isValid$1() {
	        return this._isValid;
	    }

	    function createInvalid$1() {
	        return createDuration(NaN);
	    }

	    function Duration(duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        this._isValid = isDurationValid(normalizedInput);

	        // representation for dateAddRemove
	        this._milliseconds =
	            +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days + weeks * 7;
	        // It is impossible to translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months + quarters * 3 + years * 12;

	        this._data = {};

	        this._locale = getLocale();

	        this._bubble();
	    }

	    function isDuration(obj) {
	        return obj instanceof Duration;
	    }

	    function absRound(number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }

	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if (
	                (dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
	            ) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    // FORMATTING

	    function offset(token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset(),
	                sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return (
	                sign +
	                zeroFill(~~(offset / 60), 2) +
	                separator +
	                zeroFill(~~offset % 60, 2)
	            );
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z', matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(matcher, string) {
	        var matches = (string || '').match(matcher),
	            chunk,
	            parts,
	            minutes;

	        if (matches === null) {
	            return null;
	        }

	        chunk = matches[matches.length - 1] || [];
	        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff =
	                (isMoment(input) || isDate(input)
	                    ? input.valueOf()
	                    : createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return createLocal(input).local();
	        }
	    }

	    function getDateOffset(m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset());
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset(input, keepLocalTime, keepMinutes) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	                if (input === null) {
	                    return this;
	                }
	            } else if (Math.abs(input) < 16 && !keepMinutes) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    addSubtract(
	                        this,
	                        createDuration(input - offset, 'm'),
	                        1,
	                        false
	                    );
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone(input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC(keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal(keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset() {
	        if (this._tzm != null) {
	            this.utcOffset(this._tzm, false, true);
	        } else if (typeof this._i === 'string') {
	            var tZone = offsetFromString(matchOffset, this._i);
	            if (tZone != null) {
	                this.utcOffset(tZone);
	            } else {
	                this.utcOffset(0, true);
	            }
	        }
	        return this;
	    }

	    function hasAlignedHourOffset(input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime() {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted() {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }

	        var c = {},
	            other;

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	            this._isDSTShifted =
	                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal() {
	        return this.isValid() ? !this._isUTC : false;
	    }

	    function isUtcOffset() {
	        return this.isValid() ? this._isUTC : false;
	    }

	    function isUtc() {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }

	    // ASP.NET json date format regex
	    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
	        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	        // and further modified to allow for strings containing both week and day
	        isoRegex =
	            /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

	    function createDuration(input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms: input._milliseconds,
	                d: input._days,
	                M: input._months,
	            };
	        } else if (isNumber(input) || !isNaN(+input)) {
	            duration = {};
	            if (key) {
	                duration[key] = +input;
	            } else {
	                duration.milliseconds = +input;
	            }
	        } else if ((match = aspNetRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            duration = {
	                y: 0,
	                d: toInt(match[DATE]) * sign,
	                h: toInt(match[HOUR]) * sign,
	                m: toInt(match[MINUTE]) * sign,
	                s: toInt(match[SECOND]) * sign,
	                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
	            };
	        } else if ((match = isoRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            duration = {
	                y: parseIso(match[2], sign),
	                M: parseIso(match[3], sign),
	                w: parseIso(match[4], sign),
	                d: parseIso(match[5], sign),
	                h: parseIso(match[6], sign),
	                m: parseIso(match[7], sign),
	                s: parseIso(match[8], sign),
	            };
	        } else if (duration == null) {
	            // checks for null or undefined
	            duration = {};
	        } else if (
	            typeof duration === 'object' &&
	            ('from' in duration || 'to' in duration)
	        ) {
	            diffRes = momentsDifference(
	                createLocal(duration.from),
	                createLocal(duration.to)
	            );

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
	            ret._isValid = input._isValid;
	        }

	        return ret;
	    }

	    createDuration.fn = Duration.prototype;
	    createDuration.invalid = createInvalid$1;

	    function parseIso(inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {};

	        res.months =
	            other.month() - base.month() + (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +base.clone().add(res.months, 'M');

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return { milliseconds: 0, months: 0 };
	        }

	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(
	                    name,
	                    'moment().' +
	                        name +
	                        '(period, number) is deprecated. Please use moment().' +
	                        name +
	                        '(number, period). ' +
	                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
	                );
	                tmp = val;
	                val = period;
	                period = tmp;
	            }

	            dur = createDuration(val, period);
	            addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function addSubtract(mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);

	        if (!mom.isValid()) {
	            // No op
	            return;
	        }

	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (months) {
	            setMonth(mom, get(mom, 'Month') + months * isAdding);
	        }
	        if (days) {
	            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	        }
	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (updateOffset) {
	            hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add = createAdder(1, 'add'),
	        subtract = createAdder(-1, 'subtract');

	    function isString(input) {
	        return typeof input === 'string' || input instanceof String;
	    }

	    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
	    function isMomentInput(input) {
	        return (
	            isMoment(input) ||
	            isDate(input) ||
	            isString(input) ||
	            isNumber(input) ||
	            isNumberOrStringArray(input) ||
	            isMomentInputObject(input) ||
	            input === null ||
	            input === undefined
	        );
	    }

	    function isMomentInputObject(input) {
	        var objectTest = isObject(input) && !isObjectEmpty(input),
	            propertyTest = false,
	            properties = [
	                'years',
	                'year',
	                'y',
	                'months',
	                'month',
	                'M',
	                'days',
	                'day',
	                'd',
	                'dates',
	                'date',
	                'D',
	                'hours',
	                'hour',
	                'h',
	                'minutes',
	                'minute',
	                'm',
	                'seconds',
	                'second',
	                's',
	                'milliseconds',
	                'millisecond',
	                'ms',
	            ],
	            i,
	            property,
	            propertyLen = properties.length;

	        for (i = 0; i < propertyLen; i += 1) {
	            property = properties[i];
	            propertyTest = propertyTest || hasOwnProp(input, property);
	        }

	        return objectTest && propertyTest;
	    }

	    function isNumberOrStringArray(input) {
	        var arrayTest = isArray(input),
	            dataTypeTest = false;
	        if (arrayTest) {
	            dataTypeTest =
	                input.filter(function (item) {
	                    return !isNumber(item) && isString(input);
	                }).length === 0;
	        }
	        return arrayTest && dataTypeTest;
	    }

	    function isCalendarSpec(input) {
	        var objectTest = isObject(input) && !isObjectEmpty(input),
	            propertyTest = false,
	            properties = [
	                'sameDay',
	                'nextDay',
	                'lastDay',
	                'nextWeek',
	                'lastWeek',
	                'sameElse',
	            ],
	            i,
	            property;

	        for (i = 0; i < properties.length; i += 1) {
	            property = properties[i];
	            propertyTest = propertyTest || hasOwnProp(input, property);
	        }

	        return objectTest && propertyTest;
	    }

	    function getCalendarFormat(myMoment, now) {
	        var diff = myMoment.diff(now, 'days', true);
	        return diff < -6
	            ? 'sameElse'
	            : diff < -1
	            ? 'lastWeek'
	            : diff < 0
	            ? 'lastDay'
	            : diff < 1
	            ? 'sameDay'
	            : diff < 2
	            ? 'nextDay'
	            : diff < 7
	            ? 'nextWeek'
	            : 'sameElse';
	    }

	    function calendar$1(time, formats) {
	        // Support for single parameter, formats only overload to the calendar function
	        if (arguments.length === 1) {
	            if (!arguments[0]) {
	                time = undefined;
	                formats = undefined;
	            } else if (isMomentInput(arguments[0])) {
	                time = arguments[0];
	                formats = undefined;
	            } else if (isCalendarSpec(arguments[0])) {
	                formats = arguments[0];
	                time = undefined;
	            }
	        }
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            format = hooks.calendarFormat(this, sod) || 'sameElse',
	            output =
	                formats &&
	                (isFunction(formats[format])
	                    ? formats[format].call(this, now)
	                    : formats[format]);

	        return this.format(
	            output || this.localeData().calendar(format, this, createLocal(now))
	        );
	    }

	    function clone() {
	        return new Moment(this);
	    }

	    function isAfter(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }

	    function isBefore(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }

	    function isBetween(from, to, units, inclusivity) {
	        var localFrom = isMoment(from) ? from : createLocal(from),
	            localTo = isMoment(to) ? to : createLocal(to);
	        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
	            return false;
	        }
	        inclusivity = inclusivity || '()';
	        return (
	            (inclusivity[0] === '('
	                ? this.isAfter(localFrom, units)
	                : !this.isBefore(localFrom, units)) &&
	            (inclusivity[1] === ')'
	                ? this.isBefore(localTo, units)
	                : !this.isAfter(localTo, units))
	        );
	    }

	    function isSame(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return (
	                this.clone().startOf(units).valueOf() <= inputMs &&
	                inputMs <= this.clone().endOf(units).valueOf()
	            );
	        }
	    }

	    function isSameOrAfter(input, units) {
	        return this.isSame(input, units) || this.isAfter(input, units);
	    }

	    function isSameOrBefore(input, units) {
	        return this.isSame(input, units) || this.isBefore(input, units);
	    }

	    function diff(input, units, asFloat) {
	        var that, zoneDelta, output;

	        if (!this.isValid()) {
	            return NaN;
	        }

	        that = cloneWithOffset(input, this);

	        if (!that.isValid()) {
	            return NaN;
	        }

	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

	        units = normalizeUnits(units);

	        switch (units) {
	            case 'year':
	                output = monthDiff(this, that) / 12;
	                break;
	            case 'month':
	                output = monthDiff(this, that);
	                break;
	            case 'quarter':
	                output = monthDiff(this, that) / 3;
	                break;
	            case 'second':
	                output = (this - that) / 1e3;
	                break; // 1000
	            case 'minute':
	                output = (this - that) / 6e4;
	                break; // 1000 * 60
	            case 'hour':
	                output = (this - that) / 36e5;
	                break; // 1000 * 60 * 60
	            case 'day':
	                output = (this - that - zoneDelta) / 864e5;
	                break; // 1000 * 60 * 60 * 24, negate dst
	            case 'week':
	                output = (this - that - zoneDelta) / 6048e5;
	                break; // 1000 * 60 * 60 * 24 * 7, negate dst
	            default:
	                output = this - that;
	        }

	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff(a, b) {
	        if (a.date() < b.date()) {
	            // end-of-month calculations work correct when the start month has more
	            // days than the end month.
	            return -monthDiff(b, a);
	        }
	        // difference in months
	        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2,
	            adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }

	    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

	    function toString() {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function toISOString(keepOffset) {
	        if (!this.isValid()) {
	            return null;
	        }
	        var utc = keepOffset !== true,
	            m = utc ? this.clone().utc() : this;
	        if (m.year() < 0 || m.year() > 9999) {
	            return formatMoment(
	                m,
	                utc
	                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
	                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
	            );
	        }
	        if (isFunction(Date.prototype.toISOString)) {
	            // native implementation is ~50x faster, use it when we can
	            if (utc) {
	                return this.toDate().toISOString();
	            } else {
	                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
	                    .toISOString()
	                    .replace('Z', formatMoment(m, 'Z'));
	            }
	        }
	        return formatMoment(
	            m,
	            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
	        );
	    }

	    /**
	     * Return a human readable representation of a moment that can
	     * also be evaluated to get a new moment which is the same
	     *
	     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	     */
	    function inspect() {
	        if (!this.isValid()) {
	            return 'moment.invalid(/* ' + this._i + ' */)';
	        }
	        var func = 'moment',
	            zone = '',
	            prefix,
	            year,
	            datetime,
	            suffix;
	        if (!this.isLocal()) {
	            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	            zone = 'Z';
	        }
	        prefix = '[' + func + '("]';
	        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
	        datetime = '-MM-DD[T]HH:mm:ss.SSS';
	        suffix = zone + '[")]';

	        return this.format(prefix + year + datetime + suffix);
	    }

	    function format(inputString) {
	        if (!inputString) {
	            inputString = this.isUtc()
	                ? hooks.defaultFormatUtc
	                : hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }

	    function from(time, withoutSuffix) {
	        if (
	            this.isValid() &&
	            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
	        ) {
	            return createDuration({ to: this, from: time })
	                .locale(this.locale())
	                .humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function fromNow(withoutSuffix) {
	        return this.from(createLocal(), withoutSuffix);
	    }

	    function to(time, withoutSuffix) {
	        if (
	            this.isValid() &&
	            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
	        ) {
	            return createDuration({ from: this, to: time })
	                .locale(this.locale())
	                .humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function toNow(withoutSuffix) {
	        return this.to(createLocal(), withoutSuffix);
	    }

	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale(key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData() {
	        return this._locale;
	    }

	    var MS_PER_SECOND = 1000,
	        MS_PER_MINUTE = 60 * MS_PER_SECOND,
	        MS_PER_HOUR = 60 * MS_PER_MINUTE,
	        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

	    // actual modulo - handles negative numbers (for dates before 1970):
	    function mod$1(dividend, divisor) {
	        return ((dividend % divisor) + divisor) % divisor;
	    }

	    function localStartOfDate(y, m, d) {
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return new Date(y, m, d).valueOf();
	        }
	    }

	    function utcStartOfDate(y, m, d) {
	        // Date.UTC remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return Date.UTC(y, m, d);
	        }
	    }

	    function startOf(units) {
	        var time, startOfDate;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }

	        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year(), 0, 1);
	                break;
	            case 'quarter':
	                time = startOfDate(
	                    this.year(),
	                    this.month() - (this.month() % 3),
	                    1
	                );
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month(), 1);
	                break;
	            case 'week':
	                time = startOfDate(
	                    this.year(),
	                    this.month(),
	                    this.date() - this.weekday()
	                );
	                break;
	            case 'isoWeek':
	                time = startOfDate(
	                    this.year(),
	                    this.month(),
	                    this.date() - (this.isoWeekday() - 1)
	                );
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date());
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time -= mod$1(
	                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
	                    MS_PER_HOUR
	                );
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_MINUTE);
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_SECOND);
	                break;
	        }

	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }

	    function endOf(units) {
	        var time, startOfDate;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }

	        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year() + 1, 0, 1) - 1;
	                break;
	            case 'quarter':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month() - (this.month() % 3) + 3,
	                        1
	                    ) - 1;
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
	                break;
	            case 'week':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month(),
	                        this.date() - this.weekday() + 7
	                    ) - 1;
	                break;
	            case 'isoWeek':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month(),
	                        this.date() - (this.isoWeekday() - 1) + 7
	                    ) - 1;
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time +=
	                    MS_PER_HOUR -
	                    mod$1(
	                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
	                        MS_PER_HOUR
	                    ) -
	                    1;
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
	                break;
	        }

	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }

	    function valueOf() {
	        return this._d.valueOf() - (this._offset || 0) * 60000;
	    }

	    function unix() {
	        return Math.floor(this.valueOf() / 1000);
	    }

	    function toDate() {
	        return new Date(this.valueOf());
	    }

	    function toArray() {
	        var m = this;
	        return [
	            m.year(),
	            m.month(),
	            m.date(),
	            m.hour(),
	            m.minute(),
	            m.second(),
	            m.millisecond(),
	        ];
	    }

	    function toObject() {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds(),
	        };
	    }

	    function toJSON() {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }

	    function isValid$2() {
	        return isValid(this);
	    }

	    function parsingFlags() {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt() {
	        return getParsingFlags(this).overflow;
	    }

	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict,
	        };
	    }

	    addFormatToken('N', 0, 0, 'eraAbbr');
	    addFormatToken('NN', 0, 0, 'eraAbbr');
	    addFormatToken('NNN', 0, 0, 'eraAbbr');
	    addFormatToken('NNNN', 0, 0, 'eraName');
	    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

	    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
	    addFormatToken('y', ['yy', 2], 0, 'eraYear');
	    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
	    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

	    addRegexToken('N', matchEraAbbr);
	    addRegexToken('NN', matchEraAbbr);
	    addRegexToken('NNN', matchEraAbbr);
	    addRegexToken('NNNN', matchEraName);
	    addRegexToken('NNNNN', matchEraNarrow);

	    addParseToken(
	        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],
	        function (input, array, config, token) {
	            var era = config._locale.erasParse(input, token, config._strict);
	            if (era) {
	                getParsingFlags(config).era = era;
	            } else {
	                getParsingFlags(config).invalidEra = input;
	            }
	        }
	    );

	    addRegexToken('y', matchUnsigned);
	    addRegexToken('yy', matchUnsigned);
	    addRegexToken('yyy', matchUnsigned);
	    addRegexToken('yyyy', matchUnsigned);
	    addRegexToken('yo', matchEraYearOrdinal);

	    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
	    addParseToken(['yo'], function (input, array, config, token) {
	        var match;
	        if (config._locale._eraYearOrdinalRegex) {
	            match = input.match(config._locale._eraYearOrdinalRegex);
	        }

	        if (config._locale.eraYearOrdinalParse) {
	            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
	        } else {
	            array[YEAR] = parseInt(input, 10);
	        }
	    });

	    function localeEras(m, format) {
	        var i,
	            l,
	            date,
	            eras = this._eras || getLocale('en')._eras;
	        for (i = 0, l = eras.length; i < l; ++i) {
	            switch (typeof eras[i].since) {
	                case 'string':
	                    // truncate time
	                    date = hooks(eras[i].since).startOf('day');
	                    eras[i].since = date.valueOf();
	                    break;
	            }

	            switch (typeof eras[i].until) {
	                case 'undefined':
	                    eras[i].until = +Infinity;
	                    break;
	                case 'string':
	                    // truncate time
	                    date = hooks(eras[i].until).startOf('day').valueOf();
	                    eras[i].until = date.valueOf();
	                    break;
	            }
	        }
	        return eras;
	    }

	    function localeErasParse(eraName, format, strict) {
	        var i,
	            l,
	            eras = this.eras(),
	            name,
	            abbr,
	            narrow;
	        eraName = eraName.toUpperCase();

	        for (i = 0, l = eras.length; i < l; ++i) {
	            name = eras[i].name.toUpperCase();
	            abbr = eras[i].abbr.toUpperCase();
	            narrow = eras[i].narrow.toUpperCase();

	            if (strict) {
	                switch (format) {
	                    case 'N':
	                    case 'NN':
	                    case 'NNN':
	                        if (abbr === eraName) {
	                            return eras[i];
	                        }
	                        break;

	                    case 'NNNN':
	                        if (name === eraName) {
	                            return eras[i];
	                        }
	                        break;

	                    case 'NNNNN':
	                        if (narrow === eraName) {
	                            return eras[i];
	                        }
	                        break;
	                }
	            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
	                return eras[i];
	            }
	        }
	    }

	    function localeErasConvertYear(era, year) {
	        var dir = era.since <= era.until ? +1 : -1;
	        if (year === undefined) {
	            return hooks(era.since).year();
	        } else {
	            return hooks(era.since).year() + (year - era.offset) * dir;
	        }
	    }

	    function getEraName() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].name;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].name;
	            }
	        }

	        return '';
	    }

	    function getEraNarrow() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].narrow;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].narrow;
	            }
	        }

	        return '';
	    }

	    function getEraAbbr() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].abbr;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].abbr;
	            }
	        }

	        return '';
	    }

	    function getEraYear() {
	        var i,
	            l,
	            dir,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            dir = eras[i].since <= eras[i].until ? +1 : -1;

	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (
	                (eras[i].since <= val && val <= eras[i].until) ||
	                (eras[i].until <= val && val <= eras[i].since)
	            ) {
	                return (
	                    (this.year() - hooks(eras[i].since).year()) * dir +
	                    eras[i].offset
	                );
	            }
	        }

	        return this.year();
	    }

	    function erasNameRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasNameRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasNameRegex : this._erasRegex;
	    }

	    function erasAbbrRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasAbbrRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasAbbrRegex : this._erasRegex;
	    }

	    function erasNarrowRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasNarrowRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasNarrowRegex : this._erasRegex;
	    }

	    function matchEraAbbr(isStrict, locale) {
	        return locale.erasAbbrRegex(isStrict);
	    }

	    function matchEraName(isStrict, locale) {
	        return locale.erasNameRegex(isStrict);
	    }

	    function matchEraNarrow(isStrict, locale) {
	        return locale.erasNarrowRegex(isStrict);
	    }

	    function matchEraYearOrdinal(isStrict, locale) {
	        return locale._eraYearOrdinalRegex || matchUnsigned;
	    }

	    function computeErasParse() {
	        var abbrPieces = [],
	            namePieces = [],
	            narrowPieces = [],
	            mixedPieces = [],
	            i,
	            l,
	            eras = this.eras();

	        for (i = 0, l = eras.length; i < l; ++i) {
	            namePieces.push(regexEscape(eras[i].name));
	            abbrPieces.push(regexEscape(eras[i].abbr));
	            narrowPieces.push(regexEscape(eras[i].narrow));

	            mixedPieces.push(regexEscape(eras[i].name));
	            mixedPieces.push(regexEscape(eras[i].abbr));
	            mixedPieces.push(regexEscape(eras[i].narrow));
	        }

	        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
	        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
	        this._erasNarrowRegex = new RegExp(
	            '^(' + narrowPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken(token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg', 'weekYear');
	    addWeekYearFormatToken('ggggg', 'weekYear');
	    addWeekYearFormatToken('GGGG', 'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PRIORITY

	    addUnitPriority('weekYear', 1);
	    addUnitPriority('isoWeekYear', 1);

	    // PARSING

	    addRegexToken('G', matchSigned);
	    addRegexToken('g', matchSigned);
	    addRegexToken('GG', match1to2, match2);
	    addRegexToken('gg', match1to2, match2);
	    addRegexToken('GGGG', match1to4, match4);
	    addRegexToken('gggg', match1to4, match4);
	    addRegexToken('GGGGG', match1to6, match6);
	    addRegexToken('ggggg', match1to6, match6);

	    addWeekParseToken(
	        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],
	        function (input, week, config, token) {
	            week[token.substr(0, 2)] = toInt(input);
	        }
	    );

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = hooks.parseTwoDigitYear(input);
	    });

	    // MOMENTS

	    function getSetWeekYear(input) {
	        return getSetWeekYearHelper.call(
	            this,
	            input,
	            this.week(),
	            this.weekday(),
	            this.localeData()._week.dow,
	            this.localeData()._week.doy
	        );
	    }

	    function getSetISOWeekYear(input) {
	        return getSetWeekYearHelper.call(
	            this,
	            input,
	            this.isoWeek(),
	            this.isoWeekday(),
	            1,
	            4
	        );
	    }

	    function getISOWeeksInYear() {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getISOWeeksInISOWeekYear() {
	        return weeksInYear(this.isoWeekYear(), 1, 4);
	    }

	    function getWeeksInYear() {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    function getWeeksInWeekYear() {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
	    }

	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }

	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }

	    // FORMATTING

	    addFormatToken('Q', 0, 'Qo', 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PRIORITY

	    addUnitPriority('quarter', 7);

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter(input) {
	        return input == null
	            ? Math.ceil((this.month() + 1) / 3)
	            : this.month((input - 1) * 3 + (this.month() % 3));
	    }

	    // FORMATTING

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PRIORITY
	    addUnitPriority('date', 9);

	    // PARSING

	    addRegexToken('D', match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        return isStrict
	            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
	            : locale._dayOfMonthOrdinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0]);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    // FORMATTING

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PRIORITY
	    addUnitPriority('dayOfYear', 4);

	    // PARSING

	    addRegexToken('DDD', match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    // MOMENTS

	    function getSetDayOfYear(input) {
	        var dayOfYear =
	            Math.round(
	                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
	            ) + 1;
	        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
	    }

	    // FORMATTING

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PRIORITY

	    addUnitPriority('minute', 14);

	    // PARSING

	    addRegexToken('m', match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    // FORMATTING

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PRIORITY

	    addUnitPriority('second', 15);

	    // PARSING

	    addRegexToken('s', match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    // FORMATTING

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });

	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PRIORITY

	    addUnitPriority('millisecond', 16);

	    // PARSING

	    addRegexToken('S', match1to3, match1);
	    addRegexToken('SS', match1to3, match2);
	    addRegexToken('SSS', match1to3, match3);

	    var token, getSetMillisecond;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }

	    getSetMillisecond = makeGetSet('Milliseconds', false);

	    // FORMATTING

	    addFormatToken('z', 0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr() {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName() {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var proto = Moment.prototype;

	    proto.add = add;
	    proto.calendar = calendar$1;
	    proto.clone = clone;
	    proto.diff = diff;
	    proto.endOf = endOf;
	    proto.format = format;
	    proto.from = from;
	    proto.fromNow = fromNow;
	    proto.to = to;
	    proto.toNow = toNow;
	    proto.get = stringGet;
	    proto.invalidAt = invalidAt;
	    proto.isAfter = isAfter;
	    proto.isBefore = isBefore;
	    proto.isBetween = isBetween;
	    proto.isSame = isSame;
	    proto.isSameOrAfter = isSameOrAfter;
	    proto.isSameOrBefore = isSameOrBefore;
	    proto.isValid = isValid$2;
	    proto.lang = lang;
	    proto.locale = locale;
	    proto.localeData = localeData;
	    proto.max = prototypeMax;
	    proto.min = prototypeMin;
	    proto.parsingFlags = parsingFlags;
	    proto.set = stringSet;
	    proto.startOf = startOf;
	    proto.subtract = subtract;
	    proto.toArray = toArray;
	    proto.toObject = toObject;
	    proto.toDate = toDate;
	    proto.toISOString = toISOString;
	    proto.inspect = inspect;
	    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
	        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
	            return 'Moment<' + this.format() + '>';
	        };
	    }
	    proto.toJSON = toJSON;
	    proto.toString = toString;
	    proto.unix = unix;
	    proto.valueOf = valueOf;
	    proto.creationData = creationData;
	    proto.eraName = getEraName;
	    proto.eraNarrow = getEraNarrow;
	    proto.eraAbbr = getEraAbbr;
	    proto.eraYear = getEraYear;
	    proto.year = getSetYear;
	    proto.isLeapYear = getIsLeapYear;
	    proto.weekYear = getSetWeekYear;
	    proto.isoWeekYear = getSetISOWeekYear;
	    proto.quarter = proto.quarters = getSetQuarter;
	    proto.month = getSetMonth;
	    proto.daysInMonth = getDaysInMonth;
	    proto.week = proto.weeks = getSetWeek;
	    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
	    proto.weeksInYear = getWeeksInYear;
	    proto.weeksInWeekYear = getWeeksInWeekYear;
	    proto.isoWeeksInYear = getISOWeeksInYear;
	    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
	    proto.date = getSetDayOfMonth;
	    proto.day = proto.days = getSetDayOfWeek;
	    proto.weekday = getSetLocaleDayOfWeek;
	    proto.isoWeekday = getSetISODayOfWeek;
	    proto.dayOfYear = getSetDayOfYear;
	    proto.hour = proto.hours = getSetHour;
	    proto.minute = proto.minutes = getSetMinute;
	    proto.second = proto.seconds = getSetSecond;
	    proto.millisecond = proto.milliseconds = getSetMillisecond;
	    proto.utcOffset = getSetOffset;
	    proto.utc = setOffsetToUTC;
	    proto.local = setOffsetToLocal;
	    proto.parseZone = setOffsetToParsedOffset;
	    proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    proto.isDST = isDaylightSavingTime;
	    proto.isLocal = isLocal;
	    proto.isUtcOffset = isUtcOffset;
	    proto.isUtc = isUtc;
	    proto.isUTC = isUtc;
	    proto.zoneAbbr = getZoneAbbr;
	    proto.zoneName = getZoneName;
	    proto.dates = deprecate(
	        'dates accessor is deprecated. Use date instead.',
	        getSetDayOfMonth
	    );
	    proto.months = deprecate(
	        'months accessor is deprecated. Use month instead',
	        getSetMonth
	    );
	    proto.years = deprecate(
	        'years accessor is deprecated. Use year instead',
	        getSetYear
	    );
	    proto.zone = deprecate(
	        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
	        getSetZone
	    );
	    proto.isDSTShifted = deprecate(
	        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
	        isDaylightSavingTimeShifted
	    );

	    function createUnix(input) {
	        return createLocal(input * 1000);
	    }

	    function createInZone() {
	        return createLocal.apply(null, arguments).parseZone();
	    }

	    function preParsePostFormat(string) {
	        return string;
	    }

	    var proto$1 = Locale.prototype;

	    proto$1.calendar = calendar;
	    proto$1.longDateFormat = longDateFormat;
	    proto$1.invalidDate = invalidDate;
	    proto$1.ordinal = ordinal;
	    proto$1.preparse = preParsePostFormat;
	    proto$1.postformat = preParsePostFormat;
	    proto$1.relativeTime = relativeTime;
	    proto$1.pastFuture = pastFuture;
	    proto$1.set = set;
	    proto$1.eras = localeEras;
	    proto$1.erasParse = localeErasParse;
	    proto$1.erasConvertYear = localeErasConvertYear;
	    proto$1.erasAbbrRegex = erasAbbrRegex;
	    proto$1.erasNameRegex = erasNameRegex;
	    proto$1.erasNarrowRegex = erasNarrowRegex;

	    proto$1.months = localeMonths;
	    proto$1.monthsShort = localeMonthsShort;
	    proto$1.monthsParse = localeMonthsParse;
	    proto$1.monthsRegex = monthsRegex;
	    proto$1.monthsShortRegex = monthsShortRegex;
	    proto$1.week = localeWeek;
	    proto$1.firstDayOfYear = localeFirstDayOfYear;
	    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

	    proto$1.weekdays = localeWeekdays;
	    proto$1.weekdaysMin = localeWeekdaysMin;
	    proto$1.weekdaysShort = localeWeekdaysShort;
	    proto$1.weekdaysParse = localeWeekdaysParse;

	    proto$1.weekdaysRegex = weekdaysRegex;
	    proto$1.weekdaysShortRegex = weekdaysShortRegex;
	    proto$1.weekdaysMinRegex = weekdaysMinRegex;

	    proto$1.isPM = localeIsPM;
	    proto$1.meridiem = localeMeridiem;

	    function get$1(format, index, field, setter) {
	        var locale = getLocale(),
	            utc = createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function listMonthsImpl(format, index, field) {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return get$1(format, index, field, 'month');
	        }

	        var i,
	            out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = get$1(format, i, field, 'month');
	        }
	        return out;
	    }

	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl(localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;

	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        }

	        var locale = getLocale(),
	            shift = localeSorted ? locale._week.dow : 0,
	            i,
	            out = [];

	        if (index != null) {
	            return get$1(format, (index + shift) % 7, field, 'day');
	        }

	        for (i = 0; i < 7; i++) {
	            out[i] = get$1(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }

	    function listMonths(format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }

	    function listMonthsShort(format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }

	    function listWeekdays(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }

	    function listWeekdaysShort(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }

	    function listWeekdaysMin(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }

	    getSetGlobalLocale('en', {
	        eras: [
	            {
	                since: '0001-01-01',
	                until: +Infinity,
	                offset: 1,
	                name: 'Anno Domini',
	                narrow: 'AD',
	                abbr: 'AD',
	            },
	            {
	                since: '0000-12-31',
	                until: -Infinity,
	                offset: 1,
	                name: 'Before Christ',
	                narrow: 'BC',
	                abbr: 'BC',
	            },
	        ],
	        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal: function (number) {
	            var b = number % 10,
	                output =
	                    toInt((number % 100) / 10) === 1
	                        ? 'th'
	                        : b === 1
	                        ? 'st'
	                        : b === 2
	                        ? 'nd'
	                        : b === 3
	                        ? 'rd'
	                        : 'th';
	            return number + output;
	        },
	    });

	    // Side effect imports

	    hooks.lang = deprecate(
	        'moment.lang is deprecated. Use moment.locale instead.',
	        getSetGlobalLocale
	    );
	    hooks.langData = deprecate(
	        'moment.langData is deprecated. Use moment.localeData instead.',
	        getLocale
	    );

	    var mathAbs = Math.abs;

	    function abs() {
	        var data = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days = mathAbs(this._days);
	        this._months = mathAbs(this._months);

	        data.milliseconds = mathAbs(data.milliseconds);
	        data.seconds = mathAbs(data.seconds);
	        data.minutes = mathAbs(data.minutes);
	        data.hours = mathAbs(data.hours);
	        data.months = mathAbs(data.months);
	        data.years = mathAbs(data.years);

	        return this;
	    }

	    function addSubtract$1(duration, input, value, direction) {
	        var other = createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days += direction * other._days;
	        duration._months += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function add$1(input, value) {
	        return addSubtract$1(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function subtract$1(input, value) {
	        return addSubtract$1(this, input, value, -1);
	    }

	    function absCeil(number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble() {
	        var milliseconds = this._milliseconds,
	            days = this._days,
	            months = this._months,
	            data = this._data,
	            seconds,
	            minutes,
	            hours,
	            years,
	            monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (
	            !(
	                (milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0)
	            )
	        ) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds = absFloor(milliseconds / 1000);
	        data.seconds = seconds % 60;

	        minutes = absFloor(seconds / 60);
	        data.minutes = minutes % 60;

	        hours = absFloor(minutes / 60);
	        data.hours = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days = days;
	        data.months = months;
	        data.years = years;

	        return this;
	    }

	    function daysToMonths(days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return (days * 4800) / 146097;
	    }

	    function monthsToDays(months) {
	        // the reverse of daysToMonths
	        return (months * 146097) / 4800;
	    }

	    function as(units) {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        var days,
	            months,
	            milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'quarter' || units === 'year') {
	            days = this._days + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            switch (units) {
	                case 'month':
	                    return months;
	                case 'quarter':
	                    return months / 3;
	                case 'year':
	                    return months / 12;
	            }
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week':
	                    return days / 7 + milliseconds / 6048e5;
	                case 'day':
	                    return days + milliseconds / 864e5;
	                case 'hour':
	                    return days * 24 + milliseconds / 36e5;
	                case 'minute':
	                    return days * 1440 + milliseconds / 6e4;
	                case 'second':
	                    return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond':
	                    return Math.floor(days * 864e5) + milliseconds;
	                default:
	                    throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function valueOf$1() {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs(alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms'),
	        asSeconds = makeAs('s'),
	        asMinutes = makeAs('m'),
	        asHours = makeAs('h'),
	        asDays = makeAs('d'),
	        asWeeks = makeAs('w'),
	        asMonths = makeAs('M'),
	        asQuarters = makeAs('Q'),
	        asYears = makeAs('y');

	    function clone$1() {
	        return createDuration(this);
	    }

	    function get$2(units) {
	        units = normalizeUnits(units);
	        return this.isValid() ? this[units + 's']() : NaN;
	    }

	    function makeGetter(name) {
	        return function () {
	            return this.isValid() ? this._data[name] : NaN;
	        };
	    }

	    var milliseconds = makeGetter('milliseconds'),
	        seconds = makeGetter('seconds'),
	        minutes = makeGetter('minutes'),
	        hours = makeGetter('hours'),
	        days = makeGetter('days'),
	        months = makeGetter('months'),
	        years = makeGetter('years');

	    function weeks() {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round,
	        thresholds = {
	            ss: 44, // a few seconds to seconds
	            s: 45, // seconds to minute
	            m: 45, // minutes to hour
	            h: 22, // hours to day
	            d: 26, // days to month/week
	            w: null, // weeks to month
	            M: 11, // months to year
	        };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
	        var duration = createDuration(posNegDuration).abs(),
	            seconds = round(duration.as('s')),
	            minutes = round(duration.as('m')),
	            hours = round(duration.as('h')),
	            days = round(duration.as('d')),
	            months = round(duration.as('M')),
	            weeks = round(duration.as('w')),
	            years = round(duration.as('y')),
	            a =
	                (seconds <= thresholds.ss && ['s', seconds]) ||
	                (seconds < thresholds.s && ['ss', seconds]) ||
	                (minutes <= 1 && ['m']) ||
	                (minutes < thresholds.m && ['mm', minutes]) ||
	                (hours <= 1 && ['h']) ||
	                (hours < thresholds.h && ['hh', hours]) ||
	                (days <= 1 && ['d']) ||
	                (days < thresholds.d && ['dd', days]);

	        if (thresholds.w != null) {
	            a =
	                a ||
	                (weeks <= 1 && ['w']) ||
	                (weeks < thresholds.w && ['ww', weeks]);
	        }
	        a = a ||
	            (months <= 1 && ['M']) ||
	            (months < thresholds.M && ['MM', months]) ||
	            (years <= 1 && ['y']) || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set the rounding function for relative time strings
	    function getSetRelativeTimeRounding(roundingFunction) {
	        if (roundingFunction === undefined) {
	            return round;
	        }
	        if (typeof roundingFunction === 'function') {
	            round = roundingFunction;
	            return true;
	        }
	        return false;
	    }

	    // This function allows you to set a threshold for relative time strings
	    function getSetRelativeTimeThreshold(threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        if (threshold === 's') {
	            thresholds.ss = limit - 1;
	        }
	        return true;
	    }

	    function humanize(argWithSuffix, argThresholds) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }

	        var withSuffix = false,
	            th = thresholds,
	            locale,
	            output;

	        if (typeof argWithSuffix === 'object') {
	            argThresholds = argWithSuffix;
	            argWithSuffix = false;
	        }
	        if (typeof argWithSuffix === 'boolean') {
	            withSuffix = argWithSuffix;
	        }
	        if (typeof argThresholds === 'object') {
	            th = Object.assign({}, thresholds, argThresholds);
	            if (argThresholds.s != null && argThresholds.ss == null) {
	                th.ss = argThresholds.s - 1;
	            }
	        }

	        locale = this.localeData();
	        output = relativeTime$1(this, !withSuffix, th, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var abs$1 = Math.abs;

	    function sign(x) {
	        return (x > 0) - (x < 0) || +x;
	    }

	    function toISOString$1() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }

	        var seconds = abs$1(this._milliseconds) / 1000,
	            days = abs$1(this._days),
	            months = abs$1(this._months),
	            minutes,
	            hours,
	            years,
	            s,
	            total = this.asSeconds(),
	            totalSign,
	            ymSign,
	            daysSign,
	            hmsSign;

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes = absFloor(seconds / 60);
	        hours = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

	        totalSign = total < 0 ? '-' : '';
	        ymSign = sign(this._months) !== sign(total) ? '-' : '';
	        daysSign = sign(this._days) !== sign(total) ? '-' : '';
	        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

	        return (
	            totalSign +
	            'P' +
	            (years ? ymSign + years + 'Y' : '') +
	            (months ? ymSign + months + 'M' : '') +
	            (days ? daysSign + days + 'D' : '') +
	            (hours || minutes || seconds ? 'T' : '') +
	            (hours ? hmsSign + hours + 'H' : '') +
	            (minutes ? hmsSign + minutes + 'M' : '') +
	            (seconds ? hmsSign + s + 'S' : '')
	        );
	    }

	    var proto$2 = Duration.prototype;

	    proto$2.isValid = isValid$1;
	    proto$2.abs = abs;
	    proto$2.add = add$1;
	    proto$2.subtract = subtract$1;
	    proto$2.as = as;
	    proto$2.asMilliseconds = asMilliseconds;
	    proto$2.asSeconds = asSeconds;
	    proto$2.asMinutes = asMinutes;
	    proto$2.asHours = asHours;
	    proto$2.asDays = asDays;
	    proto$2.asWeeks = asWeeks;
	    proto$2.asMonths = asMonths;
	    proto$2.asQuarters = asQuarters;
	    proto$2.asYears = asYears;
	    proto$2.valueOf = valueOf$1;
	    proto$2._bubble = bubble;
	    proto$2.clone = clone$1;
	    proto$2.get = get$2;
	    proto$2.milliseconds = milliseconds;
	    proto$2.seconds = seconds;
	    proto$2.minutes = minutes;
	    proto$2.hours = hours;
	    proto$2.days = days;
	    proto$2.weeks = weeks;
	    proto$2.months = months;
	    proto$2.years = years;
	    proto$2.humanize = humanize;
	    proto$2.toISOString = toISOString$1;
	    proto$2.toString = toISOString$1;
	    proto$2.toJSON = toISOString$1;
	    proto$2.locale = locale;
	    proto$2.localeData = localeData;

	    proto$2.toIsoString = deprecate(
	        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
	        toISOString$1
	    );
	    proto$2.lang = lang;

	    // FORMATTING

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    //! moment.js

	    hooks.version = '2.29.4';

	    setHookCallback(createLocal);

	    hooks.fn = proto;
	    hooks.min = min;
	    hooks.max = max;
	    hooks.now = now;
	    hooks.utc = createUTC;
	    hooks.unix = createUnix;
	    hooks.months = listMonths;
	    hooks.isDate = isDate;
	    hooks.locale = getSetGlobalLocale;
	    hooks.invalid = createInvalid;
	    hooks.duration = createDuration;
	    hooks.isMoment = isMoment;
	    hooks.weekdays = listWeekdays;
	    hooks.parseZone = createInZone;
	    hooks.localeData = getLocale;
	    hooks.isDuration = isDuration;
	    hooks.monthsShort = listMonthsShort;
	    hooks.weekdaysMin = listWeekdaysMin;
	    hooks.defineLocale = defineLocale;
	    hooks.updateLocale = updateLocale;
	    hooks.locales = listLocales;
	    hooks.weekdaysShort = listWeekdaysShort;
	    hooks.normalizeUnits = normalizeUnits;
	    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
	    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	    hooks.calendarFormat = getCalendarFormat;
	    hooks.prototype = proto;

	    // currently HTML5 input type only supports 24-hour formats
	    hooks.HTML5_FMT = {
	        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
	        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
	        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
	        DATE: 'YYYY-MM-DD', // <input type="date" />
	        TIME: 'HH:mm', // <input type="time" />
	        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
	        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
	        WEEK: 'GGGG-[W]WW', // <input type="week" />
	        MONTH: 'YYYY-MM', // <input type="month" />
	    };

	    return hooks;

	}))); 
} (moment$1));

var momentExports = moment$1.exports;
var moment = /*@__PURE__*/getDefaultExportFromCjs(momentExports);

/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */
/* vim: set ts=2: */
/*exported XLSX */
/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */
var current_ansi = 1252;

var VALID_ANSI = [ 874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000 ];
/* ECMA-376 Part I 18.4.1 charset to codepage mapping */
var CS2CP = ({
	/*::[*/0/*::]*/:    1252, /* ANSI */
	/*::[*/1/*::]*/:   65001, /* DEFAULT */
	/*::[*/2/*::]*/:   65001, /* SYMBOL */
	/*::[*/77/*::]*/:  10000, /* MAC */
	/*::[*/128/*::]*/:   932, /* SHIFTJIS */
	/*::[*/129/*::]*/:   949, /* HANGUL */
	/*::[*/130/*::]*/:  1361, /* JOHAB */
	/*::[*/134/*::]*/:   936, /* GB2312 */
	/*::[*/136/*::]*/:   950, /* CHINESEBIG5 */
	/*::[*/161/*::]*/:  1253, /* GREEK */
	/*::[*/162/*::]*/:  1254, /* TURKISH */
	/*::[*/163/*::]*/:  1258, /* VIETNAMESE */
	/*::[*/177/*::]*/:  1255, /* HEBREW */
	/*::[*/178/*::]*/:  1256, /* ARABIC */
	/*::[*/186/*::]*/:  1257, /* BALTIC */
	/*::[*/204/*::]*/:  1251, /* RUSSIAN */
	/*::[*/222/*::]*/:   874, /* THAI */
	/*::[*/238/*::]*/:  1250, /* EASTEUROPE */
	/*::[*/255/*::]*/:  1252, /* OEM */
	/*::[*/69/*::]*/:   6969  /* MISC */
}/*:any*/);

var set_ansi = function(cp/*:number*/) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };
function reset_ansi() { set_ansi(1252); }

var set_cp = function(cp/*:number*/) { set_ansi(cp); };
function reset_cp() { set_cp(1200); reset_ansi(); }

function char_codes(data/*:string*/)/*:Array<number>*/ { var o/*:Array<number>*/ = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }

function utf16leread(data/*:string*/)/*:string*/ {
	var o/*:Array<string>*/ = [];
	for(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));
	return o.join("");
}
function utf16beread(data/*:string*/)/*:string*/ {
	var o/*:Array<string>*/ = [];
	for(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));
	return o.join("");
}

var debom = function(data/*:string*/)/*:string*/ {
	var c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);
	if(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));
	if(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));
	if(c1 == 0xFEFF) return data.slice(1);
	return data;
};

var _getchar = function _gc1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };
var _getansi = function _ga1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };

var $cptable;
var Base64_map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
function Base64_encode(input) {
  var o = "";
  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;
  for (var i = 0; i < input.length; ) {
    c1 = input.charCodeAt(i++);
    e1 = c1 >> 2;
    c2 = input.charCodeAt(i++);
    e2 = (c1 & 3) << 4 | c2 >> 4;
    c3 = input.charCodeAt(i++);
    e3 = (c2 & 15) << 2 | c3 >> 6;
    e4 = c3 & 63;
    if (isNaN(c2)) {
      e3 = e4 = 64;
    } else if (isNaN(c3)) {
      e4 = 64;
    }
    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);
  }
  return o;
}
function Base64_decode(input) {
  var o = "";
  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;
  input = input.replace(/[^\w\+\/\=]/g, "");
  for (var i = 0; i < input.length; ) {
    e1 = Base64_map.indexOf(input.charAt(i++));
    e2 = Base64_map.indexOf(input.charAt(i++));
    c1 = e1 << 2 | e2 >> 4;
    o += String.fromCharCode(c1);
    e3 = Base64_map.indexOf(input.charAt(i++));
    c2 = (e2 & 15) << 4 | e3 >> 2;
    if (e3 !== 64) {
      o += String.fromCharCode(c2);
    }
    e4 = Base64_map.indexOf(input.charAt(i++));
    c3 = (e3 & 3) << 6 | e4;
    if (e4 !== 64) {
      o += String.fromCharCode(c3);
    }
  }
  return o;
}
var has_buf = /*#__PURE__*/(function() { return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node; })();

var Buffer_from = /*#__PURE__*/(function() {
	if(typeof Buffer !== 'undefined') {
		var nbfs = !Buffer.from;
		if(!nbfs) try { Buffer.from("foo", "utf8"); } catch(e) { nbfs = true; }
		return nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);
	}
	return function() {};
})();


function new_raw_buf(len/*:number*/) {
	/* jshint -W056 */
	if(has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);
	return typeof Uint8Array != "undefined" ? new Uint8Array(len) : new Array(len);
	/* jshint +W056 */
}

function new_unsafe_buf(len/*:number*/) {
	/* jshint -W056 */
	if(has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);
	return typeof Uint8Array != "undefined" ? new Uint8Array(len) : new Array(len);
	/* jshint +W056 */
}

var s2a = function s2a(s/*:string*/)/*:any*/ {
	if(has_buf) return Buffer_from(s, "binary");
	return s.split("").map(function(x/*:string*/)/*:number*/{ return x.charCodeAt(0) & 0xff; });
};

function a2s(data/*:any*/)/*:string*/ {
	if(Array.isArray(data)) return data.map(function(c) { return String.fromCharCode(c); }).join("");
	var o/*:Array<string>*/ = []; for(var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]); return o.join("");
}

function ab2a(data/*:ArrayBuffer|Uint8Array*/)/*:Array<number>*/ {
	if(typeof ArrayBuffer == 'undefined') throw new Error("Unsupported");
	if(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));
	/*:: if(data instanceof ArrayBuffer) throw new Error("unreachable"); */
	var o = new Array(data.length);
	for(var i = 0; i < data.length; ++i) o[i] = data[i];
	return o;
}

var bconcat = has_buf ? function(bufs) { return Buffer.concat(bufs.map(function(buf) { return Buffer.isBuffer(buf) ? buf : Buffer_from(buf); })); } : function(bufs) {
	if(typeof Uint8Array !== "undefined") {
		var i = 0, maxlen = 0;
		for(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;
		var o = new Uint8Array(maxlen);
		var len = 0;
		for(i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {
			len = bufs[i].length;
			if(bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);
			else if(typeof bufs[i] == "string") { throw "wtf"; }
			else o.set(new Uint8Array(bufs[i]), maxlen);
		}
		return o;
	}
	return [].concat.apply([], bufs.map(function(buf) { return Array.isArray(buf) ? buf : [].slice.call(buf); }));
};

function utf8decode(content/*:string*/) {
	var out = [], widx = 0, L = content.length + 250;
	var o = new_raw_buf(content.length + 255);
	for(var ridx = 0; ridx < content.length; ++ridx) {
		var c = content.charCodeAt(ridx);
		if(c < 0x80) o[widx++] = c;
		else if(c < 0x800) {
			o[widx++] = (192|((c>>6)&31));
			o[widx++] = (128|(c&63));
		} else if(c >= 0xD800 && c < 0xE000) {
			c = (c&1023)+64;
			var d = content.charCodeAt(++ridx)&1023;
			o[widx++] = (240|((c>>8)&7));
			o[widx++] = (128|((c>>2)&63));
			o[widx++] = (128|((d>>6)&15)|((c&3)<<4));
			o[widx++] = (128|(d&63));
		} else {
			o[widx++] = (224|((c>>12)&15));
			o[widx++] = (128|((c>>6)&63));
			o[widx++] = (128|(c&63));
		}
		if(widx > L) {
			out.push(o.slice(0, widx));
			widx = 0;
			o = new_raw_buf(65535);
			L = 65530;
		}
	}
	out.push(o.slice(0, widx));
	return bconcat(out);
}

var chr0 = /\u0000/g, chr1 = /[\u0001-\u0006]/g;
/*::
declare type Block = any;
declare type BufArray = {
	newblk(sz:number):Block;
	next(sz:number):Block;
	end():any;
	push(buf:Block):void;
};

type RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};

type EvertType = {[string]:string};
type EvertNumType = {[string]:number};
type EvertArrType = {[string]:Array<string>};

type StringConv = {(string):string};

*/
/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */
/*jshint -W041 */
function _strrev(x/*:string*/)/*:string*/ { var o = "", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }
function pad0(v/*:any*/,d/*:number*/)/*:string*/{var t=""+v; return t.length>=d?t:fill('0',d-t.length)+t;}
function pad_(v/*:any*/,d/*:number*/)/*:string*/{var t=""+v;return t.length>=d?t:fill(' ',d-t.length)+t;}
function rpad_(v/*:any*/,d/*:number*/)/*:string*/{var t=""+v; return t.length>=d?t:t+fill(' ',d-t.length);}
function pad0r1(v/*:any*/,d/*:number*/)/*:string*/{var t=""+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}
function pad0r2(v/*:any*/,d/*:number*/)/*:string*/{var t=""+v; return t.length>=d?t:fill('0',d-t.length)+t;}
var p2_32 = /*#__PURE__*/Math.pow(2,32);
function pad0r(v/*:any*/,d/*:number*/)/*:string*/{if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }
/* yes, in 2022 this is still faster than string compare */
function SSF_isgeneral(s/*:string*/, i/*:?number*/)/*:boolean*/ { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }
var days/*:Array<Array<string> >*/ = [
	['Sun', 'Sunday'],
	['Mon', 'Monday'],
	['Tue', 'Tuesday'],
	['Wed', 'Wednesday'],
	['Thu', 'Thursday'],
	['Fri', 'Friday'],
	['Sat', 'Saturday']
];
var months/*:Array<Array<string> >*/ = [
	['J', 'Jan', 'January'],
	['F', 'Feb', 'February'],
	['M', 'Mar', 'March'],
	['A', 'Apr', 'April'],
	['M', 'May', 'May'],
	['J', 'Jun', 'June'],
	['J', 'Jul', 'July'],
	['A', 'Aug', 'August'],
	['S', 'Sep', 'September'],
	['O', 'Oct', 'October'],
	['N', 'Nov', 'November'],
	['D', 'Dec', 'December']
];
function SSF_init_table(t/*:any*/) {
	if(!t) t = {};
	t[0]=  'General';
	t[1]=  '0';
	t[2]=  '0.00';
	t[3]=  '#,##0';
	t[4]=  '#,##0.00';
	t[9]=  '0%';
	t[10]= '0.00%';
	t[11]= '0.00E+00';
	t[12]= '# ?/?';
	t[13]= '# ??/??';
	t[14]= 'm/d/yy';
	t[15]= 'd-mmm-yy';
	t[16]= 'd-mmm';
	t[17]= 'mmm-yy';
	t[18]= 'h:mm AM/PM';
	t[19]= 'h:mm:ss AM/PM';
	t[20]= 'h:mm';
	t[21]= 'h:mm:ss';
	t[22]= 'm/d/yy h:mm';
	t[37]= '#,##0 ;(#,##0)';
	t[38]= '#,##0 ;[Red](#,##0)';
	t[39]= '#,##0.00;(#,##0.00)';
	t[40]= '#,##0.00;[Red](#,##0.00)';
	t[45]= 'mm:ss';
	t[46]= '[h]:mm:ss';
	t[47]= 'mmss.0';
	t[48]= '##0.0E+0';
	t[49]= '@';
	t[56]= '"上午/下午 "hh"時"mm"分"ss"秒 "';
	return t;
}
/* repeated to satiate webpack */
var table_fmt = {
	0:  'General',
	1:  '0',
	2:  '0.00',
	3:  '#,##0',
	4:  '#,##0.00',
	9:  '0%',
	10: '0.00%',
	11: '0.00E+00',
	12: '# ?/?',
	13: '# ??/??',
	14: 'm/d/yy',
	15: 'd-mmm-yy',
	16: 'd-mmm',
	17: 'mmm-yy',
	18: 'h:mm AM/PM',
	19: 'h:mm:ss AM/PM',
	20: 'h:mm',
	21: 'h:mm:ss',
	22: 'm/d/yy h:mm',
	37: '#,##0 ;(#,##0)',
	38: '#,##0 ;[Red](#,##0)',
	39: '#,##0.00;(#,##0.00)',
	40: '#,##0.00;[Red](#,##0.00)',
	45: 'mm:ss',
	46: '[h]:mm:ss',
	47: 'mmss.0',
	48: '##0.0E+0',
	49: '@',
	56: '"上午/下午 "hh"時"mm"分"ss"秒 "'
};

/* Defaults determined by systematically testing in Excel 2019 */

/* These formats appear to default to other formats in the table */
var SSF_default_map = {
	5:  37, 6:  38, 7:  39, 8:  40,         //  5 -> 37 ...  8 -> 40

	23:  0, 24:  0, 25:  0, 26:  0,         // 23 ->  0 ... 26 ->  0

	27: 14, 28: 14, 29: 14, 30: 14, 31: 14, // 27 -> 14 ... 31 -> 14

	50: 14, 51: 14, 52: 14, 53: 14, 54: 14, // 50 -> 14 ... 58 -> 14
	55: 14, 56: 14, 57: 14, 58: 14,
	59:  1, 60:  2, 61:  3, 62:  4,         // 59 ->  1 ... 62 ->  4

	67:  9, 68: 10,                         // 67 ->  9 ... 68 -> 10
	69: 12, 70: 13, 71: 14,                 // 69 -> 12 ... 71 -> 14
	72: 14, 73: 15, 74: 16, 75: 17,         // 72 -> 14 ... 75 -> 17
	76: 20, 77: 21, 78: 22,                 // 76 -> 20 ... 78 -> 22
	79: 45, 80: 46, 81: 47,                 // 79 -> 45 ... 81 -> 47
	82: 0                                   // 82 ->  0 ... 65536 -> 0 (omitted)
};


/* These formats technically refer to Accounting formats with no equivalent */
var SSF_default_str = {
	//  5 -- Currency,   0 decimal, black negative
	5:  '"$"#,##0_);\\("$"#,##0\\)',
	63: '"$"#,##0_);\\("$"#,##0\\)',

	//  6 -- Currency,   0 decimal, red   negative
	6:  '"$"#,##0_);[Red]\\("$"#,##0\\)',
	64: '"$"#,##0_);[Red]\\("$"#,##0\\)',

	//  7 -- Currency,   2 decimal, black negative
	7:  '"$"#,##0.00_);\\("$"#,##0.00\\)',
	65: '"$"#,##0.00_);\\("$"#,##0.00\\)',

	//  8 -- Currency,   2 decimal, red   negative
	8:  '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
	66: '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',

	// 41 -- Accounting, 0 decimal, No Symbol
	41: '_(* #,##0_);_(* \\(#,##0\\);_(* "-"_);_(@_)',

	// 42 -- Accounting, 0 decimal, $  Symbol
	42: '_("$"* #,##0_);_("$"* \\(#,##0\\);_("$"* "-"_);_(@_)',

	// 43 -- Accounting, 2 decimal, No Symbol
	43: '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* "-"??_);_(@_)',

	// 44 -- Accounting, 2 decimal, $  Symbol
	44: '_("$"* #,##0.00_);_("$"* \\(#,##0.00\\);_("$"* "-"??_);_(@_)'
};

function SSF_frac(x/*:number*/, D/*:number*/, mixed/*:?boolean*/)/*:Array<number>*/ {
	var sgn = x < 0 ? -1 : 1;
	var B = x * sgn;
	var P_2 = 0, P_1 = 1, P = 0;
	var Q_2 = 1, Q_1 = 0, Q = 0;
	var A = Math.floor(B);
	while(Q_1 < D) {
		A = Math.floor(B);
		P = A * P_1 + P_2;
		Q = A * Q_1 + Q_2;
		if((B - A) < 0.00000005) break;
		B = 1 / (B - A);
		P_2 = P_1; P_1 = P;
		Q_2 = Q_1; Q_1 = Q;
	}
	if(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }
	if(!mixed) return [0, sgn * P, Q];
	var q = Math.floor(sgn * P/Q);
	return [q, sgn*P - q*Q, Q];
}
function SSF_parse_date_code(v/*:number*/,opts/*:?any*/,b2/*:?boolean*/) {
	if(v > 2958465 || v < 0) return null;
	var date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;
	var dout=[];
	var out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};
	if(Math.abs(out.u) < 1e-6) out.u = 0;
	if(opts && opts.date1904) date += 1462;
	if(out.u > 0.9999) {
		out.u = 0;
		if(++time == 86400) { out.T = time = 0; ++date; ++out.D; }
	}
	if(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}
	else if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}
	else {
		if(date > 60) --date;
		/* 1 = Jan 1 1900 in Gregorian */
		var d = new Date(1900, 0, 1);
		d.setDate(d.getDate() + date - 1);
		dout = [d.getFullYear(), d.getMonth()+1,d.getDate()];
		dow = d.getDay();
		if(date < 60) dow = (dow + 6) % 7;
		if(b2) dow = SSF_fix_hijri(d, dout);
	}
	out.y = dout[0]; out.m = dout[1]; out.d = dout[2];
	out.S = time % 60; time = Math.floor(time / 60);
	out.M = time % 60; time = Math.floor(time / 60);
	out.H = time;
	out.q = dow;
	return out;
}
var SSFbasedate = /*#__PURE__*/new Date(1899, 11, 31, 0, 0, 0);
var SSFdnthresh = /*#__PURE__*/SSFbasedate.getTime();
var SSFbase1904 = /*#__PURE__*/new Date(1900, 2, 1, 0, 0, 0);
function datenum_local(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {
	var epoch = /*#__PURE__*/v.getTime();
	if(date1904) epoch -= 1461*24*60*60*1000;
	else if(v >= SSFbase1904) epoch += 24*60*60*1000;
	return (epoch - (SSFdnthresh + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/SSFbasedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);
}
/* ECMA-376 18.8.30 numFmt*/
/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */
/* exponent >= -9 and <= 9 */
function SSF_strip_decimal(o/*:string*/)/*:string*/ {
	return (o.indexOf(".") == -1) ? o : o.replace(/(?:\.0*|(\.\d*[1-9])0+)$/, "$1");
}

/* General Exponential always shows 2 digits exp and trims the mantissa */
function SSF_normalize_exp(o/*:string*/)/*:string*/ {
	if(o.indexOf("E") == -1) return o;
	return o.replace(/(?:\.0*|(\.\d*[1-9])0+)[Ee]/,"$1E").replace(/(E[+-])(\d)$/,"$10$2");
}

/* exponent >= -9 and <= 9 */
function SSF_small_exp(v/*:number*/)/*:string*/ {
	var w = (v<0?12:11);
	var o = SSF_strip_decimal(v.toFixed(12)); if(o.length <= w) return o;
	o = v.toPrecision(10); if(o.length <= w) return o;
	return v.toExponential(5);
}

/* exponent >= 11 or <= -10 likely exponential */
function SSF_large_exp(v/*:number*/)/*:string*/ {
	var o = SSF_strip_decimal(v.toFixed(11));
	return (o.length > (v<0?12:11) || o === "0" || o === "-0") ? v.toPrecision(6) : o;
}

function SSF_general_num(v/*:number*/)/*:string*/ {
	var V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;

	if(V >= -4 && V <= -1) o = v.toPrecision(10+V);
	else if(Math.abs(V) <= 9) o = SSF_small_exp(v);
	else if(V === 10) o = v.toFixed(10).substr(0,12);
	else o = SSF_large_exp(v);

	return SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));
}


/*
	"General" rules:
	- text is passed through ("@")
	- booleans are rendered as TRUE/FALSE
	- "up to 11 characters" displayed for numbers
	- Default date format (code 14) used for Dates

	The longest 32-bit integer text is "-2147483648", exactly 11 chars
	TODO: technically the display depends on the width of the cell
*/
function SSF_general(v/*:any*/, opts/*:any*/) {
	switch(typeof v) {
		case 'string': return v;
		case 'boolean': return v ? "TRUE" : "FALSE";
		case 'number': return (v|0) === v ? v.toString(10) : SSF_general_num(v);
		case 'undefined': return "";
		case 'object':
			if(v == null) return "";
			if(v instanceof Date) return SSF_format(14, datenum_local(v, opts && opts.date1904), opts);
	}
	throw new Error("unsupported value in General format: " + v);
}

function SSF_fix_hijri(date/*:Date*/, o/*:[number, number, number]*/) {
  /* TODO: properly adjust y/m/d and  */
  o[0] -= 581;
  var dow = date.getDay();
  if(date < 60) dow = (dow + 6) % 7;
  return dow;
}
//var THAI_DIGITS = "\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59".split("");
function SSF_write_date(type/*:number*/, fmt/*:string*/, val, ss0/*:?number*/)/*:string*/ {
	var o="", ss=0, tt=0, y = val.y, out, outl = 0;
	switch(type) {
		case 98: /* 'b' buddhist year */
			y = val.y + 543;
			/* falls through */
		case 121: /* 'y' year */
		switch(fmt.length) {
			case 1: case 2: out = y % 100; outl = 2; break;
			default: out = y % 10000; outl = 4; break;
		} break;
		case 109: /* 'm' month */
		switch(fmt.length) {
			case 1: case 2: out = val.m; outl = fmt.length; break;
			case 3: return months[val.m-1][1];
			case 5: return months[val.m-1][0];
			default: return months[val.m-1][2];
		} break;
		case 100: /* 'd' day */
		switch(fmt.length) {
			case 1: case 2: out = val.d; outl = fmt.length; break;
			case 3: return days[val.q][0];
			default: return days[val.q][1];
		} break;
		case 104: /* 'h' 12-hour */
		switch(fmt.length) {
			case 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;
			default: throw 'bad hour format: ' + fmt;
		} break;
		case 72: /* 'H' 24-hour */
		switch(fmt.length) {
			case 1: case 2: out = val.H; outl = fmt.length; break;
			default: throw 'bad hour format: ' + fmt;
		} break;
		case 77: /* 'M' minutes */
		switch(fmt.length) {
			case 1: case 2: out = val.M; outl = fmt.length; break;
			default: throw 'bad minute format: ' + fmt;
		} break;
		case 115: /* 's' seconds */
			if(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;
			if(val.u === 0 && (fmt == "s" || fmt == "ss")) return pad0(val.S, fmt.length);
			/*::if(!ss0) ss0 = 0; */
			if(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;
			else tt = ss0 === 1 ? 10 : 1;
			ss = Math.round((tt)*(val.S + val.u));
			if(ss >= 60*tt) ss = 0;
			if(fmt === 's') return ss === 0 ? "0" : ""+ss/tt;
			o = pad0(ss,2 + ss0);
			if(fmt === 'ss') return o.substr(0,2);
			return "." + o.substr(2,fmt.length-1);
		case 90: /* 'Z' absolute time */
		switch(fmt) {
			case '[h]': case '[hh]': out = val.D*24+val.H; break;
			case '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;
			case '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;
			default: throw 'bad abstime format: ' + fmt;
		} outl = fmt.length === 3 ? 1 : 2; break;
		case 101: /* 'e' era */
			out = y; outl = 1; break;
	}
	var outstr = outl > 0 ? pad0(out, outl) : "";
	return outstr;
}


/*jshint -W086 */
/*jshint +W086 */
function commaify(s/*:string*/)/*:string*/ {
	var w = 3;
	if(s.length <= w) return s;
	var j = (s.length % w), o = s.substr(0,j);
	for(; j!=s.length; j+=w) o+=(o.length > 0 ? "," : "") + s.substr(j,w);
	return o;
}
var pct1 = /%/g;
function write_num_pct(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{
	var sfmt = fmt.replace(pct1,""), mul = fmt.length - sfmt.length;
	return write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill("%",mul);
}

function write_num_cm(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{
	var idx = fmt.length - 1;
	while(fmt.charCodeAt(idx-1) === 44) --idx;
	return write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));
}

function write_num_exp(fmt/*:string*/, val/*:number*/)/*:string*/{
	var o/*:string*/;
	var idx = fmt.indexOf("E") - fmt.indexOf(".") - 1;
	if(fmt.match(/^#+0.0E\+0$/)) {
		if(val == 0) return "0.0E+0";
		else if(val < 0) return "-" + write_num_exp(fmt, -val);
		var period = fmt.indexOf("."); if(period === -1) period=fmt.indexOf('E');
		var ee = Math.floor(Math.log(val)*Math.LOG10E)%period;
		if(ee < 0) ee += period;
		o = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);
		if(o.indexOf("e") === -1) {
			var fakee = Math.floor(Math.log(val)*Math.LOG10E);
			if(o.indexOf(".") === -1) o = o.charAt(0) + "." + o.substr(1) + "E+" + (fakee - o.length+ee);
			else o += "E+" + (fakee - ee);
			while(o.substr(0,2) === "0.") {
				o = o.charAt(0) + o.substr(2,period) + "." + o.substr(2+period);
				o = o.replace(/^0+([1-9])/,"$1").replace(/^0+\./,"0.");
			}
			o = o.replace(/\+-/,"-");
		}
		o = o.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + "." + $3.substr(ee) + "E"; });
	} else o = val.toExponential(idx);
	if(fmt.match(/E\+00$/) && o.match(/e[+-]\d$/)) o = o.substr(0,o.length-1) + "0" + o.charAt(o.length-1);
	if(fmt.match(/E\-/) && o.match(/e\+/)) o = o.replace(/e\+/,"e");
	return o.replace("e","E");
}
var frac1 = /# (\?+)( ?)\/( ?)(\d+)/;
function write_num_f1(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {
	var den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);
	var myn = (rr - base*den), myd = den;
	return sign + (base === 0 ? "" : ""+base) + " " + (myn === 0 ? fill(" ", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + "/" + r[3] + pad0(myd,r[4].length));
}
function write_num_f2(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {
	return sign + (aval === 0 ? "" : ""+aval) + fill(" ", r[1].length + 2 + r[4].length);
}
var dec1 = /^#*0*\.([0#]+)/;
var closeparen = /\).*[0#]/;
var phone = /\(###\) ###\\?-####/;
function hashq(str/*:string*/)/*:string*/ {
	var o = "", cc;
	for(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {
		case 35: break;
		case 63: o+= " "; break;
		case 48: o+= "0"; break;
		default: o+= String.fromCharCode(cc);
	}
	return o;
}
function rnd(val/*:number*/, d/*:number*/)/*:string*/ { var dd = Math.pow(10,d); return ""+(Math.round(val * dd)/dd); }
function dec(val/*:number*/, d/*:number*/)/*:number*/ {
	var _frac = val - Math.floor(val), dd = Math.pow(10,d);
	if (d < ('' + Math.round(_frac * dd)).length) return 0;
	return Math.round(_frac * dd);
}
function carry(val/*:number*/, d/*:number*/)/*:number*/ {
	if (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {
		return 1;
	}
	return 0;
}
function flr(val/*:number*/)/*:string*/ {
	if(val < 2147483647 && val > -2147483648) return ""+(val >= 0 ? (val|0) : (val-1|0));
	return ""+Math.floor(val);
}
function write_num_flt(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {
	if(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {
		var ffmt = fmt.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");
		if(val >= 0) return write_num_flt('n', ffmt, val);
		return '(' + write_num_flt('n', ffmt, -val) + ')';
	}
	if(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);
	if(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);
	if(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);
	if(fmt.charCodeAt(0) === 36) return "$"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);
	var o;
	var r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? "-" : "";
	if(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);
	if(fmt.match(/^[#?]+$/)) {
		o = pad0r(val,0); if(o === "0") o = "";
		return o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;
	}
	if((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);
	if(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf("0"));
	if((r = fmt.match(dec1))) {
		o = rnd(val, r[1].length).replace(/^([^\.]+)$/,"$1."+hashq(r[1])).replace(/\.$/,"."+hashq(r[1])).replace(/\.(\d*)$/,function($$, $1) { return "." + $1 + fill("0", hashq(/*::(*/r/*::||[""])*/[1]).length-$1.length); });
		return fmt.indexOf("0.") !== -1 ? o : o.replace(/^0\./,".");
	}
	fmt = fmt.replace(/^#+([0.])/, "$1");
	if((r = fmt.match(/^(0*)\.(#*)$/))) {
		return sign + rnd(aval, r[2].length).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,r[1].length?"0.":".");
	}
	if((r = fmt.match(/^#{1,3},##0(\.?)$/))) return sign + commaify(pad0r(aval,0));
	if((r = fmt.match(/^#,##0\.([#0]*0)$/))) {
		return val < 0 ? "-" + write_num_flt(type, fmt, -val) : commaify(""+(Math.floor(val) + carry(val, r[1].length))) + "." + pad0(dec(val, r[1].length),r[1].length);
	}
	if((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,""),val);
	if((r = fmt.match(/^([0#]+)(\\?-([0#]+))+$/))) {
		o = _strrev(write_num_flt(type, fmt.replace(/[\\-]/g,""), val));
		ri = 0;
		return _strrev(_strrev(fmt.replace(/\\/g,"")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':"";}));
	}
	if(fmt.match(phone)) {
		o = write_num_flt(type, "##########", val);
		return "(" + o.substr(0,3) + ") " + o.substr(3, 3) + "-" + o.substr(6);
	}
	var oa = "";
	if((r = fmt.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/))) {
		ri = Math.min(/*::String(*/r[4]/*::)*/.length,7);
		ff = SSF_frac(aval, Math.pow(10,ri)-1, false);
		o = "" + sign;
		oa = write_num("n", /*::String(*/r[1]/*::)*/, ff[1]);
		if(oa.charAt(oa.length-1) == " ") oa = oa.substr(0,oa.length-1) + "0";
		o += oa + /*::String(*/r[2]/*::)*/ + "/" + /*::String(*/r[3]/*::)*/;
		oa = rpad_(ff[2],ri);
		if(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;
		o += oa;
		return o;
	}
	if((r = fmt.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/))) {
		ri = Math.min(Math.max(r[1].length, r[4].length),7);
		ff = SSF_frac(aval, Math.pow(10,ri)-1, true);
		return sign + (ff[0]||(ff[1] ? "" : "0")) + " " + (ff[1] ? pad_(ff[1],ri) + r[2] + "/" + r[3] + rpad_(ff[2],ri): fill(" ", 2*ri+1 + r[2].length + r[3].length));
	}
	if((r = fmt.match(/^[#0?]+$/))) {
		o = pad0r(val, 0);
		if(fmt.length <= o.length) return o;
		return hashq(fmt.substr(0,fmt.length-o.length)) + o;
	}
	if((r = fmt.match(/^([#0?]+)\.([#0]+)$/))) {
		o = "" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,"$1");
		ri = o.indexOf(".");
		var lres = fmt.indexOf(".") - ri, rres = fmt.length - o.length - lres;
		return hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));
	}
	if((r = fmt.match(/^00,000\.([#0]*0)$/))) {
		ri = dec(val, r[1].length);
		return val < 0 ? "-" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,function($$) { return "00," + ($$.length < 3 ? pad0(0,3-$$.length) : "") + $$; }) + "." + pad0(ri,r[1].length);
	}
	switch(fmt) {
		case "###,##0.00": return write_num_flt(type, "#,##0.00", val);
		case "###,###":
		case "##,###":
		case "#,###": var x = commaify(pad0r(aval,0)); return x !== "0" ? sign + x : "";
		case "###,###.00": return write_num_flt(type, "###,##0.00",val).replace(/^0\./,".");
		case "#,###.00": return write_num_flt(type, "#,##0.00",val).replace(/^0\./,".");
	}
	throw new Error("unsupported format |" + fmt + "|");
}
function write_num_cm2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{
	var idx = fmt.length - 1;
	while(fmt.charCodeAt(idx-1) === 44) --idx;
	return write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));
}
function write_num_pct2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{
	var sfmt = fmt.replace(pct1,""), mul = fmt.length - sfmt.length;
	return write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill("%",mul);
}
function write_num_exp2(fmt/*:string*/, val/*:number*/)/*:string*/{
	var o/*:string*/;
	var idx = fmt.indexOf("E") - fmt.indexOf(".") - 1;
	if(fmt.match(/^#+0.0E\+0$/)) {
		if(val == 0) return "0.0E+0";
		else if(val < 0) return "-" + write_num_exp2(fmt, -val);
		var period = fmt.indexOf("."); if(period === -1) period=fmt.indexOf('E');
		var ee = Math.floor(Math.log(val)*Math.LOG10E)%period;
		if(ee < 0) ee += period;
		o = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);
		if(!o.match(/[Ee]/)) {
			var fakee = Math.floor(Math.log(val)*Math.LOG10E);
			if(o.indexOf(".") === -1) o = o.charAt(0) + "." + o.substr(1) + "E+" + (fakee - o.length+ee);
			else o += "E+" + (fakee - ee);
			o = o.replace(/\+-/,"-");
		}
		o = o.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + "." + $3.substr(ee) + "E"; });
	} else o = val.toExponential(idx);
	if(fmt.match(/E\+00$/) && o.match(/e[+-]\d$/)) o = o.substr(0,o.length-1) + "0" + o.charAt(o.length-1);
	if(fmt.match(/E\-/) && o.match(/e\+/)) o = o.replace(/e\+/,"e");
	return o.replace("e","E");
}
function write_num_int(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {
	if(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {
		var ffmt = fmt.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");
		if(val >= 0) return write_num_int('n', ffmt, val);
		return '(' + write_num_int('n', ffmt, -val) + ')';
	}
	if(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);
	if(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);
	if(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);
	if(fmt.charCodeAt(0) === 36) return "$"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);
	var o;
	var r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? "-" : "";
	if(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);
	if(fmt.match(/^[#?]+$/)) {
		o = (""+val); if(val === 0) o = "";
		return o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;
	}
	if((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);
	if(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf("0"));
	if((r = fmt.match(dec1))) {
		/*:: if(!Array.isArray(r)) throw new Error("unreachable"); */
		o = (""+val).replace(/^([^\.]+)$/,"$1."+hashq(r[1])).replace(/\.$/,"."+hashq(r[1]));
		o = o.replace(/\.(\d*)$/,function($$, $1) {
		/*:: if(!Array.isArray(r)) throw new Error("unreachable"); */
			return "." + $1 + fill("0", hashq(r[1]).length-$1.length); });
		return fmt.indexOf("0.") !== -1 ? o : o.replace(/^0\./,".");
	}
	fmt = fmt.replace(/^#+([0.])/, "$1");
	if((r = fmt.match(/^(0*)\.(#*)$/))) {
		return sign + (""+aval).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,r[1].length?"0.":".");
	}
	if((r = fmt.match(/^#{1,3},##0(\.?)$/))) return sign + commaify((""+aval));
	if((r = fmt.match(/^#,##0\.([#0]*0)$/))) {
		return val < 0 ? "-" + write_num_int(type, fmt, -val) : commaify((""+val)) + "." + fill('0',r[1].length);
	}
	if((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,""),val);
	if((r = fmt.match(/^([0#]+)(\\?-([0#]+))+$/))) {
		o = _strrev(write_num_int(type, fmt.replace(/[\\-]/g,""), val));
		ri = 0;
		return _strrev(_strrev(fmt.replace(/\\/g,"")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':"";}));
	}
	if(fmt.match(phone)) {
		o = write_num_int(type, "##########", val);
		return "(" + o.substr(0,3) + ") " + o.substr(3, 3) + "-" + o.substr(6);
	}
	var oa = "";
	if((r = fmt.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/))) {
		ri = Math.min(/*::String(*/r[4]/*::)*/.length,7);
		ff = SSF_frac(aval, Math.pow(10,ri)-1, false);
		o = "" + sign;
		oa = write_num("n", /*::String(*/r[1]/*::)*/, ff[1]);
		if(oa.charAt(oa.length-1) == " ") oa = oa.substr(0,oa.length-1) + "0";
		o += oa + /*::String(*/r[2]/*::)*/ + "/" + /*::String(*/r[3]/*::)*/;
		oa = rpad_(ff[2],ri);
		if(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;
		o += oa;
		return o;
	}
	if((r = fmt.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/))) {
		ri = Math.min(Math.max(r[1].length, r[4].length),7);
		ff = SSF_frac(aval, Math.pow(10,ri)-1, true);
		return sign + (ff[0]||(ff[1] ? "" : "0")) + " " + (ff[1] ? pad_(ff[1],ri) + r[2] + "/" + r[3] + rpad_(ff[2],ri): fill(" ", 2*ri+1 + r[2].length + r[3].length));
	}
	if((r = fmt.match(/^[#0?]+$/))) {
		o = "" + val;
		if(fmt.length <= o.length) return o;
		return hashq(fmt.substr(0,fmt.length-o.length)) + o;
	}
	if((r = fmt.match(/^([#0]+)\.([#0]+)$/))) {
		o = "" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,"$1");
		ri = o.indexOf(".");
		var lres = fmt.indexOf(".") - ri, rres = fmt.length - o.length - lres;
		return hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));
	}
	if((r = fmt.match(/^00,000\.([#0]*0)$/))) {
		return val < 0 ? "-" + write_num_int(type, fmt, -val) : commaify(""+val).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,function($$) { return "00," + ($$.length < 3 ? pad0(0,3-$$.length) : "") + $$; }) + "." + pad0(0,r[1].length);
	}
	switch(fmt) {
		case "###,###":
		case "##,###":
		case "#,###": var x = commaify(""+aval); return x !== "0" ? sign + x : "";
		default:
			if(fmt.match(/\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(".")), val) + hashq(fmt.slice(fmt.lastIndexOf(".")));
	}
	throw new Error("unsupported format |" + fmt + "|");
}
function write_num(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {
	return (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);
}
function SSF_split_fmt(fmt/*:string*/)/*:Array<string>*/ {
	var out/*:Array<string>*/ = [];
	var in_str = false/*, cc*/;
	for(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {
		case 34: /* '"' */
			in_str = !in_str; break;
		case 95: case 42: case 92: /* '_' '*' '\\' */
			++i; break;
		case 59: /* ';' */
			out[out.length] = fmt.substr(j,i-j);
			j = i+1;
	}
	out[out.length] = fmt.substr(j);
	if(in_str === true) throw new Error("Format |" + fmt + "| unterminated string ");
	return out;
}

var SSF_abstime = /\[[HhMmSs\u0E0A\u0E19\u0E17]*\]/;
function fmt_is_date(fmt/*:string*/)/*:boolean*/ {
	var i = 0, /*cc = 0,*/ c = "", o = "";
	while(i < fmt.length) {
		switch((c = fmt.charAt(i))) {
			case 'G': if(SSF_isgeneral(fmt, i)) i+= 6; i++; break;
			case '"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;
			case '\\': i+=2; break;
			case '_': i+=2; break;
			case '@': ++i; break;
			case 'B': case 'b':
				if(fmt.charAt(i+1) === "1" || fmt.charAt(i+1) === "2") return true;
				/* falls through */
			case 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':
				/* falls through */
			case 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;
			case 'A': case 'a': case '上':
				if(fmt.substr(i, 3).toUpperCase() === "A/P") return true;
				if(fmt.substr(i, 5).toUpperCase() === "AM/PM") return true;
				if(fmt.substr(i, 5).toUpperCase() === "上午/下午") return true;
				++i; break;
			case '[':
				o = c;
				while(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);
				if(o.match(SSF_abstime)) return true;
				break;
			case '.':
				/* falls through */
			case '0': case '#':
				while(i < fmt.length && ("0#?.,E+-%".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\' && fmt.charAt(i+1) == "-" && "0#".indexOf(fmt.charAt(i+2))>-1))){/* empty */}
				break;
			case '?': while(fmt.charAt(++i) === c){/* empty */} break;
			case '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;
			case '(': case ')': ++i; break;
			case '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':
				while(i < fmt.length && "0123456789".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;
			case ' ': ++i; break;
			default: ++i; break;
		}
	}
	return false;
}

function eval_fmt(fmt/*:string*/, v/*:any*/, opts/*:any*/, flen/*:number*/) {
	var out = [], o = "", i = 0, c = "", lst='t', dt, j, cc;
	var hr='H';
	/* Tokenize */
	while(i < fmt.length) {
		switch((c = fmt.charAt(i))) {
			case 'G': /* General */
				if(!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);
				out[out.length] = {t:'G', v:'General'}; i+=7; break;
			case '"': /* Literal text */
				for(o="";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);
				out[out.length] = {t:'t', v:o}; ++i; break;
			case '\\': var w = fmt.charAt(++i), t = (w === "(" || w === ")") ? w : 't';
				out[out.length] = {t:t, v:w}; ++i; break;
			case '_': out[out.length] = {t:'t', v:" "}; i+=2; break;
			case '@': /* Text Placeholder */
				out[out.length] = {t:'T', v:v}; ++i; break;
			case 'B': case 'b':
				if(fmt.charAt(i+1) === "1" || fmt.charAt(i+1) === "2") {
					if(dt==null) { dt=SSF_parse_date_code(v, opts, fmt.charAt(i+1) === "2"); if(dt==null) return ""; }
					out[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;
				}
				/* falls through */
			case 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':
				c = c.toLowerCase();
				/* falls through */
			case 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':
				if(v < 0) return "";
				if(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return ""; }
				o = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;
				if(c === 'm' && lst.toLowerCase() === 'h') c = 'M';
				if(c === 'h') c = hr;
				out[out.length] = {t:c, v:o}; lst = c; break;
			case 'A': case 'a': case '上':
				var q={t:c, v:c};
				if(dt==null) dt=SSF_parse_date_code(v, opts);
				if(fmt.substr(i, 3).toUpperCase() === "A/P") { if(dt!=null) q.v = dt.H >= 12 ? "P" : "A"; q.t = 'T'; hr='h';i+=3;}
				else if(fmt.substr(i,5).toUpperCase() === "AM/PM") { if(dt!=null) q.v = dt.H >= 12 ? "PM" : "AM"; q.t = 'T'; i+=5; hr='h'; }
				else if(fmt.substr(i,5).toUpperCase() === "上午/下午") { if(dt!=null) q.v = dt.H >= 12 ? "下午" : "上午"; q.t = 'T'; i+=5; hr='h'; }
				else { q.t = "t"; ++i; }
				if(dt==null && q.t === 'T') return "";
				out[out.length] = q; lst = c; break;
			case '[':
				o = c;
				while(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);
				if(o.slice(-1) !== ']') throw 'unterminated "[" block: |' + o + '|';
				if(o.match(SSF_abstime)) {
					if(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return ""; }
					out[out.length] = {t:'Z', v:o.toLowerCase()};
					lst = o.charAt(1);
				} else if(o.indexOf("$") > -1) {
					o = (o.match(/\$([^-\[\]]*)/)||[])[1]||"$";
					if(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};
				}
				break;
			/* Numbers */
			case '.':
				if(dt != null) {
					o = c; while(++i < fmt.length && (c=fmt.charAt(i)) === "0") o += c;
					out[out.length] = {t:'s', v:o}; break;
				}
				/* falls through */
			case '0': case '#':
				o = c; while(++i < fmt.length && "0#?.,E+-%".indexOf(c=fmt.charAt(i)) > -1) o += c;
				out[out.length] = {t:'n', v:o}; break;
			case '?':
				o = c; while(fmt.charAt(++i) === c) o+=c;
				out[out.length] = {t:c, v:o}; lst = c; break;
			case '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **
			case '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;
			case '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':
				o = c; while(i < fmt.length && "0123456789".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);
				out[out.length] = {t:'D', v:o}; break;
			case ' ': out[out.length] = {t:c, v:c}; ++i; break;
			case '$': out[out.length] = {t:'t', v:'$'}; ++i; break;
			default:
				if(",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);
				out[out.length] = {t:'t', v:c}; ++i; break;
		}
	}

	/* Scan for date/time parts */
	var bt = 0, ss0 = 0, ssm;
	for(i=out.length-1, lst='t'; i >= 0; --i) {
		switch(out[i].t) {
			case 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;
			case 's':
				if((ssm=out[i].v.match(/\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);
				if(bt < 3) bt = 3;
			/* falls through */
			case 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;
			case 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;
			case 'X': /*if(out[i].v === "B2");*/
				break;
			case 'Z':
				if(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;
				if(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;
				if(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;
		}
	}
	/* time rounding depends on presence of minute / second / usec fields */
	switch(bt) {
		case 0: break;
		case 1:
			/*::if(!dt) break;*/
			if(dt.u >= 0.5) { dt.u = 0; ++dt.S; }
			if(dt.S >=  60) { dt.S = 0; ++dt.M; }
			if(dt.M >=  60) { dt.M = 0; ++dt.H; }
			break;
		case 2:
			/*::if(!dt) break;*/
			if(dt.u >= 0.5) { dt.u = 0; ++dt.S; }
			if(dt.S >=  60) { dt.S = 0; ++dt.M; }
			break;
	}

	/* replace fields */
	var nstr = "", jj;
	for(i=0; i < out.length; ++i) {
		switch(out[i].t) {
			case 't': case 'T': case ' ': case 'D': break;
			case 'X': out[i].v = ""; out[i].t = ";"; break;
			case 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':
				/*::if(!dt) throw "unreachable"; */
				out[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);
				out[i].t = 't'; break;
			case 'n': case '?':
				jj = i+1;
				while(out[jj] != null && (
					(c=out[jj].t) === "?" || c === "D" ||
					((c === " " || c === "t") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === "t" && out[jj+1].v === '/')) ||
					(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||
					(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))
				)) {
					out[i].v += out[jj].v;
					out[jj] = {v:"", t:";"}; ++jj;
				}
				nstr += out[i].v;
				i = jj-1; break;
			case 'G': out[i].t = 't'; out[i].v = SSF_general(v,opts); break;
		}
	}
	var vv = "", myv, ostr;
	if(nstr.length > 0) {
		if(nstr.charCodeAt(0) == 40) /* '(' */ {
			myv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);
			ostr = write_num('n', nstr, myv);
		} else {
			myv = (v<0 && flen > 1 ? -v : v);
			ostr = write_num('n', nstr, myv);
			if(myv < 0 && out[0] && out[0].t == 't') {
				ostr = ostr.substr(1);
				out[0].v = "-" + out[0].v;
			}
		}
		jj=ostr.length-1;
		var decpt = out.length;
		for(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(".") > -1) { decpt = i; break; }
		var lasti=out.length;
		if(decpt === out.length && ostr.indexOf("E") === -1) {
			for(i=out.length-1; i>= 0;--i) {
				if(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;
				if(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }
				else if(jj < 0) out[i].v = "";
				else { out[i].v = ostr.substr(0, jj+1); jj = -1; }
				out[i].t = 't';
				lasti = i;
			}
			if(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;
		}
		else if(decpt !== out.length && ostr.indexOf("E") === -1) {
			jj = ostr.indexOf(".")-1;
			for(i=decpt; i>= 0; --i) {
				if(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;
				j=out[i].v.indexOf(".")>-1&&i===decpt?out[i].v.indexOf(".")-1:out[i].v.length-1;
				vv = out[i].v.substr(j+1);
				for(; j>=0; --j) {
					if(jj>=0 && (out[i].v.charAt(j) === "0" || out[i].v.charAt(j) === "#")) vv = ostr.charAt(jj--) + vv;
				}
				out[i].v = vv;
				out[i].t = 't';
				lasti = i;
			}
			if(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;
			jj = ostr.indexOf(".")+1;
			for(i=decpt; i<out.length; ++i) {
				if(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;
				j=out[i].v.indexOf(".")>-1&&i===decpt?out[i].v.indexOf(".")+1:0;
				vv = out[i].v.substr(0,j);
				for(; j<out[i].v.length; ++j) {
					if(jj<ostr.length) vv += ostr.charAt(jj++);
				}
				out[i].v = vv;
				out[i].t = 't';
				lasti = i;
			}
		}
	}
	for(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {
		myv = (flen >1 && v < 0 && i>0 && out[i-1].v === "-" ? -v:v);
		out[i].v = write_num(out[i].t, out[i].v, myv);
		out[i].t = 't';
	}
	var retval = "";
	for(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;
	return retval;
}

var cfregex2 = /\[(=|>[=]?|<[>=]?)(-?\d+(?:\.\d*)?)\]/;
function chkcond(v, rr) {
	if(rr == null) return false;
	var thresh = parseFloat(rr[2]);
	switch(rr[1]) {
		case "=":  if(v == thresh) return true; break;
		case ">":  if(v >  thresh) return true; break;
		case "<":  if(v <  thresh) return true; break;
		case "<>": if(v != thresh) return true; break;
		case ">=": if(v >= thresh) return true; break;
		case "<=": if(v <= thresh) return true; break;
	}
	return false;
}
function choose_fmt(f/*:string*/, v/*:any*/) {
	var fmt = SSF_split_fmt(f);
	var l = fmt.length, lat = fmt[l-1].indexOf("@");
	if(l<4 && lat>-1) --l;
	if(fmt.length > 4) throw new Error("cannot find right format for |" + fmt.join("|") + "|");
	if(typeof v !== "number") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:"@"];
	switch(fmt.length) {
		case 1: fmt = lat>-1 ? ["General", "General", "General", fmt[0]] : [fmt[0], fmt[0], fmt[0], "@"]; break;
		case 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], "@"]; break;
		case 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], "@"]; break;
	}
	var ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];
	if(fmt[0].indexOf("[") === -1 && fmt[1].indexOf("[") === -1) return [l, ff];
	if(fmt[0].match(/\[[=<>]/) != null || fmt[1].match(/\[[=<>]/) != null) {
		var m1 = fmt[0].match(cfregex2);
		var m2 = fmt[1].match(cfregex2);
		return chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];
	}
	return [l, ff];
}
function SSF_format(fmt/*:string|number*/,v/*:any*/,o/*:?any*/) {
	if(o == null) o = {};
	var sfmt = "";
	switch(typeof fmt) {
		case "string":
			if(fmt == "m/d/yy" && o.dateNF) sfmt = o.dateNF;
			else sfmt = fmt;
			break;
		case "number":
			if(fmt == 14 && o.dateNF) sfmt = o.dateNF;
			else sfmt = (o.table != null ? (o.table/*:any*/) : table_fmt)[fmt];
			if(sfmt == null) sfmt = (o.table && o.table[SSF_default_map[fmt]]) || table_fmt[SSF_default_map[fmt]];
			if(sfmt == null) sfmt = SSF_default_str[fmt] || "General";
			break;
	}
	if(SSF_isgeneral(sfmt,0)) return SSF_general(v, o);
	if(v instanceof Date) v = datenum_local(v, o.date1904);
	var f = choose_fmt(sfmt, v);
	if(SSF_isgeneral(f[1])) return SSF_general(v, o);
	if(v === true) v = "TRUE"; else if(v === false) v = "FALSE";
	else if(v === "" || v == null) return "";
	return eval_fmt(f[1], v, o, f[0]);
}
function SSF_load(fmt/*:string*/, idx/*:?number*/)/*:number*/ {
	if(typeof idx != 'number') {
		idx = +idx || -1;
/*::if(typeof idx != 'number') return 0x188; */
		for(var i = 0; i < 0x0188; ++i) {
/*::if(typeof idx != 'number') return 0x188; */
			if(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }
			if(table_fmt[i] == fmt) { idx = i; break; }
		}
/*::if(typeof idx != 'number') return 0x188; */
		if(idx < 0) idx = 0x187;
	}
/*::if(typeof idx != 'number') return 0x188; */
	table_fmt[idx] = fmt;
	return idx;
}

function make_ssf() {
	table_fmt = SSF_init_table();
}

var SSFImplicit/*{[number]:string}*/ = ({
	"5": '"$"#,##0_);\\("$"#,##0\\)',
	"6": '"$"#,##0_);[Red]\\("$"#,##0\\)',
	"7": '"$"#,##0.00_);\\("$"#,##0.00\\)',
	"8": '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
	"23": 'General', "24": 'General', "25": 'General', "26": 'General',
	"27": 'm/d/yy', "28": 'm/d/yy', "29": 'm/d/yy', "30": 'm/d/yy', "31": 'm/d/yy',
	"32": 'h:mm:ss', "33": 'h:mm:ss', "34": 'h:mm:ss', "35": 'h:mm:ss',
	"36": 'm/d/yy',
	"41": '_(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_)',
	"42": '_("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_)',
	"43": '_(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_)',
	"44": '_("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_)',
	"50": 'm/d/yy', "51": 'm/d/yy', "52": 'm/d/yy', "53": 'm/d/yy', "54": 'm/d/yy',
	"55": 'm/d/yy', "56": 'm/d/yy', "57": 'm/d/yy', "58": 'm/d/yy',
	"59": '0',
	"60": '0.00',
	"61": '#,##0',
	"62": '#,##0.00',
	"63": '"$"#,##0_);\\("$"#,##0\\)',
	"64": '"$"#,##0_);[Red]\\("$"#,##0\\)',
	"65": '"$"#,##0.00_);\\("$"#,##0.00\\)',
	"66": '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
	"67": '0%',
	"68": '0.00%',
	"69": '# ?/?',
	"70": '# ??/??',
	"71": 'm/d/yy',
	"72": 'm/d/yy',
	"73": 'd-mmm-yy',
	"74": 'd-mmm',
	"75": 'mmm-yy',
	"76": 'h:mm',
	"77": 'h:mm:ss',
	"78": 'm/d/yy h:mm',
	"79": 'mm:ss',
	"80": '[h]:mm:ss',
	"81": 'mmss.0'
}/*:any*/);

/* dateNF parse TODO: move to SSF */
var dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;
function dateNF_regex(dateNF/*:string|number*/)/*:RegExp*/ {
	var fmt = typeof dateNF == "number" ? table_fmt[dateNF] : dateNF;
	fmt = fmt.replace(dateNFregex, "(\\d+)");
	return new RegExp("^" + fmt + "$");
}
function dateNF_fix(str/*:string*/, dateNF/*:string*/, match/*:Array<string>*/)/*:string*/ {
	var Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;
	(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {
		var v = parseInt(match[i+1], 10);
		switch(n.toLowerCase().charAt(0)) {
			case 'y': Y = v; break; case 'd': d = v; break;
			case 'h': H = v; break; case 's': S = v; break;
			case 'm': if(H >= 0) M = v; else m = v; break;
		}
	});
	if(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }
	var datestr = (("" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + "-" + ("00" + (m>=1?m:1)).slice(-2) + "-" + ("00" + (d>=1?d:1)).slice(-2));
	if(datestr.length == 7) datestr = "0" + datestr;
	if(datestr.length == 8) datestr = "20" + datestr;
	var timestr = (("00" + (H>=0?H:0)).slice(-2) + ":" + ("00" + (M>=0?M:0)).slice(-2) + ":" + ("00" + (S>=0?S:0)).slice(-2));
	if(H == -1 && M == -1 && S == -1) return datestr;
	if(Y == -1 && m == -1 && d == -1) return timestr;
	return datestr + "T" + timestr;
}

/*::
declare var ReadShift:any;
declare var CheckField:any;
declare var prep_blob:any;
declare var __readUInt32LE:any;
declare var __readInt32LE:any;
declare var __toBuffer:any;
declare var __utf16le:any;
declare var bconcat:any;
declare var s2a:any;
declare var chr0:any;
declare var chr1:any;
declare var has_buf:boolean;
declare var new_buf:any;
declare var new_raw_buf:any;
declare var new_unsafe_buf:any;
declare var Buffer_from:any;
*/
/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */
/* vim: set ts=2: */
/*jshint eqnull:true */
/*exported CFB */
/*global Uint8Array:false, Uint16Array:false */

/*::
type SectorEntry = {
	name?:string;
	nodes?:Array<number>;
	data:RawBytes;
};
type SectorList = {
	[k:string|number]:SectorEntry;
	name:?string;
	fat_addrs:Array<number>;
	ssz:number;
}
type CFBFiles = {[n:string]:CFBEntry};
*/
/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */
/* vim: set ts=2: */
/*exported CRC32 */
var CRC32 = /*#__PURE__*/(function() {
var CRC32 = {};
CRC32.version = '1.2.0';
/* see perf/crc32table.js */
/*global Int32Array */
function signed_crc_table()/*:any*/ {
	var c = 0, table/*:Array<number>*/ = new Array(256);

	for(var n =0; n != 256; ++n){
		c = n;
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
		table[n] = c;
	}

	return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;
}

var T0 = signed_crc_table();
function slice_by_16_tables(T) {
	var c = 0, v = 0, n = 0, table/*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;

	for(n = 0; n != 256; ++n) table[n] = T[n];
	for(n = 0; n != 256; ++n) {
		v = T[n];
		for(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];
	}
	var out = [];
	for(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);
	return out;
}
var TT = slice_by_16_tables(T0);
var T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];
var T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];
var Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];
function crc32_bstr(bstr/*:string*/, seed/*:number*/)/*:number*/ {
	var C = seed/*:: ? 0 : 0 */ ^ -1;
	for(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];
	return ~C;
}

function crc32_buf(B/*:Uint8Array|Array<number>*/, seed/*:number*/)/*:number*/ {
	var C = seed/*:: ? 0 : 0 */ ^ -1, L = B.length - 15, i = 0;
	for(; i < L;) C =
		Tf[B[i++] ^ (C & 255)] ^
		Te[B[i++] ^ ((C >> 8) & 255)] ^
		Td[B[i++] ^ ((C >> 16) & 255)] ^
		Tc[B[i++] ^ (C >>> 24)] ^
		Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^
		T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^
		T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];
	L += 15;
	while(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];
	return ~C;
}

function crc32_str(str/*:string*/, seed/*:number*/)/*:number*/ {
	var C = seed ^ -1;
	for(var i = 0, L = str.length, c = 0, d = 0; i < L;) {
		c = str.charCodeAt(i++);
		if(c < 0x80) {
			C = (C>>>8) ^ T0[(C^c)&0xFF];
		} else if(c < 0x800) {
			C = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];
		} else if(c >= 0xD800 && c < 0xE000) {
			c = (c&1023)+64; d = str.charCodeAt(i++)&1023;
			C = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];
		} else {
			C = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];
			C = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];
		}
	}
	return ~C;
}
CRC32.table = T0;
CRC32.bstr = crc32_bstr;
CRC32.buf = crc32_buf;
CRC32.str = crc32_str;
return CRC32;
})();
/* [MS-CFB] v20171201 */
var CFB = /*#__PURE__*/(function _CFB(){
var exports = {};
exports.version = '1.2.1';
/* [MS-CFB] 2.6.4 */
function namecmp(l/*:string*/, r/*:string*/)/*:number*/ {
	var L = l.split("/"), R = r.split("/");
	for(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {
		if((c = L[i].length - R[i].length)) return c;
		if(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;
	}
	return L.length - R.length;
}
function dirname(p/*:string*/)/*:string*/ {
	if(p.charAt(p.length - 1) == "/") return (p.slice(0,-1).indexOf("/") === -1) ? p : dirname(p.slice(0, -1));
	var c = p.lastIndexOf("/");
	return (c === -1) ? p : p.slice(0, c+1);
}

function filename(p/*:string*/)/*:string*/ {
	if(p.charAt(p.length - 1) == "/") return filename(p.slice(0, -1));
	var c = p.lastIndexOf("/");
	return (c === -1) ? p : p.slice(c+1);
}
/* -------------------------------------------------------------------------- */
/* DOS Date format:
   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low
   add 1980 to stored year
   stored second should be doubled
*/

/* write JS date to buf as a DOS date */
function write_dos_date(buf/*:CFBlob*/, date/*:Date|string*/) {
	if(typeof date === "string") date = new Date(date);
	var hms/*:number*/ = date.getHours();
	hms = hms << 6 | date.getMinutes();
	hms = hms << 5 | (date.getSeconds()>>>1);
	buf.write_shift(2, hms);
	var ymd/*:number*/ = (date.getFullYear() - 1980);
	ymd = ymd << 4 | (date.getMonth()+1);
	ymd = ymd << 5 | date.getDate();
	buf.write_shift(2, ymd);
}

/* read four bytes from buf and interpret as a DOS date */
function parse_dos_date(buf/*:CFBlob*/)/*:Date*/ {
	var hms = buf.read_shift(2) & 0xFFFF;
	var ymd = buf.read_shift(2) & 0xFFFF;
	var val = new Date();
	var d = ymd & 0x1F; ymd >>>= 5;
	var m = ymd & 0x0F; ymd >>>= 4;
	val.setMilliseconds(0);
	val.setFullYear(ymd + 1980);
	val.setMonth(m-1);
	val.setDate(d);
	var S = hms & 0x1F; hms >>>= 5;
	var M = hms & 0x3F; hms >>>= 6;
	val.setHours(hms);
	val.setMinutes(M);
	val.setSeconds(S<<1);
	return val;
}
function parse_extra_field(blob/*:CFBlob*/)/*:any*/ {
	prep_blob(blob, 0);
	var o = /*::(*/{}/*:: :any)*/;
	var flags = 0;
	while(blob.l <= blob.length - 4) {
		var type = blob.read_shift(2);
		var sz = blob.read_shift(2), tgt = blob.l + sz;
		var p = {};
		switch(type) {
			/* UNIX-style Timestamps */
			case 0x5455: {
				flags = blob.read_shift(1);
				if(flags & 1) p.mtime = blob.read_shift(4);
				/* for some reason, CD flag corresponds to LFH */
				if(sz > 5) {
					if(flags & 2) p.atime = blob.read_shift(4);
					if(flags & 4) p.ctime = blob.read_shift(4);
				}
				if(p.mtime) p.mt = new Date(p.mtime*1000);
			}
			break;
		}
		blob.l = tgt;
		o[type] = p;
	}
	return o;
}
var fs/*:: = require('fs'); */;
function get_fs() { return fs || (fs = {}); }
function parse(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {
if(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);
if((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);
if(file.length < 512) throw new Error("CFB file size " + file.length + " < 512");
var mver = 3;
var ssz = 512;
var nmfs = 0; // number of mini FAT sectors
var difat_sec_cnt = 0;
var dir_start = 0;
var minifat_start = 0;
var difat_start = 0;

var fat_addrs/*:Array<number>*/ = []; // locations of FAT sectors

/* [MS-CFB] 2.2 Compound File Header */
var blob/*:CFBlob*/ = /*::(*/file.slice(0,512)/*:: :any)*/;
prep_blob(blob, 0);

/* major version */
var mv = check_get_mver(blob);
mver = mv[0];
switch(mver) {
	case 3: ssz = 512; break; case 4: ssz = 4096; break;
	case 0: if(mv[1] == 0) return parse_zip(file, options);
	/* falls through */
	default: throw new Error("Major Version: Expected 3 or 4 saw " + mver);
}

/* reprocess header */
if(ssz !== 512) { blob = /*::(*/file.slice(0,ssz)/*:: :any)*/; prep_blob(blob, 28 /* blob.l */); }
/* Save header for final object */
var header/*:RawBytes*/ = file.slice(0,ssz);

check_shifts(blob, mver);

// Number of Directory Sectors
var dir_cnt/*:number*/ = blob.read_shift(4, 'i');
if(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);

// Number of FAT Sectors
blob.l += 4;

// First Directory Sector Location
dir_start = blob.read_shift(4, 'i');

// Transaction Signature
blob.l += 4;

// Mini Stream Cutoff Size
blob.chk('00100000', 'Mini Stream Cutoff Size: ');

// First Mini FAT Sector Location
minifat_start = blob.read_shift(4, 'i');

// Number of Mini FAT Sectors
nmfs = blob.read_shift(4, 'i');

// First DIFAT sector location
difat_start = blob.read_shift(4, 'i');

// Number of DIFAT Sectors
difat_sec_cnt = blob.read_shift(4, 'i');

// Grab FAT Sector Locations
for(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */
	q = blob.read_shift(4, 'i');
	if(q<0) break;
	fat_addrs[j] = q;
}

/** Break the file up into sectors */
var sectors/*:Array<RawBytes>*/ = sectorify(file, ssz);

sleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);

/** Chains */
var sector_list/*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);

sector_list[dir_start].name = "!Directory";
if(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = "!MiniFAT";
sector_list[fat_addrs[0]].name = "!FAT";
sector_list.fat_addrs = fat_addrs;
sector_list.ssz = ssz;

/* [MS-CFB] 2.6.1 Compound File Directory Entry */
var files/*:CFBFiles*/ = {}, Paths/*:Array<string>*/ = [], FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];
read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);

build_full_paths(FileIndex, FullPaths, Paths);
Paths.shift();

var o = {
	FileIndex: FileIndex,
	FullPaths: FullPaths
};

// $FlowIgnore
if(options && options.raw) o.raw = {header: header, sectors: sectors};
return o;
} // parse

/* [MS-CFB] 2.2 Compound File Header -- read up to major version */
function check_get_mver(blob/*:CFBlob*/)/*:[number, number]*/ {
	if(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];
	// header signature 8
	blob.chk(HEADER_SIGNATURE, 'Header Signature: ');

	// clsid 16
	//blob.chk(HEADER_CLSID, 'CLSID: ');
	blob.l += 16;

	// minor version 2
	var mver/*:number*/ = blob.read_shift(2, 'u');

	return [blob.read_shift(2,'u'), mver];
}
function check_shifts(blob/*:CFBlob*/, mver/*:number*/)/*:void*/ {
	var shift = 0x09;

	// Byte Order
	//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff
	blob.l += 2;

	// Sector Shift
	switch((shift = blob.read_shift(2))) {
		case 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;
		case 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;
		default: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);
	}

	// Mini Sector Shift
	blob.chk('0600', 'Mini Sector Shift: ');

	// Reserved
	blob.chk('000000000000', 'Reserved: ');
}

/** Break the file up into sectors */
function sectorify(file/*:RawBytes*/, ssz/*:number*/)/*:Array<RawBytes>*/ {
	var nsectors = Math.ceil(file.length/ssz)-1;
	var sectors/*:Array<RawBytes>*/ = [];
	for(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);
	sectors[nsectors-1] = file.slice(nsectors*ssz);
	return sectors;
}

/* [MS-CFB] 2.6.4 Red-Black Tree */
function build_full_paths(FI/*:CFBFileIndex*/, FP/*:Array<string>*/, Paths/*:Array<string>*/)/*:void*/ {
	var i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;
	var dad/*:Array<number>*/ = [], q/*:Array<number>*/ = [];

	for(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }

	for(; j < q.length; ++j) {
		i = q[j];
		L = FI[i].L; R = FI[i].R; C = FI[i].C;
		if(dad[i] === i) {
			if(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];
			if(R !== -1 && dad[R] !== R) dad[i] = dad[R];
		}
		if(C !== -1 /*NOSTREAM*/) dad[C] = i;
		if(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }
		if(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }
	}
	for(i=1; i < pl; ++i) if(dad[i] === i) {
		if(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];
		else if(L !== -1 && dad[L] !== L) dad[i] = dad[L];
	}

	for(i=1; i < pl; ++i) {
		if(FI[i].type === 0 /* unknown */) continue;
		j = i;
		if(j != dad[j]) do {
			j = dad[j];
			FP[i] = FP[j] + "/" + FP[i];
		} while (j !== 0 && -1 !== dad[j] && j != dad[j]);
		dad[i] = -1;
	}

	FP[0] += "/";
	for(i=1; i < pl; ++i) {
		if(FI[i].type !== 2 /* stream */) FP[i] += "/";
	}
}

function get_mfat_entry(entry/*:CFBEntry*/, payload/*:RawBytes*/, mini/*:?RawBytes*/)/*:CFBlob*/ {
	var start = entry.start, size = entry.size;
	//return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);
	var o = [];
	var idx = start;
	while(mini && size > 0 && idx >= 0) {
		o.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));
		size -= MSSZ;
		idx = __readInt32LE(mini, idx * 4);
	}
	if(o.length === 0) return (new_buf(0)/*:any*/);
	return (bconcat(o).slice(0, entry.size)/*:any*/);
}

/** Chase down the rest of the DIFAT chain to build a comprehensive list
    DIFAT chains by storing the next sector number as the last 32 bits */
function sleuth_fat(idx/*:number*/, cnt/*:number*/, sectors/*:Array<RawBytes>*/, ssz/*:number*/, fat_addrs)/*:void*/ {
	var q/*:number*/ = ENDOFCHAIN;
	if(idx === ENDOFCHAIN) {
		if(cnt !== 0) throw new Error("DIFAT chain shorter than expected");
	} else if(idx !== -1 /*FREESECT*/) {
		var sector = sectors[idx], m = (ssz>>>2)-1;
		if(!sector) return;
		for(var i = 0; i < m; ++i) {
			if((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;
			fat_addrs.push(q);
		}
		sleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);
	}
}

/** Follow the linked list of sectors for a given starting point */
function get_sector_list(sectors/*:Array<RawBytes>*/, start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/, chkd/*:?Array<boolean>*/)/*:SectorEntry*/ {
	var buf/*:Array<number>*/ = [], buf_chain/*:Array<any>*/ = [];
	if(!chkd) chkd = [];
	var modulus = ssz - 1, j = 0, jj = 0;
	for(j=start; j>=0;) {
		chkd[j] = true;
		buf[buf.length] = j;
		buf_chain.push(sectors[j]);
		var addr = fat_addrs[Math.floor(j*4/ssz)];
		jj = ((j*4) & modulus);
		if(ssz < 4 + jj) throw new Error("FAT boundary crossed: " + j + " 4 "+ssz);
		if(!sectors[addr]) break;
		j = __readInt32LE(sectors[addr], jj);
	}
	return {nodes: buf, data:__toBuffer([buf_chain])};
}

/** Chase down the sector linked lists */
function make_sector_list(sectors/*:Array<RawBytes>*/, dir_start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/)/*:SectorList*/ {
	var sl = sectors.length, sector_list/*:SectorList*/ = ([]/*:any*/);
	var chkd/*:Array<boolean>*/ = [], buf/*:Array<number>*/ = [], buf_chain/*:Array<RawBytes>*/ = [];
	var modulus = ssz - 1, i=0, j=0, k=0, jj=0;
	for(i=0; i < sl; ++i) {
		buf = ([]/*:Array<number>*/);
		k = (i + dir_start); if(k >= sl) k-=sl;
		if(chkd[k]) continue;
		buf_chain = [];
		var seen = [];
		for(j=k; j>=0;) {
			seen[j] = true;
			chkd[j] = true;
			buf[buf.length] = j;
			buf_chain.push(sectors[j]);
			var addr/*:number*/ = fat_addrs[Math.floor(j*4/ssz)];
			jj = ((j*4) & modulus);
			if(ssz < 4 + jj) throw new Error("FAT boundary crossed: " + j + " 4 "+ssz);
			if(!sectors[addr]) break;
			j = __readInt32LE(sectors[addr], jj);
			if(seen[j]) break;
		}
		sector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])}/*:SectorEntry*/);
	}
	return sector_list;
}

/* [MS-CFB] 2.6.1 Compound File Directory Entry */
function read_directory(dir_start/*:number*/, sector_list/*:SectorList*/, sectors/*:Array<RawBytes>*/, Paths/*:Array<string>*/, nmfs, files, FileIndex, mini) {
	var minifat_store = 0, pl = (Paths.length?2:0);
	var sector = sector_list[dir_start].data;
	var i = 0, namelen = 0, name;
	for(; i < sector.length; i+= 128) {
		var blob/*:CFBlob*/ = /*::(*/sector.slice(i, i+128)/*:: :any)*/;
		prep_blob(blob, 64);
		namelen = blob.read_shift(2);
		name = __utf16le(blob,0,namelen-pl);
		Paths.push(name);
		var o/*:CFBEntry*/ = ({
			name:  name,
			type:  blob.read_shift(1),
			color: blob.read_shift(1),
			L:     blob.read_shift(4, 'i'),
			R:     blob.read_shift(4, 'i'),
			C:     blob.read_shift(4, 'i'),
			clsid: blob.read_shift(16),
			state: blob.read_shift(4, 'i'),
			start: 0,
			size: 0
		});
		var ctime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);
		if(ctime !== 0) o.ct = read_date(blob, blob.l-8);
		var mtime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);
		if(mtime !== 0) o.mt = read_date(blob, blob.l-8);
		o.start = blob.read_shift(4, 'i');
		o.size = blob.read_shift(4, 'i');
		if(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = ""; }
		if(o.type === 5) { /* root */
			minifat_store = o.start;
			if(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = "!StreamData";
			/*minifat_size = o.size;*/
		} else if(o.size >= 4096 /* MSCSZ */) {
			o.storage = 'fat';
			if(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);
			sector_list[o.start].name = o.name;
			o.content = (sector_list[o.start].data.slice(0,o.size)/*:any*/);
		} else {
			o.storage = 'minifat';
			if(o.size < 0) o.size = 0;
			else if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {
				o.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);
			}
		}
		if(o.content) prep_blob(o.content, 0);
		files[name] = o;
		FileIndex.push(o);
	}
}

function read_date(blob/*:RawBytes|CFBlob*/, offset/*:number*/)/*:Date*/ {
	return new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);
}

function read_file(filename/*:string*/, options/*:CFBReadOpts*/) {
	get_fs();
	return parse(fs.readFileSync(filename), options);
}

function read(blob/*:RawBytes|string*/, options/*:CFBReadOpts*/) {
	var type = options && options.type;
	if(!type) {
		if(has_buf && Buffer.isBuffer(blob)) type = "buffer";
	}
	switch(type || "base64") {
		case "file": /*:: if(typeof blob !== 'string') throw "Must pass a filename when type='file'"; */return read_file(blob, options);
		case "base64": /*:: if(typeof blob !== 'string') throw "Must pass a base64-encoded binary string when type='file'"; */return parse(s2a(Base64_decode(blob)), options);
		case "binary": /*:: if(typeof blob !== 'string') throw "Must pass a binary string when type='file'"; */return parse(s2a(blob), options);
	}
	return parse(/*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);
}

function init_cfb(cfb/*:CFBContainer*/, opts/*:?any*/)/*:void*/ {
	var o = opts || {}, root = o.root || "Root Entry";
	if(!cfb.FullPaths) cfb.FullPaths = [];
	if(!cfb.FileIndex) cfb.FileIndex = [];
	if(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error("inconsistent CFB structure");
	if(cfb.FullPaths.length === 0) {
		cfb.FullPaths[0] = root + "/";
		cfb.FileIndex[0] = ({ name: root, type: 5 }/*:any*/);
	}
	if(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;
	seed_cfb(cfb);
}
function seed_cfb(cfb/*:CFBContainer*/)/*:void*/ {
	var nm = "\u0001Sh33tJ5";
	if(CFB.find(cfb, "/" + nm)) return;
	var p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;
	cfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }/*:any*/));
	cfb.FullPaths.push(cfb.FullPaths[0] + nm);
	rebuild_cfb(cfb);
}
function rebuild_cfb(cfb/*:CFBContainer*/, f/*:?boolean*/)/*:void*/ {
	init_cfb(cfb);
	var gc = false, s = false;
	for(var i = cfb.FullPaths.length - 1; i >= 0; --i) {
		var _file = cfb.FileIndex[i];
		switch(_file.type) {
			case 0:
				if(s) gc = true;
				else { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }
				break;
			case 1: case 2: case 5:
				s = true;
				if(isNaN(_file.R * _file.L * _file.C)) gc = true;
				if(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;
				break;
			default: gc = true; break;
		}
	}
	if(!gc && !f) return;

	var now = new Date(1987, 1, 19), j = 0;
	// Track which names exist
	var fullPaths = Object.create ? Object.create(null) : {};
	var data/*:Array<[string, CFBEntry]>*/ = [];
	for(i = 0; i < cfb.FullPaths.length; ++i) {
		fullPaths[cfb.FullPaths[i]] = true;
		if(cfb.FileIndex[i].type === 0) continue;
		data.push([cfb.FullPaths[i], cfb.FileIndex[i]]);
	}
	for(i = 0; i < data.length; ++i) {
		var dad = dirname(data[i][0]);
		s = fullPaths[dad];
		if(!s) {
			data.push([dad, ({
				name: filename(dad).replace("/",""),
				type: 1,
				clsid: HEADER_CLSID,
				ct: now, mt: now,
				content: null
			}/*:any*/)]);
			// Add name to set
			fullPaths[dad] = true;
		}
	}

	data.sort(function(x,y) { return namecmp(x[0], y[0]); });
	cfb.FullPaths = []; cfb.FileIndex = [];
	for(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }
	for(i = 0; i < data.length; ++i) {
		var elt = cfb.FileIndex[i];
		var nm = cfb.FullPaths[i];

		elt.name =  filename(nm).replace("/","");
		elt.L = elt.R = elt.C = -(elt.color = 1);
		elt.size = elt.content ? elt.content.length : 0;
		elt.start = 0;
		elt.clsid = (elt.clsid || HEADER_CLSID);
		if(i === 0) {
			elt.C = data.length > 1 ? 1 : -1;
			elt.size = 0;
			elt.type = 5;
		} else if(nm.slice(-1) == "/") {
			for(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;
			elt.C = j >= data.length ? -1 : j;
			for(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;
			elt.R = j >= data.length ? -1 : j;
			elt.type = 1;
		} else {
			if(dirname(cfb.FullPaths[i+1]||"") == dirname(nm)) elt.R = i + 1;
			elt.type = 2;
		}
	}

}

function _write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {
	var _opts = options || {};
	/* MAD is order-sensitive, skip rebuild and sort */
	if(_opts.fileType == 'mad') return write_mad(cfb, _opts);
	rebuild_cfb(cfb);
	switch(_opts.fileType) {
		case 'zip': return write_zip(cfb, _opts);
		//case 'mad': return write_mad(cfb, _opts);
	}
	var L = (function(cfb/*:CFBContainer*/)/*:Array<number>*/{
		var mini_size = 0, fat_size = 0;
		for(var i = 0; i < cfb.FileIndex.length; ++i) {
			var file = cfb.FileIndex[i];
			if(!file.content) continue;
			/*:: if(file.content == null) throw new Error("unreachable"); */
			var flen = file.content.length;
			if(flen > 0){
				if(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;
				else fat_size += (flen + 0x01FF) >> 9;
			}
		}
		var dir_cnt = (cfb.FullPaths.length +3) >> 2;
		var mini_cnt = (mini_size + 7) >> 3;
		var mfat_cnt = (mini_size + 0x7F) >> 7;
		var fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;
		var fat_cnt = (fat_base + 0x7F) >> 7;
		var difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);
		while(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);
		var L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];
		cfb.FileIndex[0].size = mini_size << 6;
		L[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);
		return L;
	})(cfb);
	var o = new_buf(L[7] << 9);
	var i = 0, T = 0;
	{
		for(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);
		for(i = 0; i < 8; ++i) o.write_shift(2, 0);
		o.write_shift(2, 0x003E);
		o.write_shift(2, 0x0003);
		o.write_shift(2, 0xFFFE);
		o.write_shift(2, 0x0009);
		o.write_shift(2, 0x0006);
		for(i = 0; i < 3; ++i) o.write_shift(2, 0);
		o.write_shift(4, 0);
		o.write_shift(4, L[2]);
		o.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);
		o.write_shift(4, 0);
		o.write_shift(4, 1<<12);
		o.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);
		o.write_shift(4, L[3]);
		o.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);
		o.write_shift(4, L[1]);
		for(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);
	}
	if(L[1]) {
		for(T = 0; T < L[1]; ++T) {
			for(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);
			o.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);
		}
	}
	var chainit = function(w/*:number*/)/*:void*/ {
		for(T += w; i<T-1; ++i) o.write_shift(-4, i+1);
		if(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }
	};
	T = i = 0;
	for(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);
	for(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);
	chainit(L[3]);
	chainit(L[4]);
	var j/*:number*/ = 0, flen/*:number*/ = 0;
	var file/*:CFBEntry*/ = cfb.FileIndex[0];
	for(; j < cfb.FileIndex.length; ++j) {
		file = cfb.FileIndex[j];
		if(!file.content) continue;
		/*:: if(file.content == null) throw new Error("unreachable"); */
		flen = file.content.length;
		if(flen < 0x1000) continue;
		file.start = T;
		chainit((flen + 0x01FF) >> 9);
	}
	chainit((L[6] + 7) >> 3);
	while(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);
	T = i = 0;
	for(j = 0; j < cfb.FileIndex.length; ++j) {
		file = cfb.FileIndex[j];
		if(!file.content) continue;
		/*:: if(file.content == null) throw new Error("unreachable"); */
		flen = file.content.length;
		if(!flen || flen >= 0x1000) continue;
		file.start = T;
		chainit((flen + 0x3F) >> 6);
	}
	while(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);
	for(i = 0; i < L[4]<<2; ++i) {
		var nm = cfb.FullPaths[i];
		if(!nm || nm.length === 0) {
			for(j = 0; j < 17; ++j) o.write_shift(4, 0);
			for(j = 0; j < 3; ++j) o.write_shift(4, -1);
			for(j = 0; j < 12; ++j) o.write_shift(4, 0);
			continue;
		}
		file = cfb.FileIndex[i];
		if(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;
		var _nm/*:string*/ = (i === 0 && _opts.root) || file.name;
		flen = 2*(_nm.length+1);
		o.write_shift(64, _nm, "utf16le");
		o.write_shift(2, flen);
		o.write_shift(1, file.type);
		o.write_shift(1, file.color);
		o.write_shift(-4, file.L);
		o.write_shift(-4, file.R);
		o.write_shift(-4, file.C);
		if(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);
		else o.write_shift(16, file.clsid, "hex");
		o.write_shift(4, file.state || 0);
		o.write_shift(4, 0); o.write_shift(4, 0);
		o.write_shift(4, 0); o.write_shift(4, 0);
		o.write_shift(4, file.start);
		o.write_shift(4, file.size); o.write_shift(4, 0);
	}
	for(i = 1; i < cfb.FileIndex.length; ++i) {
		file = cfb.FileIndex[i];
		/*:: if(!file.content) throw new Error("unreachable"); */
		if(file.size >= 0x1000) {
			o.l = (file.start+1) << 9;
			if (has_buf && Buffer.isBuffer(file.content)) {
				file.content.copy(o, o.l, 0, file.size);
				// o is a 0-filled Buffer so just set next offset
				o.l += (file.size + 511) & -512;
			} else {
				for(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);
				for(; j & 0x1FF; ++j) o.write_shift(1, 0);
			}
		}
	}
	for(i = 1; i < cfb.FileIndex.length; ++i) {
		file = cfb.FileIndex[i];
		/*:: if(!file.content) throw new Error("unreachable"); */
		if(file.size > 0 && file.size < 0x1000) {
			if (has_buf && Buffer.isBuffer(file.content)) {
				file.content.copy(o, o.l, 0, file.size);
				// o is a 0-filled Buffer so just set next offset
				o.l += (file.size + 63) & -64;
			} else {
				for(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);
				for(; j & 0x3F; ++j) o.write_shift(1, 0);
			}
		}
	}
	if (has_buf) {
		o.l = o.length;
	} else {
		// When using Buffer, already 0-filled
		while(o.l < o.length) o.write_shift(1, 0);
	}
	return o;
}
/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */
function find(cfb/*:CFBContainer*/, path/*:string*/)/*:?CFBEntry*/ {
	var UCFullPaths/*:Array<string>*/ = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });
	var UCPaths/*:Array<string>*/ = UCFullPaths.map(function(x) { var y = x.split("/"); return y[y.length - (x.slice(-1) == "/" ? 2 : 1)]; });
	var k/*:boolean*/ = false;
	if(path.charCodeAt(0) === 47 /* "/" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }
	else k = path.indexOf("/") !== -1;
	var UCPath/*:string*/ = path.toUpperCase();
	var w/*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);
	if(w !== -1) return cfb.FileIndex[w];

	var m = !UCPath.match(chr1);
	UCPath = UCPath.replace(chr0,'');
	if(m) UCPath = UCPath.replace(chr1,'!');
	for(w = 0; w < UCFullPaths.length; ++w) {
		if((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];
		if((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];
	}
	return null;
}
/** CFB Constants */
var MSSZ = 64; /* Mini Sector Size = 1<<6 */
//var MSCSZ = 4096; /* Mini Stream Cutoff Size */
/* 2.1 Compound File Sector Numbers and Types */
var ENDOFCHAIN = -2;
/* 2.2 Compound File Header */
var HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';
var HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];
var HEADER_CLSID = '00000000000000000000000000000000';
var consts = {
	/* 2.1 Compund File Sector Numbers and Types */
	MAXREGSECT: -6,
	DIFSECT: -4,
	FATSECT: -3,
	ENDOFCHAIN: ENDOFCHAIN,
	FREESECT: -1,
	/* 2.2 Compound File Header */
	HEADER_SIGNATURE: HEADER_SIGNATURE,
	HEADER_MINOR_VERSION: '3e00',
	MAXREGSID: -6,
	NOSTREAM: -1,
	HEADER_CLSID: HEADER_CLSID,
	/* 2.6.1 Compound File Directory Entry */
	EntryTypes: ['unknown','storage','stream','lockbytes','property','root']
};

function write_file(cfb/*:CFBContainer*/, filename/*:string*/, options/*:CFBWriteOpts*/)/*:void*/ {
	get_fs();
	var o = _write(cfb, options);
	/*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error("unreachable"); */
	fs.writeFileSync(filename, o);
}

function a2s(o/*:RawBytes*/)/*:string*/ {
	var out = new Array(o.length);
	for(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);
	return out.join("");
}

function write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {
	var o = _write(cfb, options);
	switch(options && options.type || "buffer") {
		case "file": get_fs(); fs.writeFileSync(options.filename, (o/*:any*/)); return o;
		case "binary": return typeof o == "string" ? o : a2s(o);
		case "base64": return Base64_encode(typeof o == "string" ? o : a2s(o));
		case "buffer": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);
			/* falls through */
		case "array": return typeof o == "string" ? s2a(o) : o;
	}
	return o;
}
/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */
var _zlib;
function use_zlib(zlib) { try {
	var InflateRaw = zlib.InflateRaw;
	var InflRaw = new InflateRaw();
	InflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);
	if(InflRaw.bytesRead) _zlib = zlib;
	else throw new Error("zlib does not expose bytesRead");
} catch(e) {console.error("cannot use native zlib: " + (e.message || e)); } }

function _inflateRawSync(payload, usz) {
	if(!_zlib) return _inflate(payload, usz);
	var InflateRaw = _zlib.InflateRaw;
	var InflRaw = new InflateRaw();
	var out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);
	payload.l += InflRaw.bytesRead;
	return out;
}

function _deflateRawSync(payload) {
	return _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);
}
var CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];

/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */
var LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];

/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */
var DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];

function bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }

var use_typed_arrays = typeof Uint8Array !== 'undefined';

var bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];
for(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);

function bit_swap_n(n, b) {
	var rev = bitswap8[n & 0xFF];
	if(b <= 8) return rev >>> (8-b);
	rev = (rev << 8) | bitswap8[(n>>8)&0xFF];
	if(b <= 16) return rev >>> (16-b);
	rev = (rev << 8) | bitswap8[(n>>16)&0xFF];
	return rev >>> (24-b);
}

/* helpers for unaligned bit reads */
function read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }
function read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }
function read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }
function read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }
function read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }

/* works up to n = 3 * 8 + 1 = 25 */
function read_bits_n(buf, bl, n) {
	var w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);
	var v = buf[h] >>> w;
	if(n < 8 - w) return v & f;
	v |= buf[h+1]<<(8-w);
	if(n < 16 - w) return v & f;
	v |= buf[h+2]<<(16-w);
	if(n < 24 - w) return v & f;
	v |= buf[h+3]<<(24-w);
	return v & f;
}

/* helpers for unaligned bit writes */
function write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;
	if(w <= 5) buf[h] |= (v & 7) << w;
	else {
		buf[h] |= (v << w) & 0xFF;
		buf[h+1] = (v&7) >> (8-w);
	}
	return bl + 3;
}

function write_bits_1(buf, bl, v) {
	var w = bl & 7, h = bl >>> 3;
	v = (v&1) << w;
	buf[h] |= v;
	return bl + 1;
}
function write_bits_8(buf, bl, v) {
	var w = bl & 7, h = bl >>> 3;
	v <<= w;
	buf[h] |=  v & 0xFF; v >>>= 8;
	buf[h+1] = v;
	return bl + 8;
}
function write_bits_16(buf, bl, v) {
	var w = bl & 7, h = bl >>> 3;
	v <<= w;
	buf[h] |=  v & 0xFF; v >>>= 8;
	buf[h+1] = v & 0xFF;
	buf[h+2] = v >>> 8;
	return bl + 16;
}

/* until ArrayBuffer#realloc is a thing, fake a realloc */
function realloc(b, sz/*:number*/) {
	var L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;
	if(L >= sz) return b;
	if(has_buf) {
		var o = new_unsafe_buf(M);
		// $FlowIgnore
		if(b.copy) b.copy(o);
		else for(; i < b.length; ++i) o[i] = b[i];
		return o;
	} else if(use_typed_arrays) {
		var a = new Uint8Array(M);
		if(a.set) a.set(b);
		else for(; i < L; ++i) a[i] = b[i];
		return a;
	}
	b.length = M;
	return b;
}

/* zero-filled arrays for older browsers */
function zero_fill_array(n) {
	var o = new Array(n);
	for(var i = 0; i < n; ++i) o[i] = 0;
	return o;
}

/* build tree (used for literals and lengths) */
function build_tree(clens, cmap, MAX/*:number*/)/*:number*/ {
	var maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;

	var bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);
	for(i = 0; i < 32; ++i) bl_count[i] = 0;

	for(i = L; i < MAX; ++i) clens[i] = 0;
	L = clens.length;

	var ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []

	/* build code tree */
	for(i = 0; i < L; ++i) {
		bl_count[(w = clens[i])]++;
		if(maxlen < w) maxlen = w;
		ctree[i] = 0;
	}
	bl_count[0] = 0;
	for(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);
	for(i = 0; i < L; ++i) {
		ccode = clens[i];
		if(ccode != 0) ctree[i] = bl_count[ccode+16]++;
	}

	/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */
	var cleni = 0;
	for(i = 0; i < L; ++i) {
		cleni = clens[i];
		if(cleni != 0) {
			ccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);
			for(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)
				cmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);
		}
	}
	return maxlen;
}

/* Fixed Huffman */
var fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);
var fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);
if(!use_typed_arrays) {
	for(var i = 0; i < 512; ++i) fix_lmap[i] = 0;
	for(i = 0; i < 32; ++i) fix_dmap[i] = 0;
}
(function() {
	var dlens/*:Array<number>*/ = [];
	var i = 0;
	for(;i<32; i++) dlens.push(5);
	build_tree(dlens, fix_dmap, 32);

	var clens/*:Array<number>*/ = [];
	i = 0;
	for(; i<=143; i++) clens.push(8);
	for(; i<=255; i++) clens.push(9);
	for(; i<=279; i++) clens.push(7);
	for(; i<=287; i++) clens.push(8);
	build_tree(clens, fix_lmap, 288);
})();var _deflateRaw = /*#__PURE__*/(function _deflateRawIIFE() {
	var DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];
	var j = 0, k = 0;
	for(; j < DST_LN.length - 1; ++j) {
		for(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;
	}
	for(;k < 32768; ++k) DST_LN_RE[k] = 29;

	var LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];
	for(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {
		for(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;
	}

	function write_stored(data, out) {
		var boff = 0;
		while(boff < data.length) {
			var L = Math.min(0xFFFF, data.length - boff);
			var h = boff + L == data.length;
			out.write_shift(1, +h);
			out.write_shift(2, L);
			out.write_shift(2, (~L) & 0xFFFF);
			while(L-- > 0) out[out.l++] = data[boff++];
		}
		return out.l;
	}

	/* Fixed Huffman */
	function write_huff_fixed(data, out) {
		var bl = 0;
		var boff = 0;
		var addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];
		while(boff < data.length) {
			var L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);

			/* write a stored block for short data */
			if(L < 10) {
				bl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line
				if(bl & 7) bl += 8 - (bl & 7);
				out.l = (bl / 8) | 0;
				out.write_shift(2, L);
				out.write_shift(2, (~L) & 0xFFFF);
				while(L-- > 0) out[out.l++] = data[boff++];
				bl = out.l * 8;
				continue;
			}

			bl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line
			var hash = 0;
			while(L-- > 0) {
				var d = data[boff];
				hash = ((hash << 5) ^ d) & 0x7FFF;

				var match = -1, mlen = 0;

				if((match = addrs[hash])) {
					match |= boff & ~0x7FFF;
					if(match > boff) match -= 0x8000;
					if(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;
				}

				if(mlen > 2) {
					/* Copy Token  */
					d = LEN_LN_RE[mlen];
					if(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;
					else {
						write_bits_8(out, bl, 3);
						bl += 5;
						write_bits_8(out, bl, bitswap8[d-23]>>5);
						bl += 3;
					}
					var len_eb = (d < 8) ? 0 : ((d - 4)>>2);
					if(len_eb > 0) {
						write_bits_16(out, bl, mlen - LEN_LN[d]);
						bl += len_eb;
					}

					d = DST_LN_RE[boff - match];
					bl = write_bits_8(out, bl, bitswap8[d]>>3);
					bl -= 3;

					var dst_eb = d < 4 ? 0 : (d-2)>>1;
					if(dst_eb > 0) {
						write_bits_16(out, bl, boff - match - DST_LN[d]);
						bl += dst_eb;
					}
					for(var q = 0; q < mlen; ++q) {
						addrs[hash] = boff & 0x7FFF;
						hash = ((hash << 5) ^ data[boff]) & 0x7FFF;
						++boff;
					}
					L-= mlen - 1;
				} else {
					/* Literal Token */
					if(d <= 143) d = d + 48;
					else bl = write_bits_1(out, bl, 1);
					bl = write_bits_8(out, bl, bitswap8[d]);
					addrs[hash] = boff & 0x7FFF;
					++boff;
				}
			}

			bl = write_bits_8(out, bl, 0) - 1;
		}
		out.l = ((bl + 7)/8)|0;
		return out.l;
	}
	return function _deflateRaw(data, out) {
		if(data.length < 8) return write_stored(data, out);
		return write_huff_fixed(data, out);
	};
})();

function _deflate(data) {
	var buf = new_buf(50+Math.floor(data.length*1.1));
	var off = _deflateRaw(data, buf);
	return buf.slice(0, off);
}
/* modified inflate function also moves original read head */

var dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);
var dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);
var dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);
var dyn_len_1 = 1, dyn_len_2 = 1;

/* 5.5.3 Expanding Huffman Codes */
function dyn(data, boff/*:number*/) {
	/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */
	var _HLIT = read_bits_5(data, boff) + 257; boff += 5;
	var _HDIST = read_bits_5(data, boff) + 1; boff += 5;
	var _HCLEN = read_bits_4(data, boff) + 4; boff += 4;
	var w = 0;

	/* grab and store code lengths */
	var clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);
	var ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
	var maxlen = 1;
	var bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);
	var next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);
	var L = clens.length; /* 19 */
	for(var i = 0; i < _HCLEN; ++i) {
		clens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);
		if(maxlen < w) maxlen = w;
		bl_count[w]++;
		boff += 3;
	}

	/* build code tree */
	var ccode = 0;
	bl_count[0] = 0;
	for(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;
	for(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;
	/* cmap[7 bits from stream] = (off&7) + (lit<<3) */
	var cleni = 0;
	for(i = 0; i < L; ++i) {
		cleni = clens[i];
		if(cleni != 0) {
			ccode = bitswap8[ctree[i]]>>(8-cleni);
			for(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);
		}
	}

	/* read literal and dist codes at once */
	var hcodes/*:Array<number>*/ = [];
	maxlen = 1;
	for(; hcodes.length < _HLIT + _HDIST;) {
		ccode = dyn_cmap[read_bits_7(data, boff)];
		boff += ccode & 7;
		switch((ccode >>>= 3)) {
			case 16:
				w = 3 + read_bits_2(data, boff); boff += 2;
				ccode = hcodes[hcodes.length - 1];
				while(w-- > 0) hcodes.push(ccode);
				break;
			case 17:
				w = 3 + read_bits_3(data, boff); boff += 3;
				while(w-- > 0) hcodes.push(0);
				break;
			case 18:
				w = 11 + read_bits_7(data, boff); boff += 7;
				while(w -- > 0) hcodes.push(0);
				break;
			default:
				hcodes.push(ccode);
				if(maxlen < ccode) maxlen = ccode;
				break;
		}
	}

	/* build literal / length trees */
	var h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);
	for(i = _HLIT; i < 286; ++i) h1[i] = 0;
	for(i = _HDIST; i < 30; ++i) h2[i] = 0;
	dyn_len_1 = build_tree(h1, dyn_lmap, 286);
	dyn_len_2 = build_tree(h2, dyn_dmap, 30);
	return boff;
}

/* return [ data, bytesRead ] */
function inflate(data, usz/*:number*/) {
	/* shortcircuit for empty buffer [0x03, 0x00] */
	if(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }

	/* bit offset */
	var boff = 0;

	/* header includes final bit and type bits */
	var header = 0;

	var outbuf = new_unsafe_buf(usz ? usz : (1<<18));
	var woff = 0;
	var OL = outbuf.length>>>0;
	var max_len_1 = 0, max_len_2 = 0;

	while((header&1) == 0) {
		header = read_bits_3(data, boff); boff += 3;
		if((header >>> 1) == 0) {
			/* Stored block */
			if(boff & 7) boff += 8 - (boff&7);
			/* 2 bytes sz, 2 bytes bit inverse */
			var sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;
			boff += 32;
			/* push sz bytes */
			if(sz > 0) {
				if(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }
				while(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }
			}
			continue;
		} else if((header >> 1) == 1) {
			/* Fixed Huffman */
			max_len_1 = 9; max_len_2 = 5;
		} else {
			/* Dynamic Huffman */
			boff = dyn(data, boff);
			max_len_1 = dyn_len_1; max_len_2 = dyn_len_2;
		}
		for(;;) { // while(true) is apparently out of vogue in modern JS circles
			if(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }
			/* ingest code and move read head */
			var bits = read_bits_n(data, boff, max_len_1);
			var code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];
			boff += code & 15; code >>>= 4;
			/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */
			if(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;
			else if(code == 256) break;
			else {
				code -= 257;
				var len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;
				var tgt = woff + LEN_LN[code];
				/* length extra bits */
				if(len_eb > 0) {
					tgt += read_bits_n(data, boff, len_eb);
					boff += len_eb;
				}

				/* dist code */
				bits = read_bits_n(data, boff, max_len_2);
				code = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];
				boff += code & 15; code >>>= 4;
				var dst_eb = (code < 4 ? 0 : (code-2)>>1);
				var dst = DST_LN[code];
				/* dist extra bits */
				if(dst_eb > 0) {
					dst += read_bits_n(data, boff, dst_eb);
					boff += dst_eb;
				}

				/* in the common case, manual byte copy is faster than TA set / Buffer copy */
				if(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }
				while(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }
			}
		}
	}
	if(usz) return [outbuf, (boff+7)>>>3];
	return [outbuf.slice(0, woff), (boff+7)>>>3];
}

function _inflate(payload, usz) {
	var data = payload.slice(payload.l||0);
	var out = inflate(data, usz);
	payload.l += out[1];
	return out[0];
}

function warn_or_throw(wrn, msg) {
	if(wrn) { if(typeof console !== 'undefined') console.error(msg); }
	else throw new Error(msg);
}

function parse_zip(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {
	var blob/*:CFBlob*/ = /*::(*/file/*:: :any)*/;
	prep_blob(blob, 0);

	var FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];
	var o = {
		FileIndex: FileIndex,
		FullPaths: FullPaths
	};
	init_cfb(o, { root: options.root });

	/* find end of central directory, start just after signature */
	var i = blob.length - 4;
	while((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;
	blob.l = i + 4;

	/* parse end of central directory */
	blob.l += 4;
	var fcnt = blob.read_shift(2);
	blob.l += 6;
	var start_cd = blob.read_shift(4);

	/* parse central directory */
	blob.l = start_cd;

	for(i = 0; i < fcnt; ++i) {
		/* trust local file header instead of CD entry */
		blob.l += 20;
		var csz = blob.read_shift(4);
		var usz = blob.read_shift(4);
		var namelen = blob.read_shift(2);
		var efsz = blob.read_shift(2);
		var fcsz = blob.read_shift(2);
		blob.l += 8;
		var offset = blob.read_shift(4);
		var EF = parse_extra_field(/*::(*/blob.slice(blob.l+namelen, blob.l+namelen+efsz)/*:: :any)*/);
		blob.l += namelen + efsz + fcsz;

		var L = blob.l;
		blob.l = offset + 4;
		parse_local_file(blob, csz, usz, o, EF);
		blob.l = L;
	}
	return o;
}


/* head starts just after local file header signature */
function parse_local_file(blob/*:CFBlob*/, csz/*:number*/, usz/*:number*/, o/*:CFBContainer*/, EF) {
	/* [local file header] */
	blob.l += 2;
	var flags = blob.read_shift(2);
	var meth = blob.read_shift(2);
	var date = parse_dos_date(blob);

	if(flags & 0x2041) throw new Error("Unsupported ZIP encryption");
	var crc32 = blob.read_shift(4);
	var _csz = blob.read_shift(4);
	var _usz = blob.read_shift(4);

	var namelen = blob.read_shift(2);
	var efsz = blob.read_shift(2);

	// TODO: flags & (1<<11) // UTF8
	var name = ""; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);
	if(efsz) {
		var ef = parse_extra_field(/*::(*/blob.slice(blob.l, blob.l + efsz)/*:: :any)*/);
		if((ef[0x5455]||{}).mt) date = ef[0x5455].mt;
		if(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;
	}
	blob.l += efsz;

	/* [encryption header] */

	/* [file data] */
	var data = blob.slice(blob.l, blob.l + _csz);
	switch(meth) {
		case 8: data = _inflateRawSync(blob, _usz); break;
		case 0: break; // TODO: scan for magic number
		default: throw new Error("Unsupported ZIP Compression method " + meth);
	}

	/* [data descriptor] */
	var wrn = false;
	if(flags & 8) {
		crc32 = blob.read_shift(4);
		if(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }
		_csz = blob.read_shift(4);
		_usz = blob.read_shift(4);
	}

	if(_csz != csz) warn_or_throw(wrn, "Bad compressed size: " + csz + " != " + _csz);
	if(_usz != usz) warn_or_throw(wrn, "Bad uncompressed size: " + usz + " != " + _usz);
	//var _crc32 = CRC32.buf(data, 0);
	//if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, "Bad CRC32 checksum: " + crc32 + " != " + _crc32);
	cfb_add(o, name, data, {unsafe: true, mt: date});
}
function write_zip(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes*/ {
	var _opts = options || {};
	var out = [], cdirs = [];
	var o/*:CFBlob*/ = new_buf(1);
	var method = (_opts.compression ? 8 : 0), flags = 0;
	var i = 0, j = 0;

	var start_cd = 0, fcnt = 0;
	var root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];
	var crcs = [];
	var sz_cd = 0;

	for(i = 1; i < cfb.FullPaths.length; ++i) {
		fp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];
		if(!fi.size || !fi.content || fp == "\u0001Sh33tJ5") continue;
		var start = start_cd;

		/* TODO: CP437 filename */
		var namebuf = new_buf(fp.length);
		for(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);
		namebuf = namebuf.slice(0, namebuf.l);
		crcs[fcnt] = CRC32.buf(/*::((*/fi.content/*::||[]):any)*/, 0);

		var outbuf = fi.content/*::||[]*/;
		if(method == 8) outbuf = _deflateRawSync(outbuf);

		/* local file header */
		o = new_buf(30);
		o.write_shift(4, 0x04034b50);
		o.write_shift(2, 20);
		o.write_shift(2, flags);
		o.write_shift(2, method);
		/* TODO: last mod file time/date */
		if(fi.mt) write_dos_date(o, fi.mt);
		else o.write_shift(4, 0);
		o.write_shift(-4, crcs[fcnt]);
		o.write_shift(4,  outbuf.length);
		o.write_shift(4,  /*::(*/fi.content/*::||[])*/.length);
		o.write_shift(2, namebuf.length);
		o.write_shift(2, 0);

		start_cd += o.length;
		out.push(o);
		start_cd += namebuf.length;
		out.push(namebuf);

		/* TODO: extra fields? */

		/* TODO: encryption header ? */

		start_cd += outbuf.length;
		out.push(outbuf);

		/* central directory */
		o = new_buf(46);
		o.write_shift(4, 0x02014b50);
		o.write_shift(2, 0);
		o.write_shift(2, 20);
		o.write_shift(2, flags);
		o.write_shift(2, method);
		o.write_shift(4, 0); /* TODO: last mod file time/date */
		o.write_shift(-4, crcs[fcnt]);

		o.write_shift(4, outbuf.length);
		o.write_shift(4, /*::(*/fi.content/*::||[])*/.length);
		o.write_shift(2, namebuf.length);
		o.write_shift(2, 0);
		o.write_shift(2, 0);
		o.write_shift(2, 0);
		o.write_shift(2, 0);
		o.write_shift(4, 0);
		o.write_shift(4, start);

		sz_cd += o.l;
		cdirs.push(o);
		sz_cd += namebuf.length;
		cdirs.push(namebuf);
		++fcnt;
	}

	/* end of central directory */
	o = new_buf(22);
	o.write_shift(4, 0x06054b50);
	o.write_shift(2, 0);
	o.write_shift(2, 0);
	o.write_shift(2, fcnt);
	o.write_shift(2, fcnt);
	o.write_shift(4, sz_cd);
	o.write_shift(4, start_cd);
	o.write_shift(2, 0);

	return bconcat(([bconcat((out/*:any*/)), bconcat(cdirs), o]/*:any*/));
}
var ContentTypeMap = ({
	"htm": "text/html",
	"xml": "text/xml",

	"gif": "image/gif",
	"jpg": "image/jpeg",
	"png": "image/png",

	"mso": "application/x-mso",
	"thmx": "application/vnd.ms-officetheme",
	"sh33tj5": "application/octet-stream"
}/*:any*/);

function get_content_type(fi/*:CFBEntry*/, fp/*:string*/)/*:string*/ {
	if(fi.ctype) return fi.ctype;

	var ext = fi.name || "", m = ext.match(/\.([^\.]+)$/);
	if(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];

	if(fp) {
		m = (ext = fp).match(/[\.\\]([^\.\\])+$/);
		if(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];
	}

	return "application/octet-stream";
}

/* 76 character chunks TODO: intertwine encoding */
function write_base64_76(bstr/*:string*/)/*:string*/ {
	var data = Base64_encode(bstr);
	var o = [];
	for(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));
	return o.join("\r\n") + "\r\n";
}

/*
Rules for QP:
	- escape =## applies for all non-display characters and literal "="
	- space or tab at end of line must be encoded
	- \r\n newlines can be preserved, but bare \r and \n must be escaped
	- lines must not exceed 76 characters, use soft breaks =\r\n

TODO: Some files from word appear to write line extensions with bare equals:

```
<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=
="70%"
```
*/
function write_quoted_printable(text/*:string*/)/*:string*/ {
	var encoded = text.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF=]/g, function(c) {
		var w = c.charCodeAt(0).toString(16).toUpperCase();
		return "=" + (w.length == 1 ? "0" + w : w);
	});

	encoded = encoded.replace(/ $/mg, "=20").replace(/\t$/mg, "=09");

	if(encoded.charAt(0) == "\n") encoded = "=0D" + encoded.slice(1);
	encoded = encoded.replace(/\r(?!\n)/mg, "=0D").replace(/\n\n/mg, "\n=0A").replace(/([^\r\n])\n/mg, "$1=0A");

	var o/*:Array<string>*/ = [], split = encoded.split("\r\n");
	for(var si = 0; si < split.length; ++si) {
		var str = split[si];
		if(str.length == 0) { o.push(""); continue; }
		for(var i = 0; i < str.length;) {
			var end = 76;
			var tmp = str.slice(i, i + end);
			if(tmp.charAt(end - 1) == "=") end --;
			else if(tmp.charAt(end - 2) == "=") end -= 2;
			else if(tmp.charAt(end - 3) == "=") end -= 3;
			tmp = str.slice(i, i + end);
			i += end;
			if(i < str.length) tmp += "=";
			o.push(tmp);
		}
	}

	return o.join("\r\n");
}
function parse_quoted_printable(data/*:Array<string>*/)/*:RawBytes*/ {
	var o = [];

	/* unify long lines */
	for(var di = 0; di < data.length; ++di) {
		var line = data[di];
		while(di <= data.length && line.charAt(line.length - 1) == "=") line = line.slice(0, line.length - 1) + data[++di];
		o.push(line);
	}

	/* decode */
	for(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });
	return s2a(o.join("\r\n"));
}


function parse_mime(cfb/*:CFBContainer*/, data/*:Array<string>*/, root/*:string*/)/*:void*/ {
	var fname = "", cte = "", ctype = "", fdata;
	var di = 0;
	for(;di < 10; ++di) {
		var line = data[di];
		if(!line || line.match(/^\s*$/)) break;
		var m = line.match(/^(.*?):\s*([^\s].*)$/);
		if(m) switch(m[1].toLowerCase()) {
			case "content-location": fname = m[2].trim(); break;
			case "content-type": ctype = m[2].trim(); break;
			case "content-transfer-encoding": cte = m[2].trim(); break;
		}
	}
	++di;
	switch(cte.toLowerCase()) {
		case 'base64': fdata = s2a(Base64_decode(data.slice(di).join(""))); break;
		case 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;
		default: throw new Error("Unsupported Content-Transfer-Encoding " + cte);
	}
	var file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});
	if(ctype) file.ctype = ctype;
}

function parse_mad(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {
	if(a2s(file.slice(0,13)).toLowerCase() != "mime-version:") throw new Error("Unsupported MAD header");
	var root = (options && options.root || "");
	// $FlowIgnore
	var data = (has_buf && Buffer.isBuffer(file) ? file.toString("binary") : a2s(file)).split("\r\n");
	var di = 0, row = "";

	/* if root is not specified, scan for the common prefix */
	for(di = 0; di < data.length; ++di) {
		row = data[di];
		if(!/^Content-Location:/i.test(row)) continue;
		row = row.slice(row.indexOf("file"));
		if(!root) root = row.slice(0, row.lastIndexOf("/") + 1);
		if(row.slice(0, root.length) == root) continue;
		while(root.length > 0) {
			root = root.slice(0, root.length - 1);
			root = root.slice(0, root.lastIndexOf("/") + 1);
			if(row.slice(0,root.length) == root) break;
		}
	}

	var mboundary = (data[1] || "").match(/boundary="(.*?)"/);
	if(!mboundary) throw new Error("MAD cannot find boundary");
	var boundary = "--" + (mboundary[1] || "");

	var FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];
	var o = {
		FileIndex: FileIndex,
		FullPaths: FullPaths
	};
	init_cfb(o);
	var start_di, fcnt = 0;
	for(di = 0; di < data.length; ++di) {
		var line = data[di];
		if(line !== boundary && line !== boundary + "--") continue;
		if(fcnt++) parse_mime(o, data.slice(start_di, di), root);
		start_di = di;
	}
	return o;
}

function write_mad(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:string*/ {
	var opts = options || {};
	var boundary = opts.boundary || "SheetJS";
	boundary = '------=' + boundary;

	var out = [
		'MIME-Version: 1.0',
		'Content-Type: multipart/related; boundary="' + boundary.slice(2) + '"',
		'',
		'',
		''
	];

	var root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];
	for(var i = 1; i < cfb.FullPaths.length; ++i) {
		fp = cfb.FullPaths[i].slice(root.length);
		fi = cfb.FileIndex[i];
		if(!fi.size || !fi.content || fp == "\u0001Sh33tJ5") continue;

		/* Normalize filename */
		fp = fp.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF]/g, function(c) {
			return "_x" + c.charCodeAt(0).toString(16) + "_";
		}).replace(/[\u0080-\uFFFF]/g, function(u) {
			return "_u" + u.charCodeAt(0).toString(16) + "_";
		});

		/* Extract content as binary string */
		var ca = fi.content;
		// $FlowIgnore
		var cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString("binary") : a2s(ca);

		/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */
		var dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;
		for(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;
		var qp = dispcnt >= L * 4 / 5;

		out.push(boundary);
		out.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);
		out.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));
		out.push('Content-Type: ' + get_content_type(fi, fp));
		out.push('');

		out.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));
	}
	out.push(boundary + '--\r\n');
	return out.join("\r\n");
}
function cfb_new(opts/*:?any*/)/*:CFBContainer*/ {
	var o/*:CFBContainer*/ = ({}/*:any*/);
	init_cfb(o, opts);
	return o;
}

function cfb_add(cfb/*:CFBContainer*/, name/*:string*/, content/*:?RawBytes*/, opts/*:?any*/)/*:CFBEntry*/ {
	var unsafe = opts && opts.unsafe;
	if(!unsafe) init_cfb(cfb);
	var file = !unsafe && CFB.find(cfb, name);
	if(!file) {
		var fpath/*:string*/ = cfb.FullPaths[0];
		if(name.slice(0, fpath.length) == fpath) fpath = name;
		else {
			if(fpath.slice(-1) != "/") fpath += "/";
			fpath = (fpath + name).replace("//","/");
		}
		file = ({name: filename(name), type: 2}/*:any*/);
		cfb.FileIndex.push(file);
		cfb.FullPaths.push(fpath);
		if(!unsafe) CFB.utils.cfb_gc(cfb);
	}
	/*:: if(!file) throw new Error("unreachable"); */
	file.content = (content/*:any*/);
	file.size = content ? content.length : 0;
	if(opts) {
		if(opts.CLSID) file.clsid = opts.CLSID;
		if(opts.mt) file.mt = opts.mt;
		if(opts.ct) file.ct = opts.ct;
	}
	return file;
}

function cfb_del(cfb/*:CFBContainer*/, name/*:string*/)/*:boolean*/ {
	init_cfb(cfb);
	var file = CFB.find(cfb, name);
	if(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {
		cfb.FileIndex.splice(j, 1);
		cfb.FullPaths.splice(j, 1);
		return true;
	}
	return false;
}

function cfb_mov(cfb/*:CFBContainer*/, old_name/*:string*/, new_name/*:string*/)/*:boolean*/ {
	init_cfb(cfb);
	var file = CFB.find(cfb, old_name);
	if(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {
		cfb.FileIndex[j].name = filename(new_name);
		cfb.FullPaths[j] = new_name;
		return true;
	}
	return false;
}

function cfb_gc(cfb/*:CFBContainer*/)/*:void*/ { rebuild_cfb(cfb, true); }

exports.find = find;
exports.read = read;
exports.parse = parse;
exports.write = write;
exports.writeFile = write_file;
exports.utils = {
	cfb_new: cfb_new,
	cfb_add: cfb_add,
	cfb_del: cfb_del,
	cfb_mov: cfb_mov,
	cfb_gc: cfb_gc,
	ReadShift: ReadShift,
	CheckField: CheckField,
	prep_blob: prep_blob,
	bconcat: bconcat,
	use_zlib: use_zlib,
	_deflateRaw: _deflate,
	_inflateRaw: _inflate,
	consts: consts
};

return exports;
})();

/* read binary data from file */
function read_binary(path/*:string*/) {
	if(typeof Deno !== 'undefined') return Deno.readFileSync(path);
	// $FlowIgnore
	if(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript
		// $FlowIgnore
		var infile = File(path); infile.open("r"); infile.encoding = "binary";
		var data = infile.read(); infile.close();
		return data;
	} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }
	throw new Error("Cannot access file " + path);
}
function keys(o/*:any*/)/*:Array<any>*/ {
	var ks = Object.keys(o), o2 = [];
	for(var i = 0; i < ks.length; ++i) if(Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);
	return o2;
}

function evert(obj/*:any*/)/*:EvertType*/ {
	var o = ([]/*:any*/), K = keys(obj);
	for(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];
	return o;
}

var basedate = /*#__PURE__*/new Date(1899, 11, 30, 0, 0, 0); // 2209161600000
function datenum(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {
	var epoch = /*#__PURE__*/v.getTime();
	if(date1904) epoch -= 1462*24*60*60*1000;
	var dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;
	return (epoch - dnthresh) / (24 * 60 * 60 * 1000);
}
var refdate = /*#__PURE__*/new Date();
var dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/refdate.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;
var refoffset = /*#__PURE__*/refdate.getTimezoneOffset();
function numdate(v/*:number*/)/*:Date*/ {
	var out = new Date();
	out.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);
	if (out.getTimezoneOffset() !== refoffset) {
		out.setTime(out.getTime() + (out.getTimezoneOffset() - refoffset) * 60000);
	}
	return out;
}

/* ISO 8601 Duration */
function parse_isodur(s) {
	var sec = 0, mt = 0, time = false;
	var m = s.match(/P([0-9\.]+Y)?([0-9\.]+M)?([0-9\.]+D)?T([0-9\.]+H)?([0-9\.]+M)?([0-9\.]+S)?/);
	if(!m) throw new Error("|" + s + "| is not an ISO8601 Duration");
	for(var i = 1; i != m.length; ++i) {
		if(!m[i]) continue;
		mt = 1;
		if(i > 3) time = true;
		switch(m[i].slice(m[i].length-1)) {
			case 'Y':
				throw new Error("Unsupported ISO Duration Field: " + m[i].slice(m[i].length-1));
			case 'D': mt *= 24;
				/* falls through */
			case 'H': mt *= 60;
				/* falls through */
			case 'M':
				if(!time) throw new Error("Unsupported ISO Duration Field: M");
				else mt *= 60;
		}
		sec += mt * parseInt(m[i], 10);
	}
	return sec;
}

var good_pd_date_1 = /*#__PURE__*/new Date('2017-02-19T19:06:09.000Z');
var good_pd_date = /*#__PURE__*/isNaN(/*#__PURE__*/good_pd_date_1.getFullYear()) ? /*#__PURE__*/new Date('2/19/17') : good_pd_date_1;
var good_pd = /*#__PURE__*/good_pd_date.getFullYear() == 2017;
/* parses a date as a local date */
function parseDate(str/*:string|Date*/, fixdate/*:?number*/)/*:Date*/ {
	var d = new Date(str);
	if(good_pd) {
		/*:: if(fixdate == null) fixdate = 0; */
		if(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);
		else if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);
		return d;
	}
	if(str instanceof Date) return str;
	if(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {
		var s = d.getFullYear();
		if(str.indexOf("" + s) > -1) return d;
		d.setFullYear(d.getFullYear() + 100); return d;
	}
	var n = str.match(/\d+/g)||["2017","2","19","0","0","0"];
	var out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));
	if(str.indexOf("Z") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);
	return out;
}

function cc2str(arr/*:Array<number>*/, debomit)/*:string*/ {
	if(has_buf && Buffer.isBuffer(arr)) {
		if(debomit) {
			if(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString("utf16le"));
			if(arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString("binary")));
		}
		return arr.toString("binary");
	}

	if(typeof TextDecoder !== "undefined") try {
		if(debomit) {
			if(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder("utf-16le").decode(arr.slice(2)));
			if(arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder("utf-16be").decode(arr.slice(2)));
		}
		var rev = {
			"\u20ac": "\x80", "\u201a": "\x82", "\u0192": "\x83", "\u201e": "\x84",
			"\u2026": "\x85", "\u2020": "\x86", "\u2021": "\x87", "\u02c6": "\x88",
			"\u2030": "\x89", "\u0160": "\x8a", "\u2039": "\x8b", "\u0152": "\x8c",
			"\u017d": "\x8e", "\u2018": "\x91", "\u2019": "\x92", "\u201c": "\x93",
			"\u201d": "\x94", "\u2022": "\x95", "\u2013": "\x96", "\u2014": "\x97",
			"\u02dc": "\x98", "\u2122": "\x99", "\u0161": "\x9a", "\u203a": "\x9b",
			"\u0153": "\x9c", "\u017e": "\x9e", "\u0178": "\x9f"
		};
		if(Array.isArray(arr)) arr = new Uint8Array(arr);
		return new TextDecoder("latin1").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function(c) { return rev[c] || c; });
	} catch(e) {}

	var o = [];
	for(var i = 0; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));
	return o.join("");
}

function dup(o/*:any*/)/*:any*/ {
	if(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));
	if(typeof o != 'object' || o == null) return o;
	if(o instanceof Date) return new Date(o.getTime());
	var out = {};
	for(var k in o) if(Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);
	return out;
}

function fill(c/*:string*/,l/*:number*/)/*:string*/ { var o = ""; while(o.length < l) o+=c; return o; }

/* TODO: stress test */
function fuzzynum(s/*:string*/)/*:number*/ {
	var v/*:number*/ = Number(s);
	if(!isNaN(v)) return isFinite(v) ? v : NaN;
	if(!/\d/.test(s)) return v;
	var wt = 1;
	var ss = s.replace(/([\d]),([\d])/g,"$1$2").replace(/[$]/g,"").replace(/[%]/g, function() { wt *= 100; return "";});
	if(!isNaN(v = Number(ss))) return v / wt;
	ss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});
	if(!isNaN(v = Number(ss))) return v / wt;
	return v;
}
var lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];
function fuzzydate(s/*:string*/)/*:Date*/ {
	var o = new Date(s), n = new Date(NaN);
	var y = o.getYear(), m = o.getMonth(), d = o.getDate();
	if(isNaN(d)) return n;
	var lower = s.toLowerCase();
	if(lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {
		lower = lower.replace(/[^a-z]/g,"").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,"");
		if(lower.length > 3 && lower_months.indexOf(lower) == -1) return n;
	} else if(lower.match(/[a-z]/)) return n;
	if(y < 0 || y > 8099) return n;
	if((m > 0 || d > 1) && y != 101) return o;
	if(s.match(/[^-0-9:,\/\\]/)) return n;
	return o;
}

var split_regex = /*#__PURE__*/(function() {
	var safe_split_regex = "abacaba".split(/(:?b)/i).length == 5;
	return function split_regex(str/*:string*/, re, def/*:string*/)/*:Array<string>*/ {
		if(safe_split_regex || typeof re == "string") return str.split(re);
		var p = str.split(re), o = [p[0]];
		for(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }
		return o;
	};
})();
function getdatastr(data)/*:?string*/ {
	if(!data) return null;
	if(data.content && data.type) return cc2str(data.content, true);
	if(data.data) return debom(data.data);
	if(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));
	if(data.asBinary) return debom(data.asBinary());
	if(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));
	return null;
}

function getdatabin(data) {
	if(!data) return null;
	if(data.data) return char_codes(data.data);
	if(data.asNodeBuffer && has_buf) return data.asNodeBuffer();
	if(data._data && data._data.getContent) {
		var o = data._data.getContent();
		if(typeof o == "string") return char_codes(o);
		return Array.prototype.slice.call(o);
	}
	if(data.content && data.type) return data.content;
	return null;
}

function getdata(data) { return (data && data.name.slice(-4) === ".bin") ? getdatabin(data) : getdatastr(data); }

/* Part 2 Section 10.1.2 "Mapping Content Types" Names are case-insensitive */
/* OASIS does not comment on filename case sensitivity */
function safegetzipfile(zip, file/*:string*/) {
	var k = zip.FullPaths || keys(zip.files);
	var f = file.toLowerCase().replace(/[\/]/g, '\\'), g = f.replace(/\\/g,'\/');
	for(var i=0; i<k.length; ++i) {
		var n = k[i].replace(/^Root Entry[\/]/,"").toLowerCase();
		if(f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];
	}
	return null;
}

function getzipfile(zip, file/*:string*/) {
	var o = safegetzipfile(zip, file);
	if(o == null) throw new Error("Cannot find file " + file + " in zip");
	return o;
}

function getzipdata(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {
	if(!safe) return getdata(getzipfile(zip, file));
	if(!file) return null;
	try { return getzipdata(zip, file); } catch(e) { return null; }
}

function getzipstr(zip, file/*:string*/, safe/*:?boolean*/)/*:?string*/ {
	if(!safe) return getdatastr(getzipfile(zip, file));
	if(!file) return null;
	try { return getzipstr(zip, file); } catch(e) { return null; }
}

function getzipbin(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {
	if(!safe) return getdatabin(getzipfile(zip, file));
	if(!file) return null;
	try { return getzipbin(zip, file); } catch(e) { return null; }
}

function zipentries(zip) {
	var k = zip.FullPaths || keys(zip.files), o = [];
	for(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\/]/, ""));
	return o.sort();
}

function zip_add_file(zip, path, content) {
	if(zip.FullPaths) {
		if(typeof content == "string") {
			var res;
			if(has_buf) res = Buffer_from(content);
			/* TODO: investigate performance in Edge 13 */
			//else if(typeof TextEncoder !== "undefined") res = new TextEncoder().encode(content);
			else res = utf8decode(content);
			return CFB.utils.cfb_add(zip, path, res);
		}
		CFB.utils.cfb_add(zip, path, content);
	}
	else zip.file(path, content);
}

function zip_read(d, o) {
	switch(o.type) {
		case "base64": return CFB.read(d, { type: "base64" });
		case "binary": return CFB.read(d, { type: "binary" });
		case "buffer": case "array": return CFB.read(d, { type: "buffer" });
	}
	throw new Error("Unrecognized type " + o.type);
}

function resolve_path(path/*:string*/, base/*:string*/)/*:string*/ {
	if(path.charAt(0) == "/") return path.slice(1);
	var result = base.split('/');
	if(base.slice(-1) != "/") result.pop(); // folder path
	var target = path.split('/');
	while (target.length !== 0) {
		var step = target.shift();
		if (step === '..') result.pop();
		else if (step !== '.') result.push(step);
	}
	return result.join('/');
}
var XML_HEADER = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n';
var attregexg=/([^"\s?>\/]+)\s*=\s*((?:")([^"]*)(?:")|(?:')([^']*)(?:')|([^'">\s]+))/g;
var tagregex1=/<[\/\?]?[a-zA-Z0-9:_-]+(?:\s+[^"\s?>\/]+\s*=\s*(?:"[^"]*"|'[^']*'|[^'">\s=]+))*\s*[\/\?]?>/mg, tagregex2 = /<[^>]*>/g;
var tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;
var nsregex=/<\w*:/, nsregex2 = /<(\/?)\w+:/;
function parsexmltag(tag/*:string*/, skip_root/*:?boolean*/, skip_LC/*:?boolean*/)/*:any*/ {
	var z = ({}/*:any*/);
	var eq = 0, c = 0;
	for(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;
	if(!skip_root) z[0] = tag.slice(0, eq);
	if(eq === tag.length) return z;
	var m = tag.match(attregexg), j=0, v="", i=0, q="", cc="", quot = 1;
	if(m) for(i = 0; i != m.length; ++i) {
		cc = m[i];
		for(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;
		q = cc.slice(0,c).trim();
		while(cc.charCodeAt(c+1) == 32) ++c;
		quot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;
		v = cc.slice(c+1+quot, cc.length-quot);
		for(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;
		if(j===q.length) {
			if(q.indexOf("_") > 0) q = q.slice(0, q.indexOf("_")); // from ods
			z[q] = v;
			if(!skip_LC) z[q.toLowerCase()] = v;
		}
		else {
			var k = (j===5 && q.slice(0,5)==="xmlns"?"xmlns":"")+q.slice(j+1);
			if(z[k] && q.slice(j-3,j) == "ext") continue; // from ods
			z[k] = v;
			if(!skip_LC) z[k.toLowerCase()] = v;
		}
	}
	return z;
}
function strip_ns(x/*:string*/)/*:string*/ { return x.replace(nsregex2, "<$1"); }

var encodings = {
	'&quot;': '"',
	'&apos;': "'",
	'&gt;': '>',
	'&lt;': '<',
	'&amp;': '&'
};
var rencoding = /*#__PURE__*/evert(encodings);
//var rencstr = "&<>'\"".split("");

// TODO: CP remap (need to read file version to determine OS)
var unescapexml/*:StringConv*/ = /*#__PURE__*/(function() {
	/* 22.4.2.4 bstr (Basic String) */
	var encregex = /&(?:quot|apos|gt|lt|amp|#x?([\da-fA-F]+));/ig, coderegex = /_x([\da-fA-F]{4})_/ig;
	return function unescapexml(text/*:string*/)/*:string*/ {
		var s = text + '', i = s.indexOf("<![CDATA[");
		if(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf("x")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});
		var j = s.indexOf("]]>");
		return unescapexml(s.slice(0, i)) + s.slice(i+9,j) + unescapexml(s.slice(j+3));
	};
})();

var decregex=/[&<>'"]/g;

var htmlcharegex = /[\u0000-\u001f]/g;
function escapehtml(text/*:string*/)/*:string*/{
	var s = text + '';
	return s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\n/g, "<br/>").replace(htmlcharegex,function(s) { return "&#x" + ("000"+s.charCodeAt(0).toString(16)).slice(-4) + ";"; });
}

/* TODO: handle codepages */
var xlml_fixstr/*:StringConv*/ = /*#__PURE__*/(function() {
	var entregex = /&#(\d+);/g;
	function entrepl($$/*:string*/,$1/*:string*/)/*:string*/ { return String.fromCharCode(parseInt($1,10)); }
	return function xlml_fixstr(str/*:string*/)/*:string*/ { return str.replace(entregex,entrepl); };
})();

function parsexmlbool(value/*:any*/)/*:boolean*/ {
	switch(value) {
		case 1: case true: case '1': case 'true': case 'TRUE': return true;
		/* case '0': case 'false': case 'FALSE':*/
		default: return false;
	}
}

function utf8reada(orig/*:string*/)/*:string*/ {
	var out = "", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;
	while (i < orig.length) {
		c = orig.charCodeAt(i++);
		if (c < 128) { out += String.fromCharCode(c); continue; }
		d = orig.charCodeAt(i++);
		if (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }
		e = orig.charCodeAt(i++);
		if (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }
		f = orig.charCodeAt(i++);
		w = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;
		out += String.fromCharCode(0xD800 + ((w>>>10)&1023));
		out += String.fromCharCode(0xDC00 + (w&1023));
	}
	return out;
}

function utf8readb(data) {
	var out = new_raw_buf(2*data.length), w, i, j = 1, k = 0, ww=0, c;
	for(i = 0; i < data.length; i+=j) {
		j = 1;
		if((c=data.charCodeAt(i)) < 128) w = c;
		else if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }
		else if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }
		else { j = 4;
			w = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);
			w -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);
		}
		if(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }
		out[k++] = w%256; out[k++] = w>>>8;
	}
	return out.slice(0,k).toString('ucs2');
}

function utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); }

var utf8corpus = "foo bar baz\u00e2\u0098\u0083\u00f0\u009f\u008d\u00a3";
var utf8read = has_buf && (/*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;

var utf8write/*:StringConv*/ = has_buf ? function(data) { return Buffer_from(data, 'utf8').toString("binary"); } : function(orig/*:string*/)/*:string*/ {
	var out/*:Array<string>*/ = [], i = 0, c = 0, d = 0;
	while(i < orig.length) {
		c = orig.charCodeAt(i++);
		switch(true) {
			case c < 128: out.push(String.fromCharCode(c)); break;
			case c < 2048:
				out.push(String.fromCharCode(192 + (c >> 6)));
				out.push(String.fromCharCode(128 + (c & 63)));
				break;
			case c >= 55296 && c < 57344:
				c -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);
				out.push(String.fromCharCode(240 + ((d >>18) & 7)));
				out.push(String.fromCharCode(144 + ((d >>12) & 63)));
				out.push(String.fromCharCode(128 + ((d >> 6) & 63)));
				out.push(String.fromCharCode(128 + (d & 63)));
				break;
			default:
				out.push(String.fromCharCode(224 + (c >> 12)));
				out.push(String.fromCharCode(128 + ((c >> 6) & 63)));
				out.push(String.fromCharCode(128 + (c & 63)));
		}
	}
	return out.join("");
};

// matches <foo>...</foo> extracts content
var matchtag = /*#__PURE__*/(function() {
	var mtcache/*:{[k:string]:RegExp}*/ = ({}/*:any*/);
	return function matchtag(f/*:string*/,g/*:?string*/)/*:RegExp*/ {
		var t = f+"|"+(g||"");
		if(mtcache[t]) return mtcache[t];
		return (mtcache[t] = new RegExp('<(?:\\w+:)?'+f+'(?: xml:space="preserve")?(?:[^>]*)>([\\s\\S]*?)</(?:\\w+:)?'+f+'>',((g||"")/*:any*/)));
	};
})();

var htmldecode/*:{(s:string):string}*/ = /*#__PURE__*/(function() {
	var entities/*:Array<[RegExp, string]>*/ = [
		['nbsp', ' '], ['middot', '·'],
		['quot', '"'], ['apos', "'"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']
	].map(function(x/*:[string, string]*/) { return [new RegExp('&' + x[0] + ';', "ig"), x[1]]; });
	return function htmldecode(str/*:string*/)/*:string*/ {
		var o = str
				// Remove new lines and spaces from start of content
				.replace(/^[\t\n\r ]+/, "")
				// Remove new lines and spaces from end of content
				.replace(/[\t\n\r ]+$/,"")
				// Added line which removes any white space characters after and before html tags
				.replace(/>\s+/g,">").replace(/\s+</g,"<")
				// Replace remaining new lines and spaces with space
				.replace(/[\t\n\r ]+/g, " ")
				// Replace <br> tags with new lines
				.replace(/<\s*[bB][rR]\s*\/?>/g,"\n")
				// Strip HTML elements
				.replace(/<[^>]*>/g,"");
		for(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);
		return o;
	};
})();

var vtregex = /*#__PURE__*/(function(){ var vt_cache = {};
	return function vt_regex(bt) {
		if(vt_cache[bt] !== undefined) return vt_cache[bt];
		return (vt_cache[bt] = new RegExp("<(?:vt:)?" + bt + ">([\\s\\S]*?)</(?:vt:)?" + bt + ">", 'g') );
};})();
var vtvregex = /<\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\s\S]*)</;
function parseVector(data/*:string*/, opts)/*:Array<{v:string,t:string}>*/ {
	var h = parsexmltag(data);

	var matches/*:Array<string>*/ = data.match(vtregex(h.baseType))||[];
	var res/*:Array<any>*/ = [];
	if(matches.length != h.size) {
		if(opts.WTF) throw new Error("unexpected vector length " + matches.length + " != " + h.size);
		return res;
	}
	matches.forEach(function(x/*:string*/) {
		var v = x.replace(vtvregex,"").match(vtmregex);
		if(v) res.push({v:utf8read(v[2]), t:v[1]});
	});
	return res;
}

var wtregex = /(^\s|\s$|\n)/;

function wxt_helper(h)/*:string*/ { return keys(h).map(function(k) { return " " + k + '="' + h[k] + '"';}).join(""); }
function writextag(f/*:string*/,g/*:?string*/,h) { return '<' + f + ((h != null) ? wxt_helper(h) : "") + ((g != null) ? (g.match(wtregex)?' xml:space="preserve"' : "") + '>' + g + '</' + f : "/") + '>';}

function xlml_normalize(d)/*:string*/ {
	if(has_buf &&/*::typeof Buffer !== "undefined" && d != null && d instanceof Buffer &&*/ Buffer.isBuffer(d)) return d.toString('utf8');
	if(typeof d === 'string') return d;
	/* duktape */
	if(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));
	throw new Error("Bad input format: expected Buffer or string");
}
/* UOS uses CJK in tags */
var xlmlregex = /<(\/?)([^\s?><!\/:]*:|)([^\s?<>:\/]+)(?:[\s?:\/][^>]*)?>/mg;
//var xlmlregex = /<(\/?)([a-z0-9]*:|)(\w+)[^>]*>/mg;

var XMLNS = ({
	CORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',
	CUST_PROPS: "http://schemas.openxmlformats.org/officeDocument/2006/custom-properties",
	EXT_PROPS: "http://schemas.openxmlformats.org/officeDocument/2006/extended-properties",
	CT: 'http://schemas.openxmlformats.org/package/2006/content-types',
	RELS: 'http://schemas.openxmlformats.org/package/2006/relationships',
	TCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',
	'dc': 'http://purl.org/dc/elements/1.1/',
	'dcterms': 'http://purl.org/dc/terms/',
	'dcmitype': 'http://purl.org/dc/dcmitype/',
	'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',
	'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',
	'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',
	'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',
	'xsi': 'http://www.w3.org/2001/XMLSchema-instance',
	'xsd': 'http://www.w3.org/2001/XMLSchema'
}/*:any*/);

var XMLNS_main = [
	'http://schemas.openxmlformats.org/spreadsheetml/2006/main',
	'http://purl.oclc.org/ooxml/spreadsheetml/main',
	'http://schemas.microsoft.com/office/excel/2006/main',
	'http://schemas.microsoft.com/office/excel/2006/2'
];
function read_double_le(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ {
	var s = 1 - 2 * (b[idx + 7] >>> 7);
	var e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);
	var m = (b[idx+6]&0x0f);
	for(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];
	if(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;
	if(e == 0) e = -1022;
	else { e -= 1023; m += Math.pow(2,52); }
	return s * Math.pow(2, e - 52) * m;
}

function write_double_le(b/*:RawBytes|CFBlob*/, v/*:number*/, idx/*:number*/) {
	var bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;
	var av = bs ? (-v) : v;
	if(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }
	else if(av == 0) e = m = 0;
	else {
		e = Math.floor(Math.log(av) / Math.LN2);
		m = av * Math.pow(2, 52 - e);
		if((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }
		else { m -= Math.pow(2,52); e+=1023; }
	}
	for(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;
	b[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);
	b[idx + 7] = (e >> 4) | bs;
}

var ___toBuffer = function(bufs/*:Array<Array<RawBytes> >*/)/*:RawBytes*/ { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };
var __toBuffer = has_buf ? function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0].map(function(x) { return Buffer.isBuffer(x) ? x : Buffer_from(x); })) : ___toBuffer(bufs);} : ___toBuffer;

var ___utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join("").replace(chr0,''); };
var __utf16le = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; } : ___utf16le;

var ___hexlify = function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<s+l; ++i) ss.push(("0" + b[i].toString(16)).slice(-2)); return ss.join(""); };
var __hexlify = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { return Buffer.isBuffer(b)/*:: && b instanceof Buffer*/ ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); } : ___hexlify;

var ___utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(""); };
var __utf8 = has_buf ? function utf8_b(b/*:RawBytes|CFBlob*/, s/*:number*/, e/*:number*/) { return (Buffer.isBuffer(b)/*:: && (b instanceof Buffer)*/) ? b.toString('utf8',s,e) : ___utf8(b,s,e); } : ___utf8;

var ___lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : "";};
var __lpstr = ___lpstr;

var ___cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : "";};
var __cpstr = ___cpstr;

var ___lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : "";};
var __lpwstr = ___lpwstr;

var ___lpp4 = function lpp4_(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : "";};
var __lpp4 = ___lpp4;

var ___8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : "";};
var __8lpp4 = ___8lpp4;

var ___double = function(b/*:RawBytes|CFBlob*/, idx/*:number*/) { return read_double_le(b, idx);};
var __double = ___double;

var is_buf = function is_buf_a(a) { return Array.isArray(a) || (typeof Uint8Array !== "undefined" && a instanceof Uint8Array); };

if(has_buf/*:: && typeof Buffer !== 'undefined'*/) {
	__lpstr = function lpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : "";};
	__cpstr = function cpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : "";};
	__lpwstr = function lpwstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};
	__lpp4 = function lpp4_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};
	__8lpp4 = function lpp4_8b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};
	__double = function double_(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(Buffer.isBuffer(b)/*::&& b instanceof Buffer*/) return b.readDoubleLE(i); return ___double(b,i); };
	is_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a) || (typeof Uint8Array !== "undefined" && a instanceof Uint8Array); };
}

var __readUInt8 = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx]; };
var __readUInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+1]*(1<<8))+b[idx]; };
var __readInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };
var __readUInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };
var __readInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };
var __readInt32BE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };

function ReadShift(size/*:number*/, t/*:?string*/)/*:number|string*/ {
	var o="", oI/*:: :number = 0*/, oR, oo=[], w, vv, i, loc;
	switch(t) {
		case 'dbcs':
			loc = this.l;
			if(has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l+2*size).toString("utf16le");
			else for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }
			size *= 2;
			break;

		case 'utf8': o = __utf8(this, this.l, this.l + size); break;
		case 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;

		case 'wstr':
			return ReadShift.call(this, size, 'dbcs');

		/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */
		case 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;
		case 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;
		/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */
		case 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;
		/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */
		case 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;
		/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */
		case '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;

		case 'cstr': size = 0; o = "";
			while((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));
			o = oo.join(""); break;
		case '_wstr': size = 0; o = "";
			while((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}
			size+=2; o = oo.join(""); break;

		/* sbcs and dbcs support continue records in the SST way TODO codepages */
		case 'dbcs-cont': o = ""; loc = this.l;
			for(i = 0; i < size; ++i) {
				if(this.lens && this.lens.indexOf(loc) !== -1) {
					w = __readUInt8(this, loc);
					this.l = loc + 1;
					vv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');
					return oo.join("") + vv;
				}
				oo.push(_getchar(__readUInt16LE(this, loc)));
				loc+=2;
			} o = oo.join(""); size *= 2; break;

		case 'cpstr':
		/* falls through */
		case 'sbcs-cont': o = ""; loc = this.l;
			for(i = 0; i != size; ++i) {
				if(this.lens && this.lens.indexOf(loc) !== -1) {
					w = __readUInt8(this, loc);
					this.l = loc + 1;
					vv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');
					return oo.join("") + vv;
				}
				oo.push(_getchar(__readUInt8(this, loc)));
				loc+=1;
			} o = oo.join(""); break;

		default:
	switch(size) {
		case 1: oI = __readUInt8(this, this.l); this.l++; return oI;
		case 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;
		case 4: case -4:
			if(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }
			else { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;
		case 8: case -8:
			if(t === 'f') {
				if(size == 8) oR = __double(this, this.l);
				else oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);
				this.l += 8; return oR;
			} else size = 8;
		/* falls through */
		case 16: o = __hexlify(this, this.l, size); break;
	}}
	this.l+=size; return o;
}

var __writeUInt32LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };
var __writeInt32LE  = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };
var __writeUInt16LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };

function WriteShift(t/*:number*/, val/*:string|number*/, f/*:?string*/)/*:any*/ {
	var size = 0, i = 0;
	if(f === 'dbcs') {
		/*:: if(typeof val !== 'string') throw new Error("unreachable"); */
		for(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);
		size = 2 * val.length;
	} else if(f === 'sbcs') {
		{
			/*:: if(typeof val !== 'string') throw new Error("unreachable"); */
			val = val.replace(/[^\x00-\x7F]/g, "_");
			/*:: if(typeof val !== 'string') throw new Error("unreachable"); */
			for(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);
		}
		size = val.length;
	} else if(f === 'hex') {
		for(; i < t; ++i) {
			/*:: if(typeof val !== "string") throw new Error("unreachable"); */
			this[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);
		} return this;
	} else if(f === 'utf16le') {
			/*:: if(typeof val !== "string") throw new Error("unreachable"); */
			var end/*:number*/ = Math.min(this.l + t, this.length);
			for(i = 0; i < Math.min(val.length, t); ++i) {
				var cc = val.charCodeAt(i);
				this[this.l++] = (cc & 0xff);
				this[this.l++] = (cc >> 8);
			}
			while(this.l < end) this[this.l++] = 0;
			return this;
	} else /*:: if(typeof val === 'number') */ switch(t) {
		case  1: size = 1; this[this.l] = val&0xFF; break;
		case  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;
		case  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;
		case  4: size = 4; __writeUInt32LE(this, val, this.l); break;
		case  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }
		/* falls through */
		case 16: break;
		case -4: size = 4; __writeInt32LE(this, val, this.l); break;
	}
	this.l += size; return this;
}

function CheckField(hexstr/*:string*/, fld/*:string*/)/*:void*/ {
	var m = __hexlify(this,this.l,hexstr.length>>1);
	if(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);
	this.l += hexstr.length>>1;
}

function prep_blob(blob, pos/*:number*/)/*:void*/ {
	blob.l = pos;
	blob.read_shift = /*::(*/ReadShift/*:: :any)*/;
	blob.chk = CheckField;
	blob.write_shift = WriteShift;
}

function parsenoop(blob, length/*:: :number, opts?:any */) { blob.l += length; }

function new_buf(sz/*:number*/)/*:Block*/ {
	var o = new_raw_buf(sz);
	prep_blob(o, 0);
	return o;
}

/* [MS-XLSB] 2.1.4 Record */
function recordhopper(data, cb/*:RecordHopperCB*/, opts/*:?any*/) {
	if(!data) return;
	var tmpbyte, cntbyte, length;
	prep_blob(data, data.l || 0);
	var L = data.length, RT = 0, tgt = 0;
	while(data.l < L) {
		RT = data.read_shift(1);
		if(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);
		var R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];
		tmpbyte = data.read_shift(1);
		length = tmpbyte & 0x7F;
		for(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);
		tgt = data.l + length;
		var d = R.f && R.f(data, length, opts);
		data.l = tgt;
		if(cb(d, R, RT)) return;
	}
}

/* control buffer usage for fixed-length buffers */
function buf_array()/*:BufArray*/ {
	var bufs/*:Array<Block>*/ = [], blksz = has_buf ? 256 : 2048;
	var newblk = function ba_newblk(sz/*:number*/)/*:Block*/ {
		var o/*:Block*/ = (new_buf(sz)/*:any*/);
		prep_blob(o, 0);
		return o;
	};

	var curbuf/*:Block*/ = newblk(blksz);

	var endbuf = function ba_endbuf() {
		if(!curbuf) return;
		if(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }
		if(curbuf.length > 0) bufs.push(curbuf);
		curbuf = null;
	};

	var next = function ba_next(sz/*:number*/)/*:Block*/ {
		if(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;
		endbuf();
		return (curbuf = newblk(Math.max(sz+1, blksz)));
	};

	var end = function ba_end() {
		endbuf();
		return bconcat(bufs);
	};

	var push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };

	return ({ next:next, push:push, end:end, _bufs:bufs }/*:any*/);
}
/* XLS ranges enforced */
function shift_cell_xls(cell/*:CellAddress*/, tgt/*:any*/, opts/*:?any*/)/*:CellAddress*/ {
	var out = dup(cell);
	if(tgt.s) {
		if(out.cRel) out.c += tgt.s.c;
		if(out.rRel) out.r += tgt.s.r;
	} else {
		if(out.cRel) out.c += tgt.c;
		if(out.rRel) out.r += tgt.r;
	}
	if(!opts || opts.biff < 12) {
		while(out.c >= 0x100) out.c -= 0x100;
		while(out.r >= 0x10000) out.r -= 0x10000;
	}
	return out;
}

function shift_range_xls(cell, range, opts) {
	var out = dup(cell);
	out.s = shift_cell_xls(out.s, range.s, opts);
	out.e = shift_cell_xls(out.e, range.s, opts);
	return out;
}

function encode_cell_xls(c/*:CellAddress*/, biff/*:number*/)/*:string*/ {
	if(c.cRel && c.c < 0) { c = dup(c); while(c.c < 0) c.c += (biff > 8) ? 0x4000 : 0x100; }
	if(c.rRel && c.r < 0) { c = dup(c); while(c.r < 0) c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }
	var s = encode_cell(c);
	if(!c.cRel && c.cRel != null) s = fix_col(s);
	if(!c.rRel && c.rRel != null) s = fix_row(s);
	return s;
}

function encode_range_xls(r, opts)/*:string*/ {
	if(r.s.r == 0 && !r.s.rRel) {
		if(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {
			return (r.s.cRel ? "" : "$") + encode_col(r.s.c) + ":" + (r.e.cRel ? "" : "$") + encode_col(r.e.c);
		}
	}
	if(r.s.c == 0 && !r.s.cRel) {
		if(r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {
			return (r.s.rRel ? "" : "$") + encode_row(r.s.r) + ":" + (r.e.rRel ? "" : "$") + encode_row(r.e.r);
		}
	}
	return encode_cell_xls(r.s, opts.biff) + ":" + encode_cell_xls(r.e, opts.biff);
}
function decode_row(rowstr/*:string*/)/*:number*/ { return parseInt(unfix_row(rowstr),10) - 1; }
function encode_row(row/*:number*/)/*:string*/ { return "" + (row + 1); }
function fix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/([A-Z]|^)(\d+)$/,"$1$$$2"); }
function unfix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/\$(\d+)$/,"$1"); }

function decode_col(colstr/*:string*/)/*:number*/ { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }
function encode_col(col/*:number*/)/*:string*/ { if(col < 0) throw new Error("invalid column " + col); var s=""; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }
function fix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^([A-Z])/,"$$$1"); }
function unfix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^\$([A-Z])/,"$1"); }

function split_cell(cstr/*:string*/)/*:Array<string>*/ { return cstr.replace(/(\$?[A-Z]*)(\$?\d*)/,"$1,$2").split(","); }
//function decode_cell(cstr/*:string*/)/*:CellAddress*/ { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }
function decode_cell(cstr/*:string*/)/*:CellAddress*/ {
	var R = 0, C = 0;
	for(var i = 0; i < cstr.length; ++i) {
		var cc = cstr.charCodeAt(i);
		if(cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);
		else if(cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);
	}
	return { c: C - 1, r:R - 1 };
}
//function encode_cell(cell/*:CellAddress*/)/*:string*/ { return encode_col(cell.c) + encode_row(cell.r); }
function encode_cell(cell/*:CellAddress*/)/*:string*/ {
	var col = cell.c + 1;
	var s="";
	for(; col; col=((col-1)/26)|0) s = String.fromCharCode(((col-1)%26) + 65) + s;
	return s + (cell.r + 1);
}
function decode_range(range/*:string*/)/*:Range*/ {
	var idx = range.indexOf(":");
	if(idx == -1) return { s: decode_cell(range), e: decode_cell(range) };
	return { s: decode_cell(range.slice(0, idx)), e: decode_cell(range.slice(idx + 1)) };
}
/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */
function encode_range(cs/*:CellAddrSpec|Range*/,ce/*:?CellAddrSpec*/)/*:string*/ {
	if(typeof ce === 'undefined' || typeof ce === 'number') {
/*:: if(!(cs instanceof Range)) throw "unreachable"; */
		return encode_range(cs.s, cs.e);
	}
/*:: if((cs instanceof Range)) throw "unreachable"; */
	if(typeof cs !== 'string') cs = encode_cell((cs/*:any*/));
	if(typeof ce !== 'string') ce = encode_cell((ce/*:any*/));
/*:: if(typeof cs !== 'string') throw "unreachable"; */
/*:: if(typeof ce !== 'string') throw "unreachable"; */
	return cs == ce ? cs : cs + ":" + ce;
}

function safe_decode_range(range/*:string*/)/*:Range*/ {
	var o = {s:{c:0,r:0},e:{c:0,r:0}};
	var idx = 0, i = 0, cc = 0;
	var len = range.length;
	for(idx = 0; i < len; ++i) {
		if((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;
		idx = 26*idx + cc;
	}
	o.s.c = --idx;

	for(idx = 0; i < len; ++i) {
		if((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;
		idx = 10*idx + cc;
	}
	o.s.r = --idx;

	if(i === len || cc != 10) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }
	++i;

	for(idx = 0; i != len; ++i) {
		if((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;
		idx = 26*idx + cc;
	}
	o.e.c = --idx;

	for(idx = 0; i != len; ++i) {
		if((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;
		idx = 10*idx + cc;
	}
	o.e.r = --idx;
	return o;
}

function safe_format_cell(cell/*:Cell*/, v/*:any*/) {
	var q = (cell.t == 'd' && v instanceof Date);
	if(cell.z != null) try { return (cell.w = SSF_format(cell.z, q ? datenum(v) : v)); } catch(e) { }
	try { return (cell.w = SSF_format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }
}

function format_cell(cell/*:Cell*/, v/*:any*/, o/*:any*/) {
	if(cell == null || cell.t == null || cell.t == 'z') return "";
	if(cell.w !== undefined) return cell.w;
	if(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;
	if(cell.t == "e") return BErr[cell.v] || cell.v;
	if(v == undefined) return safe_format_cell(cell, cell.v);
	return safe_format_cell(cell, v);
}

function sheet_to_workbook(sheet/*:Worksheet*/, opts)/*:Workbook*/ {
	var n = opts && opts.sheet ? opts.sheet : "Sheet1";
	var sheets = {}; sheets[n] = sheet;
	return { SheetNames: [n], Sheets: sheets };
}

function sheet_add_aoa(_ws/*:?Worksheet*/, data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ {
	var o = opts || {};
	var dense = _ws ? Array.isArray(_ws) : o.dense;
	var ws/*:Worksheet*/ = _ws || (dense ? ([]/*:any*/) : ({}/*:any*/));
	var _R = 0, _C = 0;
	if(ws && o.origin != null) {
		if(typeof o.origin == 'number') _R = o.origin;
		else {
			var _origin/*:CellAddress*/ = typeof o.origin == "string" ? decode_cell(o.origin) : o.origin;
			_R = _origin.r; _C = _origin.c;
		}
		if(!ws["!ref"]) ws["!ref"] = "A1:A1";
	}
	var range/*:Range*/ = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}}/*:any*/);
	if(ws['!ref']) {
		var _range = safe_decode_range(ws['!ref']);
		range.s.c = _range.s.c;
		range.s.r = _range.s.r;
		range.e.c = Math.max(range.e.c, _range.e.c);
		range.e.r = Math.max(range.e.r, _range.e.r);
		if(_R == -1) range.e.r = _R = _range.e.r + 1;
	}
	for(var R = 0; R != data.length; ++R) {
		if(!data[R]) continue;
		if(!Array.isArray(data[R])) throw new Error("aoa_to_sheet expects an array of arrays");
		for(var C = 0; C != data[R].length; ++C) {
			if(typeof data[R][C] === 'undefined') continue;
			var cell/*:Cell*/ = ({v: data[R][C] }/*:any*/);
			var __R = _R + R, __C = _C + C;
			if(range.s.r > __R) range.s.r = __R;
			if(range.s.c > __C) range.s.c = __C;
			if(range.e.r < __R) range.e.r = __R;
			if(range.e.c < __C) range.e.c = __C;
			if(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];
			else {
				if(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }
				if(cell.v === null) {
					if(cell.f) cell.t = 'n';
					else if(o.nullError) { cell.t = 'e'; cell.v = 0; }
					else if(!o.sheetStubs) continue;
					else cell.t = 'z';
				}
				else if(typeof cell.v === 'number') cell.t = 'n';
				else if(typeof cell.v === 'boolean') cell.t = 'b';
				else if(cell.v instanceof Date) {
					cell.z = o.dateNF || table_fmt[14];
					if(o.cellDates) { cell.t = 'd'; cell.w = SSF_format(cell.z, datenum(cell.v)); }
					else { cell.t = 'n'; cell.v = datenum(cell.v); cell.w = SSF_format(cell.z, cell.v); }
				}
				else cell.t = 's';
			}
			if(dense) {
				if(!ws[__R]) ws[__R] = [];
				if(ws[__R][__C] && ws[__R][__C].z) cell.z = ws[__R][__C].z;
				ws[__R][__C] = cell;
			} else {
				var cell_ref = encode_cell(({c:__C,r:__R}/*:any*/));
				if(ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;
				ws[cell_ref] = cell;
			}
		}
	}
	if(range.s.c < 10000000) ws['!ref'] = encode_range(range);
	return ws;
}
function aoa_to_sheet(data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ { return sheet_add_aoa(null, data, opts); }

function parse_Int32LE(data) {
	return data.read_shift(4, 'i');
}

/* [MS-XLSB] 2.5.168 */
function parse_XLWideString(data/*::, length*/)/*:string*/ {
	var cchCharacters = data.read_shift(4);
	return cchCharacters === 0 ? "" : data.read_shift(cchCharacters, 'dbcs');
}

/* [MS-XLSB] 2.5.91 */
//function parse_LPWideString(data/*::, length*/)/*:string*/ {
//	var cchCharacters = data.read_shift(2);
//	return cchCharacters === 0 ? "" : data.read_shift(cchCharacters, "utf16le");
//}

/* [MS-XLSB] 2.5.143 */
function parse_StrRun(data) {
	return { ich: data.read_shift(2), ifnt: data.read_shift(2) };
}

/* [MS-XLSB] 2.5.121 */
function parse_RichStr(data, length/*:number*/)/*:XLString*/ {
	var start = data.l;
	var flags = data.read_shift(1);
	var str = parse_XLWideString(data);
	var rgsStrRun = [];
	var z = ({ t: str, h: str }/*:any*/);
	if ((flags & 1) !== 0) { /* fRichStr */
		/* TODO: formatted string */
		var dwSizeStrRun = data.read_shift(4);
		for (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));
		z.r = rgsStrRun;
	}
	else z.r = [{ ich: 0, ifnt: 0 }];
	//if((flags & 2) !== 0) { /* fExtStr */
	//	/* TODO: phonetic string */
	//}
	data.l = start + length;
	return z;
}
/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */
var parse_BrtCommentText = parse_RichStr;

/* [MS-XLSB] 2.5.9 */
function parse_XLSBCell(data)/*:any*/ {
	var col = data.read_shift(4);
	var iStyleRef = data.read_shift(2);
	iStyleRef += data.read_shift(1) << 16;
	data.l++; //var fPhShow = data.read_shift(1);
	return { c: col, iStyleRef: iStyleRef };
}

/* Short XLSB Cell does not include column */
function parse_XLSBShortCell(data)/*:any*/ {
	var iStyleRef = data.read_shift(2);
	iStyleRef += data.read_shift(1) <<16;
	data.l++; //var fPhShow = data.read_shift(1);
	return { c:-1, iStyleRef: iStyleRef };
}

/* [MS-XLSB] 2.5.21 */
var parse_XLSBCodeName = parse_XLWideString;

/* [MS-XLSB] 2.5.166 */
function parse_XLNullableWideString(data/*::, length*/)/*:string*/ {
	var cchCharacters = data.read_shift(4);
	return cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? "" : data.read_shift(cchCharacters, 'dbcs');
}

/* [MS-XLSB] 2.5.165 */
var parse_XLNameWideString = parse_XLWideString;
//var write_XLNameWideString = write_XLWideString;

/* [MS-XLSB] 2.5.114 */
var parse_RelID = parse_XLNullableWideString;


/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */
function parse_RkNumber(data)/*:number*/ {
	var b = data.slice(data.l, data.l + 4);
	var fX100 = (b[0] & 1), fInt = (b[0] & 2);
	data.l += 4;
	var RK = fInt === 0 ? __double([0, 0, 0, 0, (b[0] & 0xFC), b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;
	return fX100 ? (RK / 100) : RK;
}


/* [MS-XLSB] 2.5.117 RfX */
function parse_RfX(data /*::, length*/)/*:Range*/ {
	var cell/*:Range*/ = ({ s: {}, e: {} }/*:any*/);
	cell.s.r = data.read_shift(4);
	cell.e.r = data.read_shift(4);
	cell.s.c = data.read_shift(4);
	cell.e.c = data.read_shift(4);
	return cell;
}

/* [MS-XLSB] 2.5.153 UncheckedRfX */
var parse_UncheckedRfX = parse_RfX;

/* [MS-XLSB] 2.5.155 UncheckedSqRfX */
//function parse_UncheckedSqRfX(data) {
//	var cnt = data.read_shift(4);
//	var out = [];
//	for(var i = 0; i < cnt; ++i) {
//		var rng = parse_UncheckedRfX(data);
//		out.push(encode_range(rng));
//	}
//	return out.join(",");
//}
//function write_UncheckedSqRfX(sqrfx/*:string*/) {
//	var parts = sqrfx.split(/\s*,\s*/);
//	var o = new_buf(4); o.write_shift(4, parts.length);
//	var out = [o];
//	parts.forEach(function(rng) {
//		out.push(write_UncheckedRfX(safe_decode_range(rng)));
//	});
//	return bconcat(out);
//}

/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */
/* TODO: error checking, NaN and Infinity values are not valid Xnum */
function parse_Xnum(data/*::, length*/) {
	if(data.length - data.l < 8) throw "XLS Xnum Buffer underflow";
	return data.read_shift(8, 'f');
}

/* [MS-XLSB] 2.4.324 BrtColor */
function parse_BrtColor(data/*::, length*/) {
	var out = {};
	var d = data.read_shift(1);

	//var fValidRGB = d & 1;
	var xColorType = d >>> 1;

	var index = data.read_shift(1);
	var nTS = data.read_shift(2, 'i');
	var bR = data.read_shift(1);
	var bG = data.read_shift(1);
	var bB = data.read_shift(1);
	data.l++; //var bAlpha = data.read_shift(1);

	switch (xColorType) {
		case 0: out.auto = 1; break;
		case 1:
			out.index = index;
			var icv = XLSIcv[index];
			/* automatic pseudo index 81 */
			if (icv) out.rgb = rgb2Hex(icv);
			break;
		case 2:
			/* if(!fValidRGB) throw new Error("invalid"); */
			out.rgb = rgb2Hex([bR, bG, bB]);
			break;
		case 3: out.theme = index; break;
	}
	if (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;

	return out;
}

/* [MS-XLSB] 2.5.52 */
function parse_FontFlags(data/*::, length, opts*/) {
	var d = data.read_shift(1);
	data.l++;
	var out = {
		fBold: d & 0x01,
		fItalic: d & 0x02,
		fUnderline: d & 0x04,
		fStrikeout: d & 0x08,
		fOutline: d & 0x10,
		fShadow: d & 0x20,
		fCondense: d & 0x40,
		fExtend: d & 0x80
	};
	return out;
}

/* [MS-OLEDS] 2.3.1 and 2.3.2 */
function parse_ClipboardFormatOrString(o, w/*:number*/)/*:string*/ {
	// $FlowIgnore
	var ClipFmt = { 2: "BITMAP", 3: "METAFILEPICT", 8: "DIB", 14: "ENHMETAFILE" };
	var m/*:number*/ = o.read_shift(4);
	switch (m) {
		case 0x00000000: return "";
		case 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)] || "";
	}
	if (m > 0x190) throw new Error("Unsupported Clipboard: " + m.toString(16));
	o.l -= 4;
	return o.read_shift(0, w == 1 ? "lpstr" : "lpwstr");
}
function parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }
function parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }

/* [MS-OLEPS] 2.2 PropertyType */
// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars
//var VT_EMPTY    = 0x0000;
//var VT_NULL     = 0x0001;
var VT_I2       = 0x0002;
var VT_I4       = 0x0003;
//var VT_R4       = 0x0004;
//var VT_R8       = 0x0005;
//var VT_CY       = 0x0006;
//var VT_DATE     = 0x0007;
//var VT_BSTR     = 0x0008;
//var VT_ERROR    = 0x000A;
var VT_BOOL     = 0x000B;
var VT_VARIANT  = 0x000C;
//var VT_DECIMAL  = 0x000E;
//var VT_I1       = 0x0010;
//var VT_UI1      = 0x0011;
//var VT_UI2      = 0x0012;
var VT_UI4      = 0x0013;
//var VT_LPWSTR   = 0x001F;
var VT_FILETIME = 0x0040;
var VT_BLOB     = 0x0041;
//var VT_STREAM   = 0x0042;
//var VT_STORAGE  = 0x0043;
//var VT_STREAMED_Object  = 0x0044;
//var VT_STORED_Object    = 0x0045;
//var VT_BLOB_Object      = 0x0046;
var VT_CF       = 0x0047;
var VT_VECTOR_VARIANT = 0x100C;
var VT_VECTOR_LPSTR   = 0x101E;
//var VT_ARRAY    = 0x2000;

var VT_STRING   = 0x0050; // 2.3.3.1.11 VtString
var VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString
var VT_CUSTOM   = [VT_STRING, VT_USTR];

/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */
var DocSummaryPIDDSI = {
	/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },
	/*::[*/0x02/*::]*/: { n: 'Category', t: VT_STRING },
	/*::[*/0x03/*::]*/: { n: 'PresentationFormat', t: VT_STRING },
	/*::[*/0x04/*::]*/: { n: 'ByteCount', t: VT_I4 },
	/*::[*/0x05/*::]*/: { n: 'LineCount', t: VT_I4 },
	/*::[*/0x06/*::]*/: { n: 'ParagraphCount', t: VT_I4 },
	/*::[*/0x07/*::]*/: { n: 'SlideCount', t: VT_I4 },
	/*::[*/0x08/*::]*/: { n: 'NoteCount', t: VT_I4 },
	/*::[*/0x09/*::]*/: { n: 'HiddenCount', t: VT_I4 },
	/*::[*/0x0a/*::]*/: { n: 'MultimediaClipCount', t: VT_I4 },
	/*::[*/0x0b/*::]*/: { n: 'ScaleCrop', t: VT_BOOL },
	/*::[*/0x0c/*::]*/: { n: 'HeadingPairs', t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */ },
	/*::[*/0x0d/*::]*/: { n: 'TitlesOfParts', t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */ },
	/*::[*/0x0e/*::]*/: { n: 'Manager', t: VT_STRING },
	/*::[*/0x0f/*::]*/: { n: 'Company', t: VT_STRING },
	/*::[*/0x10/*::]*/: { n: 'LinksUpToDate', t: VT_BOOL },
	/*::[*/0x11/*::]*/: { n: 'CharacterCount', t: VT_I4 },
	/*::[*/0x13/*::]*/: { n: 'SharedDoc', t: VT_BOOL },
	/*::[*/0x16/*::]*/: { n: 'HyperlinksChanged', t: VT_BOOL },
	/*::[*/0x17/*::]*/: { n: 'AppVersion', t: VT_I4, p: 'version' },
	/*::[*/0x18/*::]*/: { n: 'DigSig', t: VT_BLOB },
	/*::[*/0x1A/*::]*/: { n: 'ContentType', t: VT_STRING },
	/*::[*/0x1B/*::]*/: { n: 'ContentStatus', t: VT_STRING },
	/*::[*/0x1C/*::]*/: { n: 'Language', t: VT_STRING },
	/*::[*/0x1D/*::]*/: { n: 'Version', t: VT_STRING },
	/*::[*/0xFF/*::]*/: {},
	/* [MS-OLEPS] 2.18 */
	/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },
	/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },
	/*::[*/0x72627262/*::]*/: {}
};

/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */
var SummaryPIDSI = {
	/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },
	/*::[*/0x02/*::]*/: { n: 'Title', t: VT_STRING },
	/*::[*/0x03/*::]*/: { n: 'Subject', t: VT_STRING },
	/*::[*/0x04/*::]*/: { n: 'Author', t: VT_STRING },
	/*::[*/0x05/*::]*/: { n: 'Keywords', t: VT_STRING },
	/*::[*/0x06/*::]*/: { n: 'Comments', t: VT_STRING },
	/*::[*/0x07/*::]*/: { n: 'Template', t: VT_STRING },
	/*::[*/0x08/*::]*/: { n: 'LastAuthor', t: VT_STRING },
	/*::[*/0x09/*::]*/: { n: 'RevNumber', t: VT_STRING },
	/*::[*/0x0A/*::]*/: { n: 'EditTime', t: VT_FILETIME },
	/*::[*/0x0B/*::]*/: { n: 'LastPrinted', t: VT_FILETIME },
	/*::[*/0x0C/*::]*/: { n: 'CreatedDate', t: VT_FILETIME },
	/*::[*/0x0D/*::]*/: { n: 'ModifiedDate', t: VT_FILETIME },
	/*::[*/0x0E/*::]*/: { n: 'PageCount', t: VT_I4 },
	/*::[*/0x0F/*::]*/: { n: 'WordCount', t: VT_I4 },
	/*::[*/0x10/*::]*/: { n: 'CharCount', t: VT_I4 },
	/*::[*/0x11/*::]*/: { n: 'Thumbnail', t: VT_CF },
	/*::[*/0x12/*::]*/: { n: 'Application', t: VT_STRING },
	/*::[*/0x13/*::]*/: { n: 'DocSecurity', t: VT_I4 },
	/*::[*/0xFF/*::]*/: {},
	/* [MS-OLEPS] 2.18 */
	/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },
	/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },
	/*::[*/0x72627262/*::]*/: {}
};

/* [MS-XLS] 2.4.63 Country/Region codes */
var CountryEnum = {
	/*::[*/0x0001/*::]*/: "US", // United States
	/*::[*/0x0002/*::]*/: "CA", // Canada
	/*::[*/0x0003/*::]*/: "", // Latin America (except Brazil)
	/*::[*/0x0007/*::]*/: "RU", // Russia
	/*::[*/0x0014/*::]*/: "EG", // Egypt
	/*::[*/0x001E/*::]*/: "GR", // Greece
	/*::[*/0x001F/*::]*/: "NL", // Netherlands
	/*::[*/0x0020/*::]*/: "BE", // Belgium
	/*::[*/0x0021/*::]*/: "FR", // France
	/*::[*/0x0022/*::]*/: "ES", // Spain
	/*::[*/0x0024/*::]*/: "HU", // Hungary
	/*::[*/0x0027/*::]*/: "IT", // Italy
	/*::[*/0x0029/*::]*/: "CH", // Switzerland
	/*::[*/0x002B/*::]*/: "AT", // Austria
	/*::[*/0x002C/*::]*/: "GB", // United Kingdom
	/*::[*/0x002D/*::]*/: "DK", // Denmark
	/*::[*/0x002E/*::]*/: "SE", // Sweden
	/*::[*/0x002F/*::]*/: "NO", // Norway
	/*::[*/0x0030/*::]*/: "PL", // Poland
	/*::[*/0x0031/*::]*/: "DE", // Germany
	/*::[*/0x0034/*::]*/: "MX", // Mexico
	/*::[*/0x0037/*::]*/: "BR", // Brazil
	/*::[*/0x003d/*::]*/: "AU", // Australia
	/*::[*/0x0040/*::]*/: "NZ", // New Zealand
	/*::[*/0x0042/*::]*/: "TH", // Thailand
	/*::[*/0x0051/*::]*/: "JP", // Japan
	/*::[*/0x0052/*::]*/: "KR", // Korea
	/*::[*/0x0054/*::]*/: "VN", // Viet Nam
	/*::[*/0x0056/*::]*/: "CN", // China
	/*::[*/0x005A/*::]*/: "TR", // Turkey
	/*::[*/0x0069/*::]*/: "JS", // Ramastan
	/*::[*/0x00D5/*::]*/: "DZ", // Algeria
	/*::[*/0x00D8/*::]*/: "MA", // Morocco
	/*::[*/0x00DA/*::]*/: "LY", // Libya
	/*::[*/0x015F/*::]*/: "PT", // Portugal
	/*::[*/0x0162/*::]*/: "IS", // Iceland
	/*::[*/0x0166/*::]*/: "FI", // Finland
	/*::[*/0x01A4/*::]*/: "CZ", // Czech Republic
	/*::[*/0x0376/*::]*/: "TW", // Taiwan
	/*::[*/0x03C1/*::]*/: "LB", // Lebanon
	/*::[*/0x03C2/*::]*/: "JO", // Jordan
	/*::[*/0x03C3/*::]*/: "SY", // Syria
	/*::[*/0x03C4/*::]*/: "IQ", // Iraq
	/*::[*/0x03C5/*::]*/: "KW", // Kuwait
	/*::[*/0x03C6/*::]*/: "SA", // Saudi Arabia
	/*::[*/0x03CB/*::]*/: "AE", // United Arab Emirates
	/*::[*/0x03CC/*::]*/: "IL", // Israel
	/*::[*/0x03CE/*::]*/: "QA", // Qatar
	/*::[*/0x03D5/*::]*/: "IR", // Iran
	/*::[*/0xFFFF/*::]*/: "US"  // United States
};

/* [MS-XLS] 2.5.127 */
var XLSFillPattern = [
	null,
	'solid',
	'mediumGray',
	'darkGray',
	'lightGray',
	'darkHorizontal',
	'darkVertical',
	'darkDown',
	'darkUp',
	'darkGrid',
	'darkTrellis',
	'lightHorizontal',
	'lightVertical',
	'lightDown',
	'lightUp',
	'lightGrid',
	'lightTrellis',
	'gray125',
	'gray0625'
];

function rgbify(arr/*:Array<number>*/)/*:Array<[number, number, number]>*/ { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }

/* [MS-XLS] 2.5.161 */
/* [MS-XLSB] 2.5.75 Icv */
var _XLSIcv = /*#__PURE__*/ rgbify([
	/* Color Constants */
	0x000000,
	0xFFFFFF,
	0xFF0000,
	0x00FF00,
	0x0000FF,
	0xFFFF00,
	0xFF00FF,
	0x00FFFF,

	/* Overridable Defaults */
	0x000000,
	0xFFFFFF,
	0xFF0000,
	0x00FF00,
	0x0000FF,
	0xFFFF00,
	0xFF00FF,
	0x00FFFF,

	0x800000,
	0x008000,
	0x000080,
	0x808000,
	0x800080,
	0x008080,
	0xC0C0C0,
	0x808080,
	0x9999FF,
	0x993366,
	0xFFFFCC,
	0xCCFFFF,
	0x660066,
	0xFF8080,
	0x0066CC,
	0xCCCCFF,

	0x000080,
	0xFF00FF,
	0xFFFF00,
	0x00FFFF,
	0x800080,
	0x800000,
	0x008080,
	0x0000FF,
	0x00CCFF,
	0xCCFFFF,
	0xCCFFCC,
	0xFFFF99,
	0x99CCFF,
	0xFF99CC,
	0xCC99FF,
	0xFFCC99,

	0x3366FF,
	0x33CCCC,
	0x99CC00,
	0xFFCC00,
	0xFF9900,
	0xFF6600,
	0x666699,
	0x969696,
	0x003366,
	0x339966,
	0x003300,
	0x333300,
	0x993300,
	0x993366,
	0x333399,
	0x333333,

	/* Other entries to appease BIFF8/12 */
	0xFFFFFF, /* 0x40 icvForeground ?? */
	0x000000, /* 0x41 icvBackground ?? */
	0x000000, /* 0x42 icvFrame ?? */
	0x000000, /* 0x43 icv3D ?? */
	0x000000, /* 0x44 icv3DText ?? */
	0x000000, /* 0x45 icv3DHilite ?? */
	0x000000, /* 0x46 icv3DShadow ?? */
	0x000000, /* 0x47 icvHilite ?? */
	0x000000, /* 0x48 icvCtlText ?? */
	0x000000, /* 0x49 icvCtlScrl ?? */
	0x000000, /* 0x4A icvCtlInv ?? */
	0x000000, /* 0x4B icvCtlBody ?? */
	0x000000, /* 0x4C icvCtlFrame ?? */
	0x000000, /* 0x4D icvCtlFore ?? */
	0x000000, /* 0x4E icvCtlBack ?? */
	0x000000, /* 0x4F icvCtlNeutral */
	0x000000, /* 0x50 icvInfoBk ?? */
	0x000000 /* 0x51 icvInfoText ?? */
]);
var XLSIcv = /*#__PURE__*/dup(_XLSIcv);

/* [MS-XLSB] 2.5.97.2 */
var BErr = {
	/*::[*/0x00/*::]*/: "#NULL!",
	/*::[*/0x07/*::]*/: "#DIV/0!",
	/*::[*/0x0F/*::]*/: "#VALUE!",
	/*::[*/0x17/*::]*/: "#REF!",
	/*::[*/0x1D/*::]*/: "#NAME?",
	/*::[*/0x24/*::]*/: "#NUM!",
	/*::[*/0x2A/*::]*/: "#N/A",
	/*::[*/0x2B/*::]*/: "#GETTING_DATA",
	/*::[*/0xFF/*::]*/: "#WTF?"
};
//var RBErr = evert_num(BErr);
var RBErr = {
	"#NULL!":        0x00,
	"#DIV/0!":       0x07,
	"#VALUE!":       0x0F,
	"#REF!":         0x17,
	"#NAME?":        0x1D,
	"#NUM!":         0x24,
	"#N/A":          0x2A,
	"#GETTING_DATA": 0x2B,
	"#WTF?":         0xFF
};

/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */
/* 12.3 Part Summary <SpreadsheetML> */
/* 14.2 Part Summary <DrawingML> */
/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */
var ct2type/*{[string]:string}*/ = ({
	/* Workbook */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": "workbooks",
	"application/vnd.ms-excel.sheet.macroEnabled.main+xml": "workbooks",
	"application/vnd.ms-excel.sheet.binary.macroEnabled.main": "workbooks",
	"application/vnd.ms-excel.addin.macroEnabled.main+xml": "workbooks",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": "workbooks",

	/* Worksheet */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": "sheets",
	"application/vnd.ms-excel.worksheet": "sheets",
	"application/vnd.ms-excel.binIndexWs": "TODO", /* Binary Index */

	/* Chartsheet */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": "charts",
	"application/vnd.ms-excel.chartsheet": "charts",

	/* Macrosheet */
	"application/vnd.ms-excel.macrosheet+xml": "macros",
	"application/vnd.ms-excel.macrosheet": "macros",
	"application/vnd.ms-excel.intlmacrosheet": "TODO",
	"application/vnd.ms-excel.binIndexMs": "TODO", /* Binary Index */

	/* Dialogsheet */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": "dialogs",
	"application/vnd.ms-excel.dialogsheet": "dialogs",

	/* Shared Strings */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml": "strs",
	"application/vnd.ms-excel.sharedStrings": "strs",

	/* Styles */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": "styles",
	"application/vnd.ms-excel.styles": "styles",

	/* File Properties */
	"application/vnd.openxmlformats-package.core-properties+xml": "coreprops",
	"application/vnd.openxmlformats-officedocument.custom-properties+xml": "custprops",
	"application/vnd.openxmlformats-officedocument.extended-properties+xml": "extprops",

	/* Custom Data Properties */
	"application/vnd.openxmlformats-officedocument.customXmlProperties+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty": "TODO",

	/* Comments */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": "comments",
	"application/vnd.ms-excel.comments": "comments",
	"application/vnd.ms-excel.threadedcomments+xml": "threadedcomments",
	"application/vnd.ms-excel.person+xml": "people",

	/* Metadata (Stock/Geography and Dynamic Array) */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml": "metadata",
	"application/vnd.ms-excel.sheetMetadata": "metadata",

	/* PivotTable */
	"application/vnd.ms-excel.pivotTable": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml": "TODO",

	/* Chart Objects */
	"application/vnd.openxmlformats-officedocument.drawingml.chart+xml": "TODO",

	/* Chart Colors */
	"application/vnd.ms-office.chartcolorstyle+xml": "TODO",

	/* Chart Style */
	"application/vnd.ms-office.chartstyle+xml": "TODO",

	/* Chart Advanced */
	"application/vnd.ms-office.chartex+xml": "TODO",

	/* Calculation Chain */
	"application/vnd.ms-excel.calcChain": "calcchains",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml": "calcchains",

	/* Printer Settings */
	"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings": "TODO",

	/* ActiveX */
	"application/vnd.ms-office.activeX": "TODO",
	"application/vnd.ms-office.activeX+xml": "TODO",

	/* Custom Toolbars */
	"application/vnd.ms-excel.attachedToolbars": "TODO",

	/* External Data Connections */
	"application/vnd.ms-excel.connections": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": "TODO",

	/* External Links */
	"application/vnd.ms-excel.externalLink": "links",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml": "links",

	/* PivotCache */
	"application/vnd.ms-excel.pivotCacheDefinition": "TODO",
	"application/vnd.ms-excel.pivotCacheRecords": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml": "TODO",

	/* Query Table */
	"application/vnd.ms-excel.queryTable": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml": "TODO",

	/* Shared Workbook */
	"application/vnd.ms-excel.userNames": "TODO",
	"application/vnd.ms-excel.revisionHeaders": "TODO",
	"application/vnd.ms-excel.revisionLog": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml": "TODO",

	/* Single Cell Table */
	"application/vnd.ms-excel.tableSingleCells": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml": "TODO",

	/* Slicer */
	"application/vnd.ms-excel.slicer": "TODO",
	"application/vnd.ms-excel.slicerCache": "TODO",
	"application/vnd.ms-excel.slicer+xml": "TODO",
	"application/vnd.ms-excel.slicerCache+xml": "TODO",

	/* Sort Map */
	"application/vnd.ms-excel.wsSortMap": "TODO",

	/* Table */
	"application/vnd.ms-excel.table": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": "TODO",

	/* Themes */
	"application/vnd.openxmlformats-officedocument.theme+xml": "themes",

	/* Theme Override */
	"application/vnd.openxmlformats-officedocument.themeOverride+xml": "TODO",

	/* Timeline */
	"application/vnd.ms-excel.Timeline+xml": "TODO", /* verify */
	"application/vnd.ms-excel.TimelineCache+xml": "TODO", /* verify */

	/* VBA */
	"application/vnd.ms-office.vbaProject": "vba",
	"application/vnd.ms-office.vbaProjectSignature": "TODO",

	/* Volatile Dependencies */
	"application/vnd.ms-office.volatileDependencies": "TODO",
	"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml": "TODO",

	/* Control Properties */
	"application/vnd.ms-excel.controlproperties+xml": "TODO",

	/* Data Model */
	"application/vnd.openxmlformats-officedocument.model+data": "TODO",

	/* Survey */
	"application/vnd.ms-excel.Survey+xml": "TODO",

	/* Drawing */
	"application/vnd.openxmlformats-officedocument.drawing+xml": "drawings",
	"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml": "TODO",
	"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml": "TODO",

	/* VML */
	"application/vnd.openxmlformats-officedocument.vmlDrawing": "TODO",

	"application/vnd.openxmlformats-package.relationships+xml": "rels",
	"application/vnd.openxmlformats-officedocument.oleObject": "TODO",

	/* Image */
	"image/png": "TODO",

	"sheet": "js"
}/*:any*/);

function new_ct()/*:any*/ {
	return ({
		workbooks:[], sheets:[], charts:[], dialogs:[], macros:[],
		rels:[], strs:[], comments:[], threadedcomments:[], links:[],
		coreprops:[], extprops:[], custprops:[], themes:[], styles:[],
		calcchains:[], vba: [], drawings: [], metadata: [], people:[],
		TODO:[], xmlns: "" }/*:any*/);
}

function parse_ct(data/*:?string*/) {
	var ct = new_ct();
	if(!data || !data.match) return ct;
	var ctext = {};
	(data.match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x);
		switch(y[0].replace(nsregex,"<")) {
			case '<?xml': break;
			case '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\w+):/)||["",""])[1] ]; break;
			case '<Default': ctext[y.Extension] = y.ContentType; break;
			case '<Override':
				if(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);
				break;
		}
	});
	if(ct.xmlns !== XMLNS.CT) throw new Error("Unknown Namespace: " + ct.xmlns);
	ct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : "";
	ct.sst = ct.strs.length > 0 ? ct.strs[0] : "";
	ct.style = ct.styles.length > 0 ? ct.styles[0] : "";
	ct.defaults = ctext;
	delete ct.calcchains;
	return ct;
}
/* 9.3 Relationships */
var RELS = ({
	WB: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",
	SHEET: "http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument",
	HLINK: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink",
	VML: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing",
	XPATH: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath",
	XMISS: "http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing",
	XLINK: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink",
	CXML: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml",
	CXMLP: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps",
	CMNT: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments",
	CORE_PROPS: "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties",
	EXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',
	CUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',
	SST: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings",
	STY: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",
	THEME: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme",
	CHART: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart",
	CHARTEX: "http://schemas.microsoft.com/office/2014/relationships/chartEx",
	CS: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet",
	WS: [
		"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet",
		"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet"
	],
	DS: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet",
	MS: "http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet",
	IMG: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image",
	DRAW: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing",
	XLMETA: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata",
	TCMNT: "http://schemas.microsoft.com/office/2017/10/relationships/threadedComment",
	PEOPLE: "http://schemas.microsoft.com/office/2017/10/relationships/person",
	VBA: "http://schemas.microsoft.com/office/2006/relationships/vbaProject"
}/*:any*/);


/* 9.3.3 Representing Relationships */
function get_rels_path(file/*:string*/)/*:string*/ {
	var n = file.lastIndexOf("/");
	return file.slice(0,n+1) + '_rels/' + file.slice(n+1) + ".rels";
}

function parse_rels(data/*:?string*/, currentFilePath/*:string*/) {
	var rels = {"!id":{}};
	if (!data) return rels;
	if (currentFilePath.charAt(0) !== '/') {
		currentFilePath = '/'+currentFilePath;
	}
	var hash = {};

	(data.match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x);
		/* 9.3.2.2 OPC_Relationships */
		if (y[0] === '<Relationship') {
			var rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; if(y.TargetMode) rel.TargetMode = y.TargetMode;
			var canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);
			rels[canonictarget] = rel;
			hash[y.Id] = rel;
		}
	});
	rels["!id"] = hash;
	return rels;
}
/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */
/* Part 3 Section 4 Manifest File */
var CT_ODS = "application/vnd.oasis.opendocument.spreadsheet";
function parse_manifest(d, opts) {
	var str = xlml_normalize(d);
	var Rn;
	var FEtag;
	while((Rn = xlmlregex.exec(str))) switch(Rn[3]) {
		case 'manifest': break; // 4.2 <manifest:manifest>
		case 'file-entry': // 4.3 <manifest:file-entry>
			FEtag = parsexmltag(Rn[0], false);
			if(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error("This OpenDocument is not a spreadsheet");
			break;
		case 'encryption-data': // 4.4 <manifest:encryption-data>
		case 'algorithm': // 4.5 <manifest:algorithm>
		case 'start-key-generation': // 4.6 <manifest:start-key-generation>
		case 'key-derivation': // 4.7 <manifest:key-derivation>
			throw new Error("Unsupported ODS Encryption");
		default: if(opts && opts.WTF) throw Rn;
	}
}

/* ECMA-376 Part II 11.1 Core Properties Part */
/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */
var CORE_PROPS/*:Array<Array<string> >*/ = [
	["cp:category", "Category"],
	["cp:contentStatus", "ContentStatus"],
	["cp:keywords", "Keywords"],
	["cp:lastModifiedBy", "LastAuthor"],
	["cp:lastPrinted", "LastPrinted"],
	["cp:revision", "RevNumber"],
	["cp:version", "Version"],
	["dc:creator", "Author"],
	["dc:description", "Comments"],
	["dc:identifier", "Identifier"],
	["dc:language", "Language"],
	["dc:subject", "Subject"],
	["dc:title", "Title"],
	["dcterms:created", "CreatedDate", 'date'],
	["dcterms:modified", "ModifiedDate", 'date']
];

var CORE_PROPS_REGEX/*:Array<RegExp>*/ = /*#__PURE__*/(function() {
	var r = new Array(CORE_PROPS.length);
	for(var i = 0; i < CORE_PROPS.length; ++i) {
		var f = CORE_PROPS[i];
		var g = "(?:"+ f[0].slice(0,f[0].indexOf(":")) +":)"+ f[0].slice(f[0].indexOf(":")+1);
		r[i] = new RegExp("<" + g + "[^>]*>([\\s\\S]*?)<\/" + g + ">");
	}
	return r;
})();

function parse_core_props(data) {
	var p = {};
	data = utf8read(data);

	for(var i = 0; i < CORE_PROPS.length; ++i) {
		var f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);
		if(cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);
		if(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);
	}

	return p;
}
/* 15.2.12.3 Extended File Properties Part */
/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */
var EXT_PROPS/*:Array<Array<string> >*/ = [
	["Application", "Application", "string"],
	["AppVersion", "AppVersion", "string"],
	["Company", "Company", "string"],
	["DocSecurity", "DocSecurity", "string"],
	["Manager", "Manager", "string"],
	["HyperlinksChanged", "HyperlinksChanged", "bool"],
	["SharedDoc", "SharedDoc", "bool"],
	["LinksUpToDate", "LinksUpToDate", "bool"],
	["ScaleCrop", "ScaleCrop", "bool"],
	["HeadingPairs", "HeadingPairs", "raw"],
	["TitlesOfParts", "TitlesOfParts", "raw"]
];
function load_props_pairs(HP/*:string|Array<Array<any>>*/, TOP, props, opts) {
	var v = [];
	if(typeof HP == "string") v = parseVector(HP, opts);
	else for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));
	var parts = (typeof TOP == "string") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;
	var idx = 0, len = 0;
	if(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {
		len = +(v[i+1].v);
		switch(v[i].v) {
			case "Worksheets":
			case "工作表":
			case "Листы":
			case "أوراق العمل":
			case "ワークシート":
			case "גליונות עבודה":
			case "Arbeitsblätter":
			case "Çalışma Sayfaları":
			case "Feuilles de calcul":
			case "Fogli di lavoro":
			case "Folhas de cálculo":
			case "Planilhas":
			case "Regneark":
			case "Hojas de cálculo":
			case "Werkbladen":
				props.Worksheets = len;
				props.SheetNames = parts.slice(idx, idx + len);
				break;

			case "Named Ranges":
			case "Rangos con nombre":
			case "名前付き一覧":
			case "Benannte Bereiche":
			case "Navngivne områder":
				props.NamedRanges = len;
				props.DefinedNames = parts.slice(idx, idx + len);
				break;

			case "Charts":
			case "Diagramme":
				props.Chartsheets = len;
				props.ChartNames = parts.slice(idx, idx + len);
				break;
		}
		idx += len;
	}
}

function parse_ext_props(data, p, opts) {
	var q = {}; if(!p) p = {};
	data = utf8read(data);

	EXT_PROPS.forEach(function(f) {
		var xml = (data.match(matchtag(f[0]))||[])[1];
		switch(f[2]) {
			case "string": if(xml) p[f[1]] = unescapexml(xml); break;
			case "bool": p[f[1]] = xml === "true"; break;
			case "raw":
				var cur = data.match(new RegExp("<" + f[0] + "[^>]*>([\\s\\S]*?)<\/" + f[0] + ">"));
				if(cur && cur.length > 0) q[f[1]] = cur[1];
				break;
		}
	});

	if(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);

	return p;
}
/* 15.2.12.2 Custom File Properties Part */
var custregex = /<[^>]+>[^<]*/g;
function parse_cust_props(data/*:string*/, opts) {
	var p = {}, name = "";
	var m = data.match(custregex);
	if(m) for(var i = 0; i != m.length; ++i) {
		var x = m[i], y = parsexmltag(x);
		switch(y[0]) {
			case '<?xml': break;
			case '<Properties': break;
			case '<property': name = unescapexml(y.name); break;
			case '</property>': name = null; break;
			default: if (x.indexOf('<vt:') === 0) {
				var toks = x.split('>');
				var type = toks[0].slice(4), text = toks[1];
				/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */
				switch(type) {
					case 'lpstr': case 'bstr': case 'lpwstr':
						p[name] = unescapexml(text);
						break;
					case 'bool':
						p[name] = parsexmlbool(text);
						break;
					case 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':
						p[name] = parseInt(text, 10);
						break;
					case 'r4': case 'r8': case 'decimal':
						p[name] = parseFloat(text);
						break;
					case 'filetime': case 'date':
						p[name] = parseDate(text);
						break;
					case 'cy': case 'error':
						p[name] = unescapexml(text);
						break;
					default:
						if(type.slice(-1) == '/') break;
						if(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);
				}
			} else if(x.slice(0,2) === "</") ; else if(opts.WTF) throw new Error(x);
		}
	}
	return p;
}
/* Common Name -> XLML Name */
var XLMLDocPropsMap = {
	Title: 'Title',
	Subject: 'Subject',
	Author: 'Author',
	Keywords: 'Keywords',
	Comments: 'Description',
	LastAuthor: 'LastAuthor',
	RevNumber: 'Revision',
	Application: 'AppName',
	/* TotalTime: 'TotalTime', */
	LastPrinted: 'LastPrinted',
	CreatedDate: 'Created',
	ModifiedDate: 'LastSaved',
	/* Pages */
	/* Words */
	/* Characters */
	Category: 'Category',
	/* PresentationFormat */
	Manager: 'Manager',
	Company: 'Company',
	/* Guid */
	/* HyperlinkBase */
	/* Bytes */
	/* Lines */
	/* Paragraphs */
	/* CharactersWithSpaces */
	AppVersion: 'Version',

	ContentStatus: 'ContentStatus', /* NOTE: missing from schema */
	Identifier: 'Identifier', /* NOTE: missing from schema */
	Language: 'Language' /* NOTE: missing from schema */
};
var evert_XLMLDPM;

function xlml_set_prop(Props, tag/*:string*/, val) {
	if(!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);
	tag = evert_XLMLDPM[tag] || tag;
	Props[tag] = val;
}
/* [MS-DTYP] 2.3.3 FILETIME */
/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */
/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */
function parse_FILETIME(blob) {
	var dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);
	return new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\.000/,"");
}

/* [MS-OSHARED] 2.3.3.1.4 Lpstr */
function parse_lpstr(blob, type, pad/*:?number*/) {
	var start = blob.l;
	var str = blob.read_shift(0, 'lpstr-cp');
	if(pad) while((blob.l - start) & 3) ++blob.l;
	return str;
}

/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */
function parse_lpwstr(blob, type, pad) {
	var str = blob.read_shift(0, 'lpwstr');
	if(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;
	return str;
}


/* [MS-OSHARED] 2.3.3.1.11 VtString */
/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */
function parse_VtStringBase(blob, stringType, pad) {
	if(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);
	return parse_lpstr(blob, stringType, pad);
}

function parse_VtString(blob, t/*:number*/, pad/*:?boolean*/) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }
function parse_VtUnalignedString(blob, t/*:number*/) { if(!t) throw new Error("VtUnalignedString must have positive length"); return parse_VtStringBase(blob, t, 0); }

/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */
function parse_VtVecLpwstrValue(blob)/*:Array<string>*/ {
	var length = blob.read_shift(4);
	var ret/*:Array<string>*/ = [];
	for(var i = 0; i != length; ++i) {
		var start = blob.l;
		ret[i] = blob.read_shift(0, 'lpwstr').replace(chr0,'');
		if((blob.l - start) & 0x02) blob.l += 2;
	}
	return ret;
}

/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */
function parse_VtVecUnalignedLpstrValue(blob)/*:Array<string>*/ {
	var length = blob.read_shift(4);
	var ret/*:Array<string>*/ = [];
	for(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');
	return ret;
}


/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */
function parse_VtHeadingPair(blob) {
	var start = blob.l;
	var headingString = parse_TypedPropertyValue(blob, VT_USTR);
	if(blob[blob.l] == 0x00 && blob[blob.l+1] == 0x00 && ((blob.l - start) & 0x02)) blob.l += 2;
	var headerParts = parse_TypedPropertyValue(blob, VT_I4);
	return [headingString, headerParts];
}

/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */
function parse_VtVecHeadingPairValue(blob) {
	var cElements = blob.read_shift(4);
	var out = [];
	for(var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));
	return out;
}

/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */
function parse_dictionary(blob,CodePage) {
	var cnt = blob.read_shift(4);
	var dict/*:{[number]:string}*/ = ({}/*:any*/);
	for(var j = 0; j != cnt; ++j) {
		var pid = blob.read_shift(4);
		var len = blob.read_shift(4);
		dict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');
		if(CodePage === 0x4B0 && (len % 2)) blob.l += 2;
	}
	if(blob.l & 3) blob.l = (blob.l>>2+1)<<2;
	return dict;
}

/* [MS-OLEPS] 2.9 BLOB */
function parse_BLOB(blob) {
	var size = blob.read_shift(4);
	var bytes = blob.slice(blob.l,blob.l+size);
	blob.l += size;
	if((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;
	return bytes;
}

/* [MS-OLEPS] 2.11 ClipboardData */
function parse_ClipboardData(blob) {
	// TODO
	var o = {};
	o.Size = blob.read_shift(4);
	//o.Format = blob.read_shift(4);
	blob.l += o.Size + 3 - (o.Size - 1) % 4;
	return o;
}

/* [MS-OLEPS] 2.15 TypedPropertyValue */
function parse_TypedPropertyValue(blob, type/*:number*/, _opts)/*:any*/ {
	var t = blob.read_shift(2), ret, opts = _opts||{};
	blob.l += 2;
	if(type !== VT_VARIANT)
	if(t !== type && VT_CUSTOM.indexOf(type)===-1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);
	switch(type === VT_VARIANT ? t : type) {
		case 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;
		case 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;
		case 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;
		case 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;
		case 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');
		case 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);
		case 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);
		case 0x41 /*VT_BLOB*/: return parse_BLOB(blob);
		case 0x47 /*VT_CF*/: return parse_ClipboardData(blob);
		case 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');
		case 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');
		case 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPairValue(blob);
		case 0x101E /*VT_VECTOR|VT_LPSTR*/:
		case 0x101F /*VT_VECTOR|VT_LPWSTR*/:
			return t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);
		default: throw new Error("TypedPropertyValue unrecognized type " + type + " " + t);
	}
}

/* [MS-OLEPS] 2.20 PropertySet */
function parse_PropertySet(blob, PIDSI) {
	var start_addr = blob.l;
	var size = blob.read_shift(4);
	var NumProps = blob.read_shift(4);
	var Props = [], i = 0;
	var CodePage = 0;
	var Dictionary = -1, DictObj/*:{[number]:string}*/ = ({}/*:any*/);
	for(i = 0; i != NumProps; ++i) {
		var PropID = blob.read_shift(4);
		var Offset = blob.read_shift(4);
		Props[i] = [PropID, Offset + start_addr];
	}
	Props.sort(function(x,y) { return x[1] - y[1]; });
	var PropH = {};
	for(i = 0; i != NumProps; ++i) {
		if(blob.l !== Props[i][1]) {
			var fail = true;
			if(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {
				case 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;
				case 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;
				case 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;
			}
			if((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }
			if(fail) throw new Error("Read Error: Expected address " + Props[i][1] + ' at ' + blob.l + ' :' + i);
		}
		if(PIDSI) {
			var piddsi = PIDSI[Props[i][0]];
			PropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});
			if(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + "." + ("0000" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);
			if(piddsi.n == "CodePage") switch(PropH[piddsi.n]) {
				case 0: PropH[piddsi.n] = 1252;
					/* falls through */
				case 874:
				case 932:
				case 936:
				case 949:
				case 950:
				case 1250:
				case 1251:
				case 1253:
				case 1254:
				case 1255:
				case 1256:
				case 1257:
				case 1258:
				case 10000:
				case 1200:
				case 1201:
				case 1252:
				case 65000: case -536:
				case 65001: case -535:
					set_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;
				default: throw new Error("Unsupported CodePage: " + PropH[piddsi.n]);
			}
		} else {
			if(Props[i][0] === 0x1) {
				CodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2)/*:number*/);
				set_cp(CodePage);
				if(Dictionary !== -1) {
					var oldpos = blob.l;
					blob.l = Props[Dictionary][1];
					DictObj = parse_dictionary(blob,CodePage);
					blob.l = oldpos;
				}
			} else if(Props[i][0] === 0) {
				if(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }
				DictObj = parse_dictionary(blob,CodePage);
			} else {
				var name = DictObj[Props[i][0]];
				var val;
				/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */
				switch(blob[blob.l]) {
					case 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;
					case 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\u0000+$/,""); break;
					case 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\u0000+$/,""); break;
					case 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;
					case 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;
					case 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;
					case 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;
					case 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;
					default: throw new Error("unparsed value: " + blob[blob.l]);
				}
				PropH[name] = val;
			}
		}
	}
	blob.l = start_addr + size; /* step ahead to skip padding */
	return PropH;
}

/* [MS-OLEPS] 2.21 PropertySetStream */
function parse_PropertySetStream(file, PIDSI, clsid) {
	var blob = file.content;
	if(!blob) return ({}/*:any*/);
	prep_blob(blob, 0);

	var NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;
	blob.chk('feff', 'Byte Order: ');

	/*var vers = */blob.read_shift(2); // TODO: check version
	var SystemIdentifier = blob.read_shift(4);
	var CLSID = blob.read_shift(16);
	if(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error("Bad PropertySet CLSID " + CLSID);
	NumSets = blob.read_shift(4);
	if(NumSets !== 1 && NumSets !== 2) throw new Error("Unrecognized #Sets: " + NumSets);
	FMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);

	if(NumSets === 1 && Offset0 !== blob.l) throw new Error("Length mismatch: " + Offset0 + " !== " + blob.l);
	else if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }
	var PSet0 = parse_PropertySet(blob, PIDSI);

	var rval = ({ SystemIdentifier: SystemIdentifier }/*:any*/);
	for(var y in PSet0) rval[y] = PSet0[y];
	//rval.blob = blob;
	rval.FMTID = FMTID0;
	//rval.PSet0 = PSet0;
	if(NumSets === 1) return rval;
	if(Offset1 - blob.l == 2) blob.l += 2;
	if(blob.l !== Offset1) throw new Error("Length mismatch 2: " + blob.l + " !== " + Offset1);
	var PSet1;
	try { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}
	for(y in PSet1) rval[y] = PSet1[y];
	rval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1
	return rval;
}

function parsenoop2(blob, length) { blob.read_shift(length); return null; }

function parslurp(blob, length, cb) {
	var arr = [], target = blob.l + length;
	while(blob.l < target) arr.push(cb(blob, target - blob.l));
	if(target !== blob.l) throw new Error("Slurp error");
	return arr;
}

function parsebool(blob, length/*:number*/) { return blob.read_shift(length) === 0x1; }

function parseuint16(blob/*::, length:?number, opts:?any*/) { return blob.read_shift(2, 'u'); }
function parseuint16a(blob, length/*:: :?number, opts:?any*/) { return parslurp(blob,length,parseuint16);}

/* --- 2.5 Structures --- */

/* [MS-XLS] 2.5.10 Bes (boolean or error) */
function parse_Bes(blob/*::, length*/) {
	var v = blob.read_shift(1), t = blob.read_shift(1);
	return t === 0x01 ? v : v === 0x01;
}

/* [MS-XLS] 2.5.240 ShortXLUnicodeString */
function parse_ShortXLUnicodeString(blob, length, opts) {
	var cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);
	var encoding = 'sbcs-cont';
	if(opts && opts.biff >= 8) ;
	if(!opts || opts.biff == 8 ) {
		var fHighByte = blob.read_shift(1);
		if(fHighByte) { encoding = 'dbcs-cont'; }
	} else if(opts.biff == 12) {
		encoding = 'wstr';
	}
	if(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';
	var o = cch ? blob.read_shift(cch, encoding) : "";
	return o;
}

/* 2.5.293 XLUnicodeRichExtendedString */
function parse_XLUnicodeRichExtendedString(blob) {
	var cch = blob.read_shift(2), flags = blob.read_shift(1);
	var /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;
	var width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs
	var cRun = 0, cbExtRst;
	var z = {};
	if(fRichSt) cRun = blob.read_shift(2);
	if(fExtSt) cbExtRst = blob.read_shift(4);
	var encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';
	var msg = cch === 0 ? "" : blob.read_shift(cch, encoding);
	if(fRichSt) blob.l += 4 * cRun; //TODO: parse this
	if(fExtSt) blob.l += cbExtRst; //TODO: parse this
	z.t = msg;
	if(!fRichSt) { z.raw = "<t>" + z.t + "</t>"; z.r = z.t; }
	return z;
}

/* 2.5.296 XLUnicodeStringNoCch */
function parse_XLUnicodeStringNoCch(blob, cch, opts) {
	var retval;
	if(opts) {
		if(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');
		if(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');
	}
	var fHighByte = blob.read_shift(1);
	if(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }
	else { retval = blob.read_shift(cch, 'dbcs-cont'); }
	return retval;
}

/* 2.5.294 XLUnicodeString */
function parse_XLUnicodeString(blob, length, opts) {
	var cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);
	if(cch === 0) { blob.l++; return ""; }
	return parse_XLUnicodeStringNoCch(blob, cch, opts);
}
/* BIFF5 override */
function parse_XLUnicodeString2(blob, length, opts) {
	if(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);
	var cch = blob.read_shift(1);
	if(cch === 0) { blob.l++; return ""; }
	return blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');
}

/* [MS-XLS] 2.5.61 ControlInfo */
function parse_ControlInfo(blob/*::, length, opts*/) {
	var flags = blob.read_shift(1);
	blob.l++;
	var accel = blob.read_shift(2);
	blob.l += 2;
	return [flags, accel];
}

/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */
function parse_URLMoniker(blob/*::, length, opts*/) {
	var len = blob.read_shift(4), start = blob.l;
	var extra = false;
	if(len > 24) {
		/* look ahead */
		blob.l += len - 24;
		if(blob.read_shift(16) === "795881f43b1d7f48af2c825dc4852763") extra = true;
		blob.l = start;
	}
	var url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,"");
	if(extra) blob.l += 24;
	return url;
}

/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */
function parse_FileMoniker(blob/*::, length*/) {
	var cAnti = blob.read_shift(2);
	var preamble = ""; while(cAnti-- > 0) preamble += "../";
	var ansiPath = blob.read_shift(0, 'lpstr-ansi');
	blob.l += 2; //var endServer = blob.read_shift(2);
	if(blob.read_shift(2) != 0xDEAD) throw new Error("Bad FileMoniker");
	var sz = blob.read_shift(4);
	if(sz === 0) return preamble + ansiPath.replace(/\\/g,"/");
	var bytes = blob.read_shift(4);
	if(blob.read_shift(2) != 3) throw new Error("Bad FileMoniker");
	var unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,"");
	return preamble + unicodePath;
}

/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */
function parse_HyperlinkMoniker(blob, length) {
	var clsid = blob.read_shift(16);	switch(clsid) {
		case "e0c9ea79f9bace118c8200aa004ba90b": return parse_URLMoniker(blob);
		case "0303000000000000c000000000000046": return parse_FileMoniker(blob);
		default: throw new Error("Unsupported Moniker " + clsid);
	}
}

/* [MS-OSHARED] 2.3.7.9 HyperlinkString */
function parse_HyperlinkString(blob/*::, length*/) {
	var len = blob.read_shift(4);
	var o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, "") : "";
	return o;
}

/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */
function parse_Hyperlink(blob, length)/*:Hyperlink*/ {
	var end = blob.l + length;
	var sVer = blob.read_shift(4);
	if(sVer !== 2) throw new Error("Unrecognized streamVersion: " + sVer);
	var flags = blob.read_shift(2);
	blob.l += 2;
	var displayName, targetFrameName, moniker, oleMoniker, Loc="", guid, fileTime;
	if(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);
	if(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);
	if((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);
	if((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);
	if(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);
	if(flags & 0x0020) guid = blob.read_shift(16);
	if(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);
	blob.l = end;
	var target = targetFrameName||moniker||oleMoniker||"";
	if(target && Loc) target+="#"+Loc;
	if(!target) target = "#" + Loc;
	if((flags & 0x0002) && target.charAt(0) == "/" && target.charAt(1) != "/") target = "file://" + target;
	var out = ({Target:target}/*:any*/);
	if(guid) out.guid = guid;
	if(fileTime) out.time = fileTime;
	if(displayName) out.Tooltip = displayName;
	return out;
}

/* 2.5.178 LongRGBA */
function parse_LongRGBA(blob/*::, length*/) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }

/* 2.5.177 LongRGB */
function parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob); x[3] = 0; return x; }


/* [MS-XLS] 2.5.19 */
function parse_XLSCell(blob/*::, length*/)/*:Cell*/ {
	var rw = blob.read_shift(2); // 0-indexed
	var col = blob.read_shift(2);
	var ixfe = blob.read_shift(2);
	return ({r:rw, c:col, ixfe:ixfe}/*:any*/);
}

/* [MS-XLS] 2.5.134 */
function parse_frtHeader(blob) {
	var rt = blob.read_shift(2);
	var flags = blob.read_shift(2); // TODO: parse these flags
	blob.l += 8;
	return {type: rt, flags: flags};
}



function parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? "" : parse_XLUnicodeString2(blob, length, opts); }

/* [MS-XLS] 2.5.344 */
function parse_XTI(blob, length, opts) {
	var w = opts.biff > 8 ? 4 : 2;
	var iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');
	return [iSupBook, itabFirst, itabLast];
}

/* [MS-XLS] 2.5.218 */
function parse_RkRec(blob) {
	var ixfe = blob.read_shift(2);
	var RK = parse_RkNumber(blob);
	return [ixfe, RK];
}

/* [MS-XLS] 2.5.1 */
function parse_AddinUdf(blob, length, opts) {
	blob.l += 4; length -= 4;
	var l = blob.l + length;
	var udfName = parse_ShortXLUnicodeString(blob, length, opts);
	var cb = blob.read_shift(2);
	l -= blob.l;
	if(cb !== l) throw new Error("Malformed AddinUdf: padding = " + l + " != " + cb);
	blob.l += cb;
	return udfName;
}

/* [MS-XLS] 2.5.209 TODO: Check sizes */
function parse_Ref8U(blob/*::, length*/) {
	var rwFirst = blob.read_shift(2);
	var rwLast = blob.read_shift(2);
	var colFirst = blob.read_shift(2);
	var colLast = blob.read_shift(2);
	return {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};
}

/* [MS-XLS] 2.5.211 */
function parse_RefU(blob/*::, length*/) {
	var rwFirst = blob.read_shift(2);
	var rwLast = blob.read_shift(2);
	var colFirst = blob.read_shift(1);
	var colLast = blob.read_shift(1);
	return {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};
}

/* [MS-XLS] 2.5.207 */
var parse_Ref = parse_RefU;

/* [MS-XLS] 2.5.143 */
function parse_FtCmo(blob/*::, length*/) {
	blob.l += 4;
	var ot = blob.read_shift(2);
	var id = blob.read_shift(2);
	var flags = blob.read_shift(2);
	blob.l+=12;
	return [id, ot, flags];
}

/* [MS-XLS] 2.5.149 */
function parse_FtNts(blob) {
	var out = {};
	blob.l += 4;
	blob.l += 16; // GUID TODO
	out.fSharedNote = blob.read_shift(2);
	blob.l += 4;
	return out;
}

/* [MS-XLS] 2.5.142 */
function parse_FtCf(blob) {
	var out = {};
	blob.l += 4;
	blob.cf = blob.read_shift(2);
	return out;
}

/* [MS-XLS] 2.5.140 - 2.5.154 and friends */
function parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }
var FtTab = {
	/*::[*/0x00/*::]*/: parse_FtSkip,      /* FtEnd */
	/*::[*/0x04/*::]*/: parse_FtSkip,      /* FtMacro */
	/*::[*/0x05/*::]*/: parse_FtSkip,      /* FtButton */
	/*::[*/0x06/*::]*/: parse_FtSkip,      /* FtGmo */
	/*::[*/0x07/*::]*/: parse_FtCf,        /* FtCf */
	/*::[*/0x08/*::]*/: parse_FtSkip,      /* FtPioGrbit */
	/*::[*/0x09/*::]*/: parse_FtSkip,      /* FtPictFmla */
	/*::[*/0x0A/*::]*/: parse_FtSkip,      /* FtCbls */
	/*::[*/0x0B/*::]*/: parse_FtSkip,      /* FtRbo */
	/*::[*/0x0C/*::]*/: parse_FtSkip,      /* FtSbs */
	/*::[*/0x0D/*::]*/: parse_FtNts,       /* FtNts */
	/*::[*/0x0E/*::]*/: parse_FtSkip,      /* FtSbsFmla */
	/*::[*/0x0F/*::]*/: parse_FtSkip,      /* FtGboData */
	/*::[*/0x10/*::]*/: parse_FtSkip,      /* FtEdoData */
	/*::[*/0x11/*::]*/: parse_FtSkip,      /* FtRboData */
	/*::[*/0x12/*::]*/: parse_FtSkip,      /* FtCblsData */
	/*::[*/0x13/*::]*/: parse_FtSkip,      /* FtLbsData */
	/*::[*/0x14/*::]*/: parse_FtSkip,      /* FtCblsFmla */
	/*::[*/0x15/*::]*/: parse_FtCmo
};
function parse_FtArray(blob, length/*::, ot*/) {
	var tgt = blob.l + length;
	var fts = [];
	while(blob.l < tgt) {
		var ft = blob.read_shift(2);
		blob.l-=2;
		try {
			fts.push(FtTab[ft](blob, tgt - blob.l));
		} catch(e) { blob.l = tgt; return fts; }
	}
	if(blob.l != tgt) blob.l = tgt; //throw new Error("bad Object Ft-sequence");
	return fts;
}

/* --- 2.4 Records --- */

/* [MS-XLS] 2.4.21 */
function parse_BOF(blob, length) {
	var o = {BIFFVer:0, dt:0};
	o.BIFFVer = blob.read_shift(2); length -= 2;
	if(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }
	switch(o.BIFFVer) {
		case 0x0600: /* BIFF8 */
		case 0x0500: /* BIFF5 */
		case 0x0400: /* BIFF4 */
		case 0x0300: /* BIFF3 */
		case 0x0200: /* BIFF2 */
		case 0x0002: case 0x0007: /* BIFF2 */
			break;
		default: if(length > 6) throw new Error("Unexpected BIFF Ver " + o.BIFFVer);
	}

	blob.read_shift(length);
	return o;
}


/* [MS-XLS] 2.4.146 */
function parse_InterfaceHdr(blob, length) {
	if(length === 0) return 0x04b0;
	if((blob.read_shift(2))!==0x04b0);
	return 0x04b0;
}


/* [MS-XLS] 2.4.349 */
function parse_WriteAccess(blob, length, opts) {
	if(opts.enc) { blob.l += length; return ""; }
	var l = blob.l;
	// TODO: make sure XLUnicodeString doesnt overrun
	var UserName = parse_XLUnicodeString2(blob, 0, opts);
	blob.read_shift(length + l - blob.l);
	return UserName;
}

/* [MS-XLS] 2.4.351 */
function parse_WsBool(blob, length, opts) {
	var flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);
	return { fDialog: flags & 0x10, fBelow: flags & 0x40, fRight: flags & 0x80 };
}

/* [MS-XLS] 2.4.28 */
function parse_BoundSheet8(blob, length, opts) {
	var pos = blob.read_shift(4);
	var hidden = blob.read_shift(1) & 0x03;
	var dt = blob.read_shift(1);
	switch(dt) {
		case 0: dt = 'Worksheet'; break;
		case 1: dt = 'Macrosheet'; break;
		case 2: dt = 'Chartsheet'; break;
		case 6: dt = 'VBAModule'; break;
	}
	var name = parse_ShortXLUnicodeString(blob, 0, opts);
	if(name.length === 0) name = "Sheet1";
	return { pos:pos, hs:hidden, dt:dt, name:name };
}

/* [MS-XLS] 2.4.265 TODO */
function parse_SST(blob, length)/*:SST*/ {
	var end = blob.l + length;
	var cnt = blob.read_shift(4);
	var ucnt = blob.read_shift(4);
	var strs/*:SST*/ = ([]/*:any*/);
	for(var i = 0; i != ucnt && blob.l < end; ++i) {
		strs.push(parse_XLUnicodeRichExtendedString(blob));
	}
	strs.Count = cnt; strs.Unique = ucnt;
	return strs;
}

/* [MS-XLS] 2.4.107 */
function parse_ExtSST(blob, length) {
	var extsst = {};
	extsst.dsst = blob.read_shift(2);
	blob.l += length-2;
	return extsst;
}


/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */
function parse_Row(blob) {
	var z = ({}/*:any*/);
	z.r = blob.read_shift(2);
	z.c = blob.read_shift(2);
	z.cnt = blob.read_shift(2) - z.c;
	var miyRw = blob.read_shift(2);
	blob.l += 4; // reserved(2), unused(2)
	var flags = blob.read_shift(1); // various flags
	blob.l += 3; // reserved(8), ixfe(12), flags(4)
	if(flags & 0x07) z.level = flags & 0x07;
	// collapsed: flags & 0x10
	if(flags & 0x20) z.hidden = true;
	if(flags & 0x40) z.hpt = miyRw / 20;
	return z;
}


/* [MS-XLS] 2.4.125 */
function parse_ForceFullCalculation(blob) {
	var header = parse_frtHeader(blob);
	if(header.type != 0x08A3) throw new Error("Invalid Future Record " + header.type);
	var fullcalc = blob.read_shift(4);
	return fullcalc !== 0x0;
}





/* [MS-XLS] 2.4.215 rt */
function parse_RecalcId(blob) {
	blob.read_shift(2);
	return blob.read_shift(4);
}

/* [MS-XLS] 2.4.87 */
function parse_DefaultRowHeight(blob, length, opts) {
	var f = 0;
	if(!(opts && opts.biff == 2)) {
		f = blob.read_shift(2);
	}
	var miyRw = blob.read_shift(2);
	if((opts && opts.biff == 2)) {
		f = 1 - (miyRw >> 15); miyRw &= 0x7fff;
	}
	var fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};
	return [fl, miyRw];
}

/* [MS-XLS] 2.4.345 TODO */
function parse_Window1(blob) {
	var xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);
	var flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);
	var ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);
	return { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,
		FirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };
}
/* [MS-XLS] 2.4.346 TODO */
function parse_Window2(blob, length, opts) {
	if(opts && opts.biff >= 2 && opts.biff < 5) return {};
	var f = blob.read_shift(2);
	return { RTL: f & 0x40 };
}

/* [MS-XLS] 2.4.189 TODO */
function parse_Pane(/*blob, length, opts*/) {
}

/* [MS-XLS] 2.4.122 TODO */
function parse_Font(blob, length, opts) {
	var o/*:any*/ = {
		dyHeight: blob.read_shift(2),
		fl: blob.read_shift(2)
	};
	switch((opts && opts.biff) || 8) {
		case 2: break;
		case 3: case 4: blob.l += 2; break;
		default: blob.l += 10; break;
	}
	o.name = parse_ShortXLUnicodeString(blob, 0, opts);
	return o;
}

/* [MS-XLS] 2.4.149 */
function parse_LabelSst(blob) {
	var cell = parse_XLSCell(blob);
	cell.isst = blob.read_shift(4);
	return cell;
}

/* [MS-XLS] 2.4.148 */
function parse_Label(blob, length, opts) {
	if(opts.biffguess && opts.biff == 2) opts.biff = 5;
	var target = blob.l + length;
	var cell = parse_XLSCell(blob);
	if(opts.biff == 2) blob.l++;
	var str = parse_XLUnicodeString(blob, target - blob.l, opts);
	cell.val = str;
	return cell;
}


/* [MS-XLS] 2.4.126 Number Formats */
function parse_Format(blob, length, opts) {
	var numFmtId = blob.read_shift(2);
	var fmtstr = parse_XLUnicodeString2(blob, 0, opts);
	return [numFmtId, fmtstr];
}
var parse_BIFF2Format = parse_XLUnicodeString2;

/* [MS-XLS] 2.4.90 */
function parse_Dimensions(blob, length, opts) {
	var end = blob.l + length;
	var w = opts.biff == 8 || !opts.biff ? 4 : 2;
	var r = blob.read_shift(w), R = blob.read_shift(w);
	var c = blob.read_shift(2), C = blob.read_shift(2);
	blob.l = end;
	return {s: {r:r, c:c}, e: {r:R, c:C}};
}

/* [MS-XLS] 2.4.220 */
function parse_RK(blob) {
	var rw = blob.read_shift(2), col = blob.read_shift(2);
	var rkrec = parse_RkRec(blob);
	return {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};
}

/* [MS-XLS] 2.4.175 */
function parse_MulRk(blob, length) {
	var target = blob.l + length - 2;
	var rw = blob.read_shift(2), col = blob.read_shift(2);
	var rkrecs = [];
	while(blob.l < target) rkrecs.push(parse_RkRec(blob));
	if(blob.l !== target) throw new Error("MulRK read error");
	var lastcol = blob.read_shift(2);
	if(rkrecs.length != lastcol - col + 1) throw new Error("MulRK length mismatch");
	return {r:rw, c:col, C:lastcol, rkrec:rkrecs};
}
/* [MS-XLS] 2.4.174 */
function parse_MulBlank(blob, length) {
	var target = blob.l + length - 2;
	var rw = blob.read_shift(2), col = blob.read_shift(2);
	var ixfes = [];
	while(blob.l < target) ixfes.push(blob.read_shift(2));
	if(blob.l !== target) throw new Error("MulBlank read error");
	var lastcol = blob.read_shift(2);
	if(ixfes.length != lastcol - col + 1) throw new Error("MulBlank length mismatch");
	return {r:rw, c:col, C:lastcol, ixfe:ixfes};
}

/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */
function parse_CellStyleXF(blob, length, style, opts) {
	var o = {};
	var a = blob.read_shift(4), b = blob.read_shift(4);
	var c = blob.read_shift(4), d = blob.read_shift(2);
	o.patternType = XLSFillPattern[c >> 26];

	if(!opts.cellStyles) return o;
	o.alc = a & 0x07;
	o.fWrap = (a >> 3) & 0x01;
	o.alcV = (a >> 4) & 0x07;
	o.fJustLast = (a >> 7) & 0x01;
	o.trot = (a >> 8) & 0xFF;
	o.cIndent = (a >> 16) & 0x0F;
	o.fShrinkToFit = (a >> 20) & 0x01;
	o.iReadOrder = (a >> 22) & 0x02;
	o.fAtrNum = (a >> 26) & 0x01;
	o.fAtrFnt = (a >> 27) & 0x01;
	o.fAtrAlc = (a >> 28) & 0x01;
	o.fAtrBdr = (a >> 29) & 0x01;
	o.fAtrPat = (a >> 30) & 0x01;
	o.fAtrProt = (a >> 31) & 0x01;

	o.dgLeft = b & 0x0F;
	o.dgRight = (b >> 4) & 0x0F;
	o.dgTop = (b >> 8) & 0x0F;
	o.dgBottom = (b >> 12) & 0x0F;
	o.icvLeft = (b >> 16) & 0x7F;
	o.icvRight = (b >> 23) & 0x7F;
	o.grbitDiag = (b >> 30) & 0x03;

	o.icvTop = c & 0x7F;
	o.icvBottom = (c >> 7) & 0x7F;
	o.icvDiag = (c >> 14) & 0x7F;
	o.dgDiag = (c >> 21) & 0x0F;

	o.icvFore = d & 0x7F;
	o.icvBack = (d >> 7) & 0x7F;
	o.fsxButton = (d >> 14) & 0x01;
	return o;
}
//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}
//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}

/* [MS-XLS] 2.4.353 TODO: actually do this right */
function parse_XF(blob, length, opts) {
	var o = {};
	o.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);
	o.fStyle = (o.flags >> 2) & 0x01;
	length -= 6;
	o.data = parse_CellStyleXF(blob, length, o.fStyle, opts);
	return o;
}

/* [MS-XLS] 2.4.134 */
function parse_Guts(blob) {
	blob.l += 4;
	var out = [blob.read_shift(2), blob.read_shift(2)];
	if(out[0] !== 0) out[0]--;
	if(out[1] !== 0) out[1]--;
	if(out[0] > 7 || out[1] > 7) throw new Error("Bad Gutters: " + out.join("|"));
	return out;
}

/* [MS-XLS] 2.4.24 */
function parse_BoolErr(blob, length, opts) {
	var cell = parse_XLSCell(blob);
	if(opts.biff == 2 || length == 9) ++blob.l;
	var val = parse_Bes(blob);
	cell.val = val;
	cell.t = (val === true || val === false) ? 'b' : 'e';
	return cell;
}

/* [MS-XLS] 2.4.180 Number */
function parse_Number(blob, length, opts) {
	if(opts.biffguess && opts.biff == 2) opts.biff = 5;
	var cell = parse_XLSCell(blob);
	var xnum = parse_Xnum(blob);
	cell.val = xnum;
	return cell;
}

var parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136

/* [MS-XLS] 2.4.271 */
function parse_SupBook(blob, length, opts) {
	var end = blob.l + length;
	var ctab = blob.read_shift(2);
	var cch = blob.read_shift(2);
	opts.sbcch = cch;
	if(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];
	if(cch < 0x01 || cch >0xff) throw new Error("Unexpected SupBook type: "+cch);
	var virtPath = parse_XLUnicodeStringNoCch(blob, cch);
	/* TODO: 2.5.277 Virtual Path */
	var rgst = [];
	while(end > blob.l) rgst.push(parse_XLUnicodeString(blob));
	return [cch, ctab, virtPath, rgst];
}

/* [MS-XLS] 2.4.105 TODO */
function parse_ExternName(blob, length, opts) {
	var flags = blob.read_shift(2);
	var body;
	var o = ({
		fBuiltIn: flags & 0x01,
		fWantAdvise: (flags >>> 1) & 0x01,
		fWantPict: (flags >>> 2) & 0x01,
		fOle: (flags >>> 3) & 0x01,
		fOleLink: (flags >>> 4) & 0x01,
		cf: (flags >>> 5) & 0x3FF,
		fIcon: flags >>> 15 & 0x01
	}/*:any*/);
	if(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);
	//else throw new Error("unsupported SupBook cch: " + opts.sbcch);
	o.body = body || blob.read_shift(length-2);
	if(typeof body === "string") o.Name = body;
	return o;
}

/* [MS-XLS] 2.4.150 TODO */
var XLSLblBuiltIn = [
	"_xlnm.Consolidate_Area",
	"_xlnm.Auto_Open",
	"_xlnm.Auto_Close",
	"_xlnm.Extract",
	"_xlnm.Database",
	"_xlnm.Criteria",
	"_xlnm.Print_Area",
	"_xlnm.Print_Titles",
	"_xlnm.Recorder",
	"_xlnm.Data_Form",
	"_xlnm.Auto_Activate",
	"_xlnm.Auto_Deactivate",
	"_xlnm.Sheet_Title",
	"_xlnm._FilterDatabase"
];
function parse_Lbl(blob, length, opts) {
	var target = blob.l + length;
	var flags = blob.read_shift(2);
	var chKey = blob.read_shift(1);
	var cch = blob.read_shift(1);
	var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);
	var itab = 0;
	if(!opts || opts.biff >= 5) {
		if(opts.biff != 5) blob.l += 2;
		itab = blob.read_shift(2);
		if(opts.biff == 5) blob.l += 2;
		blob.l += 4;
	}
	var name = parse_XLUnicodeStringNoCch(blob, cch, opts);
	if(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];
	var npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;
	/*jshint -W018 */
	var rgce = (target == blob.l || cce === 0 || !(npflen > 0)) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);
	/*jshint +W018 */
	return {
		chKey: chKey,
		Name: name,
		itab: itab,
		rgce: rgce
	};
}

/* [MS-XLS] 2.4.106 TODO: verify filename encoding */
function parse_ExternSheet(blob, length, opts) {
	if(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);
	var o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);
	while(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));
		// [iSupBook, itabFirst, itabLast];
	if(blob.l != target) throw new Error("Bad ExternSheet: " + blob.l + " != " + target);
	return o;
}
function parse_BIFF5ExternSheet(blob, length, opts) {
	if(blob[blob.l + 1] == 0x03) blob[blob.l]++;
	var o = parse_ShortXLUnicodeString(blob, length, opts);
	return o.charCodeAt(0) == 0x03 ? o.slice(1) : o;
}

/* [MS-XLS] 2.4.176 TODO: check older biff */
function parse_NameCmt(blob, length, opts) {
	if(opts.biff < 8) { blob.l += length; return; }
	var cchName = blob.read_shift(2);
	var cchComment = blob.read_shift(2);
	var name = parse_XLUnicodeStringNoCch(blob, cchName, opts);
	var comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);
	return [name, comment];
}

/* [MS-XLS] 2.4.260 */
function parse_ShrFmla(blob, length, opts) {
	var ref = parse_RefU(blob);
	blob.l++;
	var cUse = blob.read_shift(1);
	length -= 8;
	return [parse_SharedParsedFormula(blob, length, opts), cUse, ref];
}

/* [MS-XLS] 2.4.4 TODO */
function parse_Array(blob, length, opts) {
	var ref = parse_Ref(blob);
	/* TODO: fAlwaysCalc */
	switch(opts.biff) {
		case 2: blob.l ++; length -= 7; break;
		case 3: case 4: blob.l += 2; length -= 8; break;
		default: blob.l += 6; length -= 12;
	}
	return [ref, parse_ArrayParsedFormula(blob, length, opts)];
}

/* [MS-XLS] 2.4.173 */
function parse_MTRSettings(blob) {
	var fMTREnabled = blob.read_shift(4) !== 0x00;
	var fUserSetThreadCount = blob.read_shift(4) !== 0x00;
	var cUserThreadCount = blob.read_shift(4);
	return [fMTREnabled, fUserSetThreadCount, cUserThreadCount];
}

/* [MS-XLS] 2.5.186 TODO: BIFF5 */
function parse_NoteSh(blob, length, opts) {
	if(opts.biff < 8) return;
	var row = blob.read_shift(2), col = blob.read_shift(2);
	var flags = blob.read_shift(2), idObj = blob.read_shift(2);
	var stAuthor = parse_XLUnicodeString2(blob, 0, opts);
	if(opts.biff < 8) blob.read_shift(1);
	return [{r:row,c:col}, stAuthor, idObj, flags];
}

/* [MS-XLS] 2.4.179 */
function parse_Note(blob, length, opts) {
	/* TODO: Support revisions */
	return parse_NoteSh(blob, length, opts);
}

/* [MS-XLS] 2.4.168 */
function parse_MergeCells(blob, length)/*:Array<Range>*/ {
	var merges/*:Array<Range>*/ = [];
	var cmcs = blob.read_shift(2);
	while (cmcs--) merges.push(parse_Ref8U(blob));
	return merges;
}

/* [MS-XLS] 2.4.181 TODO: parse all the things! */
function parse_Obj(blob, length, opts) {
	if(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);
	var cmo = parse_FtCmo(blob); // id, ot, flags
	var fts = parse_FtArray(blob, length-22, cmo[1]);
	return { cmo: cmo, ft:fts };
}
/* from older spec */
var parse_BIFF5OT = {
0x08: function(blob, length) {
	var tgt = blob.l + length;
	blob.l += 10; // todo
	var cf = blob.read_shift(2);
	blob.l += 4;
	blob.l += 2; //var cbPictFmla = blob.read_shift(2);
	blob.l += 2;
	blob.l += 2; //var grbit = blob.read_shift(2);
	blob.l += 4;
	var cchName = blob.read_shift(1);
	blob.l += cchName; // TODO: stName
	blob.l = tgt; // TODO: fmla
	return { fmt:cf };
}
};

function parse_BIFF5Obj(blob, length, opts) {
	blob.l += 4; //var cnt = blob.read_shift(4);
	var ot = blob.read_shift(2);
	var id = blob.read_shift(2);
	var grbit = blob.read_shift(2);
	blob.l += 2; //var colL = blob.read_shift(2);
	blob.l += 2; //var dxL = blob.read_shift(2);
	blob.l += 2; //var rwT = blob.read_shift(2);
	blob.l += 2; //var dyT = blob.read_shift(2);
	blob.l += 2; //var colR = blob.read_shift(2);
	blob.l += 2; //var dxR = blob.read_shift(2);
	blob.l += 2; //var rwB = blob.read_shift(2);
	blob.l += 2; //var dyB = blob.read_shift(2);
	blob.l += 2; //var cbMacro = blob.read_shift(2);
	blob.l += 6;
	length -= 36;
	var fts = [];
	fts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));
	return { cmo: [id, ot, grbit], ft:fts };
}

/* [MS-XLS] 2.4.329 TODO: parse properly */
function parse_TxO(blob, length, opts) {
	var s = blob.l;
	var texts = "";
try {
	blob.l += 4;
	var ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];
	var controlInfo; // eslint-disable-line no-unused-vars
	if([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;
	else controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars
	var cchText = blob.read_shift(2);
	/*var cbRuns = */blob.read_shift(2);
	/*var ifntEmpty = */parseuint16(blob, 2);
	var len = blob.read_shift(2);
	blob.l += len;
	//var fmla = parse_ObjFmla(blob, s + length - blob.l);

	for(var i = 1; i < blob.lens.length-1; ++i) {
		if(blob.l-s != blob.lens[i]) throw new Error("TxO: bad continue record");
		var hdr = blob[blob.l];
		var t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);
		texts += t;
		if(texts.length >= (hdr ? cchText : 2*cchText)) break;
	}
	if(texts.length !== cchText && texts.length !== cchText*2) {
		throw new Error("cchText: " + cchText + " != " + texts.length);
	}

	blob.l = s + length;
	/* [MS-XLS] 2.5.272 TxORuns */
//	var rgTxoRuns = [];
//	for(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;
//	var cchText2 = blob.read_shift(2);
//	if(cchText2 !== cchText) throw new Error("TxOLastRun mismatch: " + cchText2 + " " + cchText);
//	blob.l += 6;
//	if(s + length != blob.l) throw new Error("TxO " + (s + length) + ", at " + blob.l);
	return { t: texts };
} catch(e) { blob.l = s + length; return { t: texts }; }
}

/* [MS-XLS] 2.4.140 */
function parse_HLink(blob, length) {
	var ref = parse_Ref8U(blob);
	blob.l += 16; /* CLSID */
	var hlink = parse_Hyperlink(blob, length-24);
	return [ref, hlink];
}


/* [MS-XLS] 2.4.141 */
function parse_HLinkTooltip(blob, length) {
	blob.read_shift(2);
	var ref = parse_Ref8U(blob);
	var wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');
	wzTooltip = wzTooltip.replace(chr0,"");
	return [ref, wzTooltip];
}

/* [MS-XLS] 2.4.63 */
function parse_Country(blob)/*:[string|number, string|number]*/ {
	var o = [0,0], d;
	d = blob.read_shift(2); o[0] = CountryEnum[d] || d;
	d = blob.read_shift(2); o[1] = CountryEnum[d] || d;
	return o;
}

/* [MS-XLS] 2.4.50 ClrtClient */
function parse_ClrtClient(blob) {
	var ccv = blob.read_shift(2);
	var o = [];
	while(ccv-->0) o.push(parse_LongRGB(blob));
	return o;
}

/* [MS-XLS] 2.4.188 */
function parse_Palette(blob) {
	var ccv = blob.read_shift(2);
	var o = [];
	while(ccv-->0) o.push(parse_LongRGB(blob));
	return o;
}

/* [MS-XLS] 2.4.354 */
function parse_XFCRC(blob) {
	blob.l += 2;
	var o = {cxfs:0, crc:0};
	o.cxfs = blob.read_shift(2);
	o.crc = blob.read_shift(4);
	return o;
}

/* [MS-XLS] 2.4.53 TODO: parse flags */
/* [MS-XLSB] 2.4.323 TODO: parse flags */
function parse_ColInfo(blob, length, opts) {
	if(!opts.cellStyles) return parsenoop(blob, length);
	var w = opts && opts.biff >= 12 ? 4 : 2;
	var colFirst = blob.read_shift(w);
	var colLast = blob.read_shift(w);
	var coldx = blob.read_shift(w);
	var ixfe = blob.read_shift(w);
	var flags = blob.read_shift(2);
	if(w == 2) blob.l += 2;
	var o = ({s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags}/*:any*/);
	if(opts.biff >= 5 || !opts.biff) o.level = (flags >> 8) & 0x7;
	return o;
}

/* [MS-XLS] 2.4.257 */
function parse_Setup(blob, length) {
	var o = {};
	if(length < 32) return o;
	blob.l += 16;
	o.header = parse_Xnum(blob);
	o.footer = parse_Xnum(blob);
	blob.l += 2;
	return o;
}

/* [MS-XLS] 2.4.261 */
function parse_ShtProps(blob, length, opts) {
	var def = {area:false};
	if(opts.biff != 5) { blob.l += length; return def; }
	var d = blob.read_shift(1); blob.l += 3;
	if((d & 0x10)) def.area = true;
	return def;
}

var parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */
var parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */
var parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */

/* --- Specific to versions before BIFF8 --- */
function parse_ImData(blob) {
	var cf = blob.read_shift(2);
	var env = blob.read_shift(2);
	var lcb = blob.read_shift(4);
	var o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};
	blob.l += lcb;
	return o;
}

/* BIFF2_??? where ??? is the name from [XLS] */
function parse_BIFF2STR(blob, length, opts) {
	if(opts.biffguess && opts.biff == 5) opts.biff = 2;
	var cell = parse_XLSCell(blob);
	++blob.l;
	var str = parse_XLUnicodeString2(blob, length-7, opts);
	cell.t = 'str';
	cell.val = str;
	return cell;
}

function parse_BIFF2NUM(blob/*::, length*/) {
	var cell = parse_XLSCell(blob);
	++blob.l;
	var num = parse_Xnum(blob);
	cell.t = 'n';
	cell.val = num;
	return cell;
}

function parse_BIFF2INT(blob) {
	var cell = parse_XLSCell(blob);
	++blob.l;
	var num = blob.read_shift(2);
	cell.t = 'n';
	cell.val = num;
	return cell;
}

function parse_BIFF2STRING(blob) {
	var cch = blob.read_shift(1);
	if(cch === 0) { blob.l++; return ""; }
	return blob.read_shift(cch, 'sbcs-cont');
}

/* TODO: convert to BIFF8 font struct */
function parse_BIFF2FONTXTRA(blob, length) {
	blob.l += 6; // unknown
	blob.l += 2; // font weight "bls"
	blob.l += 1; // charset
	blob.l += 3; // unknown
	blob.l += 1; // font family
	blob.l += length - 13;
}

/* TODO: parse rich text runs */
function parse_RString(blob, length, opts) {
	var end = blob.l + length;
	var cell = parse_XLSCell(blob);
	var cch = blob.read_shift(2);
	var str = parse_XLUnicodeStringNoCch(blob, cch, opts);
	blob.l = end;
	cell.t = 'str';
	cell.val = str;
	return cell;
}
/* from js-harb (C) 2014-present  SheetJS */
var DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];
var DBF = /*#__PURE__*/(function() {
var dbf_codepage_map = {
	/* Code Pages Supported by Visual FoxPro */
	/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,
	/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,
	/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,
	/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,
	/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,
	/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,
	/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,
	/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,
	/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,
	/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,
	/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,
	/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,
	/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,

	/* shapefile DBF extension */
	/*::[*/0x00/*::]*/: 20127,           /*::[*/0x08/*::]*/:   865,
	/*::[*/0x09/*::]*/:   437,           /*::[*/0x0A/*::]*/:   850,
	/*::[*/0x0B/*::]*/:   437,           /*::[*/0x0D/*::]*/:   437,
	/*::[*/0x0E/*::]*/:   850,           /*::[*/0x0F/*::]*/:   437,
	/*::[*/0x10/*::]*/:   850,           /*::[*/0x11/*::]*/:   437,
	/*::[*/0x12/*::]*/:   850,           /*::[*/0x13/*::]*/:   932,
	/*::[*/0x14/*::]*/:   850,           /*::[*/0x15/*::]*/:   437,
	/*::[*/0x16/*::]*/:   850,           /*::[*/0x17/*::]*/:   865,
	/*::[*/0x18/*::]*/:   437,           /*::[*/0x19/*::]*/:   437,
	/*::[*/0x1A/*::]*/:   850,           /*::[*/0x1B/*::]*/:   437,
	/*::[*/0x1C/*::]*/:   863,           /*::[*/0x1D/*::]*/:   850,
	/*::[*/0x1F/*::]*/:   852,           /*::[*/0x22/*::]*/:   852,
	/*::[*/0x23/*::]*/:   852,           /*::[*/0x24/*::]*/:   860,
	/*::[*/0x25/*::]*/:   850,           /*::[*/0x26/*::]*/:   866,
	/*::[*/0x37/*::]*/:   850,           /*::[*/0x40/*::]*/:   852,
	/*::[*/0x4D/*::]*/:   936,           /*::[*/0x4E/*::]*/:   949,
	/*::[*/0x4F/*::]*/:   950,           /*::[*/0x50/*::]*/:   874,
	/*::[*/0x57/*::]*/:  1252,           /*::[*/0x58/*::]*/:  1252,
	/*::[*/0x59/*::]*/:  1252,           /*::[*/0x6C/*::]*/:   863,
	/*::[*/0x86/*::]*/:   737,           /*::[*/0x87/*::]*/:   852,
	/*::[*/0x88/*::]*/:   857,           /*::[*/0xCC/*::]*/:  1257,

	/*::[*/0xFF/*::]*/: 16969
};
var dbf_reverse_map = evert({
	/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,
	/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,
	/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,
	/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,
	/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,
	/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,
	/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,
	/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,
	/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,
	/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,
	/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,
	/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,
	/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,
	/*::[*/0x00/*::]*/: 20127
});
/* TODO: find an actual specification */
function dbf_to_aoa(buf, opts)/*:AOA*/ {
	var out/*:AOA*/ = [];
	var d/*:Block*/ = (new_raw_buf(1)/*:any*/);
	switch(opts.type) {
		case 'base64': d = s2a(Base64_decode(buf)); break;
		case 'binary': d = s2a(buf); break;
		case 'buffer':
		case 'array': d = buf; break;
	}
	prep_blob(d, 0);

	/* header */
	var ft = d.read_shift(1);
	var memo = !!(ft & 0x88);
	var vfp = false, l7 = false;
	switch(ft) {
		case 0x02: break; // dBASE II
		case 0x03: break; // dBASE III
		case 0x30: vfp = true; memo = true; break; // VFP
		case 0x31: vfp = true; memo = true; break; // VFP with autoincrement
		// 0x43 dBASE IV SQL table files
		// 0x63 dBASE IV SQL system files
		case 0x83: break; // dBASE III with memo
		case 0x8B: break; // dBASE IV with memo
		case 0x8C: l7 = true; break; // dBASE Level 7 with memo
		// case 0xCB dBASE IV SQL table files with memo
		case 0xF5: break; // FoxPro 2.x with memo
		// case 0xFB FoxBASE
		default: throw new Error("DBF Unsupported Version: " + ft.toString(16));
	}

	var nrow = 0, fpos = 0x0209;
	if(ft == 0x02) nrow = d.read_shift(2);
	d.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD
	if(ft != 0x02) nrow = d.read_shift(4);
	if(nrow > 1048576) nrow = 1e6;

	if(ft != 0x02) fpos = d.read_shift(2); // header length
	var rlen = d.read_shift(2); // record length

	var /*flags = 0,*/ current_cp = opts.codepage || 1252;
	if(ft != 0x02) { // 20 reserved bytes
		d.l+=16;
		/*flags = */d.read_shift(1);
		//if(memo && ((flags & 0x02) === 0)) throw new Error("DBF Flags " + flags.toString(16) + " ft " + ft.toString(16));

		/* codepage present in FoxPro and dBASE Level 7 */
		if(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];
		d.l+=1;

		d.l+=2;
	}
	if(l7) d.l += 36; // Level 7: 32 byte "Language driver name", 4 byte reserved

/*:: type DBFField = { name:string; len:number; type:string; } */
	var fields/*:Array<DBFField>*/ = [], field/*:DBFField*/ = ({}/*:any*/);
	var hend = Math.min(d.length, (ft == 0x02 ? 0x209 : (fpos - 10 - (vfp ? 264 : 0))));
	var ww = l7 ? 32 : 11;
	while(d.l < hend && d[d.l] != 0x0d) {
		field = ({}/*:any*/);
		field.name = $cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)).replace(/[\u0000\r\n].*$/g,"");
		d.l += ww;
		field.type = String.fromCharCode(d.read_shift(1));
		if(ft != 0x02 && !l7) field.offset = d.read_shift(4);
		field.len = d.read_shift(1);
		if(ft == 0x02) field.offset = d.read_shift(2);
		field.dec = d.read_shift(1);
		if(field.name.length) fields.push(field);
		if(ft != 0x02) d.l += l7 ? 13 : 14;
		switch(field.type) {
			case 'B': // Double (VFP) / Binary (dBASE L7)
				if((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);
				break;
			case 'G': // General (FoxPro and dBASE L7)
			case 'P': // Picture (FoxPro and dBASE L7)
				if(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);
				break;
			case '+': // Autoincrement (dBASE L7 only)
			case '0': // _NullFlags (VFP only)
			case '@': // Timestamp (dBASE L7 only)
			case 'C': // Character (dBASE II)
			case 'D': // Date (dBASE III)
			case 'F': // Float (dBASE IV)
			case 'I': // Long (VFP and dBASE L7)
			case 'L': // Logical (dBASE II)
			case 'M': // Memo (dBASE III)
			case 'N': // Number (dBASE II)
			case 'O': // Double (dBASE L7 only)
			case 'T': // Datetime (VFP only)
			case 'Y': // Currency (VFP only)
				break;
			default: throw new Error('Unknown Field Type: ' + field.type);
		}
	}

	if(d[d.l] !== 0x0D) d.l = fpos-1;
	if(d.read_shift(1) !== 0x0D) throw new Error("DBF Terminator not found " + d.l + " " + d[d.l]);
	d.l = fpos;

	/* data */
	var R = 0, C = 0;
	out[0] = [];
	for(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;
	while(nrow-- > 0) {
		if(d[d.l] === 0x2A) {
			// TODO: record marked as deleted -- create a hidden row?
			d.l+=rlen;
			continue;
		}
		++d.l;
		out[++R] = []; C = 0;
		for(C = 0; C != fields.length; ++C) {
			var dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;
			prep_blob(dd, 0);
			var s = $cptable.utils.decode(current_cp, dd);
			switch(fields[C].type) {
				case 'C':
					// NOTE: it is conventional to write '  /  /  ' for empty dates
					if(s.trim().length) out[R][C] = s.replace(/\s+$/,"");
					break;
				case 'D':
					if(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));
					else out[R][C] = s;
					break;
				case 'F': out[R][C] = parseFloat(s.trim()); break;
				case '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;
				case 'L': switch(s.trim().toUpperCase()) {
					case 'Y': case 'T': out[R][C] = true; break;
					case 'N': case 'F': out[R][C] = false; break;
					case '': case '?': break;
					default: throw new Error("DBF Unrecognized L:|" + s + "|");
					} break;
				case 'M': /* TODO: handle memo files */
					if(!memo) throw new Error("DBF Unexpected MEMO for type " + ft.toString(16));
					out[R][C] = "##MEMO##" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));
					break;
				case 'N':
					s = s.replace(/\u0000/g,"").trim();
					// NOTE: dBASE II interprets "  .  " as 0
					if(s && s != ".") out[R][C] = +s || 0; break;
				case '@':
					// NOTE: dBASE specs appear to be incorrect
					out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);
					break;
				case 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;
				case 'Y': out[R][C] = dd.read_shift(4,'i')/1e4 + (dd.read_shift(4, 'i')/1e4)*Math.pow(2,32); break;
				case 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;
				case 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }
					/* falls through */
				case 'G': case 'P': dd.l += fields[C].len; break;
				case '0':
					if(fields[C].name === '_NullFlags') break;
					/* falls through */
				default: throw new Error("DBF Unsupported data type " + fields[C].type);
			}
		}
	}
	if(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error("DBF EOF Marker missing " + (d.l-1) + " of " + d.length + " " + d[d.l-1].toString(16));
	if(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);
	opts.DBF = fields;
	return out;
}

function dbf_to_sheet(buf, opts)/*:Worksheet*/ {
	var o = opts || {};
	if(!o.dateNF) o.dateNF = "yyyymmdd";
	var ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);
	ws["!cols"] = o.DBF.map(function(field) { return {
		wch: field.len,
		DBF: field
	};});
	delete o.DBF;
	return ws;
}

function dbf_to_workbook(buf, opts)/*:Workbook*/ {
	try { return sheet_to_workbook(dbf_to_sheet(buf, opts), opts); }
	catch(e) { if(opts && opts.WTF) throw e; }
	return ({SheetNames:[],Sheets:{}});
}

var _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };
function sheet_to_dbf(ws/*:Worksheet*/, opts/*:WriteOpts*/) {
	var o = opts || {};
	if(+o.codepage >= 0) set_cp(+o.codepage);
	if(o.type == "string") throw new Error("Cannot write DBF to JS string");
	var ba = buf_array();
	var aoa/*:AOA*/ = sheet_to_json(ws, {header:1, raw:true, cellDates:true});
	var headers = aoa[0], data = aoa.slice(1), cols = ws["!cols"] || [];
	var i = 0, j = 0, hcnt = 0, rlen = 1;
	for(i = 0; i < headers.length; ++i) {
		if(((cols[i]||{}).DBF||{}).name) { headers[i] = cols[i].DBF.name; ++hcnt; continue; }
		if(headers[i] == null) continue;
		++hcnt;
		if(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);
		if(typeof headers[i] !== 'string') throw new Error("DBF Invalid column name " + headers[i] + " |" + (typeof headers[i]) + "|");
		if(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)
			if(headers.indexOf(headers[i] + "_" + j) == -1) { headers[i] += "_" + j; break; }
	}
	var range = safe_decode_range(ws['!ref']);
	var coltypes/*:Array<string>*/ = [];
	var colwidths/*:Array<number>*/ = [];
	var coldecimals/*:Array<number>*/ = [];
	for(i = 0; i <= range.e.c - range.s.c; ++i) {
		var guess = '', _guess = '', maxlen = 0;
		var col/*:Array<any>*/ = [];
		for(j=0; j < data.length; ++j) {
			if(data[j][i] != null) col.push(data[j][i]);
		}
		if(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }
		for(j = 0; j < col.length; ++j) {
			switch(typeof col[j]) {
				/* TODO: check if L2 compat is desired */
				case 'number': _guess = 'B'; break;
				case 'string': _guess = 'C'; break;
				case 'boolean': _guess = 'L'; break;
				case 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;
				default: _guess = 'C';
			}
			maxlen = Math.max(maxlen, String(col[j]).length);
			guess = guess && guess != _guess ? 'C' : _guess;
			//if(guess == 'C') break;
		}
		if(maxlen > 250) maxlen = 250;
		_guess = ((cols[i]||{}).DBF||{}).type;
		/* TODO: more fine grained control over DBF type resolution */
		if(_guess == 'C') {
			if(cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;
		}
		if(guess == 'B' && _guess == 'N') {
			guess = 'N';
			coldecimals[i] = cols[i].DBF.dec;
			maxlen = cols[i].DBF.len;
		}
		colwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : (_RLEN[guess] || 0);
		rlen += colwidths[i];
		coltypes[i] = guess;
	}

	var h = ba.next(32);
	h.write_shift(4, 0x13021130);
	h.write_shift(4, data.length);
	h.write_shift(2, 296 + 32 * hcnt);
	h.write_shift(2, rlen);
	for(i=0; i < 4; ++i) h.write_shift(4, 0);
	h.write_shift(4, 0x00000000 | ((+dbf_reverse_map[/*::String(*/current_ansi/*::)*/] || 0x03)<<8));

	for(i = 0, j = 0; i < headers.length; ++i) {
		if(headers[i] == null) continue;
		var hf = ba.next(32);
		var _f = (headers[i].slice(-10) + "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00").slice(0, 11);
		hf.write_shift(1, _f, "sbcs");
		hf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], "sbcs");
		hf.write_shift(4, j);
		hf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);
		hf.write_shift(1, coldecimals[i] || 0);
		hf.write_shift(1, 0x02);
		hf.write_shift(4, 0);
		hf.write_shift(1, 0);
		hf.write_shift(4, 0);
		hf.write_shift(4, 0);
		j += (colwidths[i] || _RLEN[coltypes[i]] || 0);
	}

	var hb = ba.next(264);
	hb.write_shift(4, 0x0000000D);
	for(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);
	for(i=0; i < data.length; ++i) {
		var rout = ba.next(rlen);
		rout.write_shift(1, 0);
		for(j=0; j<headers.length; ++j) {
			if(headers[j] == null) continue;
			switch(coltypes[j]) {
				case 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;
				case 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;
				case 'N':
					var _n = "0";
					if(typeof data[i][j] == "number") _n = data[i][j].toFixed(coldecimals[j]||0);
					for(hcnt=0; hcnt < colwidths[j]-_n.length; ++hcnt) rout.write_shift(1, 0x20);
					rout.write_shift(1, _n, "sbcs");
					break;
				case 'D':
					if(!data[i][j]) rout.write_shift(8, "00000000", "sbcs");
					else {
						rout.write_shift(4, ("0000"+data[i][j].getFullYear()).slice(-4), "sbcs");
						rout.write_shift(2, ("00"+(data[i][j].getMonth()+1)).slice(-2), "sbcs");
						rout.write_shift(2, ("00"+data[i][j].getDate()).slice(-2), "sbcs");
					} break;
				case 'C':
					var _s = String(data[i][j] != null ? data[i][j] : "").slice(0, colwidths[j]);
					rout.write_shift(1, _s, "sbcs");
					for(hcnt=0; hcnt < colwidths[j]-_s.length; ++hcnt) rout.write_shift(1, 0x20); break;
			}
		}
		// data
	}
	ba.next(1).write_shift(1, 0x1A);
	return ba.end();
}
	return {
		to_workbook: dbf_to_workbook,
		to_sheet: dbf_to_sheet,
		from_sheet: sheet_to_dbf
	};
})();

var SYLK = /*#__PURE__*/(function() {
	/* TODO: stress test sequences */
	var sylk_escapes = ({
		AA:'À', BA:'Á', CA:'Â', DA:195, HA:'Ä', JA:197,
		AE:'È', BE:'É', CE:'Ê',         HE:'Ë',
		AI:'Ì', BI:'Í', CI:'Î',         HI:'Ï',
		AO:'Ò', BO:'Ó', CO:'Ô', DO:213, HO:'Ö',
		AU:'Ù', BU:'Ú', CU:'Û',         HU:'Ü',
		Aa:'à', Ba:'á', Ca:'â', Da:227, Ha:'ä', Ja:229,
		Ae:'è', Be:'é', Ce:'ê',         He:'ë',
		Ai:'ì', Bi:'í', Ci:'î',         Hi:'ï',
		Ao:'ò', Bo:'ó', Co:'ô', Do:245, Ho:'ö',
		Au:'ù', Bu:'ú', Cu:'û',         Hu:'ü',
		KC:'Ç', Kc:'ç', q:'æ',  z:'œ',  a:'Æ',  j:'Œ',
		DN:209, Dn:241, Hy:255,
		S:169,  c:170,  R:174,  "B ":180,
		/*::[*/0/*::]*/:176,    /*::[*/1/*::]*/:177,  /*::[*/2/*::]*/:178,
		/*::[*/3/*::]*/:179,    /*::[*/5/*::]*/:181,  /*::[*/6/*::]*/:182,
		/*::[*/7/*::]*/:183,    Q:185,  k:186,  b:208,  i:216,  l:222,  s:240,  y:248,
		"!":161, '"':162, "#":163, "(":164, "%":165, "'":167, "H ":168,
		"+":171, ";":187, "<":188, "=":189, ">":190, "?":191, "{":223
	}/*:any*/);
	var sylk_char_regex = new RegExp("\u001BN(" + keys(sylk_escapes).join("|").replace(/\|\|\|/, "|\\||").replace(/([?()+])/g,"\\$1") + "|\\|)", "gm");
	var sylk_char_fn = function(_, $1){ var o = sylk_escapes[$1]; return typeof o == "number" ? _getansi(o) : o; };
	var decode_sylk_char = function($$, $1, $2) { var newcc = (($1.charCodeAt(0) - 0x20)<<4) | ($2.charCodeAt(0) - 0x30); return newcc == 59 ? $$ : _getansi(newcc); };
	sylk_escapes["|"] = 254;
	/* TODO: find an actual specification */
	function sylk_to_aoa(d/*:RawData*/, opts)/*:[AOA, Worksheet]*/ {
		switch(opts.type) {
			case 'base64': return sylk_to_aoa_str(Base64_decode(d), opts);
			case 'binary': return sylk_to_aoa_str(d, opts);
			case 'buffer': return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);
			case 'array': return sylk_to_aoa_str(cc2str(d), opts);
		}
		throw new Error("Unrecognized type " + opts.type);
	}
	function sylk_to_aoa_str(str/*:string*/, opts)/*:[AOA, Worksheet]*/ {
		var records = str.split(/[\n\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr/*:AOA*/ = [];
		var formats/*:Array<string>*/ = [];
		var next_cell_format/*:string|null*/ = null;
		var sht = {}, rowinfo/*:Array<RowInfo>*/ = [], colinfo/*:Array<ColInfo>*/ = [], cw/*:Array<string>*/ = [];
		var Mval = 0, j;
		if(+opts.codepage >= 0) set_cp(+opts.codepage);
		for (; ri !== records.length; ++ri) {
			Mval = 0;
			var rstr=records[ri].trim().replace(/\x1B([\x20-\x2F])([\x30-\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);
			var record=rstr.replace(/;;/g, "\u0000").split(";").map(function(x) { return x.replace(/\u0000/g, ";"); });
			var RT=record[0], val;
			if(rstr.length > 0) switch(RT) {
			case 'ID': break; /* header */
			case 'E': break; /* EOF */
			case 'B': break; /* dimensions */
			case 'O': break; /* options? */
			case 'W': break; /* window? */
			case 'P':
				if(record[1].charAt(0) == 'P')
					formats.push(rstr.slice(3).replace(/;;/g, ";"));
				break;
			case 'C':
			var C_seen_K = false, C_seen_X = false, C_seen_S = false, C_seen_E = false, _R = -1, _C = -1;
			for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {
				case 'A': break; // TODO: comment
				case 'X': C = parseInt(record[rj].slice(1))-1; C_seen_X = true; break;
				case 'Y':
					R = parseInt(record[rj].slice(1))-1; if(!C_seen_X) C = 0;
					for(j = arr.length; j <= R; ++j) arr[j] = [];
					break;
				case 'K':
					val = record[rj].slice(1);
					if(val.charAt(0) === '"') val = val.slice(1,val.length - 1);
					else if(val === 'TRUE') val = true;
					else if(val === 'FALSE') val = false;
					else if(!isNaN(fuzzynum(val))) {
						val = fuzzynum(val);
						if(next_cell_format !== null && fmt_is_date(next_cell_format)) val = numdate(val);
					} else if(!isNaN(fuzzydate(val).getDate())) {
						val = parseDate(val);
					}
					C_seen_K = true;
					break;
				case 'E':
					C_seen_E = true;
					var formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});
					arr[R][C] = [arr[R][C], formula];
					break;
				case 'S':
					C_seen_S = true;
					arr[R][C] = [arr[R][C], "S5S"];
					break;
				case 'G': break; // unknown
				case 'R': _R = parseInt(record[rj].slice(1))-1; break;
				case 'C': _C = parseInt(record[rj].slice(1))-1; break;
				default: if(opts && opts.WTF) throw new Error("SYLK bad record " + rstr);
			}
			if(C_seen_K) {
				if(arr[R][C] && arr[R][C].length == 2) arr[R][C][0] = val;
				else arr[R][C] = val;
				next_cell_format = null;
			}
			if(C_seen_S) {
				if(C_seen_E) throw new Error("SYLK shared formula cannot have own formula");
				var shrbase = _R > -1 && arr[_R][_C];
				if(!shrbase || !shrbase[1]) throw new Error("SYLK shared formula cannot find base");
				arr[R][C][1] = shift_formula_str(shrbase[1], {r: R - _R, c: C - _C});
			}
			break;
			case 'F':
			var F_seen = 0;
			for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {
				case 'X': C = parseInt(record[rj].slice(1))-1; ++F_seen; break;
				case 'Y':
					R = parseInt(record[rj].slice(1))-1; /*C = 0;*/
					for(j = arr.length; j <= R; ++j) arr[j] = [];
					break;
				case 'M': Mval = parseInt(record[rj].slice(1)) / 20; break;
				case 'F': break; /* ??? */
				case 'G': break; /* hide grid */
				case 'P':
					next_cell_format = formats[parseInt(record[rj].slice(1))];
					break;
				case 'S': break; /* cell style */
				case 'D': break; /* column */
				case 'N': break; /* font */
				case 'W':
					cw = record[rj].slice(1).split(" ");
					for(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {
						Mval = parseInt(cw[2], 10);
						colinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval}; process_col(colinfo[j-1]);
					} break;
				case 'C': /* default column format */
					C = parseInt(record[rj].slice(1))-1;
					if(!colinfo[C]) colinfo[C] = {};
					break;
				case 'R': /* row properties */
					R = parseInt(record[rj].slice(1))-1;
					if(!rowinfo[R]) rowinfo[R] = {};
					if(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }
					else if(Mval === 0) rowinfo[R].hidden = true;
					break;
				default: if(opts && opts.WTF) throw new Error("SYLK bad record " + rstr);
			}
			if(F_seen < 1) next_cell_format = null; break;
			default: if(opts && opts.WTF) throw new Error("SYLK bad record " + rstr);
			}
		}
		if(rowinfo.length > 0) sht['!rows'] = rowinfo;
		if(colinfo.length > 0) sht['!cols'] = colinfo;
		if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);
		return [arr, sht];
	}

	function sylk_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {
		var aoasht = sylk_to_aoa(d, opts);
		var aoa = aoasht[0], ws = aoasht[1];
		var o = aoa_to_sheet(aoa, opts);
		keys(ws).forEach(function(k) { o[k] = ws[k]; });
		return o;
	}

	function sylk_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(sylk_to_sheet(d, opts), opts); }

	function write_ws_cell_sylk(cell/*:Cell*/, ws/*:Worksheet*/, R/*:number*/, C/*:number*//*::, opts*/)/*:string*/ {
		var o = "C;Y" + (R+1) + ";X" + (C+1) + ";K";
		switch(cell.t) {
			case 'n':
				o += (cell.v||0);
				if(cell.f && !cell.F) o += ";E" + a1_to_rc(cell.f, {r:R, c:C}); break;
			case 'b': o += cell.v ? "TRUE" : "FALSE"; break;
			case 'e': o += cell.w || cell.v; break;
			case 'd': o += '"' + (cell.w || cell.v) + '"'; break;
			case 's': o += '"' + cell.v.replace(/"/g,"").replace(/;/g, ";;") + '"'; break;
		}
		return o;
	}

	function write_ws_cols_sylk(out, cols) {
		cols.forEach(function(col, i) {
			var rec = "F;W" + (i+1) + " " + (i+1) + " ";
			if(col.hidden) rec += "0";
			else {
				if(typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);
				if(typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);
				if(typeof col.wch == 'number') rec += Math.round(col.wch);
			}
			if(rec.charAt(rec.length - 1) != " ") out.push(rec);
		});
	}

	function write_ws_rows_sylk(out/*:Array<string>*/, rows/*:Array<RowInfo>*/) {
		rows.forEach(function(row, i) {
			var rec = "F;";
			if(row.hidden) rec += "M0;";
			else if(row.hpt) rec += "M" + 20 * row.hpt + ";";
			else if(row.hpx) rec += "M" + 20 * px2pt(row.hpx) + ";";
			if(rec.length > 2) out.push(rec + "R" + (i+1));
		});
	}

	function sheet_to_sylk(ws/*:Worksheet*/, opts/*:?any*/)/*:string*/ {
		var preamble/*:Array<string>*/ = ["ID;PWXL;N;E"], o/*:Array<string>*/ = [];
		var r = safe_decode_range(ws['!ref']), cell/*:Cell*/;
		var dense = Array.isArray(ws);
		var RS = "\r\n";

		preamble.push("P;PGeneral");
		preamble.push("F;P0;DG0G8;M255");
		if(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);
		if(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);

		preamble.push("B;Y" + (r.e.r - r.s.r + 1) + ";X" + (r.e.c - r.s.c + 1) + ";D" + [r.s.c,r.s.r,r.e.c,r.e.r].join(" "));
		for(var R = r.s.r; R <= r.e.r; ++R) {
			for(var C = r.s.c; C <= r.e.c; ++C) {
				var coord = encode_cell({r:R,c:C});
				cell = dense ? (ws[R]||[])[C]: ws[coord];
				if(!cell || (cell.v == null && (!cell.f || cell.F))) continue;
				o.push(write_ws_cell_sylk(cell, ws, R, C));
			}
		}
		return preamble.join(RS) + RS + o.join(RS) + RS + "E" + RS;
	}

	return {
		to_workbook: sylk_to_workbook,
		to_sheet: sylk_to_sheet,
		from_sheet: sheet_to_sylk
	};
})();

var DIF = /*#__PURE__*/(function() {
	function dif_to_aoa(d/*:RawData*/, opts)/*:AOA*/ {
		switch(opts.type) {
			case 'base64': return dif_to_aoa_str(Base64_decode(d), opts);
			case 'binary': return dif_to_aoa_str(d, opts);
			case 'buffer': return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);
			case 'array': return dif_to_aoa_str(cc2str(d), opts);
		}
		throw new Error("Unrecognized type " + opts.type);
	}
	function dif_to_aoa_str(str/*:string*/, opts)/*:AOA*/ {
		var records = str.split('\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];
		for (; ri !== records.length; ++ri) {
			if (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }
			if (R < 0) continue;
			var metadata = records[ri].trim().split(",");
			var type = metadata[0], value = metadata[1];
			++ri;
			var data = records[ri] || "";
			while(((data.match(/["]/g)||[]).length & 1) && ri < records.length - 1) data += "\n" + records[++ri];
			data = data.trim();
			switch (+type) {
				case -1:
					if (data === 'BOT') { arr[++R] = []; C = 0; continue; }
					else if (data !== 'EOD') throw new Error("Unrecognized DIF special command " + data);
					break;
				case 0:
					if(data === 'TRUE') arr[R][C] = true;
					else if(data === 'FALSE') arr[R][C] = false;
					else if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);
					else if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);
					else arr[R][C] = value;
					++C; break;
				case 1:
					data = data.slice(1,data.length-1);
					data = data.replace(/""/g, '"');
					if(data && data.match(/^=".*"$/)) data = data.slice(2, -1);
					arr[R][C++] = data !== '' ? data : null;
					break;
			}
			if (data === 'EOD') break;
		}
		if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);
		return arr;
	}

	function dif_to_sheet(str/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }
	function dif_to_workbook(str/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(dif_to_sheet(str, opts), opts); }

	var sheet_to_dif = /*#__PURE__*/(function() {
		var push_field = function pf(o/*:Array<string>*/, topic/*:string*/, v/*:number*/, n/*:number*/, s/*:string*/) {
			o.push(topic);
			o.push(v + "," + n);
			o.push('"' + s.replace(/"/g,'""') + '"');
		};
		var push_value = function po(o/*:Array<string>*/, type/*:number*/, v/*:any*/, s/*:string*/) {
			o.push(type + "," + v);
			o.push(type == 1 ? '"' + s.replace(/"/g,'""') + '"' : s);
		};
		return function sheet_to_dif(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {
			var o/*:Array<string>*/ = [];
			var r = safe_decode_range(ws['!ref']), cell/*:Cell*/;
			var dense = Array.isArray(ws);
			push_field(o, "TABLE", 0, 1, "sheetjs");
			push_field(o, "VECTORS", 0, r.e.r - r.s.r + 1,"");
			push_field(o, "TUPLES", 0, r.e.c - r.s.c + 1,"");
			push_field(o, "DATA", 0, 0,"");
			for(var R = r.s.r; R <= r.e.r; ++R) {
				push_value(o, -1, 0, "BOT");
				for(var C = r.s.c; C <= r.e.c; ++C) {
					var coord = encode_cell({r:R,c:C});
					cell = dense ? (ws[R]||[])[C] : ws[coord];
					if(!cell) { push_value(o, 1, 0, ""); continue;}
					switch(cell.t) {
						case 'n':
							var val = cell.w ;
							if(!val && cell.v != null) val = cell.v;
							if(val == null) {
								if(cell.f && !cell.F) push_value(o, 1, 0, "=" + cell.f);
								else push_value(o, 1, 0, "");
							}
							else push_value(o, 0, val, "V");
							break;
						case 'b':
							push_value(o, 0, cell.v ? 1 : 0, cell.v ? "TRUE" : "FALSE");
							break;
						case 's':
							push_value(o, 1, 0, (isNaN(cell.v)) ? cell.v : '="' + cell.v + '"');
							break;
						case 'd':
							if(!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));
							push_value(o, 0, cell.w, "V");
							break;
						default: push_value(o, 1, 0, "");
					}
				}
			}
			push_value(o, -1, 0, "EOD");
			var RS = "\r\n";
			var oo = o.join(RS);
			//while((oo.length & 0x7F) != 0) oo += "\0";
			return oo;
		};
	})();
	return {
		to_workbook: dif_to_workbook,
		to_sheet: dif_to_sheet,
		from_sheet: sheet_to_dif
	};
})();

var ETH = /*#__PURE__*/(function() {
	function decode(s/*:string*/)/*:string*/ { return s.replace(/\\b/g,"\\").replace(/\\c/g,":").replace(/\\n/g,"\n"); }
	function encode(s/*:string*/)/*:string*/ { return s.replace(/\\/g, "\\b").replace(/:/g, "\\c").replace(/\n/g,"\\n"); }

	function eth_to_aoa(str/*:string*/, opts)/*:AOA*/ {
		var records = str.split('\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];
		for (; ri !== records.length; ++ri) {
			var record = records[ri].trim().split(":");
			if(record[0] !== 'cell') continue;
			var addr = decode_cell(record[1]);
			if(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];
			R = addr.r; C = addr.c;
			switch(record[2]) {
				case 't': arr[R][C] = decode(record[3]); break;
				case 'v': arr[R][C] = +record[3]; break;
				case 'vtf': var _f = record[record.length - 1];
					/* falls through */
				case 'vtc':
					switch(record[3]) {
						case 'nl': arr[R][C] = +record[4] ? true : false; break;
						default: arr[R][C] = +record[4]; break;
					}
					if(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];
			}
		}
		if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);
		return arr;
	}

	function eth_to_sheet(d/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }
	function eth_to_workbook(d/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }

	var header = [
		"socialcalc:version:1.5",
		"MIME-Version: 1.0",
		"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave"
	].join("\n");

	var sep = [
		"--SocialCalcSpreadsheetControlSave",
		"Content-type: text/plain; charset=UTF-8"
	].join("\n") + "\n";

	/* TODO: the other parts */
	var meta = [
		"# SocialCalc Spreadsheet Control Save",
		"part:sheet"
	].join("\n");

	var end = "--SocialCalcSpreadsheetControlSave--";

	function sheet_to_eth_data(ws/*:Worksheet*/)/*:string*/ {
		if(!ws || !ws['!ref']) return "";
		var o/*:Array<string>*/ = [], oo/*:Array<string>*/ = [], cell, coord = "";
		var r = decode_range(ws['!ref']);
		var dense = Array.isArray(ws);
		for(var R = r.s.r; R <= r.e.r; ++R) {
			for(var C = r.s.c; C <= r.e.c; ++C) {
				coord = encode_cell({r:R,c:C});
				cell = dense ? (ws[R]||[])[C] : ws[coord];
				if(!cell || cell.v == null || cell.t === 'z') continue;
				oo = ["cell", coord, 't'];
				switch(cell.t) {
					case 's': case 'str': oo.push(encode(cell.v)); break;
					case 'n':
						if(!cell.f) { oo[2]='v'; oo[3]=cell.v; }
						else { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }
						break;
					case 'b':
						oo[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?"1":"0";
						oo[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));
						break;
					case 'd':
						var t = datenum(parseDate(cell.v));
						oo[2] = 'vtc'; oo[3] = 'nd'; oo[4] = ""+t;
						oo[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);
						break;
					case 'e': continue;
				}
				o.push(oo.join(":"));
			}
		}
		o.push("sheet:c:" + (r.e.c-r.s.c+1) + ":r:" + (r.e.r-r.s.r+1) + ":tvf:1");
		o.push("valueformat:1:text-wiki");
		//o.push("copiedfrom:" + ws['!ref']); // clipboard only
		return o.join("\n");
	}

	function sheet_to_eth(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {
		return [header, sep, meta, sep, sheet_to_eth_data(ws), end].join("\n");
		// return ["version:1.5", sheet_to_eth_data(ws)].join("\n"); // clipboard form
	}

	return {
		to_workbook: eth_to_workbook,
		to_sheet: eth_to_sheet,
		from_sheet: sheet_to_eth
	};
})();

var PRN = /*#__PURE__*/(function() {
	function set_text_arr(data/*:string*/, arr/*:AOA*/, R/*:number*/, C/*:number*/, o/*:any*/) {
		if(o.raw) arr[R][C] = data;
		else if(data === "");
		else if(data === 'TRUE') arr[R][C] = true;
		else if(data === 'FALSE') arr[R][C] = false;
		else if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);
		else if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);
		else arr[R][C] = data;
	}

	function prn_to_aoa_str(f/*:string*/, opts)/*:AOA*/ {
		var o = opts || {};
		var arr/*:AOA*/ = ([]/*:any*/);
		if(!f || f.length === 0) return arr;
		var lines = f.split(/[\r\n]/);
		var L = lines.length - 1;
		while(L >= 0 && lines[L].length === 0) --L;
		var start = 10, idx = 0;
		var R = 0;
		for(; R <= L; ++R) {
			idx = lines[R].indexOf(" ");
			if(idx == -1) idx = lines[R].length; else idx++;
			start = Math.max(start, idx);
		}
		for(R = 0; R <= L; ++R) {
			arr[R] = [];
			/* TODO: confirm that widths are always 10 */
			var C = 0;
			set_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);
			for(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)
				set_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);
		}
		if(o.sheetRows) arr = arr.slice(0, o.sheetRows);
		return arr;
	}

	// List of accepted CSV separators
	var guess_seps = {
		/*::[*/0x2C/*::]*/: ',',
		/*::[*/0x09/*::]*/: "\t",
		/*::[*/0x3B/*::]*/: ';',
		/*::[*/0x7C/*::]*/: '|'
	};

	// CSV separator weights to be used in case of equal numbers
	var guess_sep_weights = {
		/*::[*/0x2C/*::]*/: 3,
		/*::[*/0x09/*::]*/: 2,
		/*::[*/0x3B/*::]*/: 1,
		/*::[*/0x7C/*::]*/: 0
	};

	function guess_sep(str) {
		var cnt = {}, instr = false, end = 0, cc = 0;
		for(;end < str.length;++end) {
			if((cc=str.charCodeAt(end)) == 0x22) instr = !instr;
			else if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;
		}

		cc = [];
		for(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {
			cc.push([ cnt[end], end ]);
		}

		if ( !cc.length ) {
			cnt = guess_sep_weights;
			for(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {
				cc.push([ cnt[end], end ]);
			}
		}

		cc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });

		return guess_seps[cc.pop()[1]] || 0x2C;
	}

	function dsv_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {
		var o = opts || {};
		var sep = "";
		var ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);
		var range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:0}}/*:any*/);

		if(str.slice(0,4) == "sep=") {
			// If the line ends in \r\n
			if(str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10 ) {
				sep = str.charAt(4); str = str.slice(7);
			}
			// If line ends in \r OR \n
			else if(str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10 ) {
				sep = str.charAt(4); str = str.slice(6);
			}
			else sep = guess_sep(str.slice(0,1024));
		}
		else if(o && o.FS) sep = o.FS;
		else sep = guess_sep(str.slice(0,1024));
		var R = 0, C = 0, v = 0;
		var start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0, startcc=str.charCodeAt(0);
		str = str.replace(/\r\n/mg, "\n");
		var _re/*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;
		function finish_cell() {
			var s = str.slice(start, end);
			var cell = ({}/*:any*/);
			if(s.charAt(0) == '"' && s.charAt(s.length - 1) == '"') s = s.slice(1,-1).replace(/""/g,'"');
			if(s.length === 0) cell.t = 'z';
			else if(o.raw) { cell.t = 's'; cell.v = s; }
			else if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }
			else if(s.charCodeAt(0) == 0x3D) {
				if(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/""/g,'"'); }
				else if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }
				else { cell.t = 's'; cell.v = s; } }
			else if(s == "TRUE") { cell.t = 'b'; cell.v = true; }
			else if(s == "FALSE") { cell.t = 'b'; cell.v = false; }
			else if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }
			else if(!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {
				cell.z = o.dateNF || table_fmt[14];
				var k = 0;
				if(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; }
				if(o.cellDates) { cell.t = 'd'; cell.v = parseDate(s, k); }
				else { cell.t = 'n'; cell.v = datenum(parseDate(s, k)); }
				if(o.cellText !== false) cell.w = SSF_format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);
				if(!o.cellNF) delete cell.z;
			} else {
				cell.t = 's';
				cell.v = s;
			}
			if(cell.t == 'z');
			else if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }
			else ws[encode_cell({c:C,r:R})] = cell;
			start = end+1; startcc = str.charCodeAt(start);
			if(range.e.c < C) range.e.c = C;
			if(range.e.r < R) range.e.r = R;
			if(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }
		}
		outer: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {
			case 0x22: if(startcc === 0x22) instr = !instr; break;
			case sepcc: case 0x0a: case 0x0d: if(!instr && finish_cell()) break outer; break;
		}
		if(end - start > 0) finish_cell();

		ws['!ref'] = encode_range(range);
		return ws;
	}

	function prn_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {
		if(!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);
		if(opts.FS) return dsv_to_sheet_str(str, opts);
		if(str.slice(0,4) == "sep=") return dsv_to_sheet_str(str, opts);
		if(str.indexOf("\t") >= 0 || str.indexOf(",") >= 0 || str.indexOf(";") >= 0) return dsv_to_sheet_str(str, opts);
		return aoa_to_sheet(prn_to_aoa_str(str, opts), opts);
	}

	function prn_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {
		var str = "", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);
		switch(opts.type) {
			case 'base64': str = Base64_decode(d); break;
			case 'binary': str = d; break;
			case 'buffer':
				if(opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf
				else if(opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);
				else str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);
				break;
			case 'array': str = cc2str(d); break;
			case 'string': str = d; break;
			default: throw new Error("Unrecognized type " + opts.type);
		}
		if(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));
		else if(opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);
		else if((opts.type == 'binary') && typeof $cptable !== 'undefined' && opts.codepage)  str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591,str));
		if(str.slice(0,19) == "socialcalc:version:") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);
		return prn_to_sheet_str(str, opts);
	}

	function prn_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }

	function sheet_to_prn(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {
		var o/*:Array<string>*/ = [];
		var r = safe_decode_range(ws['!ref']), cell/*:Cell*/;
		var dense = Array.isArray(ws);
		for(var R = r.s.r; R <= r.e.r; ++R) {
			var oo/*:Array<string>*/ = [];
			for(var C = r.s.c; C <= r.e.c; ++C) {
				var coord = encode_cell({r:R,c:C});
				cell = dense ? (ws[R]||[])[C] : ws[coord];
				if(!cell || cell.v == null) { oo.push("          "); continue; }
				var w = (cell.w || (format_cell(cell), cell.w) || "").slice(0,10);
				while(w.length < 10) w += " ";
				oo.push(w + (C === 0 ? " " : ""));
			}
			o.push(oo.join(""));
		}
		return o.join("\n");
	}

	return {
		to_workbook: prn_to_workbook,
		to_sheet: prn_to_sheet,
		from_sheet: sheet_to_prn
	};
})();

/* Excel defaults to SYLK but warns if data is not valid */
function read_wb_ID(d, opts) {
	var o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;
	try {
		var out = SYLK.to_workbook(d, o);
		o.WTF = OLD_WTF;
		return out;
	} catch(e) {
		o.WTF = OLD_WTF;
		if(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;
		return PRN.to_workbook(d, opts);
	}
}

var WK_ = /*#__PURE__*/(function() {
	function lotushopper(data, cb/*:RecordHopperCB*/, opts/*:any*/) {
		if(!data) return;
		prep_blob(data, data.l || 0);
		var Enum = opts.Enum || WK1Enum;
		while(data.l < data.length) {
			var RT = data.read_shift(2);
			var R = Enum[RT] || Enum[0xFFFF];
			var length = data.read_shift(2);
			var tgt = data.l + length;
			var d = R.f && R.f(data, length, opts);
			data.l = tgt;
			if(cb(d, R, RT)) return;
		}
	}

	function lotus_to_workbook(d/*:RawData*/, opts) {
		switch(opts.type) {
			case 'base64': return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);
			case 'binary': return lotus_to_workbook_buf(s2a(d), opts);
			case 'buffer':
			case 'array': return lotus_to_workbook_buf(d, opts);
		}
		throw "Unsupported type " + opts.type;
	}

	function lotus_to_workbook_buf(d, opts)/*:Workbook*/ {
		if(!d) return d;
		var o = opts || {};
		var s/*:Worksheet*/ = ((o.dense ? [] : {})/*:any*/), n = "Sheet1", next_n = "", sidx = 0;
		var sheets = {}, snames = [], realnames = [];

		var refguess = {s: {r:0, c:0}, e: {r:0, c:0} };
		var sheetRows = o.sheetRows || 0;

		if(d[2] == 0x00) {
			if(d[3] == 0x08 || d[3] == 0x09) {
				if(d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error("Unsupported Works 3 for Mac file");
			}
		}

		if(d[2] == 0x02) {
			o.Enum = WK1Enum;
			lotushopper(d, function(val, R, RT) { switch(RT) {
				case 0x00: /* BOF */
					o.vers = val;
					if(val >= 0x1000) o.qpro = true;
					break;
				case 0x06: refguess = val; break; /* RANGE */
				case 0xCC: if(val) next_n = val; break; /* SHEETNAMECS */
				case 0xDE: next_n = val; break; /* SHEETNAMELP */
				case 0x0F: /* LABEL */
				case 0x33: /* STRING */
					if(!o.qpro) val[1].v = val[1].v.slice(1);
					/* falls through */
				case 0x0D: /* INTEGER */
				case 0x0E: /* NUMBER */
				case 0x10: /* FORMULA */
					/* TODO: actual translation of the format code */
					if(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {
						val[1].z = o.dateNF || table_fmt[14];
						if(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }
					}

					if(o.qpro) {
						if(val[3] > sidx) {
							s["!ref"] = encode_range(refguess);
							sheets[n] = s;
							snames.push(n);
							s = (o.dense ? [] : {});
							refguess = {s: {r:0, c:0}, e: {r:0, c:0} };
							sidx = val[3]; n = next_n || "Sheet" + (sidx + 1); next_n = "";
						}
					}

					var tmpcell = o.dense ? (s[val[0].r]||[])[val[0].c] : s[encode_cell(val[0])];
					if(tmpcell) {
						tmpcell.t = val[1].t; tmpcell.v = val[1].v;
						if(val[1].z != null) tmpcell.z = val[1].z;
						if(val[1].f != null) tmpcell.f = val[1].f;
						break;
					}
					if(o.dense) {
						if(!s[val[0].r]) s[val[0].r] = [];
						s[val[0].r][val[0].c] = val[1];
					} else s[encode_cell(val[0])] = val[1];
					break;
			}}, o);
		} else if(d[2] == 0x1A || d[2] == 0x0E) {
			o.Enum = WK3Enum;
			if(d[2] == 0x0E) { o.qpro = true; d.l = 0; }
			lotushopper(d, function(val, R, RT) { switch(RT) {
				case 0xCC: n = val; break; /* SHEETNAMECS */
				case 0x16: /* LABEL16 */
					val[1].v = val[1].v.slice(1);
					/* falls through */
				case 0x17: /* NUMBER17 */
				case 0x18: /* NUMBER18 */
				case 0x19: /* FORMULA19 */
				case 0x25: /* NUMBER25 */
				case 0x27: /* NUMBER27 */
				case 0x28: /* FORMULA28 */
					if(val[3] > sidx) {
						s["!ref"] = encode_range(refguess);
						sheets[n] = s;
						snames.push(n);
						s = (o.dense ? [] : {});
						refguess = {s: {r:0, c:0}, e: {r:0, c:0} };
						sidx = val[3]; n = "Sheet" + (sidx + 1);
					}
					if(sheetRows > 0 && val[0].r >= sheetRows) break;
					if(o.dense) {
						if(!s[val[0].r]) s[val[0].r] = [];
						s[val[0].r][val[0].c] = val[1];
					} else s[encode_cell(val[0])] = val[1];
					if(refguess.e.c < val[0].c) refguess.e.c = val[0].c;
					if(refguess.e.r < val[0].r) refguess.e.r = val[0].r;
					break;
				case 0x1B: /* XFORMAT */
					if(val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];
					break;
				case 0x0601: /* SHEETINFOQP */
					realnames[val[0]] = val[1]; if(val[0] == sidx) n = val[1]; break;
			}}, o);
		} else throw new Error("Unrecognized LOTUS BOF " + d[2]);
		s["!ref"] = encode_range(refguess);
		sheets[next_n || n] = s;
		snames.push(next_n || n);
		if(!realnames.length) return { SheetNames: snames, Sheets: sheets };
		var osheets = {}, rnames = [];
		/* TODO: verify no collisions */
		for(var i = 0; i < realnames.length; ++i) if(sheets[snames[i]]) {
			rnames.push(realnames[i] || snames[i]);
			osheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];
		} else {
			rnames.push(realnames[i]);
			osheets[realnames[i]] = ({ "!ref": "A1" });
		}
		return { SheetNames: rnames, Sheets: osheets };
	}

	function sheet_to_wk1(ws/*:Worksheet*/, opts/*:WriteOpts*/) {
		var o = opts || {};
		if(+o.codepage >= 0) set_cp(+o.codepage);
		if(o.type == "string") throw new Error("Cannot write WK1 to JS string");
		var ba = buf_array();
		var range = safe_decode_range(ws["!ref"]);
		var dense = Array.isArray(ws);
		var cols = [];

		write_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));
		write_biff_rec(ba, 0x06, write_RANGE(range));
		var max_R = Math.min(range.e.r, 8191);
		for(var R = range.s.r; R <= max_R; ++R) {
			var rr = encode_row(R);
			for(var C = range.s.c; C <= range.e.c; ++C) {
				if(R === range.s.r) cols[C] = encode_col(C);
				var ref = cols[C] + rr;
				var cell = dense ? (ws[R]||[])[C] : ws[ref];
				if(!cell || cell.t == "z") continue;
				/* TODO: formula records */
				if(cell.t == "n") {
					if((cell.v|0)==cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell.v));
					else write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell.v));
				} else {
					var str = format_cell(cell);
					write_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));
				}
			}
		}

		write_biff_rec(ba, 0x01);
		return ba.end();
	}

	function book_to_wk3(wb/*:Workbook*/, opts/*:WriteOpts*/) {
		var o = opts || {};
		if(+o.codepage >= 0) set_cp(+o.codepage);
		if(o.type == "string") throw new Error("Cannot write WK3 to JS string");
		var ba = buf_array();

		write_biff_rec(ba, 0x00, write_BOF_WK3(wb));

		for(var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if((wb.Sheets[wb.SheetNames[i]] || {})["!ref"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));

		var wsidx = 0;
		for(i = 0; i < wb.SheetNames.length; ++i) {
			var ws = wb.Sheets[wb.SheetNames[i]];
			if(!ws || !ws["!ref"]) continue;
			var range = safe_decode_range(ws["!ref"]);
			var dense = Array.isArray(ws);
			var cols = [];
			var max_R = Math.min(range.e.r, 8191);
			for(var R = range.s.r; R <= max_R; ++R) {
				var rr = encode_row(R);
				for(var C = range.s.c; C <= range.e.c; ++C) {
					if(R === range.s.r) cols[C] = encode_col(C);
					var ref = cols[C] + rr;
					var cell = dense ? (ws[R]||[])[C] : ws[ref];
					if(!cell || cell.t == "z") continue;
					/* TODO: FORMULA19 NUMBER18 records */
					if(cell.t == "n") {
						write_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));
					} else {
						var str = format_cell(cell);
						/* TODO: max len? */
						write_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));
					}
				}
			}
			++wsidx;
		}

		write_biff_rec(ba, 0x01);
		return ba.end();
	}


	function write_BOF_WK1(v/*:number*/) {
		var out = new_buf(2);
		out.write_shift(2, v);
		return out;
	}

	function write_BOF_WK3(wb/*:Workbook*/) {
		var out = new_buf(26);
		out.write_shift(2, 0x1000);
		out.write_shift(2, 0x0004);
		out.write_shift(4, 0x0000);
		var rows = 0, cols = 0, wscnt = 0;
		for(var i = 0; i < wb.SheetNames.length; ++i) {
			var name = wb.SheetNames[i];
			var ws = wb.Sheets[name];
			if(!ws || !ws["!ref"]) continue;
			++wscnt;
			var range = decode_range(ws["!ref"]);
			if(rows < range.e.r) rows = range.e.r;
			if(cols < range.e.c) cols = range.e.c;
		}
		if(rows > 8191) rows = 8191;
		out.write_shift(2, rows);
		out.write_shift(1, wscnt);
		out.write_shift(1, cols);
		out.write_shift(2, 0x00);
		out.write_shift(2, 0x00);
		out.write_shift(1, 0x01);
		out.write_shift(1, 0x02);
		out.write_shift(4, 0);
		out.write_shift(4, 0);
		return out;
	}

	function parse_RANGE(blob, length, opts) {
		var o = {s:{c:0,r:0},e:{c:0,r:0}};
		if(length == 8 && opts.qpro) {
			o.s.c = blob.read_shift(1);
			blob.l++;
			o.s.r = blob.read_shift(2);
			o.e.c = blob.read_shift(1);
			blob.l++;
			o.e.r = blob.read_shift(2);
			return o;
		}
		o.s.c = blob.read_shift(2);
		o.s.r = blob.read_shift(2);
		if(length == 12 && opts.qpro) blob.l += 2;
		o.e.c = blob.read_shift(2);
		o.e.r = blob.read_shift(2);
		if(length == 12 && opts.qpro) blob.l += 2;
		if(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;
		return o;
	}
	function write_RANGE(range) {
		var out = new_buf(8);
		out.write_shift(2, range.s.c);
		out.write_shift(2, range.s.r);
		out.write_shift(2, range.e.c);
		out.write_shift(2, range.e.r);
		return out;
	}

	function parse_cell(blob, length, opts) {
		var o = [{c:0,r:0}, {t:'n',v:0}, 0, 0];
		if(opts.qpro && opts.vers != 0x5120) {
			o[0].c = blob.read_shift(1);
			o[3] = blob.read_shift(1);
			o[0].r = blob.read_shift(2);
			blob.l+=2;
		} else {
			o[2] = blob.read_shift(1);
			o[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);
		}
		return o;
	}

	function parse_LABEL(blob, length, opts) {
		var tgt = blob.l + length;
		var o = parse_cell(blob, length, opts);
		o[1].t = 's';
		if(opts.vers == 0x5120) {
			blob.l++;
			var len = blob.read_shift(1);
			o[1].v = blob.read_shift(len, 'utf8');
			return o;
		}
		if(opts.qpro) blob.l++;
		o[1].v = blob.read_shift(tgt - blob.l, 'cstr');
		return o;
	}
	function write_LABEL(R, C, s) {
		/* TODO: encoding */
		var o = new_buf(7 + s.length);
		o.write_shift(1, 0xFF);
		o.write_shift(2, C);
		o.write_shift(2, R);
		o.write_shift(1, 0x27); // ??
		for(var i = 0; i < o.length; ++i) {
			var cc = s.charCodeAt(i);
			o.write_shift(1, cc >= 0x80 ? 0x5F : cc);
		}
		o.write_shift(1, 0);
		return o;
	}

	function parse_INTEGER(blob, length, opts) {
		var o = parse_cell(blob, length, opts);
		o[1].v = blob.read_shift(2, 'i');
		return o;
	}
	function write_INTEGER(R, C, v) {
		var o = new_buf(7);
		o.write_shift(1, 0xFF);
		o.write_shift(2, C);
		o.write_shift(2, R);
		o.write_shift(2, v, 'i');
		return o;
	}

	function parse_NUMBER(blob, length, opts) {
		var o = parse_cell(blob, length, opts);
		o[1].v = blob.read_shift(8, 'f');
		return o;
	}
	function write_NUMBER(R, C, v) {
		var o = new_buf(13);
		o.write_shift(1, 0xFF);
		o.write_shift(2, C);
		o.write_shift(2, R);
		o.write_shift(8, v, 'f');
		return o;
	}

	function parse_FORMULA(blob, length, opts) {
		var tgt = blob.l + length;
		var o = parse_cell(blob, length, opts);
		/* TODO: formula */
		o[1].v = blob.read_shift(8, 'f');
		if(opts.qpro) blob.l = tgt;
		else {
			var flen = blob.read_shift(2);
			wk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);
			blob.l += flen;
		}
		return o;
	}

	function wk1_parse_rc(B, V, col) {
		var rel = V & 0x8000;
		V &= ~0x8000;
		V = (rel ? B : 0) + ((V >= 0x2000) ? V - 0x4000 : V);
		return (rel ? "" : "$") + (col ? encode_col(V) : encode_row(V));
	}
	/* var oprec = [
		8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,
		3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8
	]; */
	/* TODO: flesh out */
	var FuncTab = {
		0x33: ["FALSE", 0],
		0x34: ["TRUE", 0],
		0x46: ["LEN", 1],
		0x50: ["SUM", 69],
		0x51: ["AVERAGEA", 69],
		0x52: ["COUNTA", 69],
		0x53: ["MINA", 69],
		0x54: ["MAXA", 69],
		0x6F: ["T", 1]
	};
	var BinOpTab = [
		  "",   "",   "",   "",   "",   "",   "",   "", // eslint-disable-line no-mixed-spaces-and-tabs
		  "",  "+",  "-",  "*",  "/",  "^",  "=", "<>", // eslint-disable-line no-mixed-spaces-and-tabs
		"<=", ">=",  "<",  ">",   "",   "",   "",   "", // eslint-disable-line no-mixed-spaces-and-tabs
		 "&",   "",   "",   "",   "",   "",   "",   ""  // eslint-disable-line no-mixed-spaces-and-tabs
	];

	function wk1_fmla_to_csf(blob, o) {
		prep_blob(blob, 0);
		var out = [], argc = 0, R = "", C = "", argL = "", argR = "";
		while(blob.l < blob.length) {
			var cc = blob[blob.l++];
			switch(cc) {
				case 0x00: out.push(blob.read_shift(8, 'f')); break;
				case 0x01: {
					C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);
					R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);
					out.push(C + R);
				} break;
				case 0x02: {
					var c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);
					var r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);
					C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);
					R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);
					out.push(c + r + ":" + C + R);
				} break;
				case 0x03:
					if(blob.l < blob.length) { console.error("WK1 premature formula end"); return; }
					break;
				case 0x04: out.push("(" + out.pop() + ")"); break;
				case 0x05: out.push(blob.read_shift(2)); break;
				case 0x06: {
					/* TODO: text encoding */
					var Z = ""; while((cc = blob[blob.l++])) Z += String.fromCharCode(cc);
					out.push('"' + Z.replace(/"/g, '""') + '"');
				} break;

				case 0x08: out.push("-" + out.pop()); break;
				case 0x17: out.push("+" + out.pop()); break;
				case 0x16: out.push("NOT(" + out.pop() + ")"); break;

				case 0x14: case 0x15: {
					argR = out.pop(); argL = out.pop();
					out.push(["AND", "OR"][cc - 0x14] + "(" + argL + "," + argR + ")");
				} break;

				default:
					if(cc < 0x20 && BinOpTab[cc]) {
						argR = out.pop(); argL = out.pop();
						out.push(argL + BinOpTab[cc] + argR);
					} else if(FuncTab[cc]) {
						argc = FuncTab[cc][1];
						if(argc == 69) argc = blob[blob.l++];
						if(argc > out.length) { console.error("WK1 bad formula parse 0x" + cc.toString(16) + ":|" + out.join("|") + "|"); return; }
						var args = out.slice(-argc);
						out.length -= argc;
						out.push(FuncTab[cc][0] + "(" + args.join(",") + ")");
					}
					else if(cc <= 0x07) return console.error("WK1 invalid opcode " + cc.toString(16));
					else if(cc <= 0x18) return console.error("WK1 unsupported op " + cc.toString(16));
					else if(cc <= 0x1E) return console.error("WK1 invalid opcode " + cc.toString(16));
					else if(cc <= 0x73) return console.error("WK1 unsupported function opcode " + cc.toString(16));
					// possible future functions ??
					else return console.error("WK1 unrecognized opcode " + cc.toString(16));
			}
		}
		if(out.length == 1) o[1].f = "" + out[0];
		else console.error("WK1 bad formula parse |" + out.join("|") + "|");
	}


	function parse_cell_3(blob/*::, length*/) {
		var o = [{c:0,r:0}, {t:'n',v:0}, 0];
		o[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];
		return o;
	}

	function parse_LABEL_16(blob, length) {
		var o = parse_cell_3(blob);
		o[1].t = 's';
		o[1].v = blob.read_shift(length - 4, 'cstr');
		return o;
	}
	function write_LABEL_16(R, C, wsidx, s) {
		/* TODO: encoding */
		var o = new_buf(6 + s.length);
		o.write_shift(2, R);
		o.write_shift(1, wsidx);
		o.write_shift(1, C);
		o.write_shift(1, 0x27);
		for(var i = 0; i < s.length; ++i) {
			var cc = s.charCodeAt(i);
			o.write_shift(1, cc >= 0x80 ? 0x5F : cc);
		}
		o.write_shift(1, 0);
		return o;
	}

	function parse_NUMBER_18(blob, length) {
		var o = parse_cell_3(blob);
		o[1].v = blob.read_shift(2);
		var v = o[1].v >> 1;
		if(o[1].v & 0x1) {
			switch(v & 0x07) {
				case 0: v = (v >> 3) * 5000; break;
				case 1: v = (v >> 3) * 500; break;
				case 2: v = (v >> 3) / 20; break;
				case 3: v = (v >> 3) / 200; break;
				case 4: v = (v >> 3) / 2000; break;
				case 5: v = (v >> 3) / 20000; break;
				case 6: v = (v >> 3) / 16; break;
				case 7: v = (v >> 3) / 64; break;
			}
		}
		o[1].v = v;
		return o;
	}

	function parse_NUMBER_17(blob, length) {
		var o = parse_cell_3(blob);
		var v1 = blob.read_shift(4);
		var v2 = blob.read_shift(4);
		var e = blob.read_shift(2);
		if(e == 0xFFFF) {
			if(v1 === 0 && v2 === 0xC0000000) { o[1].t = "e"; o[1].v = 0x0F; } // ERR -> #VALUE!
			else if(v1 === 0 && v2 === 0xD0000000) { o[1].t = "e"; o[1].v = 0x2A; } // NA -> #N/A
			else o[1].v = 0;
			return o;
		}
		var s = e & 0x8000; e = (e&0x7FFF) - 16446;
		o[1].v = (1 - s*2) * (v2 * Math.pow(2, e+32) + v1 * Math.pow(2, e));
		return o;
	}
	function write_NUMBER_17(R, C, wsidx, v) {
		var o = new_buf(14);
		o.write_shift(2, R);
		o.write_shift(1, wsidx);
		o.write_shift(1, C);
		if(v == 0) {
			o.write_shift(4, 0);
			o.write_shift(4, 0);
			o.write_shift(2, 0xFFFF);
			return o;
		}
		var s = 0, e = 0, v1 = 0, v2 = 0;
		if(v < 0) { s = 1; v = -v; }
		e = Math.log2(v) | 0;
		v /= Math.pow(2, e-31);
		v2 = (v)>>>0;
		if((v2&0x80000000) == 0) { v/=2; ++e; v2 = v >>> 0; }
		v -= v2;
		v2 |= 0x80000000;
		v2 >>>= 0;
		v *= Math.pow(2, 32);
		v1 = v>>>0;
		o.write_shift(4, v1);
		o.write_shift(4, v2);
		e += 0x3FFF + (s ? 0x8000 : 0);
		o.write_shift(2, e);
		return o;
	}

	function parse_FORMULA_19(blob, length) {
		var o = parse_NUMBER_17(blob);
		blob.l += length - 14; /* TODO: WK3 formula */
		return o;
	}

	function parse_NUMBER_25(blob, length) {
		var o = parse_cell_3(blob);
		var v1 = blob.read_shift(4);
		o[1].v = v1 >> 6;
		return o;
	}

	function parse_NUMBER_27(blob, length) {
		var o = parse_cell_3(blob);
		var v1 = blob.read_shift(8,'f');
		o[1].v = v1;
		return o;
	}

	function parse_FORMULA_28(blob, length) {
		var o = parse_NUMBER_27(blob);
		blob.l += length - 10; /* TODO: formula */
		return o;
	}

	function parse_SHEETNAMECS(blob, length) {
		return blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : "";
	}

	function parse_SHEETNAMELP(blob, length) {
		var len = blob[blob.l++];
		if(len > length - 1) len = length - 1;
		var o = ""; while(o.length < len) o += String.fromCharCode(blob[blob.l++]);
		return o;
	}

	function parse_SHEETINFOQP(blob, length, opts) {
		if(!opts.qpro || length < 21) return;
		var id = blob.read_shift(1);
		blob.l += 17;
		blob.l += 1; //var len = blob.read_shift(1);
		blob.l += 2;
		var nm = blob.read_shift(length - 21, 'cstr');
		return [id, nm];
	}

	function parse_XFORMAT(blob, length) {
		var o = {}, tgt = blob.l + length;
		while(blob.l < tgt) {
			var dt = blob.read_shift(2);
			if(dt == 0x36b0) {
				o[dt] = [0, ""];
				o[dt][0] = blob.read_shift(2);
				while(blob[blob.l]) { o[dt][1] += String.fromCharCode(blob[blob.l]); blob.l++; } blob.l++;
			}
			// TODO: 0x3a99 ??
		}
		return o;
	}
	function write_XFORMAT_SHEETNAME(name, wsidx) {
		var out = new_buf(5 + name.length);
		out.write_shift(2, 0x36b0);
		out.write_shift(2, wsidx);
		for(var i = 0; i < name.length; ++i) {
			var cc = name.charCodeAt(i);
			out[out.l++] = cc > 0x7F ? 0x5F : cc;
		}
		out[out.l++] = 0;
		return out;
	}

	var WK1Enum = {
		/*::[*/0x0000/*::]*/: { n:"BOF", f:parseuint16 },
		/*::[*/0x0001/*::]*/: { n:"EOF" },
		/*::[*/0x0002/*::]*/: { n:"CALCMODE" },
		/*::[*/0x0003/*::]*/: { n:"CALCORDER" },
		/*::[*/0x0004/*::]*/: { n:"SPLIT" },
		/*::[*/0x0005/*::]*/: { n:"SYNC" },
		/*::[*/0x0006/*::]*/: { n:"RANGE", f:parse_RANGE },
		/*::[*/0x0007/*::]*/: { n:"WINDOW1" },
		/*::[*/0x0008/*::]*/: { n:"COLW1" },
		/*::[*/0x0009/*::]*/: { n:"WINTWO" },
		/*::[*/0x000A/*::]*/: { n:"COLW2" },
		/*::[*/0x000B/*::]*/: { n:"NAME" },
		/*::[*/0x000C/*::]*/: { n:"BLANK" },
		/*::[*/0x000D/*::]*/: { n:"INTEGER", f:parse_INTEGER },
		/*::[*/0x000E/*::]*/: { n:"NUMBER", f:parse_NUMBER },
		/*::[*/0x000F/*::]*/: { n:"LABEL", f:parse_LABEL },
		/*::[*/0x0010/*::]*/: { n:"FORMULA", f:parse_FORMULA },
		/*::[*/0x0018/*::]*/: { n:"TABLE" },
		/*::[*/0x0019/*::]*/: { n:"ORANGE" },
		/*::[*/0x001A/*::]*/: { n:"PRANGE" },
		/*::[*/0x001B/*::]*/: { n:"SRANGE" },
		/*::[*/0x001C/*::]*/: { n:"FRANGE" },
		/*::[*/0x001D/*::]*/: { n:"KRANGE1" },
		/*::[*/0x0020/*::]*/: { n:"HRANGE" },
		/*::[*/0x0023/*::]*/: { n:"KRANGE2" },
		/*::[*/0x0024/*::]*/: { n:"PROTEC" },
		/*::[*/0x0025/*::]*/: { n:"FOOTER" },
		/*::[*/0x0026/*::]*/: { n:"HEADER" },
		/*::[*/0x0027/*::]*/: { n:"SETUP" },
		/*::[*/0x0028/*::]*/: { n:"MARGINS" },
		/*::[*/0x0029/*::]*/: { n:"LABELFMT" },
		/*::[*/0x002A/*::]*/: { n:"TITLES" },
		/*::[*/0x002B/*::]*/: { n:"SHEETJS" },
		/*::[*/0x002D/*::]*/: { n:"GRAPH" },
		/*::[*/0x002E/*::]*/: { n:"NGRAPH" },
		/*::[*/0x002F/*::]*/: { n:"CALCCOUNT" },
		/*::[*/0x0030/*::]*/: { n:"UNFORMATTED" },
		/*::[*/0x0031/*::]*/: { n:"CURSORW12" },
		/*::[*/0x0032/*::]*/: { n:"WINDOW" },
		/*::[*/0x0033/*::]*/: { n:"STRING", f:parse_LABEL },
		/*::[*/0x0037/*::]*/: { n:"PASSWORD" },
		/*::[*/0x0038/*::]*/: { n:"LOCKED" },
		/*::[*/0x003C/*::]*/: { n:"QUERY" },
		/*::[*/0x003D/*::]*/: { n:"QUERYNAME" },
		/*::[*/0x003E/*::]*/: { n:"PRINT" },
		/*::[*/0x003F/*::]*/: { n:"PRINTNAME" },
		/*::[*/0x0040/*::]*/: { n:"GRAPH2" },
		/*::[*/0x0041/*::]*/: { n:"GRAPHNAME" },
		/*::[*/0x0042/*::]*/: { n:"ZOOM" },
		/*::[*/0x0043/*::]*/: { n:"SYMSPLIT" },
		/*::[*/0x0044/*::]*/: { n:"NSROWS" },
		/*::[*/0x0045/*::]*/: { n:"NSCOLS" },
		/*::[*/0x0046/*::]*/: { n:"RULER" },
		/*::[*/0x0047/*::]*/: { n:"NNAME" },
		/*::[*/0x0048/*::]*/: { n:"ACOMM" },
		/*::[*/0x0049/*::]*/: { n:"AMACRO" },
		/*::[*/0x004A/*::]*/: { n:"PARSE" },
		/*::[*/0x0066/*::]*/: { n:"PRANGES??" },
		/*::[*/0x0067/*::]*/: { n:"RRANGES??" },
		/*::[*/0x0068/*::]*/: { n:"FNAME??" },
		/*::[*/0x0069/*::]*/: { n:"MRANGES??" },
		/*::[*/0x00CC/*::]*/: { n:"SHEETNAMECS", f:parse_SHEETNAMECS },
		/*::[*/0x00DE/*::]*/: { n:"SHEETNAMELP", f:parse_SHEETNAMELP },
		/*::[*/0xFFFF/*::]*/: { n:"" }
	};

	var WK3Enum = {
		/*::[*/0x0000/*::]*/: { n:"BOF" },
		/*::[*/0x0001/*::]*/: { n:"EOF" },
		/*::[*/0x0002/*::]*/: { n:"PASSWORD" },
		/*::[*/0x0003/*::]*/: { n:"CALCSET" },
		/*::[*/0x0004/*::]*/: { n:"WINDOWSET" },
		/*::[*/0x0005/*::]*/: { n:"SHEETCELLPTR" },
		/*::[*/0x0006/*::]*/: { n:"SHEETLAYOUT" },
		/*::[*/0x0007/*::]*/: { n:"COLUMNWIDTH" },
		/*::[*/0x0008/*::]*/: { n:"HIDDENCOLUMN" },
		/*::[*/0x0009/*::]*/: { n:"USERRANGE" },
		/*::[*/0x000A/*::]*/: { n:"SYSTEMRANGE" },
		/*::[*/0x000B/*::]*/: { n:"ZEROFORCE" },
		/*::[*/0x000C/*::]*/: { n:"SORTKEYDIR" },
		/*::[*/0x000D/*::]*/: { n:"FILESEAL" },
		/*::[*/0x000E/*::]*/: { n:"DATAFILLNUMS" },
		/*::[*/0x000F/*::]*/: { n:"PRINTMAIN" },
		/*::[*/0x0010/*::]*/: { n:"PRINTSTRING" },
		/*::[*/0x0011/*::]*/: { n:"GRAPHMAIN" },
		/*::[*/0x0012/*::]*/: { n:"GRAPHSTRING" },
		/*::[*/0x0013/*::]*/: { n:"??" },
		/*::[*/0x0014/*::]*/: { n:"ERRCELL" },
		/*::[*/0x0015/*::]*/: { n:"NACELL" },
		/*::[*/0x0016/*::]*/: { n:"LABEL16", f:parse_LABEL_16},
		/*::[*/0x0017/*::]*/: { n:"NUMBER17", f:parse_NUMBER_17 },
		/*::[*/0x0018/*::]*/: { n:"NUMBER18", f:parse_NUMBER_18 },
		/*::[*/0x0019/*::]*/: { n:"FORMULA19", f:parse_FORMULA_19},
		/*::[*/0x001A/*::]*/: { n:"FORMULA1A" },
		/*::[*/0x001B/*::]*/: { n:"XFORMAT", f:parse_XFORMAT },
		/*::[*/0x001C/*::]*/: { n:"DTLABELMISC" },
		/*::[*/0x001D/*::]*/: { n:"DTLABELCELL" },
		/*::[*/0x001E/*::]*/: { n:"GRAPHWINDOW" },
		/*::[*/0x001F/*::]*/: { n:"CPA" },
		/*::[*/0x0020/*::]*/: { n:"LPLAUTO" },
		/*::[*/0x0021/*::]*/: { n:"QUERY" },
		/*::[*/0x0022/*::]*/: { n:"HIDDENSHEET" },
		/*::[*/0x0023/*::]*/: { n:"??" },
		/*::[*/0x0025/*::]*/: { n:"NUMBER25", f:parse_NUMBER_25 },
		/*::[*/0x0026/*::]*/: { n:"??" },
		/*::[*/0x0027/*::]*/: { n:"NUMBER27", f:parse_NUMBER_27 },
		/*::[*/0x0028/*::]*/: { n:"FORMULA28", f:parse_FORMULA_28 },
		/*::[*/0x008E/*::]*/: { n:"??" },
		/*::[*/0x0093/*::]*/: { n:"??" },
		/*::[*/0x0096/*::]*/: { n:"??" },
		/*::[*/0x0097/*::]*/: { n:"??" },
		/*::[*/0x0098/*::]*/: { n:"??" },
		/*::[*/0x0099/*::]*/: { n:"??" },
		/*::[*/0x009A/*::]*/: { n:"??" },
		/*::[*/0x009B/*::]*/: { n:"??" },
		/*::[*/0x009C/*::]*/: { n:"??" },
		/*::[*/0x00A3/*::]*/: { n:"??" },
		/*::[*/0x00AE/*::]*/: { n:"??" },
		/*::[*/0x00AF/*::]*/: { n:"??" },
		/*::[*/0x00B0/*::]*/: { n:"??" },
		/*::[*/0x00B1/*::]*/: { n:"??" },
		/*::[*/0x00B8/*::]*/: { n:"??" },
		/*::[*/0x00B9/*::]*/: { n:"??" },
		/*::[*/0x00BA/*::]*/: { n:"??" },
		/*::[*/0x00BB/*::]*/: { n:"??" },
		/*::[*/0x00BC/*::]*/: { n:"??" },
		/*::[*/0x00C3/*::]*/: { n:"??" },
		/*::[*/0x00C9/*::]*/: { n:"??" },
		/*::[*/0x00CC/*::]*/: { n:"SHEETNAMECS", f:parse_SHEETNAMECS },
		/*::[*/0x00CD/*::]*/: { n:"??" },
		/*::[*/0x00CE/*::]*/: { n:"??" },
		/*::[*/0x00CF/*::]*/: { n:"??" },
		/*::[*/0x00D0/*::]*/: { n:"??" },
		/*::[*/0x0100/*::]*/: { n:"??" },
		/*::[*/0x0103/*::]*/: { n:"??" },
		/*::[*/0x0104/*::]*/: { n:"??" },
		/*::[*/0x0105/*::]*/: { n:"??" },
		/*::[*/0x0106/*::]*/: { n:"??" },
		/*::[*/0x0107/*::]*/: { n:"??" },
		/*::[*/0x0109/*::]*/: { n:"??" },
		/*::[*/0x010A/*::]*/: { n:"??" },
		/*::[*/0x010B/*::]*/: { n:"??" },
		/*::[*/0x010C/*::]*/: { n:"??" },
		/*::[*/0x010E/*::]*/: { n:"??" },
		/*::[*/0x010F/*::]*/: { n:"??" },
		/*::[*/0x0180/*::]*/: { n:"??" },
		/*::[*/0x0185/*::]*/: { n:"??" },
		/*::[*/0x0186/*::]*/: { n:"??" },
		/*::[*/0x0189/*::]*/: { n:"??" },
		/*::[*/0x018C/*::]*/: { n:"??" },
		/*::[*/0x0200/*::]*/: { n:"??" },
		/*::[*/0x0202/*::]*/: { n:"??" },
		/*::[*/0x0201/*::]*/: { n:"??" },
		/*::[*/0x0204/*::]*/: { n:"??" },
		/*::[*/0x0205/*::]*/: { n:"??" },
		/*::[*/0x0280/*::]*/: { n:"??" },
		/*::[*/0x0281/*::]*/: { n:"??" },
		/*::[*/0x0282/*::]*/: { n:"??" },
		/*::[*/0x0283/*::]*/: { n:"??" },
		/*::[*/0x0284/*::]*/: { n:"??" },
		/*::[*/0x0285/*::]*/: { n:"??" },
		/*::[*/0x0286/*::]*/: { n:"??" },
		/*::[*/0x0287/*::]*/: { n:"??" },
		/*::[*/0x0288/*::]*/: { n:"??" },
		/*::[*/0x0292/*::]*/: { n:"??" },
		/*::[*/0x0293/*::]*/: { n:"??" },
		/*::[*/0x0294/*::]*/: { n:"??" },
		/*::[*/0x0295/*::]*/: { n:"??" },
		/*::[*/0x0296/*::]*/: { n:"??" },
		/*::[*/0x0299/*::]*/: { n:"??" },
		/*::[*/0x029A/*::]*/: { n:"??" },
		/*::[*/0x0300/*::]*/: { n:"??" },
		/*::[*/0x0304/*::]*/: { n:"??" },
		/*::[*/0x0601/*::]*/: { n:"SHEETINFOQP", f:parse_SHEETINFOQP },
		/*::[*/0x0640/*::]*/: { n:"??" },
		/*::[*/0x0642/*::]*/: { n:"??" },
		/*::[*/0x0701/*::]*/: { n:"??" },
		/*::[*/0x0702/*::]*/: { n:"??" },
		/*::[*/0x0703/*::]*/: { n:"??" },
		/*::[*/0x0704/*::]*/: { n:"??" },
		/*::[*/0x0780/*::]*/: { n:"??" },
		/*::[*/0x0800/*::]*/: { n:"??" },
		/*::[*/0x0801/*::]*/: { n:"??" },
		/*::[*/0x0804/*::]*/: { n:"??" },
		/*::[*/0x0A80/*::]*/: { n:"??" },
		/*::[*/0x2AF6/*::]*/: { n:"??" },
		/*::[*/0x3231/*::]*/: { n:"??" },
		/*::[*/0x6E49/*::]*/: { n:"??" },
		/*::[*/0x6F44/*::]*/: { n:"??" },
		/*::[*/0xFFFF/*::]*/: { n:"" }
	};
	return {
		sheet_to_wk1: sheet_to_wk1,
		book_to_wk3: book_to_wk3,
		to_workbook: lotus_to_workbook
	};
})();
/* 18.4.7 rPr CT_RPrElt */
function parse_rpr(rpr) {
	var font = {}, m = rpr.match(tagregex), i = 0;
	var pass = false;
	if(m) for(;i!=m.length; ++i) {
		var y = parsexmltag(m[i]);
		switch(y[0].replace(/\w*:/g,"")) {
			/* 18.8.12 condense CT_BooleanProperty */
			/* ** not required . */
			case '<condense': break;
			/* 18.8.17 extend CT_BooleanProperty */
			/* ** not required . */
			case '<extend': break;
			/* 18.8.36 shadow CT_BooleanProperty */
			/* ** not required . */
			case '<shadow':
				if(!y.val) break;
				/* falls through */
			case '<shadow>':
			case '<shadow/>': font.shadow = 1; break;
			case '</shadow>': break;

			/* 18.4.1 charset CT_IntProperty TODO */
			case '<charset':
				if(y.val == '1') break;
				font.cp = CS2CP[parseInt(y.val, 10)];
				break;

			/* 18.4.2 outline CT_BooleanProperty TODO */
			case '<outline':
				if(!y.val) break;
				/* falls through */
			case '<outline>':
			case '<outline/>': font.outline = 1; break;
			case '</outline>': break;

			/* 18.4.5 rFont CT_FontName */
			case '<rFont': font.name = y.val; break;

			/* 18.4.11 sz CT_FontSize */
			case '<sz': font.sz = y.val; break;

			/* 18.4.10 strike CT_BooleanProperty */
			case '<strike':
				if(!y.val) break;
				/* falls through */
			case '<strike>':
			case '<strike/>': font.strike = 1; break;
			case '</strike>': break;

			/* 18.4.13 u CT_UnderlineProperty */
			case '<u':
				if(!y.val) break;
				switch(y.val) {
					case 'double': font.uval = "double"; break;
					case 'singleAccounting': font.uval = "single-accounting"; break;
					case 'doubleAccounting': font.uval = "double-accounting"; break;
				}
				/* falls through */
			case '<u>':
			case '<u/>': font.u = 1; break;
			case '</u>': break;

			/* 18.8.2 b */
			case '<b':
				if(y.val == '0') break;
				/* falls through */
			case '<b>':
			case '<b/>': font.b = 1; break;
			case '</b>': break;

			/* 18.8.26 i */
			case '<i':
				if(y.val == '0') break;
				/* falls through */
			case '<i>':
			case '<i/>': font.i = 1; break;
			case '</i>': break;

			/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */
			case '<color':
				if(y.rgb) font.color = y.rgb.slice(2,8);
				break;
			case '<color>': case '<color/>': case '</color>': break;

			/* 18.8.18 family ST_FontFamily */
			case '<family': font.family = y.val; break;
			case '<family>': case '<family/>': case '</family>': break;

			/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */
			case '<vertAlign': font.valign = y.val; break;
			case '<vertAlign>': case '<vertAlign/>': case '</vertAlign>': break;

			/* 18.8.35 scheme CT_FontScheme TODO */
			case '<scheme': break;
			case '<scheme>': case '<scheme/>': case '</scheme>': break;

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': break;
			case '<ext': pass = true; break;
			case '</ext>': pass = false; break;
			default:
				if(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);
		}
	}
	return font;
}

var parse_rs = /*#__PURE__*/(function() {
	var tregex = matchtag("t"), rpregex = matchtag("rPr");
	/* 18.4.4 r CT_RElt */
	function parse_r(r) {
		/* 18.4.12 t ST_Xstring */
		var t = r.match(tregex)/*, cp = 65001*/;
		if(!t) return {t:"s", v:""};

		var o/*:Cell*/ = ({t:'s', v:unescapexml(t[1])}/*:any*/);
		var rpr = r.match(rpregex);
		if(rpr) o.s = parse_rpr(rpr[1]);
		return o;
	}
	var rregex = /<(?:\w+:)?r>/g, rend = /<\/(?:\w+:)?r>/;
	return function parse_rs(rs) {
		return rs.replace(rregex,"").split(rend).map(parse_r).filter(function(r) { return r.v; });
	};
})();


/* Parse a list of <r> tags */
var rs_to_html = /*#__PURE__*/(function parse_rs_factory() {
	var nlregex = /(\r\n|\n)/g;
	function parse_rpr2(font, intro, outro) {
		var style/*:Array<string>*/ = [];

		if(font.u) style.push("text-decoration: underline;");
		if(font.uval) style.push("text-underline-style:" + font.uval + ";");
		if(font.sz) style.push("font-size:" + font.sz + "pt;");
		if(font.outline) style.push("text-effect: outline;");
		if(font.shadow) style.push("text-shadow: auto;");
		intro.push('<span style="' + style.join("") + '">');

		if(font.b) { intro.push("<b>"); outro.push("</b>"); }
		if(font.i) { intro.push("<i>"); outro.push("</i>"); }
		if(font.strike) { intro.push("<s>"); outro.push("</s>"); }

		var align = font.valign || "";
		if(align == "superscript" || align == "super") align = "sup";
		else if(align == "subscript") align = "sub";
		if(align != "") { intro.push("<" + align + ">"); outro.push("</" + align + ">"); }

		outro.push("</span>");
		return font;
	}

	/* 18.4.4 r CT_RElt */
	function r_to_html(r) {
		var terms/*:[Array<string>, string, Array<string>]*/ = [[],r.v,[]];
		if(!r.v) return "";

		if(r.s) parse_rpr2(r.s, terms[0], terms[2]);

		return terms[0].join("") + terms[1].replace(nlregex,'<br/>') + terms[2].join("");
	}

	return function parse_rs(rs) {
		return rs.map(r_to_html).join("");
	};
})();

/* 18.4.8 si CT_Rst */
var sitregex = /<(?:\w+:)?t[^>]*>([^<]*)<\/(?:\w+:)?t>/g, sirregex = /<(?:\w+:)?r>/;
var sirphregex = /<(?:\w+:)?rPh.*?>([\s\S]*?)<\/(?:\w+:)?rPh>/g;
function parse_si(x, opts) {
	var html = opts ? opts.cellHTML : true;
	var z = {};
	if(!x) return { t: "" };
	//var y;
	/* 18.4.12 t ST_Xstring (Plaintext String) */
	// TODO: is whitespace actually valid here?
	if(x.match(/^\s*<(?:\w+:)?t[^>]*>/)) {
		z.t = unescapexml(utf8read(x.slice(x.indexOf(">")+1).split(/<\/(?:\w+:)?t>/)[0]||""));
		z.r = utf8read(x);
		if(html) z.h = escapehtml(z.t);
	}
	/* 18.4.4 r CT_RElt (Rich Text Run) */
	else if((/*y = */x.match(sirregex))) {
		z.r = utf8read(x);
		z.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join("").replace(tagregex,"")));
		if(html) z.h = rs_to_html(parse_rs(z.r));
	}
	/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */
	/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */
	return z;
}

/* 18.4 Shared String Table */
var sstr0 = /<(?:\w+:)?sst([^>]*)>([\s\S]*)<\/(?:\w+:)?sst>/;
var sstr1 = /<(?:\w+:)?(?:si|sstItem)>/g;
var sstr2 = /<\/(?:\w+:)?(?:si|sstItem)>/;
function parse_sst_xml(data/*:string*/, opts)/*:SST*/ {
	var s/*:SST*/ = ([]/*:any*/), ss = "";
	if(!data) return s;
	/* 18.4.9 sst CT_Sst */
	var sst = data.match(sstr0);
	if(sst) {
		ss = sst[2].replace(sstr1,"").split(sstr2);
		for(var i = 0; i != ss.length; ++i) {
			var o = parse_si(ss[i].trim(), opts);
			if(o != null) s[s.length] = o;
		}
		sst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;
	}
	return s;
}
/* [MS-XLSB] 2.4.221 BrtBeginSst */
function parse_BrtBeginSst(data) {
	return [data.read_shift(4), data.read_shift(4)];
}

/* [MS-XLSB] 2.1.7.45 Shared Strings */
function parse_sst_bin(data, opts)/*:SST*/ {
	var s/*:SST*/ = ([]/*:any*/);
	var pass = false;
	recordhopper(data, function hopper_sst(val, R, RT) {
		switch(RT) {
			case 0x009F: /* BrtBeginSst */
				s.Count = val[0]; s.Unique = val[1]; break;
			case 0x0013: /* BrtSSTItem */
				s.push(val); break;
			case 0x00A0: /* BrtEndSst */
				return true;

			case 0x0023: /* BrtFRTBegin */
				pass = true; break;
			case 0x0024: /* BrtFRTEnd */
				pass = false; break;

			default:
				if(R.T);
				if(!pass || opts.WTF) throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	});
	return s;
}
function _JS2ANSI(str/*:string*/)/*:Array<number>*/ {
	var o/*:Array<number>*/ = [], oo = str.split("");
	for(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);
	return o;
}

/* [MS-OFFCRYPTO] 2.1.4 Version */
function parse_CRYPTOVersion(blob, length/*:?number*/) {
	var o/*:any*/ = {};
	o.Major = blob.read_shift(2);
	o.Minor = blob.read_shift(2);
	/*:: if(length == null) return o; */
	if(length >= 4) blob.l += length - 4;
	return o;
}

/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */
function parse_DataSpaceVersionInfo(blob) {
	var o = {};
	o.id = blob.read_shift(0, 'lpp4');
	o.R = parse_CRYPTOVersion(blob, 4);
	o.U = parse_CRYPTOVersion(blob, 4);
	o.W = parse_CRYPTOVersion(blob, 4);
	return o;
}

/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */
function parse_DataSpaceMapEntry(blob) {
	var len = blob.read_shift(4);
	var end = blob.l + len - 4;
	var o = {};
	var cnt = blob.read_shift(4);
	var comps/*:Array<{t:number, v:string}>*/ = [];
	/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */
	while(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });
	o.name = blob.read_shift(0, 'lpp4');
	o.comps = comps;
	if(blob.l != end) throw new Error("Bad DataSpaceMapEntry: " + blob.l + " != " + end);
	return o;
}

/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */
function parse_DataSpaceMap(blob) {
	var o = [];
	blob.l += 4; // must be 0x8
	var cnt = blob.read_shift(4);
	while(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));
	return o;
}

/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */
function parse_DataSpaceDefinition(blob)/*:Array<string>*/ {
	var o/*:Array<string>*/ = [];
	blob.l += 4; // must be 0x8
	var cnt = blob.read_shift(4);
	while(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));
	return o;
}

/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */
function parse_TransformInfoHeader(blob) {
	var o = {};
	/*var len = */blob.read_shift(4);
	blob.l += 4; // must be 0x1
	o.id = blob.read_shift(0, 'lpp4');
	o.name = blob.read_shift(0, 'lpp4');
	o.R = parse_CRYPTOVersion(blob, 4);
	o.U = parse_CRYPTOVersion(blob, 4);
	o.W = parse_CRYPTOVersion(blob, 4);
	return o;
}

function parse_Primary(blob) {
	/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */
	var hdr = parse_TransformInfoHeader(blob);
	/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */
	hdr.ename = blob.read_shift(0, '8lpp4');
	hdr.blksz = blob.read_shift(4);
	hdr.cmode = blob.read_shift(4);
	if(blob.read_shift(4) != 0x04) throw new Error("Bad !Primary record");
	return hdr;
}

/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */
function parse_EncryptionHeader(blob, length/*:number*/) {
	var tgt = blob.l + length;
	var o = {};
	o.Flags = (blob.read_shift(4) & 0x3F);
	blob.l += 4;
	o.AlgID = blob.read_shift(4);
	var valid = false;
	switch(o.AlgID) {
		case 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;
		case 0x6801: valid = (o.Flags == 0x04); break;
		case 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;
		default: throw 'Unrecognized encryption algorithm: ' + o.AlgID;
	}
	if(!valid) throw new Error("Encryption Flags/AlgID mismatch");
	o.AlgIDHash = blob.read_shift(4);
	o.KeySize = blob.read_shift(4);
	o.ProviderType = blob.read_shift(4);
	blob.l += 8;
	o.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');
	blob.l = tgt;
	return o;
}

/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */
function parse_EncryptionVerifier(blob, length/*:number*/) {
	var o = {}, tgt = blob.l + length;
	blob.l += 4; // SaltSize must be 0x10
	o.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;
	o.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;
	/*var sz = */blob.read_shift(4);
	o.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;
	return o;
}

/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */
function parse_EncryptionInfo(blob) {
	var vers = parse_CRYPTOVersion(blob);
	switch(vers.Minor) {
		case 0x02: return [vers.Minor, parse_EncInfoStd(blob)];
		case 0x03: return [vers.Minor, parse_EncInfoExt()];
		case 0x04: return [vers.Minor, parse_EncInfoAgl(blob)];
	}
	throw new Error("ECMA-376 Encrypted file unrecognized Version: " + vers.Minor);
}

/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */
function parse_EncInfoStd(blob/*::, vers*/) {
	var flags = blob.read_shift(4);
	if((flags & 0x3F) != 0x24) throw new Error("EncryptionInfo mismatch");
	var sz = blob.read_shift(4);
	//var tgt = blob.l + sz;
	var hdr = parse_EncryptionHeader(blob, sz);
	var verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);
	return { t:"Std", h:hdr, v:verifier };
}
/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */
function parse_EncInfoExt(/*::blob, vers*/) { throw new Error("File is password-protected: ECMA-376 Extensible"); }
/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */
function parse_EncInfoAgl(blob/*::, vers*/) {
	var KeyData = ["saltSize","blockSize","keyBits","hashSize","cipherAlgorithm","cipherChaining","hashAlgorithm","saltValue"];
	blob.l+=4;
	var xml = blob.read_shift(blob.length - blob.l, 'utf8');
	var o = {};
	xml.replace(tagregex, function xml_agile(x) {
		var y/*:any*/ = parsexmltag(x);
		switch(strip_ns(y[0])) {
			case '<?xml': break;
			case '<encryption': case '</encryption>': break;
			case '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;
			case '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;
			case '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;
			case '</keyEncryptors>': break;

			case '<keyEncryptor': o.uri = y.uri; break;
			case '</keyEncryptor>': break;
			case '<encryptedKey': o.encs.push(y); break;
			default: throw y[0];
		}
	});
	return o;
}

/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */
function parse_RC4CryptoHeader(blob, length/*:number*/) {
	var o = {};
	var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;
	if(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);
	if(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);
	o.Flags = blob.read_shift(4); length -= 4;
	var sz = blob.read_shift(4); length -= 4;
	o.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;
	o.EncryptionVerifier = parse_EncryptionVerifier(blob, length);
	return o;
}
/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */
function parse_RC4Header(blob/*::, length*/) {
	var o = {};
	var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);
	if(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;
	o.Salt = blob.read_shift(16);
	o.EncryptedVerifier = blob.read_shift(16);
	o.EncryptedVerifierHash = blob.read_shift(16);
	return o;
}

/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */
function crypto_CreatePasswordVerifier_Method1(Password/*:string*/) {
	var Verifier = 0x0000, PasswordArray;
	var PasswordDecoded = _JS2ANSI(Password);
	var len = PasswordDecoded.length + 1, i, PasswordByte;
	var Intermediate1, Intermediate2, Intermediate3;
	PasswordArray = new_raw_buf(len);
	PasswordArray[0] = PasswordDecoded.length;
	for(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];
	for(i = len-1; i >= 0; --i) {
		PasswordByte = PasswordArray[i];
		Intermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;
		Intermediate2 = (Verifier << 1) & 0x7FFF;
		Intermediate3 = Intermediate1 | Intermediate2;
		Verifier = Intermediate3 ^ PasswordByte;
	}
	return Verifier ^ 0xCE4B;
}

/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */
var crypto_CreateXorArray_Method1 = /*#__PURE__*/(function() {
	var PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];
	var InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];
	var XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];
	var Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };
	var XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };
	var CreateXorKey_Method1 = function(Password) {
		var XorKey = InitialCode[Password.length - 1];
		var CurrentElement = 0x68;
		for(var i = Password.length-1; i >= 0; --i) {
			var Char = Password[i];
			for(var j = 0; j != 7; ++j) {
				if(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];
				Char *= 2; --CurrentElement;
			}
		}
		return XorKey;
	};
	return function(password/*:string*/) {
		var Password = _JS2ANSI(password);
		var XorKey = CreateXorKey_Method1(Password);
		var Index = Password.length;
		var ObfuscationArray = new_raw_buf(16);
		for(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;
		var Temp, PasswordLastChar, PadIndex;
		if((Index & 1) === 1) {
			Temp = XorKey >> 8;
			ObfuscationArray[Index] = XorRor(PadArray[0], Temp);
			--Index;
			Temp = XorKey & 0xFF;
			PasswordLastChar = Password[Password.length - 1];
			ObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);
		}
		while(Index > 0) {
			--Index;
			Temp = XorKey >> 8;
			ObfuscationArray[Index] = XorRor(Password[Index], Temp);
			--Index;
			Temp = XorKey & 0xFF;
			ObfuscationArray[Index] = XorRor(Password[Index], Temp);
		}
		Index = 15;
		PadIndex = 15 - Password.length;
		while(PadIndex > 0) {
			Temp = XorKey >> 8;
			ObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);
			--Index;
			--PadIndex;
			Temp = XorKey & 0xFF;
			ObfuscationArray[Index] = XorRor(Password[Index], Temp);
			--Index;
			--PadIndex;
		}
		return ObfuscationArray;
	};
})();

/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */
var crypto_DecryptData_Method1 = function(password/*:string*/, Data, XorArrayIndex, XorArray, O) {
	/* If XorArray is set, use it; if O is not set, make changes in-place */
	if(!O) O = Data;
	if(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);
	var Index, Value;
	for(Index = 0; Index != Data.length; ++Index) {
		Value = Data[Index];
		Value ^= XorArray[XorArrayIndex];
		Value = ((Value>>5) | (Value<<3)) & 0xFF;
		O[Index] = Value;
		++XorArrayIndex;
	}
	return [O, XorArrayIndex, XorArray];
};

var crypto_MakeXorDecryptor = function(password/*:string*/) {
	var XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);
	return function(Data) {
		var O = crypto_DecryptData_Method1("", Data, XorArrayIndex, XorArray);
		XorArrayIndex = O[1];
		return O[0];
	};
};

/* 2.5.343 */
function parse_XORObfuscation(blob, length, opts, out) {
	var o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) }/*:any*/);
	if(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);
	out.valid = o.verificationBytes === o.verifier;
	if(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);
	return o;
}

/* 2.4.117 */
function parse_FilePassHeader(blob, length/*:number*/, oo) {
	var o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;
	if(o.Info === 1) o.Data = parse_RC4Header(blob);
	else o.Data = parse_RC4CryptoHeader(blob, length);
	return o;
}
function parse_FilePass(blob, length/*:number*/, opts) {
	var o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }/*:any*/); /* wEncryptionType */
	if(o.Type) parse_FilePassHeader(blob, length-2, o);
	else parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);
	return o;
}


var RTF = /*#__PURE__*/(function() {
	function rtf_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {
		switch(opts.type) {
			case 'base64': return rtf_to_sheet_str(Base64_decode(d), opts);
			case 'binary': return rtf_to_sheet_str(d, opts);
			case 'buffer': return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);
			case 'array':  return rtf_to_sheet_str(cc2str(d), opts);
		}
		throw new Error("Unrecognized type " + opts.type);
	}

	/* TODO: this is a stub */
	function rtf_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {
		var o = opts || {};
		var ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);

		var rows = str.match(/\\trowd.*?\\row\b/g);
		if(!rows.length) throw new Error("RTF missing table");
		var range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:rows.length - 1}}/*:any*/);
		rows.forEach(function(rowtf, R) {
			if(Array.isArray(ws)) ws[R] = [];
			var rtfre = /\\\w+\b/g;
			var last_index = 0;
			var res;
			var C = -1;
			while((res = rtfre.exec(rowtf))) {
				switch(res[0]) {
					case "\\cell":
						var data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);
						if(data[0] == " ") data = data.slice(1);
						++C;
						if(data.length) {
							// TODO: value parsing, including codepage adjustments
							var cell = {v: data, t:"s"};
							if(Array.isArray(ws)) ws[R][C] = cell;
							else ws[encode_cell({r:R, c:C})] = cell;
						}
						break;
				}
				last_index = rtfre.lastIndex;
			}
			if(C > range.e.c) range.e.c = C;
		});
		ws['!ref'] = encode_range(range);
		return ws;
	}

	function rtf_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(rtf_to_sheet(d, opts), opts); }

	/* TODO: this is a stub */
	function sheet_to_rtf(ws/*:Worksheet*//*::, opts*/)/*:string*/ {
		var o = ["{\\rtf1\\ansi"];
		var r = safe_decode_range(ws['!ref']), cell/*:Cell*/;
		var dense = Array.isArray(ws);
		for(var R = r.s.r; R <= r.e.r; ++R) {
			o.push("\\trowd\\trautofit1");
			for(var C = r.s.c; C <= r.e.c; ++C) o.push("\\cellx" + (C+1));
			o.push("\\pard\\intbl");
			for(C = r.s.c; C <= r.e.c; ++C) {
				var coord = encode_cell({r:R,c:C});
				cell = dense ? (ws[R]||[])[C]: ws[coord];
				if(!cell || cell.v == null && (!cell.f || cell.F)) continue;
				o.push(" " + (cell.w || (format_cell(cell), cell.w)));
				o.push("\\cell");
			}
			o.push("\\pard\\intbl\\row");
		}
		return o.join("") + "}";
	}

	return {
		to_workbook: rtf_to_workbook,
		to_sheet: rtf_to_sheet,
		from_sheet: sheet_to_rtf
	};
})();
function hex2RGB(h) {
	var o = h.slice(h[0]==="#"?1:0).slice(0,6);
	return [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];
}
function rgb2Hex(rgb) {
	for(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);
	return o.toString(16).toUpperCase().slice(1);
}

function rgb2HSL(rgb) {
	var R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;
	var M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;
	if(C === 0) return [0, 0, R];

	var H6 = 0, S = 0, L2 = (M + m);
	S = C / (L2 > 1 ? 2 - L2 : L2);
	switch(M){
		case R: H6 = ((G - B) / C + 6)%6; break;
		case G: H6 = ((B - R) / C + 2); break;
		case B: H6 = ((R - G) / C + 4); break;
	}
	return [H6 / 6, S, L2 / 2];
}

function hsl2RGB(hsl){
	var H = hsl[0], S = hsl[1], L = hsl[2];
	var C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;
	var rgb = [m,m,m], h6 = 6*H;

	var X;
	if(S !== 0) switch(h6|0) {
		case 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;
		case 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;
		case 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;
		case 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;
		case 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;
		case 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;
	}
	for(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);
	return rgb;
}

/* 18.8.3 bgColor tint algorithm */
function rgb_tint(hex, tint) {
	if(tint === 0) return hex;
	var hsl = rgb2HSL(hex2RGB(hex));
	if (tint < 0) hsl[2] = hsl[2] * (1 + tint);
	else hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);
	return rgb2Hex(hsl2RGB(hsl));
}

/* 18.3.1.13 width calculations */
/* [MS-OI29500] 2.1.595 Column Width & Formatting */
var DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;
function width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }
function px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }
function char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }
//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }
//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }
function cycle_width(collw) { return char2width(px2char(width2px(collw))); }
/* XLSX/XLSB/XLS specify width in units of MDW */
function find_mdw_colw(collw) {
	var delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;
	if(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }
	MDW = _MDW;
}
/* XLML specifies width in terms of pixels */
/*function find_mdw_wpx(wpx) {
	var delta = Infinity, guess = 0, _MDW = MIN_MDW;
	for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {
		guess = char2width_(px2char_(wpx))*256;
		guess = (guess) % 1;
		if(guess > 0.5) guess--;
		if(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }
	}
	MDW = _MDW;
}*/

function process_col(coll/*:ColInfo*/) {
	if(coll.width) {
		coll.wpx = width2px(coll.width);
		coll.wch = px2char(coll.wpx);
		coll.MDW = MDW;
	} else if(coll.wpx) {
		coll.wch = px2char(coll.wpx);
		coll.width = char2width(coll.wch);
		coll.MDW = MDW;
	} else if(typeof coll.wch == 'number') {
		coll.width = char2width(coll.wch);
		coll.wpx = width2px(coll.width);
		coll.MDW = MDW;
	}
	if(coll.customWidth) delete coll.customWidth;
}

var DEF_PPI = 96, PPI = DEF_PPI;
function px2pt(px) { return px * 96 / PPI; }
function pt2px(pt) { return pt * PPI / 96; }

/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */
var XLMLPatternTypeMap = {
	"None": "none",
	"Solid": "solid",
	"Gray50": "mediumGray",
	"Gray75": "darkGray",
	"Gray25": "lightGray",
	"HorzStripe": "darkHorizontal",
	"VertStripe": "darkVertical",
	"ReverseDiagStripe": "darkDown",
	"DiagStripe": "darkUp",
	"DiagCross": "darkGrid",
	"ThickDiagCross": "darkTrellis",
	"ThinHorzStripe": "lightHorizontal",
	"ThinVertStripe": "lightVertical",
	"ThinReverseDiagStripe": "lightDown",
	"ThinHorzCross": "lightGrid"
};

/* 18.8.5 borders CT_Borders */
function parse_borders(t, styles, themes, opts) {
	styles.Borders = [];
	var border = {};
	var pass = false;
	(t[0].match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x);
		switch(strip_ns(y[0])) {
			case '<borders': case '<borders>': case '</borders>': break;

			/* 18.8.4 border CT_Border */
			case '<border': case '<border>': case '<border/>':
				border = /*::(*/{}/*:: :any)*/;
				if(y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);
				if(y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);
				styles.Borders.push(border);
				break;
			case '</border>': break;

			/* note: not in spec, appears to be CT_BorderPr */
			case '<left/>': break;
			case '<left': case '<left>': break;
			case '</left>': break;

			/* note: not in spec, appears to be CT_BorderPr */
			case '<right/>': break;
			case '<right': case '<right>': break;
			case '</right>': break;

			/* 18.8.43 top CT_BorderPr */
			case '<top/>': break;
			case '<top': case '<top>': break;
			case '</top>': break;

			/* 18.8.6 bottom CT_BorderPr */
			case '<bottom/>': break;
			case '<bottom': case '<bottom>': break;
			case '</bottom>': break;

			/* 18.8.13 diagonal CT_BorderPr */
			case '<diagonal': case '<diagonal>': case '<diagonal/>': break;
			case '</diagonal>': break;

			/* 18.8.25 horizontal CT_BorderPr */
			case '<horizontal': case '<horizontal>': case '<horizontal/>': break;
			case '</horizontal>': break;

			/* 18.8.44 vertical CT_BorderPr */
			case '<vertical': case '<vertical>': case '<vertical/>': break;
			case '</vertical>': break;

			/* 18.8.37 start CT_BorderPr */
			case '<start': case '<start>': case '<start/>': break;
			case '</start>': break;

			/* 18.8.16 end CT_BorderPr */
			case '<end': case '<end>': case '<end/>': break;
			case '</end>': break;

			/* 18.8.? color CT_Color */
			case '<color': case '<color>':
				break;
			case '<color/>': case '</color>': break;

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': break;
			case '<ext': pass = true; break;
			case '</ext>': pass = false; break;
			default: if(opts && opts.WTF) {
				if(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');
			}
		}
	});
}

/* 18.8.21 fills CT_Fills */
function parse_fills(t, styles, themes, opts) {
	styles.Fills = [];
	var fill = {};
	var pass = false;
	(t[0].match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x);
		switch(strip_ns(y[0])) {
			case '<fills': case '<fills>': case '</fills>': break;

			/* 18.8.20 fill CT_Fill */
			case '<fill>': case '<fill': case '<fill/>':
				fill = {}; styles.Fills.push(fill); break;
			case '</fill>': break;

			/* 18.8.24 gradientFill CT_GradientFill */
			case '<gradientFill>': break;
			case '<gradientFill':
			case '</gradientFill>': styles.Fills.push(fill); fill = {}; break;

			/* 18.8.32 patternFill CT_PatternFill */
			case '<patternFill': case '<patternFill>':
				if(y.patternType) fill.patternType = y.patternType;
				break;
			case '<patternFill/>': case '</patternFill>': break;

			/* 18.8.3 bgColor CT_Color */
			case '<bgColor':
				if(!fill.bgColor) fill.bgColor = {};
				if(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);
				if(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);
				if(y.tint) fill.bgColor.tint = parseFloat(y.tint);
				/* Excel uses ARGB strings */
				if(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);
				break;
			case '<bgColor/>': case '</bgColor>': break;

			/* 18.8.19 fgColor CT_Color */
			case '<fgColor':
				if(!fill.fgColor) fill.fgColor = {};
				if(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);
				if(y.tint) fill.fgColor.tint = parseFloat(y.tint);
				/* Excel uses ARGB strings */
				if(y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);
				break;
			case '<fgColor/>': case '</fgColor>': break;

			/* 18.8.38 stop CT_GradientStop */
			case '<stop': case '<stop/>': break;
			case '</stop>': break;

			/* 18.8.? color CT_Color */
			case '<color': case '<color/>': break;
			case '</color>': break;

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': break;
			case '<ext': pass = true; break;
			case '</ext>': pass = false; break;
			default: if(opts && opts.WTF) {
				if(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');
			}
		}
	});
}

/* 18.8.23 fonts CT_Fonts */
function parse_fonts(t, styles, themes, opts) {
	styles.Fonts = [];
	var font = {};
	var pass = false;
	(t[0].match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x);
		switch(strip_ns(y[0])) {
			case '<fonts': case '<fonts>': case '</fonts>': break;

			/* 18.8.22 font CT_Font */
			case '<font': case '<font>': break;
			case '</font>': case '<font/>':
				styles.Fonts.push(font);
				font = {};
				break;

			/* 18.8.29 name CT_FontName */
			case '<name': if(y.val) font.name = utf8read(y.val); break;
			case '<name/>': case '</name>': break;

			/* 18.8.2  b CT_BooleanProperty */
			case '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;
			case '<b/>': font.bold = 1; break;

			/* 18.8.26 i CT_BooleanProperty */
			case '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;
			case '<i/>': font.italic = 1; break;

			/* 18.4.13 u CT_UnderlineProperty */
			case '<u':
				switch(y.val) {
					case "none": font.underline = 0x00; break;
					case "single": font.underline = 0x01; break;
					case "double": font.underline = 0x02; break;
					case "singleAccounting": font.underline = 0x21; break;
					case "doubleAccounting": font.underline = 0x22; break;
				} break;
			case '<u/>': font.underline = 1; break;

			/* 18.4.10 strike CT_BooleanProperty */
			case '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;
			case '<strike/>': font.strike = 1; break;

			/* 18.4.2  outline CT_BooleanProperty */
			case '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;
			case '<outline/>': font.outline = 1; break;

			/* 18.8.36 shadow CT_BooleanProperty */
			case '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;
			case '<shadow/>': font.shadow = 1; break;

			/* 18.8.12 condense CT_BooleanProperty */
			case '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;
			case '<condense/>': font.condense = 1; break;

			/* 18.8.17 extend CT_BooleanProperty */
			case '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;
			case '<extend/>': font.extend = 1; break;

			/* 18.4.11 sz CT_FontSize */
			case '<sz': if(y.val) font.sz = +y.val; break;
			case '<sz/>': case '</sz>': break;

			/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */
			case '<vertAlign': if(y.val) font.vertAlign = y.val; break;
			case '<vertAlign/>': case '</vertAlign>': break;

			/* 18.8.18 family CT_FontFamily */
			case '<family': if(y.val) font.family = parseInt(y.val,10); break;
			case '<family/>': case '</family>': break;

			/* 18.8.35 scheme CT_FontScheme */
			case '<scheme': if(y.val) font.scheme = y.val; break;
			case '<scheme/>': case '</scheme>': break;

			/* 18.4.1 charset CT_IntProperty */
			case '<charset':
				if(y.val == '1') break;
				y.codepage = CS2CP[parseInt(y.val, 10)];
				break;

			/* 18.?.? color CT_Color */
			case '<color':
				if(!font.color) font.color = {};
				if(y.auto) font.color.auto = parsexmlbool(y.auto);

				if(y.rgb) font.color.rgb = y.rgb.slice(-6);
				else if(y.indexed) {
					font.color.index = parseInt(y.indexed, 10);
					var icv = XLSIcv[font.color.index];
					if(font.color.index == 81) icv = XLSIcv[1];
					if(!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid
					font.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);
				} else if(y.theme) {
					font.color.theme = parseInt(y.theme, 10);
					if(y.tint) font.color.tint = parseFloat(y.tint);
					if(y.theme && themes.themeElements && themes.themeElements.clrScheme) {
						font.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);
					}
				}

				break;
			case '<color/>': case '</color>': break;

			/* note: sometimes mc:AlternateContent appears bare */
			case '<AlternateContent': pass = true; break;
			case '</AlternateContent>': pass = false; break;

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': break;
			case '<ext': pass = true; break;
			case '</ext>': pass = false; break;
			default: if(opts && opts.WTF) {
				if(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');
			}
		}
	});
}

/* 18.8.31 numFmts CT_NumFmts */
function parse_numFmts(t, styles, opts) {
	styles.NumberFmt = [];
	var k/*Array<number>*/ = (keys(table_fmt)/*:any*/);
	for(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];
	var m = t[0].match(tagregex);
	if(!m) return;
	for(i=0; i < m.length; ++i) {
		var y = parsexmltag(m[i]);
		switch(strip_ns(y[0])) {
			case '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;
			case '<numFmt': {
				var f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);
				styles.NumberFmt[j] = f;
				if(j>0) {
					if(j > 0x188) {
						for(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;
						styles.NumberFmt[j] = f;
					}
					SSF_load(f,j);
				}
			} break;
			case '</numFmt>': break;
			default: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');
		}
	}
}

/* 18.8.10 cellXfs CT_CellXfs */
var cellXF_uint = [ "numFmtId", "fillId", "fontId", "borderId", "xfId" ];
var cellXF_bool = [ "applyAlignment", "applyBorder", "applyFill", "applyFont", "applyNumberFormat", "applyProtection", "pivotButton", "quotePrefix" ];
function parse_cellXfs(t, styles, opts) {
	styles.CellXf = [];
	var xf;
	var pass = false;
	(t[0].match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x), i = 0;
		switch(strip_ns(y[0])) {
			case '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;

			/* 18.8.45 xf CT_Xf */
			case '<xf': case '<xf/>':
				xf = y;
				delete xf[0];
				for(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])
					xf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);
				for(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])
					xf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);
				if(styles.NumberFmt && xf.numFmtId > 0x188) {
					for(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }
				}
				styles.CellXf.push(xf); break;
			case '</xf>': break;

			/* 18.8.1 alignment CT_CellAlignment */
			case '<alignment': case '<alignment/>':
				var alignment = {};
				if(y.vertical) alignment.vertical = y.vertical;
				if(y.horizontal) alignment.horizontal = y.horizontal;
				if(y.textRotation != null) alignment.textRotation = y.textRotation;
				if(y.indent) alignment.indent = y.indent;
				if(y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);
				xf.alignment = alignment;
				break;
			case '</alignment>': break;

			/* 18.8.33 protection CT_CellProtection */
			case '<protection':
				break;
			case '</protection>': case '<protection/>': break;

			/* note: sometimes mc:AlternateContent appears bare */
			case '<AlternateContent': pass = true; break;
			case '</AlternateContent>': pass = false; break;

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': break;
			case '<ext': pass = true; break;
			case '</ext>': pass = false; break;
			default: if(opts && opts.WTF) {
				if(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');
			}
		}
	});
}

/* 18.8 Styles CT_Stylesheet*/
var parse_sty_xml= /*#__PURE__*/(function make_pstyx() {
var numFmtRegex = /<(?:\w+:)?numFmts([^>]*)>[\S\s]*?<\/(?:\w+:)?numFmts>/;
var cellXfRegex = /<(?:\w+:)?cellXfs([^>]*)>[\S\s]*?<\/(?:\w+:)?cellXfs>/;
var fillsRegex = /<(?:\w+:)?fills([^>]*)>[\S\s]*?<\/(?:\w+:)?fills>/;
var fontsRegex = /<(?:\w+:)?fonts([^>]*)>[\S\s]*?<\/(?:\w+:)?fonts>/;
var bordersRegex = /<(?:\w+:)?borders([^>]*)>[\S\s]*?<\/(?:\w+:)?borders>/;

return function parse_sty_xml(data, themes, opts) {
	var styles = {};
	if(!data) return styles;
	data = data.replace(/<!--([\s\S]*?)-->/mg,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");
	/* 18.8.39 styleSheet CT_Stylesheet */
	var t;

	/* 18.8.31 numFmts CT_NumFmts ? */
	if((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);

	/* 18.8.23 fonts CT_Fonts ? */
	if((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);

	/* 18.8.21 fills CT_Fills ? */
	if((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);

	/* 18.8.5  borders CT_Borders ? */
	if((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);

	/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */
	/* 18.8.8  cellStyles CT_CellStyles ? */

	/* 18.8.10 cellXfs CT_CellXfs ? */
	if((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);

	/* 18.8.15 dxfs CT_Dxfs ? */
	/* 18.8.42 tableStyles CT_TableStyles ? */
	/* 18.8.11 colors CT_Colors ? */
	/* 18.2.10 extLst CT_ExtensionList ? */

	return styles;
};
})();
/* [MS-XLSB] 2.4.657 BrtFmt */
function parse_BrtFmt(data, length/*:number*/) {
	var numFmtId = data.read_shift(2);
	var stFmtCode = parse_XLWideString(data);
	return [numFmtId, stFmtCode];
}

/* [MS-XLSB] 2.4.659 BrtFont TODO */
function parse_BrtFont(data, length/*:number*/, opts) {
	var out = ({}/*:any*/);

	out.sz = data.read_shift(2) / 20;

	var grbit = parse_FontFlags(data);
	if(grbit.fItalic) out.italic = 1;
	if(grbit.fCondense) out.condense = 1;
	if(grbit.fExtend) out.extend = 1;
	if(grbit.fShadow) out.shadow = 1;
	if(grbit.fOutline) out.outline = 1;
	if(grbit.fStrikeout) out.strike = 1;

	var bls = data.read_shift(2);
	if(bls === 0x02BC) out.bold = 1;

	switch(data.read_shift(2)) {
		/* case 0: out.vertAlign = "baseline"; break; */
		case 1: out.vertAlign = "superscript"; break;
		case 2: out.vertAlign = "subscript"; break;
	}

	var underline = data.read_shift(1);
	if(underline != 0) out.underline = underline;

	var family = data.read_shift(1);
	if(family > 0) out.family = family;

	var bCharSet = data.read_shift(1);
	if(bCharSet > 0) out.charset = bCharSet;

	data.l++;
	out.color = parse_BrtColor(data);

	switch(data.read_shift(1)) {
		/* case 0: out.scheme = "none": break; */
		case 1: out.scheme = "major"; break;
		case 2: out.scheme = "minor"; break;
	}

	out.name = parse_XLWideString(data);

	return out;
}
/* TODO: gradient fill representation */
var parse_BrtFill = parsenoop;

/* [MS-XLSB] 2.4.824 BrtXF */
function parse_BrtXF(data, length/*:number*/) {
	var tgt = data.l + length;
	var ixfeParent = data.read_shift(2);
	var ifmt = data.read_shift(2);
	data.l = tgt;
	return {ixfe:ixfeParent, numFmtId:ifmt };
}
/* [MS-XLSB] 2.4.302 BrtBorder TODO */
var parse_BrtBorder = parsenoop;

/* [MS-XLSB] 2.1.7.50 Styles */
function parse_sty_bin(data, themes, opts) {
	var styles = {};
	styles.NumberFmt = ([]/*:any*/);
	for(var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];

	styles.CellXf = [];
	styles.Fonts = [];
	var state/*:Array<string>*/ = [];
	var pass = false;
	recordhopper(data, function hopper_sty(val, R, RT) {
		switch(RT) {
			case 0x002C: /* BrtFmt */
				styles.NumberFmt[val[0]] = val[1]; SSF_load(val[1], val[0]);
				break;
			case 0x002B: /* BrtFont */
				styles.Fonts.push(val);
				if(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {
					val.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);
				}
				break;
			case 0x0401: /* BrtKnownFonts */ break;
			case 0x002D: /* BrtFill */
				break;
			case 0x002E: /* BrtBorder */
				break;
			case 0x002F: /* BrtXF */
				if(state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {
					styles.CellXf.push(val);
				}
				break;
			case 0x0030: /* BrtStyle */
			case 0x01FB: /* BrtDXF */
			case 0x023C: /* BrtMRUColor */
			case 0x01DB: /* BrtIndexedColor */
				break;

			case 0x0493: /* BrtDXF14 */
			case 0x0836: /* BrtDXF15 */
			case 0x046A: /* BrtSlicerStyleElement */
			case 0x0200: /* BrtTableStyleElement */
			case 0x082F: /* BrtTimelineStyleElement */
			case 0x0C00: /* BrtUid */
				break;

			case 0x0023: /* BrtFRTBegin */
				pass = true; break;
			case 0x0024: /* BrtFRTEnd */
				pass = false; break;
			case 0x0025: /* BrtACBegin */
				state.push(RT); pass = true; break;
			case 0x0026: /* BrtACEnd */
				state.pop(); pass = false; break;

			default:
				if(R.T > 0) state.push(RT);
				else if(R.T < 0) state.pop();
				else if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */)) throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	});
	return styles;
}
/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */
var XLSXThemeClrScheme = [
	'</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>',
	'</a:accent1>', '</a:accent2>', '</a:accent3>',
	'</a:accent4>', '</a:accent5>', '</a:accent6>',
	'</a:hlink>', '</a:folHlink>'
];
/* 20.1.6.2 clrScheme CT_ColorScheme */
function parse_clrScheme(t, themes, opts) {
	themes.themeElements.clrScheme = [];
	var color = {};
	(t[0].match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x);
		switch(y[0]) {
			/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */
			case '<a:clrScheme': case '</a:clrScheme>': break;

			/* 20.1.2.3.32 srgbClr CT_SRgbColor */
			case '<a:srgbClr':
				color.rgb = y.val; break;

			/* 20.1.2.3.33 sysClr CT_SystemColor */
			case '<a:sysClr':
				color.rgb = y.lastClr; break;

			/* 20.1.4.1.1 accent1 (Accent 1) */
			/* 20.1.4.1.2 accent2 (Accent 2) */
			/* 20.1.4.1.3 accent3 (Accent 3) */
			/* 20.1.4.1.4 accent4 (Accent 4) */
			/* 20.1.4.1.5 accent5 (Accent 5) */
			/* 20.1.4.1.6 accent6 (Accent 6) */
			/* 20.1.4.1.9 dk1 (Dark 1) */
			/* 20.1.4.1.10 dk2 (Dark 2) */
			/* 20.1.4.1.15 folHlink (Followed Hyperlink) */
			/* 20.1.4.1.19 hlink (Hyperlink) */
			/* 20.1.4.1.22 lt1 (Light 1) */
			/* 20.1.4.1.23 lt2 (Light 2) */
			case '<a:dk1>': case '</a:dk1>':
			case '<a:lt1>': case '</a:lt1>':
			case '<a:dk2>': case '</a:dk2>':
			case '<a:lt2>': case '</a:lt2>':
			case '<a:accent1>': case '</a:accent1>':
			case '<a:accent2>': case '</a:accent2>':
			case '<a:accent3>': case '</a:accent3>':
			case '<a:accent4>': case '</a:accent4>':
			case '<a:accent5>': case '</a:accent5>':
			case '<a:accent6>': case '</a:accent6>':
			case '<a:hlink>': case '</a:hlink>':
			case '<a:folHlink>': case '</a:folHlink>':
				if (y[0].charAt(1) === '/') {
					themes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;
					color = {};
				} else {
					color.name = y[0].slice(3, y[0].length - 1);
				}
				break;

			default: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');
		}
	});
}

/* 20.1.4.1.18 fontScheme CT_FontScheme */
function parse_fontScheme(/*::t, themes, opts*/) { }

/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */
function parse_fmtScheme(/*::t, themes, opts*/) { }

var clrsregex = /<a:clrScheme([^>]*)>[\s\S]*<\/a:clrScheme>/;
var fntsregex = /<a:fontScheme([^>]*)>[\s\S]*<\/a:fontScheme>/;
var fmtsregex = /<a:fmtScheme([^>]*)>[\s\S]*<\/a:fmtScheme>/;

/* 20.1.6.10 themeElements CT_BaseStyles */
function parse_themeElements(data, themes, opts) {
	themes.themeElements = {};

	var t;

	[
		/* clrScheme CT_ColorScheme */
		['clrScheme', clrsregex, parse_clrScheme],
		/* fontScheme CT_FontScheme */
		['fontScheme', fntsregex, parse_fontScheme],
		/* fmtScheme CT_StyleMatrix */
		['fmtScheme', fmtsregex, parse_fmtScheme]
	].forEach(function(m) {
		if(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');
		m[2](t, themes, opts);
	});
}

var themeltregex = /<a:themeElements([^>]*)>[\s\S]*<\/a:themeElements>/;

/* 14.2.7 Theme Part */
function parse_theme_xml(data/*:string*/, opts) {
	/* 20.1.6.9 theme CT_OfficeStyleSheet */
	if(!data || data.length === 0) data = write_theme();

	var t;
	var themes = {};

	/* themeElements CT_BaseStyles */
	if(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');
	parse_themeElements(t[0], themes, opts);
	themes.raw = data;
	return themes;
}

function write_theme(Themes, opts)/*:string*/ {
	if(opts && opts.themeXLSX) return opts.themeXLSX;
	if(Themes && typeof Themes.raw == "string") return Themes.raw;
	var o = [XML_HEADER];
	o[o.length] = '<a:theme xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" name="Office Theme">';
	o[o.length] =  '<a:themeElements>';

	o[o.length] =   '<a:clrScheme name="Office">';
	o[o.length] =    '<a:dk1><a:sysClr val="windowText" lastClr="000000"/></a:dk1>';
	o[o.length] =    '<a:lt1><a:sysClr val="window" lastClr="FFFFFF"/></a:lt1>';
	o[o.length] =    '<a:dk2><a:srgbClr val="1F497D"/></a:dk2>';
	o[o.length] =    '<a:lt2><a:srgbClr val="EEECE1"/></a:lt2>';
	o[o.length] =    '<a:accent1><a:srgbClr val="4F81BD"/></a:accent1>';
	o[o.length] =    '<a:accent2><a:srgbClr val="C0504D"/></a:accent2>';
	o[o.length] =    '<a:accent3><a:srgbClr val="9BBB59"/></a:accent3>';
	o[o.length] =    '<a:accent4><a:srgbClr val="8064A2"/></a:accent4>';
	o[o.length] =    '<a:accent5><a:srgbClr val="4BACC6"/></a:accent5>';
	o[o.length] =    '<a:accent6><a:srgbClr val="F79646"/></a:accent6>';
	o[o.length] =    '<a:hlink><a:srgbClr val="0000FF"/></a:hlink>';
	o[o.length] =    '<a:folHlink><a:srgbClr val="800080"/></a:folHlink>';
	o[o.length] =   '</a:clrScheme>';

	o[o.length] =   '<a:fontScheme name="Office">';
	o[o.length] =    '<a:majorFont>';
	o[o.length] =     '<a:latin typeface="Cambria"/>';
	o[o.length] =     '<a:ea typeface=""/>';
	o[o.length] =     '<a:cs typeface=""/>';
	o[o.length] =     '<a:font script="Jpan" typeface="ＭＳ Ｐゴシック"/>';
	o[o.length] =     '<a:font script="Hang" typeface="맑은 고딕"/>';
	o[o.length] =     '<a:font script="Hans" typeface="宋体"/>';
	o[o.length] =     '<a:font script="Hant" typeface="新細明體"/>';
	o[o.length] =     '<a:font script="Arab" typeface="Times New Roman"/>';
	o[o.length] =     '<a:font script="Hebr" typeface="Times New Roman"/>';
	o[o.length] =     '<a:font script="Thai" typeface="Tahoma"/>';
	o[o.length] =     '<a:font script="Ethi" typeface="Nyala"/>';
	o[o.length] =     '<a:font script="Beng" typeface="Vrinda"/>';
	o[o.length] =     '<a:font script="Gujr" typeface="Shruti"/>';
	o[o.length] =     '<a:font script="Khmr" typeface="MoolBoran"/>';
	o[o.length] =     '<a:font script="Knda" typeface="Tunga"/>';
	o[o.length] =     '<a:font script="Guru" typeface="Raavi"/>';
	o[o.length] =     '<a:font script="Cans" typeface="Euphemia"/>';
	o[o.length] =     '<a:font script="Cher" typeface="Plantagenet Cherokee"/>';
	o[o.length] =     '<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';
	o[o.length] =     '<a:font script="Tibt" typeface="Microsoft Himalaya"/>';
	o[o.length] =     '<a:font script="Thaa" typeface="MV Boli"/>';
	o[o.length] =     '<a:font script="Deva" typeface="Mangal"/>';
	o[o.length] =     '<a:font script="Telu" typeface="Gautami"/>';
	o[o.length] =     '<a:font script="Taml" typeface="Latha"/>';
	o[o.length] =     '<a:font script="Syrc" typeface="Estrangelo Edessa"/>';
	o[o.length] =     '<a:font script="Orya" typeface="Kalinga"/>';
	o[o.length] =     '<a:font script="Mlym" typeface="Kartika"/>';
	o[o.length] =     '<a:font script="Laoo" typeface="DokChampa"/>';
	o[o.length] =     '<a:font script="Sinh" typeface="Iskoola Pota"/>';
	o[o.length] =     '<a:font script="Mong" typeface="Mongolian Baiti"/>';
	o[o.length] =     '<a:font script="Viet" typeface="Times New Roman"/>';
	o[o.length] =     '<a:font script="Uigh" typeface="Microsoft Uighur"/>';
	o[o.length] =     '<a:font script="Geor" typeface="Sylfaen"/>';
	o[o.length] =    '</a:majorFont>';
	o[o.length] =    '<a:minorFont>';
	o[o.length] =     '<a:latin typeface="Calibri"/>';
	o[o.length] =     '<a:ea typeface=""/>';
	o[o.length] =     '<a:cs typeface=""/>';
	o[o.length] =     '<a:font script="Jpan" typeface="ＭＳ Ｐゴシック"/>';
	o[o.length] =     '<a:font script="Hang" typeface="맑은 고딕"/>';
	o[o.length] =     '<a:font script="Hans" typeface="宋体"/>';
	o[o.length] =     '<a:font script="Hant" typeface="新細明體"/>';
	o[o.length] =     '<a:font script="Arab" typeface="Arial"/>';
	o[o.length] =     '<a:font script="Hebr" typeface="Arial"/>';
	o[o.length] =     '<a:font script="Thai" typeface="Tahoma"/>';
	o[o.length] =     '<a:font script="Ethi" typeface="Nyala"/>';
	o[o.length] =     '<a:font script="Beng" typeface="Vrinda"/>';
	o[o.length] =     '<a:font script="Gujr" typeface="Shruti"/>';
	o[o.length] =     '<a:font script="Khmr" typeface="DaunPenh"/>';
	o[o.length] =     '<a:font script="Knda" typeface="Tunga"/>';
	o[o.length] =     '<a:font script="Guru" typeface="Raavi"/>';
	o[o.length] =     '<a:font script="Cans" typeface="Euphemia"/>';
	o[o.length] =     '<a:font script="Cher" typeface="Plantagenet Cherokee"/>';
	o[o.length] =     '<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';
	o[o.length] =     '<a:font script="Tibt" typeface="Microsoft Himalaya"/>';
	o[o.length] =     '<a:font script="Thaa" typeface="MV Boli"/>';
	o[o.length] =     '<a:font script="Deva" typeface="Mangal"/>';
	o[o.length] =     '<a:font script="Telu" typeface="Gautami"/>';
	o[o.length] =     '<a:font script="Taml" typeface="Latha"/>';
	o[o.length] =     '<a:font script="Syrc" typeface="Estrangelo Edessa"/>';
	o[o.length] =     '<a:font script="Orya" typeface="Kalinga"/>';
	o[o.length] =     '<a:font script="Mlym" typeface="Kartika"/>';
	o[o.length] =     '<a:font script="Laoo" typeface="DokChampa"/>';
	o[o.length] =     '<a:font script="Sinh" typeface="Iskoola Pota"/>';
	o[o.length] =     '<a:font script="Mong" typeface="Mongolian Baiti"/>';
	o[o.length] =     '<a:font script="Viet" typeface="Arial"/>';
	o[o.length] =     '<a:font script="Uigh" typeface="Microsoft Uighur"/>';
	o[o.length] =     '<a:font script="Geor" typeface="Sylfaen"/>';
	o[o.length] =    '</a:minorFont>';
	o[o.length] =   '</a:fontScheme>';

	o[o.length] =   '<a:fmtScheme name="Office">';
	o[o.length] =    '<a:fillStyleLst>';
	o[o.length] =     '<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';
	o[o.length] =     '<a:gradFill rotWithShape="1">';
	o[o.length] =      '<a:gsLst>';
	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="50000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
	o[o.length] =       '<a:gs pos="35000"><a:schemeClr val="phClr"><a:tint val="37000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="15000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
	o[o.length] =      '</a:gsLst>';
	o[o.length] =      '<a:lin ang="16200000" scaled="1"/>';
	o[o.length] =     '</a:gradFill>';
	o[o.length] =     '<a:gradFill rotWithShape="1">';
	o[o.length] =      '<a:gsLst>';
	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="100000"/><a:shade val="100000"/><a:satMod val="130000"/></a:schemeClr></a:gs>';
	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="50000"/><a:shade val="100000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
	o[o.length] =      '</a:gsLst>';
	o[o.length] =      '<a:lin ang="16200000" scaled="0"/>';
	o[o.length] =     '</a:gradFill>';
	o[o.length] =    '</a:fillStyleLst>';
	o[o.length] =    '<a:lnStyleLst>';
	o[o.length] =     '<a:ln w="9525" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"><a:shade val="95000"/><a:satMod val="105000"/></a:schemeClr></a:solidFill><a:prstDash val="solid"/></a:ln>';
	o[o.length] =     '<a:ln w="25400" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';
	o[o.length] =     '<a:ln w="38100" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';
	o[o.length] =    '</a:lnStyleLst>';
	o[o.length] =    '<a:effectStyleLst>';
	o[o.length] =     '<a:effectStyle>';
	o[o.length] =      '<a:effectLst>';
	o[o.length] =       '<a:outerShdw blurRad="40000" dist="20000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="38000"/></a:srgbClr></a:outerShdw>';
	o[o.length] =      '</a:effectLst>';
	o[o.length] =     '</a:effectStyle>';
	o[o.length] =     '<a:effectStyle>';
	o[o.length] =      '<a:effectLst>';
	o[o.length] =       '<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';
	o[o.length] =      '</a:effectLst>';
	o[o.length] =     '</a:effectStyle>';
	o[o.length] =     '<a:effectStyle>';
	o[o.length] =      '<a:effectLst>';
	o[o.length] =       '<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';
	o[o.length] =      '</a:effectLst>';
	o[o.length] =      '<a:scene3d><a:camera prst="orthographicFront"><a:rot lat="0" lon="0" rev="0"/></a:camera><a:lightRig rig="threePt" dir="t"><a:rot lat="0" lon="0" rev="1200000"/></a:lightRig></a:scene3d>';
	o[o.length] =      '<a:sp3d><a:bevelT w="63500" h="25400"/></a:sp3d>';
	o[o.length] =     '</a:effectStyle>';
	o[o.length] =    '</a:effectStyleLst>';
	o[o.length] =    '<a:bgFillStyleLst>';
	o[o.length] =     '<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';
	o[o.length] =     '<a:gradFill rotWithShape="1">';
	o[o.length] =      '<a:gsLst>';
	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="40000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
	o[o.length] =       '<a:gs pos="40000"><a:schemeClr val="phClr"><a:tint val="45000"/><a:shade val="99000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="20000"/><a:satMod val="255000"/></a:schemeClr></a:gs>';
	o[o.length] =      '</a:gsLst>';
	o[o.length] =      '<a:path path="circle"><a:fillToRect l="50000" t="-80000" r="50000" b="180000"/></a:path>';
	o[o.length] =     '</a:gradFill>';
	o[o.length] =     '<a:gradFill rotWithShape="1">';
	o[o.length] =      '<a:gsLst>';
	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="80000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="30000"/><a:satMod val="200000"/></a:schemeClr></a:gs>';
	o[o.length] =      '</a:gsLst>';
	o[o.length] =      '<a:path path="circle"><a:fillToRect l="50000" t="50000" r="50000" b="50000"/></a:path>';
	o[o.length] =     '</a:gradFill>';
	o[o.length] =    '</a:bgFillStyleLst>';
	o[o.length] =   '</a:fmtScheme>';
	o[o.length] =  '</a:themeElements>';

	o[o.length] =  '<a:objectDefaults>';
	o[o.length] =   '<a:spDef>';
	o[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="1"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="3"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="2"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="lt1"/></a:fontRef></a:style>';
	o[o.length] =   '</a:spDef>';
	o[o.length] =   '<a:lnDef>';
	o[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="2"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="0"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="1"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="tx1"/></a:fontRef></a:style>';
	o[o.length] =   '</a:lnDef>';
	o[o.length] =  '</a:objectDefaults>';
	o[o.length] =  '<a:extraClrSchemeLst/>';
	o[o.length] = '</a:theme>';
	return o.join("");
}
/* [MS-XLS] 2.4.326 TODO: payload is a zip file */
function parse_Theme(blob, length, opts) {
	var end = blob.l + length;
	var dwThemeVersion = blob.read_shift(4);
	if(dwThemeVersion === 124226) return;
	if(!opts.cellStyles) { blob.l = end; return; }
	var data = blob.slice(blob.l);
	blob.l = end;
	var zip; try { zip = zip_read(data, {type: "array"}); } catch(e) { return; }
	var themeXML = getzipstr(zip, "theme/theme/theme1.xml", true);
	if(!themeXML) return;
	return parse_theme_xml(themeXML, opts);
}

/* 2.5.49 */
function parse_ColorTheme(blob/*::, length*/) { return blob.read_shift(4); }

/* 2.5.155 */
function parse_FullColorExt(blob/*::, length*/) {
	var o = {};
	o.xclrType = blob.read_shift(2);
	o.nTintShade = blob.read_shift(2);
	switch(o.xclrType) {
		case 0: blob.l += 4; break;
		case 1: o.xclrValue = parse_IcvXF(blob, 4); break;
		case 2: o.xclrValue = parse_LongRGBA(blob); break;
		case 3: o.xclrValue = parse_ColorTheme(blob); break;
		case 4: blob.l += 4; break;
	}
	blob.l += 8;
	return o;
}

/* 2.5.164 TODO: read 7 bits*/
function parse_IcvXF(blob, length) {
	return parsenoop(blob, length);
}

/* 2.5.280 */
function parse_XFExtGradient(blob, length) {
	return parsenoop(blob, length);
}

/* [MS-XLS] 2.5.108 */
function parse_ExtProp(blob/*::, length*/)/*:Array<any>*/ {
	var extType = blob.read_shift(2);
	var cb = blob.read_shift(2) - 4;
	var o = [extType];
	switch(extType) {
		case 0x04: case 0x05: case 0x07: case 0x08:
		case 0x09: case 0x0A: case 0x0B: case 0x0D:
			o[1] = parse_FullColorExt(blob); break;
		case 0x06: o[1] = parse_XFExtGradient(blob, cb); break;
		case 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;
		default: throw new Error("Unrecognized ExtProp type: " + extType + " " + cb);
	}
	return o;
}

/* 2.4.355 */
function parse_XFExt(blob, length) {
	var end = blob.l + length;
	blob.l += 2;
	var ixfe = blob.read_shift(2);
	blob.l += 2;
	var cexts = blob.read_shift(2);
	var ext/*:AOA*/ = [];
	while(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));
	return {ixfe:ixfe, ext:ext};
}

/* xf is an XF, see parse_XFExt for xfext */
function update_xfext(xf, xfext) {
	xfext.forEach(function(xfe) {
		switch(xfe[0]) { /* 2.5.108 extPropData */
					}
	});
}

function parse_BrtMdtinfo(data, length) {
  return {
    flags: data.read_shift(4),
    version: data.read_shift(4),
    name: parse_XLWideString(data)
  };
}
function parse_BrtMdb(data) {
  var out = [];
  var cnt = data.read_shift(4);
  while (cnt-- > 0)
    out.push([data.read_shift(4), data.read_shift(4)]);
  return out;
}
function parse_BrtBeginEsmdb(data) {
  data.l += 4;
  return data.read_shift(4) != 0;
}
function parse_xlmeta_bin(data, name, _opts) {
  var out = { Types: [], Cell: [], Value: [] };
  var opts = _opts || {};
  var state = [];
  var pass = false;
  var metatype = 2;
  recordhopper(data, function(val, R, RT) {
    switch (RT) {
      case 335:
        out.Types.push({ name: val.name });
        break;
      case 51:
        val.forEach(function(r) {
          if (metatype == 1)
            out.Cell.push({ type: out.Types[r[0] - 1].name, index: r[1] });
          else if (metatype == 0)
            out.Value.push({ type: out.Types[r[0] - 1].name, index: r[1] });
        });
        break;
      case 337:
        metatype = val ? 1 : 0;
        break;
      case 338:
        metatype = 2;
        break;
      case 35:
        state.push(RT);
        pass = true;
        break;
      case 36:
        state.pop();
        pass = false;
        break;
      default:
        if (R.T) ; else if (!pass || opts.WTF && state[state.length - 1] != 35)
          throw new Error("Unexpected record 0x" + RT.toString(16));
    }
  });
  return out;
}
function parse_xlmeta_xml(data, name, opts) {
  var out = { Types: [], Cell: [], Value: [] };
  if (!data)
    return out;
  var pass = false;
  var metatype = 2;
  var lastmeta;
  data.replace(tagregex, function(x) {
    var y = parsexmltag(x);
    switch (strip_ns(y[0])) {
      case "<?xml":
        break;
      case "<metadata":
      case "</metadata>":
        break;
      case "<metadataTypes":
      case "</metadataTypes>":
        break;
      case "<metadataType":
        out.Types.push({ name: y.name });
        break;
      case "</metadataType>":
        break;
      case "<futureMetadata":
        for (var j = 0; j < out.Types.length; ++j)
          if (out.Types[j].name == y.name)
            lastmeta = out.Types[j];
        break;
      case "</futureMetadata>":
        break;
      case "<bk>":
        break;
      case "</bk>":
        break;
      case "<rc":
        if (metatype == 1)
          out.Cell.push({ type: out.Types[y.t - 1].name, index: +y.v });
        else if (metatype == 0)
          out.Value.push({ type: out.Types[y.t - 1].name, index: +y.v });
        break;
      case "</rc>":
        break;
      case "<cellMetadata":
        metatype = 1;
        break;
      case "</cellMetadata>":
        metatype = 2;
        break;
      case "<valueMetadata":
        metatype = 0;
        break;
      case "</valueMetadata>":
        metatype = 2;
        break;
      case "<extLst":
      case "<extLst>":
      case "</extLst>":
      case "<extLst/>":
        break;
      case "<ext":
        pass = true;
        break;
      case "</ext>":
        pass = false;
        break;
      case "<rvb":
        if (!lastmeta)
          break;
        if (!lastmeta.offsets)
          lastmeta.offsets = [];
        lastmeta.offsets.push(+y.i);
        break;
      default:
        if (!pass && opts.WTF)
          throw new Error("unrecognized " + y[0] + " in metadata");
    }
    return x;
  });
  return out;
}
/* 18.6 Calculation Chain */
function parse_cc_xml(data/*::, name, opts*/)/*:Array<any>*/ {
	var d = [];
	if(!data) return d;
	var i = 1;
	(data.match(tagregex)||[]).forEach(function(x) {
		var y = parsexmltag(x);
		switch(y[0]) {
			case '<?xml': break;
			/* 18.6.2  calcChain CT_CalcChain 1 */
			case '<calcChain': case '<calcChain>': case '</calcChain>': break;
			/* 18.6.1  c CT_CalcCell 1 */
			case '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;
		}
	});
	return d;
}

//function write_cc_xml(data, opts) { }

/* [MS-XLSB] 2.6.4.1 */
function parse_BrtCalcChainItem$(data) {
	var out = {};
	out.i = data.read_shift(4);
	var cell = {};
	cell.r = data.read_shift(4);
	cell.c = data.read_shift(4);
	out.r = encode_cell(cell);
	var flags = data.read_shift(1);
	if(flags & 0x2) out.l = '1';
	if(flags & 0x8) out.a = '1';
	return out;
}

/* 18.6 Calculation Chain */
function parse_cc_bin(data, name, opts) {
	var out = [];
	recordhopper(data, function hopper_cc(val, R, RT) {
		switch(RT) {
			case 0x003F: /* 'BrtCalcChainItem$' */
				out.push(val); break;

			default:
				if(R.T);
				else throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	});
	return out;
}

//function write_cc_bin(data, opts) { }
/* 18.14 Supplementary Workbook Data */
function parse_xlink_xml(/*::data, rel, name:string, _opts*/) {
	//var opts = _opts || {};
	//if(opts.WTF) throw "XLSX External Link";
}

/* [MS-XLSB] 2.1.7.25 External Link */
function parse_xlink_bin(data, rel, name/*:string*/, _opts) {
	if(!data) return data;
	var opts = _opts || {};

	var pass = false;

	recordhopper(data, function xlink_parse(val, R, RT) {
		switch(RT) {
			case 0x0167: /* 'BrtSupTabs' */
			case 0x016B: /* 'BrtExternTableStart' */
			case 0x016C: /* 'BrtExternTableEnd' */
			case 0x016E: /* 'BrtExternRowHdr' */
			case 0x016F: /* 'BrtExternCellBlank' */
			case 0x0170: /* 'BrtExternCellReal' */
			case 0x0171: /* 'BrtExternCellBool' */
			case 0x0172: /* 'BrtExternCellError' */
			case 0x0173: /* 'BrtExternCellString' */
			case 0x01D8: /* 'BrtExternValueMeta' */
			case 0x0241: /* 'BrtSupNameStart' */
			case 0x0242: /* 'BrtSupNameValueStart' */
			case 0x0243: /* 'BrtSupNameValueEnd' */
			case 0x0244: /* 'BrtSupNameNum' */
			case 0x0245: /* 'BrtSupNameErr' */
			case 0x0246: /* 'BrtSupNameSt' */
			case 0x0247: /* 'BrtSupNameNil' */
			case 0x0248: /* 'BrtSupNameBool' */
			case 0x0249: /* 'BrtSupNameFmla' */
			case 0x024A: /* 'BrtSupNameBits' */
			case 0x024B: /* 'BrtSupNameEnd' */
				break;

			case 0x0023: /* 'BrtFRTBegin' */
				pass = true; break;
			case 0x0024: /* 'BrtFRTEnd' */
				pass = false; break;

			default:
				if(R.T);
				else if(!pass || opts.WTF) throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	}, opts);
}
/* 20.5 DrawingML - SpreadsheetML Drawing */
/* 20.5.2.35 wsDr CT_Drawing */
function parse_drawing(data, rels/*:any*/) {
	if(!data) return "??";
	/*
	  Chartsheet Drawing:
	   - 20.5.2.35 wsDr CT_Drawing
	    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor
	     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame
	      - 20.1.2.2.16 graphic CT_GraphicalObject
	       - 20.1.2.2.17 graphicData CT_GraphicalObjectData
          - chart reference
	   the actual type is based on the URI of the graphicData
		TODO: handle embedded charts and other types of graphics
	*/
	var id = (data.match(/<c:chart [^>]*r:id="([^"]*)"/)||["",""])[1];

	return rels['!id'][id].Target;
}
function sheet_insert_comments(sheet, comments/*:Array<RawComment>*/, threaded/*:boolean*/, people/*:?Array<any>*/) {
	var dense = Array.isArray(sheet);
	var cell/*:Cell*/;
	comments.forEach(function(comment) {
		var r = decode_cell(comment.ref);
		if(dense) {
			if(!sheet[r.r]) sheet[r.r] = [];
			cell = sheet[r.r][r.c];
		} else cell = sheet[comment.ref];
		if (!cell) {
			cell = ({t:"z"}/*:any*/);
			if(dense) sheet[r.r][r.c] = cell;
			else sheet[comment.ref] = cell;
			var range = safe_decode_range(sheet["!ref"]||"BDWGO1000001:A1");
			if(range.s.r > r.r) range.s.r = r.r;
			if(range.e.r < r.r) range.e.r = r.r;
			if(range.s.c > r.c) range.s.c = r.c;
			if(range.e.c < r.c) range.e.c = r.c;
			var encoded = encode_range(range);
			if (encoded !== sheet["!ref"]) sheet["!ref"] = encoded;
		}

		if (!cell.c) cell.c = [];
		var o/*:Comment*/ = ({a: comment.author, t: comment.t, r: comment.r, T: threaded});
		if(comment.h) o.h = comment.h;

		/* threaded comments always override */
		for(var i = cell.c.length - 1; i >= 0; --i) {
			if(!threaded && cell.c[i].T) return;
			if(threaded && !cell.c[i].T) cell.c.splice(i, 1);
		}
		if(threaded && people) for(i = 0; i < people.length; ++i) {
			if(o.a == people[i].id) { o.a = people[i].name || o.a; break; }
		}
		cell.c.push(o);
	});
}

/* 18.7 Comments */
function parse_comments_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {
	/* 18.7.6 CT_Comments */
	if(data.match(/<(?:\w+:)?comments *\/>/)) return [];
	var authors/*:Array<string>*/ = [];
	var commentList/*:Array<RawComment>*/ = [];
	var authtag = data.match(/<(?:\w+:)?authors>([\s\S]*)<\/(?:\w+:)?authors>/);
	if(authtag && authtag[1]) authtag[1].split(/<\/\w*:?author>/).forEach(function(x) {
		if(x === "" || x.trim() === "") return;
		var a = x.match(/<(?:\w+:)?author[^>]*>(.*)/);
		if(a) authors.push(a[1]);
	});
	var cmnttag = data.match(/<(?:\w+:)?commentList>([\s\S]*)<\/(?:\w+:)?commentList>/);
	if(cmnttag && cmnttag[1]) cmnttag[1].split(/<\/\w*:?comment>/).forEach(function(x) {
		if(x === "" || x.trim() === "") return;
		var cm = x.match(/<(?:\w+:)?comment[^>]*>/);
		if(!cm) return;
		var y = parsexmltag(cm[0]);
		var comment/*:RawComment*/ = ({ author: y.authorId && authors[y.authorId] || "sheetjsghost", ref: y.ref, guid: y.guid }/*:any*/);
		var cell = decode_cell(y.ref);
		if(opts.sheetRows && opts.sheetRows <= cell.r) return;
		var textMatch = x.match(/<(?:\w+:)?text>([\s\S]*)<\/(?:\w+:)?text>/);
		var rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:"",t:"",h:""};
		comment.r = rt.r;
		if(rt.r == "<t></t>") rt.t = rt.h = "";
		comment.t = (rt.t||"").replace(/\r\n/g,"\n").replace(/\r/g,"\n");
		if(opts.cellHTML) comment.h = rt.h;
		commentList.push(comment);
	});
	return commentList;
}

/* [MS-XLSX] 2.1.17 */
function parse_tcmnt_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {
	var out = [];
	var pass = false, comment = {}, tidx = 0;
	data.replace(tagregex, function xml_tcmnt(x, idx) {
		var y/*:any*/ = parsexmltag(x);
		switch(strip_ns(y[0])) {
			case '<?xml': break;

			/* 2.6.207 ThreadedComments CT_ThreadedComments */
			case '<ThreadedComments': break;
			case '</ThreadedComments>': break;

			/* 2.6.205 threadedComment CT_ThreadedComment */
			case '<threadedComment': comment = {author: y.personId, guid: y.id, ref: y.ref, T: 1}; break;
			case '</threadedComment>': if(comment.t != null) out.push(comment); break;

			case '<text>': case '<text': tidx = idx + x.length; break;
			case '</text>': comment.t = data.slice(tidx, idx).replace(/\r\n/g, "\n").replace(/\r/g, "\n"); break;

			/* 2.6.206 mentions CT_ThreadedCommentMentions TODO */
			case '<mentions': case '<mentions>': pass = true; break;
			case '</mentions>': pass = false; break;

			/* 2.6.202 mention CT_Mention TODO */

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;
			/* 18.2.7  ext CT_Extension + */
			case '<ext': pass=true; break;
			case '</ext>': pass=false; break;

			default: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');
		}
		return x;
	});
	return out;
}

/* [MS-XLSX] 2.1.18 */
function parse_people_xml(data/*:string*/, opts) {
	var out = [];
	var pass = false;
	data.replace(tagregex, function xml_tcmnt(x) {
		var y/*:any*/ = parsexmltag(x);
		switch(strip_ns(y[0])) {
			case '<?xml': break;

			/* 2.4.85 personList CT_PersonList */
			case '<personList': break;
			case '</personList>': break;

			/* 2.6.203 person CT_Person TODO: providers */
			case '<person': out.push({name: y.displayname, id: y.id }); break;
			case '</person>': break;

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;
			/* 18.2.7  ext CT_Extension + */
			case '<ext': pass=true; break;
			case '</ext>': pass=false; break;

			default: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');
		}
		return x;
	});
	return out;
}
/* [MS-XLSB] 2.4.28 BrtBeginComment */
function parse_BrtBeginComment(data) {
	var out = {};
	out.iauthor = data.read_shift(4);
	var rfx = parse_UncheckedRfX(data);
	out.rfx = rfx.s;
	out.ref = encode_cell(rfx.s);
	data.l += 16; /*var guid = parse_GUID(data); */
	return out;
}

/* [MS-XLSB] 2.4.327 BrtCommentAuthor */
var parse_BrtCommentAuthor = parse_XLWideString;

/* [MS-XLSB] 2.1.7.8 Comments */
function parse_comments_bin(data, opts)/*:Array<RawComment>*/ {
	var out/*:Array<RawComment>*/ = [];
	var authors/*:Array<string>*/ = [];
	var c = {};
	var pass = false;
	recordhopper(data, function hopper_cmnt(val, R, RT) {
		switch(RT) {
			case 0x0278: /* 'BrtCommentAuthor' */
				authors.push(val); break;
			case 0x027B: /* 'BrtBeginComment' */
				c = val; break;
			case 0x027D: /* 'BrtCommentText' */
				c.t = val.t; c.h = val.h; c.r = val.r; break;
			case 0x027C: /* 'BrtEndComment' */
				c.author = authors[c.iauthor];
				delete (c/*:any*/).iauthor;
				if(opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;
				if(!c.t) c.t = "";
				delete c.rfx; out.push(c); break;

			case 0x0C00: /* 'BrtUid' */
				break;

			case 0x0023: /* 'BrtFRTBegin' */
				pass = true; break;
			case 0x0024: /* 'BrtFRTEnd' */
				pass = false; break;
			case 0x0025: /* 'BrtACBegin' */ break;
			case 0x0026: /* 'BrtACEnd' */ break;


			default:
				if(R.T);
				else if(!pass || opts.WTF) throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	});
	return out;
}
var CT_VBA = "application/vnd.ms-office.vbaProject";
function make_vba_xls(cfb) {
  var newcfb = CFB.utils.cfb_new({ root: "R" });
  cfb.FullPaths.forEach(function(p, i) {
    if (p.slice(-1) === "/" || !p.match(/_VBA_PROJECT_CUR/))
      return;
    var newpath = p.replace(/^[^\/]*/, "R").replace(/\/_VBA_PROJECT_CUR\u0000*/, "");
    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);
  });
  return CFB.write(newcfb);
}
/* macro and dialog sheet stubs */
function parse_ds_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }
function parse_ds_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }
function parse_ms_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }
function parse_ms_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }
/* TODO: it will be useful to parse the function str */
var rc_to_a1 = /*#__PURE__*/(function(){
	var rcregex = /(^|[^A-Za-z_])R(\[?-?\d+\]|[1-9]\d*|)C(\[?-?\d+\]|[1-9]\d*|)(?![A-Za-z0-9_])/g;
	var rcbase/*:Cell*/ = ({r:0,c:0}/*:any*/);
	function rcfunc($$,$1,$2,$3) {
		var cRel = false, rRel = false;

		if($2.length == 0) rRel = true;
		else if($2.charAt(0) == "[") { rRel = true; $2 = $2.slice(1, -1); }

		if($3.length == 0) cRel = true;
		else if($3.charAt(0) == "[") { cRel = true; $3 = $3.slice(1, -1); }

		var R = $2.length>0?parseInt($2,10)|0:0, C = $3.length>0?parseInt($3,10)|0:0;

		if(cRel) C += rcbase.c; else --C;
		if(rRel) R += rcbase.r; else --R;
		return $1 + (cRel ? "" : "$") + encode_col(C) + (rRel ? "" : "$") + encode_row(R);
	}
	return function rc_to_a1(fstr/*:string*/, base/*:Cell*/)/*:string*/ {
		rcbase = base;
		return fstr.replace(rcregex, rcfunc);
	};
})();

var crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})(?![_.\(A-Za-z0-9])/g;
var a1_to_rc = /*#__PURE__*/(function(){
	return function a1_to_rc(fstr/*:string*/, base/*:CellAddress*/) {
		return fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {
			var c = decode_col($3) - ($2 ? 0 : base.c);
			var r = decode_row($5) - ($4 ? 0 : base.r);
			var R = (r == 0 ? "" : !$4 ? "[" + r + "]" : (r+1));
			var C = (c == 0 ? "" : !$2 ? "[" + c + "]" : (c+1));
			return $1 + "R" + R + "C" + C;
		});
	};
})();

/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */
function shift_formula_str(f/*:string*/, delta/*:Cell*/)/*:string*/ {
	return f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {
		return $1+($2=="$" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4=="$" ? $4+$5 : encode_row(decode_row($5) + delta.r));
	});
}

function shift_formula_xlsx(f/*:string*/, range/*:string*/, cell/*:string*/)/*:string*/ {
	var r = decode_range(range), s = r.s, c = decode_cell(cell);
	var delta = {r:c.r - s.r, c:c.c - s.c};
	return shift_formula_str(f, delta);
}

/* TODO: parse formula */
function fuzzyfmla(f/*:string*/)/*:boolean*/ {
	if(f.length == 1) return false;
	return true;
}

function _xlfn(f/*:string*/)/*:string*/ {
	return f.replace(/_xlfn\./g,"");
}
function parseread1(blob) { blob.l+=1; return; }

/* [MS-XLS] 2.5.51 */
function parse_ColRelU(blob, length) {
	var c = blob.read_shift(length == 1 ? 1 : 2);
	return [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];
}

/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */
function parse_RgceArea(blob, length, opts) {
	var w = 2;
	if(opts) {
		if(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob);
		else if(opts.biff == 12) w = 4;
	}
	var r=blob.read_shift(w), R=blob.read_shift(w);
	var c=parse_ColRelU(blob, 2);
	var C=parse_ColRelU(blob, 2);
	return { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };
}
/* BIFF 2-5 encodes flags in the row field */
function parse_RgceArea_BIFF2(blob/*::, length, opts*/) {
	var r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);
	var c=blob.read_shift(1);
	var C=blob.read_shift(1);
	return { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };
}

/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */
function parse_RgceAreaRel(blob, length, opts) {
	if(opts.biff < 8) return parse_RgceArea_BIFF2(blob);
	var r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);
	var c=parse_ColRelU(blob, 2);
	var C=parse_ColRelU(blob, 2);
	return { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };
}

/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */
function parse_RgceLoc(blob, length, opts) {
	if(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob);
	var r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);
	var c = parse_ColRelU(blob, 2);
	return {r:r, c:c[0], cRel:c[1], rRel:c[2]};
}
function parse_RgceLoc_BIFF2(blob/*::, length, opts*/) {
	var r = parse_ColRelU(blob, 2);
	var c = blob.read_shift(1);
	return {r:r[0], c:c, cRel:r[1], rRel:r[2]};
}

/* [MS-XLS] 2.5.198.107, 2.5.47 */
function parse_RgceElfLoc(blob/*::, length, opts*/) {
	var r = blob.read_shift(2);
	var c = blob.read_shift(2);
	return {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };
}

/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */
function parse_RgceLocRel(blob, length, opts) {
	var biff = opts && opts.biff ? opts.biff : 8;
	if(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob);
	var r = blob.read_shift(biff >= 12 ? 4 : 2);
	var cl = blob.read_shift(2);
	var cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;
	cl &= 0x3FFF;
	if(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;
	if(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;
	return {r:r,c:cl,cRel:cRel,rRel:rRel};
}
function parse_RgceLocRel_BIFF2(blob/*::, length:number, opts*/) {
	var rl = blob.read_shift(2);
	var c = blob.read_shift(1);
	var rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;
	rl &= 0x3FFF;
	if(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;
	if(cRel == 1 && c >= 0x80) c = c - 0x100;
	return {r:rl,c:c,cRel:cRel,rRel:rRel};
}

/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */
function parse_PtgArea(blob, length, opts) {
	var type = (blob[blob.l++] & 0x60) >> 5;
	var area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);
	return [type, area];
}

/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */
function parse_PtgArea3d(blob, length, opts) {
	var type = (blob[blob.l++] & 0x60) >> 5;
	var ixti = blob.read_shift(2, 'i');
	var w = 8;
	if(opts) switch(opts.biff) {
		case 5: blob.l += 12; w = 6; break;
		case 12: w = 12; break;
	}
	var area = parse_RgceArea(blob, w, opts);
	return [type, ixti, area];
}

/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */
function parse_PtgAreaErr(blob, length, opts) {
	var type = (blob[blob.l++] & 0x60) >> 5;
	blob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);
	return [type];
}
/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */
function parse_PtgAreaErr3d(blob, length, opts) {
	var type = (blob[blob.l++] & 0x60) >> 5;
	var ixti = blob.read_shift(2);
	var w = 8;
	if(opts) switch(opts.biff) {
		case 5: blob.l += 12; w = 6; break;
		case 12: w = 12; break;
	}
	blob.l += w;
	return [type, ixti];
}

/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */
function parse_PtgAreaN(blob, length, opts) {
	var type = (blob[blob.l++] & 0x60) >> 5;
	var area = parse_RgceAreaRel(blob, length - 1, opts);
	return [type, area];
}

/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */
function parse_PtgArray(blob, length, opts) {
	var type = (blob[blob.l++] & 0x60) >> 5;
	blob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;
	return [type];
}

/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */
function parse_PtgAttrBaxcel(blob) {
	var bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */
	var bitBaxcel = 1;
	blob.l += 4;
	return [bitSemi, bitBaxcel];
}

/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */
function parse_PtgAttrChoose(blob, length, opts)/*:Array<number>*/ {
	blob.l +=2;
	var offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);
	var o/*:Array<number>*/ = [];
	/* offset is 1 less than the number of elements */
	for(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));
	return o;
}

/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */
function parse_PtgAttrGoto(blob, length, opts) {
	var bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;
	blob.l += 2;
	return [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];
}

/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */
function parse_PtgAttrIf(blob, length, opts) {
	var bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;
	blob.l += 2;
	return [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];
}

/* [MS-XLSB] 2.5.97.28 */
function parse_PtgAttrIfError(blob) {
	var bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;
	blob.l += 2;
	return [bitIf, blob.read_shift(2)];
}

/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */
function parse_PtgAttrSemi(blob, length, opts) {
	var bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;
	blob.l += opts && opts.biff == 2 ? 3 : 4;
	return [bitSemi];
}

/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */
function parse_PtgAttrSpaceType(blob/*::, length*/) {
	var type = blob.read_shift(1), cch = blob.read_shift(1);
	return [type, cch];
}

/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */
function parse_PtgAttrSpace(blob) {
	blob.read_shift(2);
	return parse_PtgAttrSpaceType(blob);
}

/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */
function parse_PtgAttrSpaceSemi(blob) {
	blob.read_shift(2);
	return parse_PtgAttrSpaceType(blob);
}

/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */
function parse_PtgRef(blob, length, opts) {
	//var ptg = blob[blob.l] & 0x1F;
	var type = (blob[blob.l] & 0x60)>>5;
	blob.l += 1;
	var loc = parse_RgceLoc(blob, 0, opts);
	return [type, loc];
}

/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */
function parse_PtgRefN(blob, length, opts) {
	var type = (blob[blob.l] & 0x60)>>5;
	blob.l += 1;
	var loc = parse_RgceLocRel(blob, 0, opts);
	return [type, loc];
}

/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */
function parse_PtgRef3d(blob, length, opts) {
	var type = (blob[blob.l] & 0x60)>>5;
	blob.l += 1;
	var ixti = blob.read_shift(2); // XtiIndex
	if(opts && opts.biff == 5) blob.l += 12;
	var loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel
	return [type, ixti, loc];
}


/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */
function parse_PtgFunc(blob, length, opts) {
	//var ptg = blob[blob.l] & 0x1F;
	var type = (blob[blob.l] & 0x60)>>5;
	blob.l += 1;
	var iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);
	return [FtabArgc[iftab], Ftab[iftab], type];
}
/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */
function parse_PtgFuncVar(blob, length, opts) {
	var type = blob[blob.l++];
	var cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);
	return [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];
}

function parsetab(blob) {
	return [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];
}

/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */
function parse_PtgAttrSum(blob, length, opts) {
	blob.l += opts && opts.biff == 2 ? 3 : 4; return;
}

/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */
function parse_PtgExp(blob, length, opts) {
	blob.l++;
	if(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];
	var row = blob.read_shift(2);
	var col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);
	return [row, col];
}

/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */
function parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }

/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */
function parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }

/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */
function parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}

/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */
function parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob); }

/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */
function parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }

/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */
/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */
function parse_SerAr(blob, biff/*:number*/) {
	var val = [blob.read_shift(1)];
	if(biff == 12) switch(val[0]) {
		case 0x02: val[0] = 0x04; break; /* SerBool */
		case 0x04: val[0] = 0x10; break; /* SerErr */
		case 0x00: val[0] = 0x01; break; /* SerNum */
		case 0x01: val[0] = 0x02; break; /* SerStr */
	}
	switch(val[0]) {
		case 0x04: /* SerBool -- boolean */
			val[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';
			if(biff != 12) blob.l += 7; break;
		case 0x25: /* appears to be an alias */
		case 0x10: /* SerErr -- error */
			val[1] = BErr[blob[blob.l]];
			blob.l += ((biff == 12) ? 4 : 8); break;
		case 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */
			blob.l += 8; break;
		case 0x01: /* SerNum -- Xnum */
			val[1] = parse_Xnum(blob); break;
		case 0x02: /* SerStr -- XLUnicodeString (<256 chars) */
			val[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;
		default: throw new Error("Bad SerAr: " + val[0]); /* Unreachable */
	}
	return val;
}

/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */
function parse_PtgExtraMem(blob, cce, opts) {
	var count = blob.read_shift((opts.biff == 12) ? 4 : 2);
	var out/*:Array<Range>*/ = [];
	for(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob));
	return out;
}

/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */
function parse_PtgExtraArray(blob, length, opts) {
	var rows = 0, cols = 0;
	if(opts.biff == 12) {
		rows = blob.read_shift(4); // DRw
		cols = blob.read_shift(4); // DCol
	} else {
		cols = 1 + blob.read_shift(1); //DColByteU
		rows = 1 + blob.read_shift(2); //DRw
	}
	if(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }
	// $FlowIgnore
	for(var i = 0, o/*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i)
		for(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);
	return o;
}

/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */
function parse_PtgName(blob, length, opts) {
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	var w = (!opts || (opts.biff >= 8)) ? 4 : 2;
	var nameindex = blob.read_shift(w);
	switch(opts.biff) {
		case 2: blob.l += 5; break;
		case 3: case 4: blob.l += 8; break;
		case 5: blob.l += 12; break;
	}
	return [type, 0, nameindex];
}

/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */
function parse_PtgNameX(blob, length, opts) {
	if(opts.biff == 5) return parse_PtgNameX_BIFF5(blob);
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	var ixti = blob.read_shift(2); // XtiIndex
	var nameindex = blob.read_shift(4);
	return [type, ixti, nameindex];
}
function parse_PtgNameX_BIFF5(blob/*::, length, opts*/) {
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	var ixti = blob.read_shift(2, 'i'); // XtiIndex
	blob.l += 8;
	var nameindex = blob.read_shift(2);
	blob.l += 12;
	return [type, ixti, nameindex];
}

/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */
function parse_PtgMemArea(blob, length, opts) {
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	blob.l += (opts && opts.biff == 2 ? 3 : 4);
	var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);
	return [type, cce];
}

/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */
function parse_PtgMemFunc(blob, length, opts) {
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);
	return [type, cce];
}


/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */
function parse_PtgRefErr(blob, length, opts) {
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	blob.l += 4;
	if(opts.biff < 8) blob.l--;
	if(opts.biff == 12) blob.l += 2;
	return [type];
}

/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */
function parse_PtgRefErr3d(blob, length, opts) {
	var type = (blob[blob.l++] & 0x60) >> 5;
	var ixti = blob.read_shift(2);
	var w = 4;
	if(opts) switch(opts.biff) {
		case 5: w = 15; break;
		case 12: w = 6; break;
	}
	blob.l += w;
	return [type, ixti];
}

/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */
var parse_PtgMemErr = parsenoop;
/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */
var parse_PtgMemNoMem = parsenoop;
/* [MS-XLS] 2.5.198.92 */
var parse_PtgTbl = parsenoop;

function parse_PtgElfLoc(blob, length, opts) {
	blob.l += 2;
	return [parse_RgceElfLoc(blob)];
}
function parse_PtgElfNoop(blob/*::, length, opts*/) {
	blob.l += 6;
	return [];
}
/* [MS-XLS] 2.5.198.46 */
var parse_PtgElfCol = parse_PtgElfLoc;
/* [MS-XLS] 2.5.198.47 */
var parse_PtgElfColS = parse_PtgElfNoop;
/* [MS-XLS] 2.5.198.48 */
var parse_PtgElfColSV = parse_PtgElfNoop;
/* [MS-XLS] 2.5.198.49 */
var parse_PtgElfColV = parse_PtgElfLoc;
/* [MS-XLS] 2.5.198.50 */
function parse_PtgElfLel(blob/*::, length, opts*/) {
	blob.l += 2;
	return [parseuint16(blob), blob.read_shift(2) & 0x01];
}
/* [MS-XLS] 2.5.198.51 */
var parse_PtgElfRadical = parse_PtgElfLoc;
/* [MS-XLS] 2.5.198.52 */
var parse_PtgElfRadicalLel = parse_PtgElfLel;
/* [MS-XLS] 2.5.198.53 */
var parse_PtgElfRadicalS = parse_PtgElfNoop;
/* [MS-XLS] 2.5.198.54 */
var parse_PtgElfRw = parse_PtgElfLoc;
/* [MS-XLS] 2.5.198.55 */
var parse_PtgElfRwV = parse_PtgElfLoc;

/* [MS-XLSB] 2.5.97.52 TODO */
var PtgListRT = [
	"Data",
	"All",
	"Headers",
	"??",
	"?Data2",
	"??",
	"?DataHeaders",
	"??",
	"Totals",
	"??",
	"??",
	"??",
	"?DataTotals",
	"??",
	"??",
	"??",
	"?Current"
];
function parse_PtgList(blob/*::, length, opts*/) {
	blob.l += 2;
	var ixti = blob.read_shift(2);
	var flags = blob.read_shift(2);
	var idx = blob.read_shift(4);
	var c = blob.read_shift(2);
	var C = blob.read_shift(2);
	var rt = PtgListRT[(flags >> 2) & 0x1F];
	return {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};
}
/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */
function parse_PtgSxName(blob/*::, length, opts*/) {
	blob.l += 2;
	return [blob.read_shift(4)];
}

/* [XLS] old spec */
function parse_PtgSheet(blob, length, opts) {
	blob.l += 5;
	blob.l += 2;
	blob.l += (opts.biff == 2 ? 1 : 4);
	return ["PTGSHEET"];
}
function parse_PtgEndSheet(blob, length, opts) {
	blob.l += (opts.biff == 2 ? 4 : 5);
	return ["PTGENDSHEET"];
}
function parse_PtgMemAreaN(blob/*::, length, opts*/) {
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	var cce = blob.read_shift(2);
	return [type, cce];
}
function parse_PtgMemNoMemN(blob/*::, length, opts*/) {
	var type = (blob.read_shift(1) >>> 5) & 0x03;
	var cce = blob.read_shift(2);
	return [type, cce];
}
function parse_PtgAttrNoop(blob/*::, length, opts*/) {
	blob.l += 4;
	return [0, 0];
}

/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */
var PtgTypes = {
	/*::[*/0x01/*::]*/: { n:'PtgExp', f:parse_PtgExp },
	/*::[*/0x02/*::]*/: { n:'PtgTbl', f:parse_PtgTbl },
	/*::[*/0x03/*::]*/: { n:'PtgAdd', f:parseread1 },
	/*::[*/0x04/*::]*/: { n:'PtgSub', f:parseread1 },
	/*::[*/0x05/*::]*/: { n:'PtgMul', f:parseread1 },
	/*::[*/0x06/*::]*/: { n:'PtgDiv', f:parseread1 },
	/*::[*/0x07/*::]*/: { n:'PtgPower', f:parseread1 },
	/*::[*/0x08/*::]*/: { n:'PtgConcat', f:parseread1 },
	/*::[*/0x09/*::]*/: { n:'PtgLt', f:parseread1 },
	/*::[*/0x0A/*::]*/: { n:'PtgLe', f:parseread1 },
	/*::[*/0x0B/*::]*/: { n:'PtgEq', f:parseread1 },
	/*::[*/0x0C/*::]*/: { n:'PtgGe', f:parseread1 },
	/*::[*/0x0D/*::]*/: { n:'PtgGt', f:parseread1 },
	/*::[*/0x0E/*::]*/: { n:'PtgNe', f:parseread1 },
	/*::[*/0x0F/*::]*/: { n:'PtgIsect', f:parseread1 },
	/*::[*/0x10/*::]*/: { n:'PtgUnion', f:parseread1 },
	/*::[*/0x11/*::]*/: { n:'PtgRange', f:parseread1 },
	/*::[*/0x12/*::]*/: { n:'PtgUplus', f:parseread1 },
	/*::[*/0x13/*::]*/: { n:'PtgUminus', f:parseread1 },
	/*::[*/0x14/*::]*/: { n:'PtgPercent', f:parseread1 },
	/*::[*/0x15/*::]*/: { n:'PtgParen', f:parseread1 },
	/*::[*/0x16/*::]*/: { n:'PtgMissArg', f:parseread1 },
	/*::[*/0x17/*::]*/: { n:'PtgStr', f:parse_PtgStr },
	/*::[*/0x1A/*::]*/: { n:'PtgSheet', f:parse_PtgSheet },
	/*::[*/0x1B/*::]*/: { n:'PtgEndSheet', f:parse_PtgEndSheet },
	/*::[*/0x1C/*::]*/: { n:'PtgErr', f:parse_PtgErr },
	/*::[*/0x1D/*::]*/: { n:'PtgBool', f:parse_PtgBool },
	/*::[*/0x1E/*::]*/: { n:'PtgInt', f:parse_PtgInt },
	/*::[*/0x1F/*::]*/: { n:'PtgNum', f:parse_PtgNum },
	/*::[*/0x20/*::]*/: { n:'PtgArray', f:parse_PtgArray },
	/*::[*/0x21/*::]*/: { n:'PtgFunc', f:parse_PtgFunc },
	/*::[*/0x22/*::]*/: { n:'PtgFuncVar', f:parse_PtgFuncVar },
	/*::[*/0x23/*::]*/: { n:'PtgName', f:parse_PtgName },
	/*::[*/0x24/*::]*/: { n:'PtgRef', f:parse_PtgRef },
	/*::[*/0x25/*::]*/: { n:'PtgArea', f:parse_PtgArea },
	/*::[*/0x26/*::]*/: { n:'PtgMemArea', f:parse_PtgMemArea },
	/*::[*/0x27/*::]*/: { n:'PtgMemErr', f:parse_PtgMemErr },
	/*::[*/0x28/*::]*/: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },
	/*::[*/0x29/*::]*/: { n:'PtgMemFunc', f:parse_PtgMemFunc },
	/*::[*/0x2A/*::]*/: { n:'PtgRefErr', f:parse_PtgRefErr },
	/*::[*/0x2B/*::]*/: { n:'PtgAreaErr', f:parse_PtgAreaErr },
	/*::[*/0x2C/*::]*/: { n:'PtgRefN', f:parse_PtgRefN },
	/*::[*/0x2D/*::]*/: { n:'PtgAreaN', f:parse_PtgAreaN },
	/*::[*/0x2E/*::]*/: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },
	/*::[*/0x2F/*::]*/: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },
	/*::[*/0x39/*::]*/: { n:'PtgNameX', f:parse_PtgNameX },
	/*::[*/0x3A/*::]*/: { n:'PtgRef3d', f:parse_PtgRef3d },
	/*::[*/0x3B/*::]*/: { n:'PtgArea3d', f:parse_PtgArea3d },
	/*::[*/0x3C/*::]*/: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },
	/*::[*/0x3D/*::]*/: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },
	/*::[*/0xFF/*::]*/: {}
};
/* These are duplicated in the PtgTypes table */
var PtgDupes = {
	/*::[*/0x40/*::]*/: 0x20, /*::[*/0x60/*::]*/: 0x20,
	/*::[*/0x41/*::]*/: 0x21, /*::[*/0x61/*::]*/: 0x21,
	/*::[*/0x42/*::]*/: 0x22, /*::[*/0x62/*::]*/: 0x22,
	/*::[*/0x43/*::]*/: 0x23, /*::[*/0x63/*::]*/: 0x23,
	/*::[*/0x44/*::]*/: 0x24, /*::[*/0x64/*::]*/: 0x24,
	/*::[*/0x45/*::]*/: 0x25, /*::[*/0x65/*::]*/: 0x25,
	/*::[*/0x46/*::]*/: 0x26, /*::[*/0x66/*::]*/: 0x26,
	/*::[*/0x47/*::]*/: 0x27, /*::[*/0x67/*::]*/: 0x27,
	/*::[*/0x48/*::]*/: 0x28, /*::[*/0x68/*::]*/: 0x28,
	/*::[*/0x49/*::]*/: 0x29, /*::[*/0x69/*::]*/: 0x29,
	/*::[*/0x4A/*::]*/: 0x2A, /*::[*/0x6A/*::]*/: 0x2A,
	/*::[*/0x4B/*::]*/: 0x2B, /*::[*/0x6B/*::]*/: 0x2B,
	/*::[*/0x4C/*::]*/: 0x2C, /*::[*/0x6C/*::]*/: 0x2C,
	/*::[*/0x4D/*::]*/: 0x2D, /*::[*/0x6D/*::]*/: 0x2D,
	/*::[*/0x4E/*::]*/: 0x2E, /*::[*/0x6E/*::]*/: 0x2E,
	/*::[*/0x4F/*::]*/: 0x2F, /*::[*/0x6F/*::]*/: 0x2F,
	/*::[*/0x58/*::]*/: 0x22, /*::[*/0x78/*::]*/: 0x22,
	/*::[*/0x59/*::]*/: 0x39, /*::[*/0x79/*::]*/: 0x39,
	/*::[*/0x5A/*::]*/: 0x3A, /*::[*/0x7A/*::]*/: 0x3A,
	/*::[*/0x5B/*::]*/: 0x3B, /*::[*/0x7B/*::]*/: 0x3B,
	/*::[*/0x5C/*::]*/: 0x3C, /*::[*/0x7C/*::]*/: 0x3C,
	/*::[*/0x5D/*::]*/: 0x3D, /*::[*/0x7D/*::]*/: 0x3D
};

var Ptg18 = {
	/*::[*/0x01/*::]*/: { n:'PtgElfLel', f:parse_PtgElfLel },
	/*::[*/0x02/*::]*/: { n:'PtgElfRw', f:parse_PtgElfRw },
	/*::[*/0x03/*::]*/: { n:'PtgElfCol', f:parse_PtgElfCol },
	/*::[*/0x06/*::]*/: { n:'PtgElfRwV', f:parse_PtgElfRwV },
	/*::[*/0x07/*::]*/: { n:'PtgElfColV', f:parse_PtgElfColV },
	/*::[*/0x0A/*::]*/: { n:'PtgElfRadical', f:parse_PtgElfRadical },
	/*::[*/0x0B/*::]*/: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },
	/*::[*/0x0D/*::]*/: { n:'PtgElfColS', f:parse_PtgElfColS },
	/*::[*/0x0F/*::]*/: { n:'PtgElfColSV', f:parse_PtgElfColSV },
	/*::[*/0x10/*::]*/: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },
	/*::[*/0x19/*::]*/: { n:'PtgList', f:parse_PtgList },
	/*::[*/0x1D/*::]*/: { n:'PtgSxName', f:parse_PtgSxName },
	/*::[*/0xFF/*::]*/: {}
};
var Ptg19 = {
	/*::[*/0x00/*::]*/: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },
	/*::[*/0x01/*::]*/: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },
	/*::[*/0x02/*::]*/: { n:'PtgAttrIf', f:parse_PtgAttrIf },
	/*::[*/0x04/*::]*/: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },
	/*::[*/0x08/*::]*/: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },
	/*::[*/0x10/*::]*/: { n:'PtgAttrSum', f:parse_PtgAttrSum },
	/*::[*/0x20/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },
	/*::[*/0x21/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },
	/*::[*/0x40/*::]*/: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },
	/*::[*/0x41/*::]*/: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },
	/*::[*/0x80/*::]*/: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },
	/*::[*/0xFF/*::]*/: {}
};

/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */
function parse_RgbExtra(blob, length, rgce, opts) {
	if(opts.biff < 8) return parsenoop(blob, length);
	var target = blob.l + length;
	var o = [];
	for(var i = 0; i !== rgce.length; ++i) {
		switch(rgce[i][0]) {
			case 'PtgArray': /* PtgArray -> PtgExtraArray */
				rgce[i][1] = parse_PtgExtraArray(blob, 0, opts);
				o.push(rgce[i][1]);
				break;
			case 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */
				rgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);
				o.push(rgce[i][2]);
				break;
			case 'PtgExp': /* PtgExp -> PtgExtraCol */
				if(opts && opts.biff == 12) {
					rgce[i][1][1] = blob.read_shift(4);
					o.push(rgce[i][1]);
				} break;
			case 'PtgList': /* TODO: PtgList -> PtgExtraList */
			case 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */
			case 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */
			case 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */
				throw "Unsupported " + rgce[i][0];
		}
	}
	length = target - blob.l;
	/* note: this is technically an error but Excel disregards */
	//if(target !== blob.l && blob.l !== target - length) throw new Error(target + " != " + blob.l);
	if(length !== 0) o.push(parsenoop(blob, length));
	return o;
}

/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */
function parse_Rgce(blob, length, opts) {
	var target = blob.l + length;
	var R, id, ptgs = [];
	while(target != blob.l) {
		length = target - blob.l;
		id = blob[blob.l];
		R = PtgTypes[id] || PtgTypes[PtgDupes[id]];
		if(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];
		if(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }
		else { ptgs.push([R.n, R.f(blob, length, opts)]); }
	}
	return ptgs;
}

function stringify_array(f/*:Array<Array<string>>*/)/*:string*/ {
	var o/*:Array<string>*/ = [];
	for(var i = 0; i < f.length; ++i) {
		var x = f[i], r/*:Array<string>*/ = [];
		for(var j = 0; j < x.length; ++j) {
			var y = x[j];
			if(y) switch(y[0]) {
				// TODO: handle embedded quotes
				case 0x02:
					/*:: if(typeof y[1] != 'string') throw "unreachable"; */
					r.push('"' + y[1].replace(/"/g,'""') + '"'); break;
				default: r.push(y[1]);
			} else r.push("");
		}
		o.push(r.join(","));
	}
	return o.join(";");
}

/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */
var PtgBinOp = {
	PtgAdd: "+",
	PtgConcat: "&",
	PtgDiv: "/",
	PtgEq: "=",
	PtgGe: ">=",
	PtgGt: ">",
	PtgLe: "<=",
	PtgLt: "<",
	PtgMul: "*",
	PtgNe: "<>",
	PtgPower: "^",
	PtgSub: "-"
};

// List of invalid characters needs to be tested further
function formula_quote_sheet_name(sname/*:string*/, opts)/*:string*/ {
	if(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error("empty sheet name");
	if (/[^\w\u4E00-\u9FFF\u3040-\u30FF]/.test(sname)) return "'" + sname + "'";
	return sname;
}
function get_ixti_raw(supbooks, ixti/*:number*/, opts)/*:string*/ {
	if(!supbooks) return "SH33TJSERR0";
	if(opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];
	if(!supbooks.XTI) return "SH33TJSERR6";
	var XTI = supbooks.XTI[ixti];
	if(opts.biff < 8) {
		if(ixti > 10000) ixti-= 65536;
		if(ixti < 0) ixti = -ixti;
		return ixti == 0 ? "" : supbooks.XTI[ixti - 1];
	}
	if(!XTI) return "SH33TJSERR1";
	var o = "";
	if(opts.biff > 8) switch(supbooks[XTI[0]][0]) {
		case 0x0165: /* 'BrtSupSelf' */
			o = XTI[1] == -1 ? "#REF" : supbooks.SheetNames[XTI[1]];
			return XTI[1] == XTI[2] ? o : o + ":" + supbooks.SheetNames[XTI[2]];
		case 0x0166: /* 'BrtSupSame' */
			if(opts.SID != null) return supbooks.SheetNames[opts.SID];
			return "SH33TJSSAME" + supbooks[XTI[0]][0];
		case 0x0163: /* 'BrtSupBookSrc' */
			/* falls through */
		default: return "SH33TJSSRC" + supbooks[XTI[0]][0];
	}
	switch(supbooks[XTI[0]][0][0]) {
		case 0x0401:
			o = XTI[1] == -1 ? "#REF" : (supbooks.SheetNames[XTI[1]] || "SH33TJSERR3");
			return XTI[1] == XTI[2] ? o : o + ":" + supbooks.SheetNames[XTI[2]];
		case 0x3A01: return supbooks[XTI[0]].slice(1).map(function(name) { return name.Name; }).join(";;"); //return "SH33TJSERR8";
		default:
			if(!supbooks[XTI[0]][0][3]) return "SH33TJSERR2";
			o = XTI[1] == -1 ? "#REF" : (supbooks[XTI[0]][0][3][XTI[1]] || "SH33TJSERR4");
			return XTI[1] == XTI[2] ? o : o + ":" + supbooks[XTI[0]][0][3][XTI[2]];
	}
}
function get_ixti(supbooks, ixti/*:number*/, opts)/*:string*/ {
	var ixtiraw = get_ixti_raw(supbooks, ixti, opts);
	return ixtiraw == "#REF" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);
}
function stringify_formula(formula/*Array<any>*/, range, cell/*:any*/, supbooks, opts)/*:string*/ {
	var biff = (opts && opts.biff) || 8;
	var _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};
	var stack/*:Array<string>*/ = [], e1, e2, /*::type,*/ c/*:CellAddress*/, ixti=0, nameidx=0, r, sname="";
	if(!formula[0] || !formula[0][0]) return "";
	var last_sp = -1, sp = "";
	for(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {
		var f = formula[0][ff];
		switch(f[0]) {
			case 'PtgUminus': /* [MS-XLS] 2.5.198.93 */
				stack.push("-" + stack.pop()); break;
			case 'PtgUplus': /* [MS-XLS] 2.5.198.95 */
				stack.push("+" + stack.pop()); break;
			case 'PtgPercent': /* [MS-XLS] 2.5.198.81 */
				stack.push(stack.pop() + "%"); break;

			case 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */
			case 'PtgConcat': /* [MS-XLS] 2.5.198.43 */
			case 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */
			case 'PtgEq':     /* [MS-XLS] 2.5.198.56 */
			case 'PtgGe':     /* [MS-XLS] 2.5.198.64 */
			case 'PtgGt':     /* [MS-XLS] 2.5.198.65 */
			case 'PtgLe':     /* [MS-XLS] 2.5.198.68 */
			case 'PtgLt':     /* [MS-XLS] 2.5.198.69 */
			case 'PtgMul':    /* [MS-XLS] 2.5.198.75 */
			case 'PtgNe':     /* [MS-XLS] 2.5.198.78 */
			case 'PtgPower':  /* [MS-XLS] 2.5.198.82 */
			case 'PtgSub':    /* [MS-XLS] 2.5.198.90 */
				e1 = stack.pop(); e2 = stack.pop();
				if(last_sp >= 0) {
					switch(formula[0][last_sp][1][0]) {
						case 0:
							// $FlowIgnore
							sp = fill(" ", formula[0][last_sp][1][1]); break;
						case 1:
							// $FlowIgnore
							sp = fill("\r", formula[0][last_sp][1][1]); break;
						default:
							sp = "";
							// $FlowIgnore
							if(opts.WTF) throw new Error("Unexpected PtgAttrSpaceType " + formula[0][last_sp][1][0]);
					}
					e2 = e2 + sp;
					last_sp = -1;
				}
				stack.push(e2+PtgBinOp[f[0]]+e1);
				break;

			case 'PtgIsect': /* [MS-XLS] 2.5.198.67 */
				e1 = stack.pop(); e2 = stack.pop();
				stack.push(e2+" "+e1);
				break;
			case 'PtgUnion': /* [MS-XLS] 2.5.198.94 */
				e1 = stack.pop(); e2 = stack.pop();
				stack.push(e2+","+e1);
				break;
			case 'PtgRange': /* [MS-XLS] 2.5.198.83 */
				e1 = stack.pop(); e2 = stack.pop();
				stack.push(e2+":"+e1);
				break;

			case 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */
				break;
			case 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */
				break;
			case 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */
				break;
			case 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */
				break;


			case 'PtgRef': /* [MS-XLS] 2.5.198.84 */
				/*::type = f[1][0]; */c = shift_cell_xls((f[1][1]/*:any*/), _range, opts);
				stack.push(encode_cell_xls(c, biff));
				break;
			case 'PtgRefN': /* [MS-XLS] 2.5.198.88 */
				/*::type = f[1][0]; */c = cell ? shift_cell_xls((f[1][1]/*:any*/), cell, opts) : (f[1][1]/*:any*/);
				stack.push(encode_cell_xls(c, biff));
				break;
			case 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */
				/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; c = shift_cell_xls((f[1][2]/*:any*/), _range, opts);
				sname = get_ixti(supbooks, ixti, opts);
				stack.push(sname + "!" + encode_cell_xls(c, biff));
				break;

			case 'PtgFunc': /* [MS-XLS] 2.5.198.62 */
			case 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */
				/* f[1] = [argc, func, type] */
				var argc/*:number*/ = (f[1][0]/*:any*/), func/*:string*/ = (f[1][1]/*:any*/);
				if(!argc) argc = 0;
				argc &= 0x7F;
				var args = argc == 0 ? [] : stack.slice(-argc);
				stack.length -= argc;
				if(func === 'User') func = args.shift();
				stack.push(func + "(" + args.join(",") + ")");
				break;

			case 'PtgBool': /* [MS-XLS] 2.5.198.42 */
				stack.push(f[1] ? "TRUE" : "FALSE"); break;
			case 'PtgInt': /* [MS-XLS] 2.5.198.66 */
				stack.push(/*::String(*/f[1]/*::)*/); break;
			case 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */
				stack.push(String(f[1])); break;
			case 'PtgStr': /* [MS-XLS] 2.5.198.89 */
				// $FlowIgnore
				stack.push('"' + f[1].replace(/"/g, '""') + '"'); break;
			case 'PtgErr': /* [MS-XLS] 2.5.198.57 */
				stack.push(/*::String(*/f[1]/*::)*/); break;
			case 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */
				/*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);
				stack.push(encode_range_xls((r/*:any*/), opts));
				break;
			case 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */
				/*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);
				stack.push(encode_range_xls((r/*:any*/), opts));
				break;
			case 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */
				/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; r = f[1][2];
				sname = get_ixti(supbooks, ixti, opts);
				stack.push(sname + "!" + encode_range_xls((r/*:any*/), opts));
				break;
			case 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */
				stack.push("SUM(" + stack.pop() + ")");
				break;

			case 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */
			case 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */
				break;

			case 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */
				/* f[1] = type, 0, nameindex */
				nameidx = (f[1][2]/*:any*/);
				var lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];
				var name = lbl ? lbl.Name : "SH33TJSNAME" + String(nameidx);
				/* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */
				if(name && name.slice(0,6) == "_xlfn." && !opts.xlfn) name = name.slice(6);
				stack.push(name);
				break;

			case 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */
				/* f[1] = type, ixti, nameindex */
				var bookidx/*:number*/ = (f[1][1]/*:any*/); nameidx = (f[1][2]/*:any*/); var externbook;
				/* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */
				if(opts.biff <= 5) {
					if(bookidx < 0) bookidx = -bookidx;
					if(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];
				} else {
					var o = "";
					if(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01);
					else if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){
						if(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {
							o = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + "!";
						}
					}
					else o = supbooks.SheetNames[nameidx-1]+ "!";
					if(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;
					else if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;
					else {
						var ixtidata = (get_ixti_raw(supbooks, bookidx, opts)||"").split(";;");
						if(ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct
						else o += "SH33TJSERRX";
					}
					stack.push(o);
					break;
				}
				if(!externbook) externbook = {Name: "SH33TJSERRY"};
				stack.push(externbook.Name);
				break;

			case 'PtgParen': /* [MS-XLS] 2.5.198.80 */
				var lp = '(', rp = ')';
				if(last_sp >= 0) {
					sp = "";
					switch(formula[0][last_sp][1][0]) {
						// $FlowIgnore
						case 2: lp = fill(" ", formula[0][last_sp][1][1]) + lp; break;
						// $FlowIgnore
						case 3: lp = fill("\r", formula[0][last_sp][1][1]) + lp; break;
						// $FlowIgnore
						case 4: rp = fill(" ", formula[0][last_sp][1][1]) + rp; break;
						// $FlowIgnore
						case 5: rp = fill("\r", formula[0][last_sp][1][1]) + rp; break;
						default:
							// $FlowIgnore
							if(opts.WTF) throw new Error("Unexpected PtgAttrSpaceType " + formula[0][last_sp][1][0]);
					}
					last_sp = -1;
				}
				stack.push(lp + stack.pop() + rp); break;

			case 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */
				stack.push('#REF!'); break;

			case 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */
				stack.push('#REF!'); break;

			case 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */
				c = {c:(f[1][1]/*:any*/),r:(f[1][0]/*:any*/)};
				var q = ({c: cell.c, r:cell.r}/*:any*/);
				if(supbooks.sharedf[encode_cell(c)]) {
					var parsedf = (supbooks.sharedf[encode_cell(c)]);
					stack.push(stringify_formula(parsedf, _range, q, supbooks, opts));
				} else {
					var fnd = false;
					for(e1=0;e1!=supbooks.arrayf.length; ++e1) {
						/* TODO: should be something like range_has */
						e2 = supbooks.arrayf[e1];
						if(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;
						if(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;
						stack.push(stringify_formula(e2[1], _range, q, supbooks, opts));
						fnd = true;
						break;
					}
					if(!fnd) stack.push(/*::String(*/f[1]/*::)*/);
				}
				break;

			case 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */
				stack.push("{" + stringify_array(/*::(*/f[1]/*:: :any)*/) + "}");
				break;

			case 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */
				//stack.push("(" + f[2].map(encode_range).join(",") + ")");
				break;

			case 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */
			case 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */
				last_sp = ff;
				break;

			case 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */
				break;

			case 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */
				break;

			case 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */
				stack.push("");
				break;

			case 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */
				stack.push("#REF!"); break;

			case 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */
				stack.push("#REF!"); break;

			case 'PtgList': /* [MS-XLSB] 2.5.97.52 */
				// $FlowIgnore
				stack.push("Table" + f[1].idx + "[#" + f[1].rt + "]");
				break;

			case 'PtgMemAreaN':
			case 'PtgMemNoMemN':
			case 'PtgAttrNoop':
			case 'PtgSheet':
			case 'PtgEndSheet':
				break;

			case 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */
				break;
			case 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */
				break;

			case 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */
			case 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */
			case 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */
			case 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */
			case 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */
			case 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */
			case 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */
			case 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */
			case 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */
			case 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */
				throw new Error("Unsupported ELFs");

			case 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */
				throw new Error('Unrecognized Formula Token: ' + String(f));
			default: throw new Error('Unrecognized Formula Token: ' + String(f));
		}
		var PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];
		if(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {
			f = formula[0][last_sp];
			var _left = true;
			switch(f[1][0]) {
				/* note: some bad XLSB files omit the PtgParen */
				case 4: _left = false;
				/* falls through */
				case 0:
					// $FlowIgnore
					sp = fill(" ", f[1][1]); break;
				case 5: _left = false;
				/* falls through */
				case 1:
					// $FlowIgnore
					sp = fill("\r", f[1][1]); break;
				default:
					sp = "";
					// $FlowIgnore
					if(opts.WTF) throw new Error("Unexpected PtgAttrSpaceType " + f[1][0]);
			}
			stack.push((_left ? sp : "") + stack.pop() + (_left ? "" : sp));
			last_sp = -1;
		}
	}
	if(stack.length > 1 && opts.WTF) throw new Error("bad formula stack");
	return stack[0];
}

/* [MS-XLS] 2.5.198.1 TODO */
function parse_ArrayParsedFormula(blob, length, opts/*::, ref*/) {
	var target = blob.l + length, len = opts.biff == 2 ? 1 : 2;
	var rgcb, cce = blob.read_shift(len); // length of rgce
	if(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];
	var rgce = parse_Rgce(blob, cce, opts);
	if(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);
	blob.l = target;
	return [rgce, rgcb];
}

/* [MS-XLS] 2.5.198.3 TODO */
function parse_XLSCellParsedFormula(blob, length, opts) {
	var target = blob.l + length, len = opts.biff == 2 ? 1 : 2;
	var rgcb, cce = blob.read_shift(len); // length of rgce
	if(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];
	var rgce = parse_Rgce(blob, cce, opts);
	if(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);
	blob.l = target;
	return [rgce, rgcb];
}

/* [MS-XLS] 2.5.198.21 */
function parse_NameParsedFormula(blob, length, opts, cce) {
	var target = blob.l + length;
	var rgce = parse_Rgce(blob, cce, opts);
	var rgcb;
	if(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);
	return [rgce, rgcb];
}

/* [MS-XLS] 2.5.198.118 TODO */
function parse_SharedParsedFormula(blob, length, opts) {
	var target = blob.l + length;
	var rgcb, cce = blob.read_shift(2); // length of rgce
	var rgce = parse_Rgce(blob, cce, opts);
	if(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];
	if(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);
	return [rgce, rgcb];
}

/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */
function parse_FormulaValue(blob/*::, length*/) {
	var b;
	if(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];
	switch(blob[blob.l]) {
		case 0x00: blob.l += 8; return ["String", 's'];
		case 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];
		case 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];
		case 0x03: blob.l += 8; return ["",'s'];
	}
	return [];
}

/* [MS-XLS] 2.4.127 TODO */
function parse_Formula(blob, length, opts) {
	var end = blob.l + length;
	var cell = parse_XLSCell(blob);
	if(opts.biff == 2) ++blob.l;
	var val = parse_FormulaValue(blob);
	var flags = blob.read_shift(1);
	if(opts.biff != 2) {
		blob.read_shift(1);
		if(opts.biff >= 5) {
			/*var chn = */blob.read_shift(4);
		}
	}
	var cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);
	return {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};
}


/* XLSB Parsed Formula records have the same shape */
function parse_XLSBParsedFormula(data, length, opts) {
	var cce = data.read_shift(4);
	var rgce = parse_Rgce(data, cce, opts);
	var cb = data.read_shift(4);
	var rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;
	return [rgce, rgcb];
}

/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */
var parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;
/* [MS-XLSB] 2.5.97.4 CellParsedFormula */
var parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;
/* [MS-XLSB] 2.5.97.8 DVParsedFormula */
//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;
/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */
//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;
/* [MS-XLSB] 2.5.97.12 NameParsedFormula */
var parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;
/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */
var parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;
var Cetab = {
  0: "BEEP",
  1: "OPEN",
  2: "OPEN.LINKS",
  3: "CLOSE.ALL",
  4: "SAVE",
  5: "SAVE.AS",
  6: "FILE.DELETE",
  7: "PAGE.SETUP",
  8: "PRINT",
  9: "PRINTER.SETUP",
  10: "QUIT",
  11: "NEW.WINDOW",
  12: "ARRANGE.ALL",
  13: "WINDOW.SIZE",
  14: "WINDOW.MOVE",
  15: "FULL",
  16: "CLOSE",
  17: "RUN",
  22: "SET.PRINT.AREA",
  23: "SET.PRINT.TITLES",
  24: "SET.PAGE.BREAK",
  25: "REMOVE.PAGE.BREAK",
  26: "FONT",
  27: "DISPLAY",
  28: "PROTECT.DOCUMENT",
  29: "PRECISION",
  30: "A1.R1C1",
  31: "CALCULATE.NOW",
  32: "CALCULATION",
  34: "DATA.FIND",
  35: "EXTRACT",
  36: "DATA.DELETE",
  37: "SET.DATABASE",
  38: "SET.CRITERIA",
  39: "SORT",
  40: "DATA.SERIES",
  41: "TABLE",
  42: "FORMAT.NUMBER",
  43: "ALIGNMENT",
  44: "STYLE",
  45: "BORDER",
  46: "CELL.PROTECTION",
  47: "COLUMN.WIDTH",
  48: "UNDO",
  49: "CUT",
  50: "COPY",
  51: "PASTE",
  52: "CLEAR",
  53: "PASTE.SPECIAL",
  54: "EDIT.DELETE",
  55: "INSERT",
  56: "FILL.RIGHT",
  57: "FILL.DOWN",
  61: "DEFINE.NAME",
  62: "CREATE.NAMES",
  63: "FORMULA.GOTO",
  64: "FORMULA.FIND",
  65: "SELECT.LAST.CELL",
  66: "SHOW.ACTIVE.CELL",
  67: "GALLERY.AREA",
  68: "GALLERY.BAR",
  69: "GALLERY.COLUMN",
  70: "GALLERY.LINE",
  71: "GALLERY.PIE",
  72: "GALLERY.SCATTER",
  73: "COMBINATION",
  74: "PREFERRED",
  75: "ADD.OVERLAY",
  76: "GRIDLINES",
  77: "SET.PREFERRED",
  78: "AXES",
  79: "LEGEND",
  80: "ATTACH.TEXT",
  81: "ADD.ARROW",
  82: "SELECT.CHART",
  83: "SELECT.PLOT.AREA",
  84: "PATTERNS",
  85: "MAIN.CHART",
  86: "OVERLAY",
  87: "SCALE",
  88: "FORMAT.LEGEND",
  89: "FORMAT.TEXT",
  90: "EDIT.REPEAT",
  91: "PARSE",
  92: "JUSTIFY",
  93: "HIDE",
  94: "UNHIDE",
  95: "WORKSPACE",
  96: "FORMULA",
  97: "FORMULA.FILL",
  98: "FORMULA.ARRAY",
  99: "DATA.FIND.NEXT",
  100: "DATA.FIND.PREV",
  101: "FORMULA.FIND.NEXT",
  102: "FORMULA.FIND.PREV",
  103: "ACTIVATE",
  104: "ACTIVATE.NEXT",
  105: "ACTIVATE.PREV",
  106: "UNLOCKED.NEXT",
  107: "UNLOCKED.PREV",
  108: "COPY.PICTURE",
  109: "SELECT",
  110: "DELETE.NAME",
  111: "DELETE.FORMAT",
  112: "VLINE",
  113: "HLINE",
  114: "VPAGE",
  115: "HPAGE",
  116: "VSCROLL",
  117: "HSCROLL",
  118: "ALERT",
  119: "NEW",
  120: "CANCEL.COPY",
  121: "SHOW.CLIPBOARD",
  122: "MESSAGE",
  124: "PASTE.LINK",
  125: "APP.ACTIVATE",
  126: "DELETE.ARROW",
  127: "ROW.HEIGHT",
  128: "FORMAT.MOVE",
  129: "FORMAT.SIZE",
  130: "FORMULA.REPLACE",
  131: "SEND.KEYS",
  132: "SELECT.SPECIAL",
  133: "APPLY.NAMES",
  134: "REPLACE.FONT",
  135: "FREEZE.PANES",
  136: "SHOW.INFO",
  137: "SPLIT",
  138: "ON.WINDOW",
  139: "ON.DATA",
  140: "DISABLE.INPUT",
  142: "OUTLINE",
  143: "LIST.NAMES",
  144: "FILE.CLOSE",
  145: "SAVE.WORKBOOK",
  146: "DATA.FORM",
  147: "COPY.CHART",
  148: "ON.TIME",
  149: "WAIT",
  150: "FORMAT.FONT",
  151: "FILL.UP",
  152: "FILL.LEFT",
  153: "DELETE.OVERLAY",
  155: "SHORT.MENUS",
  159: "SET.UPDATE.STATUS",
  161: "COLOR.PALETTE",
  162: "DELETE.STYLE",
  163: "WINDOW.RESTORE",
  164: "WINDOW.MAXIMIZE",
  166: "CHANGE.LINK",
  167: "CALCULATE.DOCUMENT",
  168: "ON.KEY",
  169: "APP.RESTORE",
  170: "APP.MOVE",
  171: "APP.SIZE",
  172: "APP.MINIMIZE",
  173: "APP.MAXIMIZE",
  174: "BRING.TO.FRONT",
  175: "SEND.TO.BACK",
  185: "MAIN.CHART.TYPE",
  186: "OVERLAY.CHART.TYPE",
  187: "SELECT.END",
  188: "OPEN.MAIL",
  189: "SEND.MAIL",
  190: "STANDARD.FONT",
  191: "CONSOLIDATE",
  192: "SORT.SPECIAL",
  193: "GALLERY.3D.AREA",
  194: "GALLERY.3D.COLUMN",
  195: "GALLERY.3D.LINE",
  196: "GALLERY.3D.PIE",
  197: "VIEW.3D",
  198: "GOAL.SEEK",
  199: "WORKGROUP",
  200: "FILL.GROUP",
  201: "UPDATE.LINK",
  202: "PROMOTE",
  203: "DEMOTE",
  204: "SHOW.DETAIL",
  206: "UNGROUP",
  207: "OBJECT.PROPERTIES",
  208: "SAVE.NEW.OBJECT",
  209: "SHARE",
  210: "SHARE.NAME",
  211: "DUPLICATE",
  212: "APPLY.STYLE",
  213: "ASSIGN.TO.OBJECT",
  214: "OBJECT.PROTECTION",
  215: "HIDE.OBJECT",
  216: "SET.EXTRACT",
  217: "CREATE.PUBLISHER",
  218: "SUBSCRIBE.TO",
  219: "ATTRIBUTES",
  220: "SHOW.TOOLBAR",
  222: "PRINT.PREVIEW",
  223: "EDIT.COLOR",
  224: "SHOW.LEVELS",
  225: "FORMAT.MAIN",
  226: "FORMAT.OVERLAY",
  227: "ON.RECALC",
  228: "EDIT.SERIES",
  229: "DEFINE.STYLE",
  240: "LINE.PRINT",
  243: "ENTER.DATA",
  249: "GALLERY.RADAR",
  250: "MERGE.STYLES",
  251: "EDITION.OPTIONS",
  252: "PASTE.PICTURE",
  253: "PASTE.PICTURE.LINK",
  254: "SPELLING",
  256: "ZOOM",
  259: "INSERT.OBJECT",
  260: "WINDOW.MINIMIZE",
  265: "SOUND.NOTE",
  266: "SOUND.PLAY",
  267: "FORMAT.SHAPE",
  268: "EXTEND.POLYGON",
  269: "FORMAT.AUTO",
  272: "GALLERY.3D.BAR",
  273: "GALLERY.3D.SURFACE",
  274: "FILL.AUTO",
  276: "CUSTOMIZE.TOOLBAR",
  277: "ADD.TOOL",
  278: "EDIT.OBJECT",
  279: "ON.DOUBLECLICK",
  280: "ON.ENTRY",
  281: "WORKBOOK.ADD",
  282: "WORKBOOK.MOVE",
  283: "WORKBOOK.COPY",
  284: "WORKBOOK.OPTIONS",
  285: "SAVE.WORKSPACE",
  288: "CHART.WIZARD",
  289: "DELETE.TOOL",
  290: "MOVE.TOOL",
  291: "WORKBOOK.SELECT",
  292: "WORKBOOK.ACTIVATE",
  293: "ASSIGN.TO.TOOL",
  295: "COPY.TOOL",
  296: "RESET.TOOL",
  297: "CONSTRAIN.NUMERIC",
  298: "PASTE.TOOL",
  302: "WORKBOOK.NEW",
  305: "SCENARIO.CELLS",
  306: "SCENARIO.DELETE",
  307: "SCENARIO.ADD",
  308: "SCENARIO.EDIT",
  309: "SCENARIO.SHOW",
  310: "SCENARIO.SHOW.NEXT",
  311: "SCENARIO.SUMMARY",
  312: "PIVOT.TABLE.WIZARD",
  313: "PIVOT.FIELD.PROPERTIES",
  314: "PIVOT.FIELD",
  315: "PIVOT.ITEM",
  316: "PIVOT.ADD.FIELDS",
  318: "OPTIONS.CALCULATION",
  319: "OPTIONS.EDIT",
  320: "OPTIONS.VIEW",
  321: "ADDIN.MANAGER",
  322: "MENU.EDITOR",
  323: "ATTACH.TOOLBARS",
  324: "VBAActivate",
  325: "OPTIONS.CHART",
  328: "VBA.INSERT.FILE",
  330: "VBA.PROCEDURE.DEFINITION",
  336: "ROUTING.SLIP",
  338: "ROUTE.DOCUMENT",
  339: "MAIL.LOGON",
  342: "INSERT.PICTURE",
  343: "EDIT.TOOL",
  344: "GALLERY.DOUGHNUT",
  350: "CHART.TREND",
  352: "PIVOT.ITEM.PROPERTIES",
  354: "WORKBOOK.INSERT",
  355: "OPTIONS.TRANSITION",
  356: "OPTIONS.GENERAL",
  370: "FILTER.ADVANCED",
  373: "MAIL.ADD.MAILER",
  374: "MAIL.DELETE.MAILER",
  375: "MAIL.REPLY",
  376: "MAIL.REPLY.ALL",
  377: "MAIL.FORWARD",
  378: "MAIL.NEXT.LETTER",
  379: "DATA.LABEL",
  380: "INSERT.TITLE",
  381: "FONT.PROPERTIES",
  382: "MACRO.OPTIONS",
  383: "WORKBOOK.HIDE",
  384: "WORKBOOK.UNHIDE",
  385: "WORKBOOK.DELETE",
  386: "WORKBOOK.NAME",
  388: "GALLERY.CUSTOM",
  390: "ADD.CHART.AUTOFORMAT",
  391: "DELETE.CHART.AUTOFORMAT",
  392: "CHART.ADD.DATA",
  393: "AUTO.OUTLINE",
  394: "TAB.ORDER",
  395: "SHOW.DIALOG",
  396: "SELECT.ALL",
  397: "UNGROUP.SHEETS",
  398: "SUBTOTAL.CREATE",
  399: "SUBTOTAL.REMOVE",
  400: "RENAME.OBJECT",
  412: "WORKBOOK.SCROLL",
  413: "WORKBOOK.NEXT",
  414: "WORKBOOK.PREV",
  415: "WORKBOOK.TAB.SPLIT",
  416: "FULL.SCREEN",
  417: "WORKBOOK.PROTECT",
  420: "SCROLLBAR.PROPERTIES",
  421: "PIVOT.SHOW.PAGES",
  422: "TEXT.TO.COLUMNS",
  423: "FORMAT.CHARTTYPE",
  424: "LINK.FORMAT",
  425: "TRACER.DISPLAY",
  430: "TRACER.NAVIGATE",
  431: "TRACER.CLEAR",
  432: "TRACER.ERROR",
  433: "PIVOT.FIELD.GROUP",
  434: "PIVOT.FIELD.UNGROUP",
  435: "CHECKBOX.PROPERTIES",
  436: "LABEL.PROPERTIES",
  437: "LISTBOX.PROPERTIES",
  438: "EDITBOX.PROPERTIES",
  439: "PIVOT.REFRESH",
  440: "LINK.COMBO",
  441: "OPEN.TEXT",
  442: "HIDE.DIALOG",
  443: "SET.DIALOG.FOCUS",
  444: "ENABLE.OBJECT",
  445: "PUSHBUTTON.PROPERTIES",
  446: "SET.DIALOG.DEFAULT",
  447: "FILTER",
  448: "FILTER.SHOW.ALL",
  449: "CLEAR.OUTLINE",
  450: "FUNCTION.WIZARD",
  451: "ADD.LIST.ITEM",
  452: "SET.LIST.ITEM",
  453: "REMOVE.LIST.ITEM",
  454: "SELECT.LIST.ITEM",
  455: "SET.CONTROL.VALUE",
  456: "SAVE.COPY.AS",
  458: "OPTIONS.LISTS.ADD",
  459: "OPTIONS.LISTS.DELETE",
  460: "SERIES.AXES",
  461: "SERIES.X",
  462: "SERIES.Y",
  463: "ERRORBAR.X",
  464: "ERRORBAR.Y",
  465: "FORMAT.CHART",
  466: "SERIES.ORDER",
  467: "MAIL.LOGOFF",
  468: "CLEAR.ROUTING.SLIP",
  469: "APP.ACTIVATE.MICROSOFT",
  470: "MAIL.EDIT.MAILER",
  471: "ON.SHEET",
  472: "STANDARD.WIDTH",
  473: "SCENARIO.MERGE",
  474: "SUMMARY.INFO",
  475: "FIND.FILE",
  476: "ACTIVE.CELL.FONT",
  477: "ENABLE.TIPWIZARD",
  478: "VBA.MAKE.ADDIN",
  480: "INSERTDATATABLE",
  481: "WORKGROUP.OPTIONS",
  482: "MAIL.SEND.MAILER",
  485: "AUTOCORRECT",
  489: "POST.DOCUMENT",
  491: "PICKLIST",
  493: "VIEW.SHOW",
  494: "VIEW.DEFINE",
  495: "VIEW.DELETE",
  509: "SHEET.BACKGROUND",
  510: "INSERT.MAP.OBJECT",
  511: "OPTIONS.MENONO",
  517: "MSOCHECKS",
  518: "NORMAL",
  519: "LAYOUT",
  520: "RM.PRINT.AREA",
  521: "CLEAR.PRINT.AREA",
  522: "ADD.PRINT.AREA",
  523: "MOVE.BRK",
  545: "HIDECURR.NOTE",
  546: "HIDEALL.NOTES",
  547: "DELETE.NOTE",
  548: "TRAVERSE.NOTES",
  549: "ACTIVATE.NOTES",
  620: "PROTECT.REVISIONS",
  621: "UNPROTECT.REVISIONS",
  647: "OPTIONS.ME",
  653: "WEB.PUBLISH",
  667: "NEWWEBQUERY",
  673: "PIVOT.TABLE.CHART",
  753: "OPTIONS.SAVE",
  755: "OPTIONS.SPELL",
  808: "HIDEALL.INKANNOTS"
};
var Ftab = {
  0: "COUNT",
  1: "IF",
  2: "ISNA",
  3: "ISERROR",
  4: "SUM",
  5: "AVERAGE",
  6: "MIN",
  7: "MAX",
  8: "ROW",
  9: "COLUMN",
  10: "NA",
  11: "NPV",
  12: "STDEV",
  13: "DOLLAR",
  14: "FIXED",
  15: "SIN",
  16: "COS",
  17: "TAN",
  18: "ATAN",
  19: "PI",
  20: "SQRT",
  21: "EXP",
  22: "LN",
  23: "LOG10",
  24: "ABS",
  25: "INT",
  26: "SIGN",
  27: "ROUND",
  28: "LOOKUP",
  29: "INDEX",
  30: "REPT",
  31: "MID",
  32: "LEN",
  33: "VALUE",
  34: "TRUE",
  35: "FALSE",
  36: "AND",
  37: "OR",
  38: "NOT",
  39: "MOD",
  40: "DCOUNT",
  41: "DSUM",
  42: "DAVERAGE",
  43: "DMIN",
  44: "DMAX",
  45: "DSTDEV",
  46: "VAR",
  47: "DVAR",
  48: "TEXT",
  49: "LINEST",
  50: "TREND",
  51: "LOGEST",
  52: "GROWTH",
  53: "GOTO",
  54: "HALT",
  55: "RETURN",
  56: "PV",
  57: "FV",
  58: "NPER",
  59: "PMT",
  60: "RATE",
  61: "MIRR",
  62: "IRR",
  63: "RAND",
  64: "MATCH",
  65: "DATE",
  66: "TIME",
  67: "DAY",
  68: "MONTH",
  69: "YEAR",
  70: "WEEKDAY",
  71: "HOUR",
  72: "MINUTE",
  73: "SECOND",
  74: "NOW",
  75: "AREAS",
  76: "ROWS",
  77: "COLUMNS",
  78: "OFFSET",
  79: "ABSREF",
  80: "RELREF",
  81: "ARGUMENT",
  82: "SEARCH",
  83: "TRANSPOSE",
  84: "ERROR",
  85: "STEP",
  86: "TYPE",
  87: "ECHO",
  88: "SET.NAME",
  89: "CALLER",
  90: "DEREF",
  91: "WINDOWS",
  92: "SERIES",
  93: "DOCUMENTS",
  94: "ACTIVE.CELL",
  95: "SELECTION",
  96: "RESULT",
  97: "ATAN2",
  98: "ASIN",
  99: "ACOS",
  100: "CHOOSE",
  101: "HLOOKUP",
  102: "VLOOKUP",
  103: "LINKS",
  104: "INPUT",
  105: "ISREF",
  106: "GET.FORMULA",
  107: "GET.NAME",
  108: "SET.VALUE",
  109: "LOG",
  110: "EXEC",
  111: "CHAR",
  112: "LOWER",
  113: "UPPER",
  114: "PROPER",
  115: "LEFT",
  116: "RIGHT",
  117: "EXACT",
  118: "TRIM",
  119: "REPLACE",
  120: "SUBSTITUTE",
  121: "CODE",
  122: "NAMES",
  123: "DIRECTORY",
  124: "FIND",
  125: "CELL",
  126: "ISERR",
  127: "ISTEXT",
  128: "ISNUMBER",
  129: "ISBLANK",
  130: "T",
  131: "N",
  132: "FOPEN",
  133: "FCLOSE",
  134: "FSIZE",
  135: "FREADLN",
  136: "FREAD",
  137: "FWRITELN",
  138: "FWRITE",
  139: "FPOS",
  140: "DATEVALUE",
  141: "TIMEVALUE",
  142: "SLN",
  143: "SYD",
  144: "DDB",
  145: "GET.DEF",
  146: "REFTEXT",
  147: "TEXTREF",
  148: "INDIRECT",
  149: "REGISTER",
  150: "CALL",
  151: "ADD.BAR",
  152: "ADD.MENU",
  153: "ADD.COMMAND",
  154: "ENABLE.COMMAND",
  155: "CHECK.COMMAND",
  156: "RENAME.COMMAND",
  157: "SHOW.BAR",
  158: "DELETE.MENU",
  159: "DELETE.COMMAND",
  160: "GET.CHART.ITEM",
  161: "DIALOG.BOX",
  162: "CLEAN",
  163: "MDETERM",
  164: "MINVERSE",
  165: "MMULT",
  166: "FILES",
  167: "IPMT",
  168: "PPMT",
  169: "COUNTA",
  170: "CANCEL.KEY",
  171: "FOR",
  172: "WHILE",
  173: "BREAK",
  174: "NEXT",
  175: "INITIATE",
  176: "REQUEST",
  177: "POKE",
  178: "EXECUTE",
  179: "TERMINATE",
  180: "RESTART",
  181: "HELP",
  182: "GET.BAR",
  183: "PRODUCT",
  184: "FACT",
  185: "GET.CELL",
  186: "GET.WORKSPACE",
  187: "GET.WINDOW",
  188: "GET.DOCUMENT",
  189: "DPRODUCT",
  190: "ISNONTEXT",
  191: "GET.NOTE",
  192: "NOTE",
  193: "STDEVP",
  194: "VARP",
  195: "DSTDEVP",
  196: "DVARP",
  197: "TRUNC",
  198: "ISLOGICAL",
  199: "DCOUNTA",
  200: "DELETE.BAR",
  201: "UNREGISTER",
  204: "USDOLLAR",
  205: "FINDB",
  206: "SEARCHB",
  207: "REPLACEB",
  208: "LEFTB",
  209: "RIGHTB",
  210: "MIDB",
  211: "LENB",
  212: "ROUNDUP",
  213: "ROUNDDOWN",
  214: "ASC",
  215: "DBCS",
  216: "RANK",
  219: "ADDRESS",
  220: "DAYS360",
  221: "TODAY",
  222: "VDB",
  223: "ELSE",
  224: "ELSE.IF",
  225: "END.IF",
  226: "FOR.CELL",
  227: "MEDIAN",
  228: "SUMPRODUCT",
  229: "SINH",
  230: "COSH",
  231: "TANH",
  232: "ASINH",
  233: "ACOSH",
  234: "ATANH",
  235: "DGET",
  236: "CREATE.OBJECT",
  237: "VOLATILE",
  238: "LAST.ERROR",
  239: "CUSTOM.UNDO",
  240: "CUSTOM.REPEAT",
  241: "FORMULA.CONVERT",
  242: "GET.LINK.INFO",
  243: "TEXT.BOX",
  244: "INFO",
  245: "GROUP",
  246: "GET.OBJECT",
  247: "DB",
  248: "PAUSE",
  251: "RESUME",
  252: "FREQUENCY",
  253: "ADD.TOOLBAR",
  254: "DELETE.TOOLBAR",
  255: "User",
  256: "RESET.TOOLBAR",
  257: "EVALUATE",
  258: "GET.TOOLBAR",
  259: "GET.TOOL",
  260: "SPELLING.CHECK",
  261: "ERROR.TYPE",
  262: "APP.TITLE",
  263: "WINDOW.TITLE",
  264: "SAVE.TOOLBAR",
  265: "ENABLE.TOOL",
  266: "PRESS.TOOL",
  267: "REGISTER.ID",
  268: "GET.WORKBOOK",
  269: "AVEDEV",
  270: "BETADIST",
  271: "GAMMALN",
  272: "BETAINV",
  273: "BINOMDIST",
  274: "CHIDIST",
  275: "CHIINV",
  276: "COMBIN",
  277: "CONFIDENCE",
  278: "CRITBINOM",
  279: "EVEN",
  280: "EXPONDIST",
  281: "FDIST",
  282: "FINV",
  283: "FISHER",
  284: "FISHERINV",
  285: "FLOOR",
  286: "GAMMADIST",
  287: "GAMMAINV",
  288: "CEILING",
  289: "HYPGEOMDIST",
  290: "LOGNORMDIST",
  291: "LOGINV",
  292: "NEGBINOMDIST",
  293: "NORMDIST",
  294: "NORMSDIST",
  295: "NORMINV",
  296: "NORMSINV",
  297: "STANDARDIZE",
  298: "ODD",
  299: "PERMUT",
  300: "POISSON",
  301: "TDIST",
  302: "WEIBULL",
  303: "SUMXMY2",
  304: "SUMX2MY2",
  305: "SUMX2PY2",
  306: "CHITEST",
  307: "CORREL",
  308: "COVAR",
  309: "FORECAST",
  310: "FTEST",
  311: "INTERCEPT",
  312: "PEARSON",
  313: "RSQ",
  314: "STEYX",
  315: "SLOPE",
  316: "TTEST",
  317: "PROB",
  318: "DEVSQ",
  319: "GEOMEAN",
  320: "HARMEAN",
  321: "SUMSQ",
  322: "KURT",
  323: "SKEW",
  324: "ZTEST",
  325: "LARGE",
  326: "SMALL",
  327: "QUARTILE",
  328: "PERCENTILE",
  329: "PERCENTRANK",
  330: "MODE",
  331: "TRIMMEAN",
  332: "TINV",
  334: "MOVIE.COMMAND",
  335: "GET.MOVIE",
  336: "CONCATENATE",
  337: "POWER",
  338: "PIVOT.ADD.DATA",
  339: "GET.PIVOT.TABLE",
  340: "GET.PIVOT.FIELD",
  341: "GET.PIVOT.ITEM",
  342: "RADIANS",
  343: "DEGREES",
  344: "SUBTOTAL",
  345: "SUMIF",
  346: "COUNTIF",
  347: "COUNTBLANK",
  348: "SCENARIO.GET",
  349: "OPTIONS.LISTS.GET",
  350: "ISPMT",
  351: "DATEDIF",
  352: "DATESTRING",
  353: "NUMBERSTRING",
  354: "ROMAN",
  355: "OPEN.DIALOG",
  356: "SAVE.DIALOG",
  357: "VIEW.GET",
  358: "GETPIVOTDATA",
  359: "HYPERLINK",
  360: "PHONETIC",
  361: "AVERAGEA",
  362: "MAXA",
  363: "MINA",
  364: "STDEVPA",
  365: "VARPA",
  366: "STDEVA",
  367: "VARA",
  368: "BAHTTEXT",
  369: "THAIDAYOFWEEK",
  370: "THAIDIGIT",
  371: "THAIMONTHOFYEAR",
  372: "THAINUMSOUND",
  373: "THAINUMSTRING",
  374: "THAISTRINGLENGTH",
  375: "ISTHAIDIGIT",
  376: "ROUNDBAHTDOWN",
  377: "ROUNDBAHTUP",
  378: "THAIYEAR",
  379: "RTD",
  380: "CUBEVALUE",
  381: "CUBEMEMBER",
  382: "CUBEMEMBERPROPERTY",
  383: "CUBERANKEDMEMBER",
  384: "HEX2BIN",
  385: "HEX2DEC",
  386: "HEX2OCT",
  387: "DEC2BIN",
  388: "DEC2HEX",
  389: "DEC2OCT",
  390: "OCT2BIN",
  391: "OCT2HEX",
  392: "OCT2DEC",
  393: "BIN2DEC",
  394: "BIN2OCT",
  395: "BIN2HEX",
  396: "IMSUB",
  397: "IMDIV",
  398: "IMPOWER",
  399: "IMABS",
  400: "IMSQRT",
  401: "IMLN",
  402: "IMLOG2",
  403: "IMLOG10",
  404: "IMSIN",
  405: "IMCOS",
  406: "IMEXP",
  407: "IMARGUMENT",
  408: "IMCONJUGATE",
  409: "IMAGINARY",
  410: "IMREAL",
  411: "COMPLEX",
  412: "IMSUM",
  413: "IMPRODUCT",
  414: "SERIESSUM",
  415: "FACTDOUBLE",
  416: "SQRTPI",
  417: "QUOTIENT",
  418: "DELTA",
  419: "GESTEP",
  420: "ISEVEN",
  421: "ISODD",
  422: "MROUND",
  423: "ERF",
  424: "ERFC",
  425: "BESSELJ",
  426: "BESSELK",
  427: "BESSELY",
  428: "BESSELI",
  429: "XIRR",
  430: "XNPV",
  431: "PRICEMAT",
  432: "YIELDMAT",
  433: "INTRATE",
  434: "RECEIVED",
  435: "DISC",
  436: "PRICEDISC",
  437: "YIELDDISC",
  438: "TBILLEQ",
  439: "TBILLPRICE",
  440: "TBILLYIELD",
  441: "PRICE",
  442: "YIELD",
  443: "DOLLARDE",
  444: "DOLLARFR",
  445: "NOMINAL",
  446: "EFFECT",
  447: "CUMPRINC",
  448: "CUMIPMT",
  449: "EDATE",
  450: "EOMONTH",
  451: "YEARFRAC",
  452: "COUPDAYBS",
  453: "COUPDAYS",
  454: "COUPDAYSNC",
  455: "COUPNCD",
  456: "COUPNUM",
  457: "COUPPCD",
  458: "DURATION",
  459: "MDURATION",
  460: "ODDLPRICE",
  461: "ODDLYIELD",
  462: "ODDFPRICE",
  463: "ODDFYIELD",
  464: "RANDBETWEEN",
  465: "WEEKNUM",
  466: "AMORDEGRC",
  467: "AMORLINC",
  468: "CONVERT",
  724: "SHEETJS",
  469: "ACCRINT",
  470: "ACCRINTM",
  471: "WORKDAY",
  472: "NETWORKDAYS",
  473: "GCD",
  474: "MULTINOMIAL",
  475: "LCM",
  476: "FVSCHEDULE",
  477: "CUBEKPIMEMBER",
  478: "CUBESET",
  479: "CUBESETCOUNT",
  480: "IFERROR",
  481: "COUNTIFS",
  482: "SUMIFS",
  483: "AVERAGEIF",
  484: "AVERAGEIFS"
};
var FtabArgc = {
  2: 1,
  3: 1,
  10: 0,
  15: 1,
  16: 1,
  17: 1,
  18: 1,
  19: 0,
  20: 1,
  21: 1,
  22: 1,
  23: 1,
  24: 1,
  25: 1,
  26: 1,
  27: 2,
  30: 2,
  31: 3,
  32: 1,
  33: 1,
  34: 0,
  35: 0,
  38: 1,
  39: 2,
  40: 3,
  41: 3,
  42: 3,
  43: 3,
  44: 3,
  45: 3,
  47: 3,
  48: 2,
  53: 1,
  61: 3,
  63: 0,
  65: 3,
  66: 3,
  67: 1,
  68: 1,
  69: 1,
  70: 1,
  71: 1,
  72: 1,
  73: 1,
  74: 0,
  75: 1,
  76: 1,
  77: 1,
  79: 2,
  80: 2,
  83: 1,
  85: 0,
  86: 1,
  89: 0,
  90: 1,
  94: 0,
  95: 0,
  97: 2,
  98: 1,
  99: 1,
  101: 3,
  102: 3,
  105: 1,
  106: 1,
  108: 2,
  111: 1,
  112: 1,
  113: 1,
  114: 1,
  117: 2,
  118: 1,
  119: 4,
  121: 1,
  126: 1,
  127: 1,
  128: 1,
  129: 1,
  130: 1,
  131: 1,
  133: 1,
  134: 1,
  135: 1,
  136: 2,
  137: 2,
  138: 2,
  140: 1,
  141: 1,
  142: 3,
  143: 4,
  144: 4,
  161: 1,
  162: 1,
  163: 1,
  164: 1,
  165: 2,
  172: 1,
  175: 2,
  176: 2,
  177: 3,
  178: 2,
  179: 1,
  184: 1,
  186: 1,
  189: 3,
  190: 1,
  195: 3,
  196: 3,
  197: 1,
  198: 1,
  199: 3,
  201: 1,
  207: 4,
  210: 3,
  211: 1,
  212: 2,
  213: 2,
  214: 1,
  215: 1,
  225: 0,
  229: 1,
  230: 1,
  231: 1,
  232: 1,
  233: 1,
  234: 1,
  235: 3,
  244: 1,
  247: 4,
  252: 2,
  257: 1,
  261: 1,
  271: 1,
  273: 4,
  274: 2,
  275: 2,
  276: 2,
  277: 3,
  278: 3,
  279: 1,
  280: 3,
  281: 3,
  282: 3,
  283: 1,
  284: 1,
  285: 2,
  286: 4,
  287: 3,
  288: 2,
  289: 4,
  290: 3,
  291: 3,
  292: 3,
  293: 4,
  294: 1,
  295: 3,
  296: 1,
  297: 3,
  298: 1,
  299: 2,
  300: 3,
  301: 3,
  302: 4,
  303: 2,
  304: 2,
  305: 2,
  306: 2,
  307: 2,
  308: 2,
  309: 3,
  310: 2,
  311: 2,
  312: 2,
  313: 2,
  314: 2,
  315: 2,
  316: 4,
  325: 2,
  326: 2,
  327: 2,
  328: 2,
  331: 2,
  332: 2,
  337: 2,
  342: 1,
  343: 1,
  346: 2,
  347: 1,
  350: 4,
  351: 3,
  352: 1,
  353: 2,
  360: 1,
  368: 1,
  369: 1,
  370: 1,
  371: 1,
  372: 1,
  373: 1,
  374: 1,
  375: 1,
  376: 1,
  377: 1,
  378: 1,
  382: 3,
  385: 1,
  392: 1,
  393: 1,
  396: 2,
  397: 2,
  398: 2,
  399: 1,
  400: 1,
  401: 1,
  402: 1,
  403: 1,
  404: 1,
  405: 1,
  406: 1,
  407: 1,
  408: 1,
  409: 1,
  410: 1,
  414: 4,
  415: 1,
  416: 1,
  417: 2,
  420: 1,
  421: 1,
  422: 2,
  424: 1,
  425: 2,
  426: 2,
  427: 2,
  428: 2,
  430: 3,
  438: 3,
  439: 3,
  440: 3,
  443: 2,
  444: 2,
  445: 2,
  446: 2,
  447: 6,
  448: 6,
  449: 2,
  450: 2,
  464: 2,
  468: 3,
  476: 2,
  479: 1,
  480: 2,
  65535: 0
};
/* Part 3 TODO: actually parse formulae */
function ods_to_csf_formula(f/*:string*/)/*:string*/ {
	if(f.slice(0,3) == "of:") f = f.slice(3);
	/* 5.2 Basic Expressions */
	if(f.charCodeAt(0) == 61) {
		f = f.slice(1);
		if(f.charCodeAt(0) == 61) f = f.slice(1);
	}
	f = f.replace(/COM\.MICROSOFT\./g, "");
	/* Part 3 Section 5.8 References */
	f = f.replace(/\[((?:\.[A-Z]+[0-9]+)(?::\.[A-Z]+[0-9]+)?)\]/g, function($$, $1) { return $1.replace(/\./g,""); });
	/* TODO: something other than this */
	f = f.replace(/\[.(#[A-Z]*[?!])\]/g, "$1");
	return f.replace(/[;~]/g,",").replace(/\|/g,";");
}

function ods_to_csf_3D(r/*:string*/)/*:[string, string]*/ {
	var a = r.split(":");
	var s = a[0].split(".")[0];
	return [s, a[0].split(".")[1] + (a.length > 1 ? (":" + (a[1].split(".")[1] || a[1].split(".")[0])) : "")];
}

var strs = {}; // shared strings
var _ssfopts = {}; // spreadsheet formatting options

function default_margins(margins/*:Margins*/, mode/*:?string*/) {
	if(!margins) return;
	var defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];
	if(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];
	if(margins.left   == null) margins.left   = defs[0];
	if(margins.right  == null) margins.right  = defs[1];
	if(margins.top    == null) margins.top    = defs[2];
	if(margins.bottom == null) margins.bottom = defs[3];
	if(margins.header == null) margins.header = defs[4];
	if(margins.footer == null) margins.footer = defs[5];
}

function safe_format(p/*:Cell*/, fmtid/*:number*/, fillid/*:?number*/, opts, themes, styles) {
	try {
		if(opts.cellNF) p.z = table_fmt[fmtid];
	} catch(e) { if(opts.WTF) throw e; }
	if(p.t === 'z' && !opts.cellStyles) return;
	if(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);
	if((!opts || opts.cellText !== false) && p.t !== 'z') try {
		if(table_fmt[fmtid] == null) SSF_load(SSFImplicit[fmtid] || "General", fmtid);
		if(p.t === 'e') p.w = p.w || BErr[p.v];
		else if(fmtid === 0) {
			if(p.t === 'n') {
				if((p.v|0) === p.v) p.w = p.v.toString(10);
				else p.w = SSF_general_num(p.v);
			}
			else if(p.t === 'd') {
				var dd = datenum(p.v);
				if((dd|0) === dd) p.w = dd.toString(10);
				else p.w = SSF_general_num(dd);
			}
			else if(p.v === undefined) return "";
			else p.w = SSF_general(p.v,_ssfopts);
		}
		else if(p.t === 'd') p.w = SSF_format(fmtid,datenum(p.v),_ssfopts);
		else p.w = SSF_format(fmtid,p.v,_ssfopts);
	} catch(e) { if(opts.WTF) throw e; }
	if(!opts.cellStyles) return;
	if(fillid != null) try {
		p.s = styles.Fills[fillid];
		if (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {
			p.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);
			if(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;
		}
		if (p.s.bgColor && p.s.bgColor.theme) {
			p.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);
			if(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;
		}
	} catch(e) { if(opts.WTF && styles.Fills) throw e; }
}
function parse_ws_xml_dim(ws/*:Worksheet*/, s/*:string*/) {
	var d = safe_decode_range(s);
	if(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws["!ref"] = encode_range(d);
}
var mergecregex = /<(?:\w:)?mergeCell ref="[A-Z0-9:]+"\s*[\/]?>/g;
var sheetdataregex = /<(?:\w+:)?sheetData[^>]*>([\s\S]*)<\/(?:\w+:)?sheetData>/;
var hlinkregex = /<(?:\w:)?hyperlink [^>]*>/mg;
var dimregex = /"(\w*:\w*)"/;
var colregex = /<(?:\w:)?col\b[^>]*[\/]?>/g;
var afregex = /<(?:\w:)?autoFilter[^>]*([\/]|>([\s\S]*)<\/(?:\w:)?autoFilter)>/g;
var marginregex= /<(?:\w:)?pageMargins[^>]*\/>/g;
var sheetprregex = /<(?:\w:)?sheetPr\b(?:[^>a-z][^>]*)?\/>/;
var sheetprregex2= /<(?:\w:)?sheetPr[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetPr)>/;
var svsregex = /<(?:\w:)?sheetViews[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetViews)>/;

/* 18.3 Worksheets */
function parse_ws_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {
	if(!data) return data;
	if(!rels) rels = {'!id':{}};

	/* 18.3.1.99 worksheet CT_Worksheet */
	var s = opts.dense ? ([]/*:any*/) : ({}/*:any*/);
	var refguess/*:Range*/ = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} }/*:any*/);

	var data1 = "", data2 = "";
	var mtch/*:?any*/ = data.match(sheetdataregex);
	if(mtch) {
		data1 = data.slice(0, mtch.index);
		data2 = data.slice(mtch.index + mtch[0].length);
	} else data1 = data2 = data;

	/* 18.3.1.82 sheetPr CT_SheetPr */
	var sheetPr = data1.match(sheetprregex);
	if(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);
	else if((sheetPr = data1.match(sheetprregex2))) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1]||"", s, wb, idx);

	/* 18.3.1.35 dimension CT_SheetDimension */
	var ridx = (data1.match(/<(?:\w*:)?dimension/)||{index:-1}).index;
	if(ridx > 0) {
		var ref = data1.slice(ridx,ridx+50).match(dimregex);
		if(ref) parse_ws_xml_dim(s, ref[1]);
	}

	/* 18.3.1.88 sheetViews CT_SheetViews */
	var svs = data1.match(svsregex);
	if(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);

	/* 18.3.1.17 cols CT_Cols */
	var columns/*:Array<ColInfo>*/ = [];
	if(opts.cellStyles) {
		/* 18.3.1.13 col CT_Col */
		var cols = data1.match(colregex);
		if(cols) parse_ws_xml_cols(columns, cols);
	}

	/* 18.3.1.80 sheetData CT_SheetData ? */
	if(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);

	/* 18.3.1.2  autoFilter CT_AutoFilter */
	var afilter = data2.match(afregex);
	if(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);

	/* 18.3.1.55 mergeCells CT_MergeCells */
	var merges/*:Array<Range>*/ = [];
	var _merge = data2.match(mergecregex);
	if(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)
		merges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf("\"")+1));

	/* 18.3.1.48 hyperlinks CT_Hyperlinks */
	var hlink = data2.match(hlinkregex);
	if(hlink) parse_ws_xml_hlinks(s, hlink, rels);

	/* 18.3.1.62 pageMargins CT_PageMargins */
	var margins = data2.match(marginregex);
	if(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));

	if(!s["!ref"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s["!ref"] = encode_range(refguess);
	if(opts.sheetRows > 0 && s["!ref"]) {
		var tmpref = safe_decode_range(s["!ref"]);
		if(opts.sheetRows <= +tmpref.e.r) {
			tmpref.e.r = opts.sheetRows - 1;
			if(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;
			if(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;
			if(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;
			if(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;
			s["!fullref"] = s["!ref"];
			s["!ref"] = encode_range(tmpref);
		}
	}
	if(columns.length > 0) s["!cols"] = columns;
	if(merges.length > 0) s["!merges"] = merges;
	return s;
}

/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */
function parse_ws_xml_sheetpr(sheetPr/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {
	var data = parsexmltag(sheetPr);
	if(!wb.Sheets[idx]) wb.Sheets[idx] = {};
	if(data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));
}
function parse_ws_xml_sheetpr2(sheetPr/*:string*/, body/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {
	parse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(">")), s, wb, idx);
}

function parse_ws_xml_hlinks(s, data/*:Array<string>*/, rels) {
	var dense = Array.isArray(s);
	for(var i = 0; i != data.length; ++i) {
		var val = parsexmltag(utf8read(data[i]), true);
		if(!val.ref) return;
		var rel = ((rels || {})['!id']||[])[val.id];
		if(rel) {
			val.Target = rel.Target;
			if(val.location) val.Target += "#"+unescapexml(val.location);
		} else {
			val.Target = "#" + unescapexml(val.location);
			rel = {Target: val.Target, TargetMode: 'Internal'};
		}
		val.Rel = rel;
		if(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }
		var rng = safe_decode_range(val.ref);
		for(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {
			var addr = encode_cell({c:C,r:R});
			if(dense) {
				if(!s[R]) s[R] = [];
				if(!s[R][C]) s[R][C] = {t:"z",v:undefined};
				s[R][C].l = val;
			} else {
				if(!s[addr]) s[addr] = {t:"z",v:undefined};
				s[addr].l = val;
			}
		}
	}
}

function parse_ws_xml_margins(margin) {
	var o = {};
	["left", "right", "top", "bottom", "header", "footer"].forEach(function(k) {
		if(margin[k]) o[k] = parseFloat(margin[k]);
	});
	return o;
}

function parse_ws_xml_cols(columns, cols) {
	var seencol = false;
	for(var coli = 0; coli != cols.length; ++coli) {
		var coll = parsexmltag(cols[coli], true);
		if(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);
		var colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;
		if(coll.outlineLevel) coll.level = (+coll.outlineLevel || 0);
		delete coll.min; delete coll.max; coll.width = +coll.width;
		if(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }
		process_col(coll);
		while(colm <= colM) columns[colm++] = dup(coll);
	}
}

function parse_ws_xml_autofilter(data/*:string*/) {
	var o = { ref: (data.match(/ref="([^"]*)"/)||[])[1]};
	return o;
}

/* 18.3.1.88 sheetViews CT_SheetViews */
/* 18.3.1.87 sheetView CT_SheetView */
var sviewregex = /<(?:\w:)?sheetView(?:[^>a-z][^>]*)?\/?>/;
function parse_ws_xml_sheetviews(data, wb/*:WBWBProps*/) {
	if(!wb.Views) wb.Views = [{}];
	(data.match(sviewregex)||[]).forEach(function(r/*:string*/, i/*:number*/) {
		var tag = parsexmltag(r);
		// $FlowIgnore
		if(!wb.Views[i]) wb.Views[i] = {};
		// $FlowIgnore
		if(+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;
		// $FlowIgnore
		if(parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;
	});
}

var parse_ws_xml_data = /*#__PURE__*/(function() {
	var cellregex = /<(?:\w+:)?c[ \/>]/, rowregex = /<\/(?:\w+:)?row>/;
	var rregex = /r=["']([^"']*)["']/, isregex = /<(?:\w+:)?is>([\S\s]*?)<\/(?:\w+:)?is>/;
	var refregex = /ref=["']([^"']*)["']/;
	var match_v = matchtag("v"), match_f = matchtag("f");

return function parse_ws_xml_data(sdata/*:string*/, s, opts, guess/*:Range*/, themes, styles) {
	var ri = 0, x = "", cells/*:Array<string>*/ = [], cref/*:?Array<string>*/ = [], idx=0, i=0, cc=0, d="", p/*:any*/;
	var tag, tagr = 0, tagc = 0;
	var sstr, ftag;
	var fmtid = 0, fillid = 0;
	var do_format = Array.isArray(styles.CellXf), cf;
	var arrayf/*:Array<[Range, string]>*/ = [];
	var sharedf = [];
	var dense = Array.isArray(s);
	var rows/*:Array<RowInfo>*/ = [], rowobj = {}, rowrite = false;
	var sheetStubs = !!opts.sheetStubs;
	for(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {
		x = marr[mt].trim();
		var xlen = x.length;
		if(xlen === 0) continue;

		/* 18.3.1.73 row CT_Row */
		var rstarti = 0;
		outa: for(ri = 0; ri < xlen; ++ri) switch(/*x.charCodeAt(ri)*/x[ri]) {
			case ">" /*62*/:
				if(/*x.charCodeAt(ri-1) != 47*/x[ri-1] != "/") { ++ri; break outa; }
				if(opts && opts.cellStyles) {
					// TODO: avoid duplication
					tag = parsexmltag(x.slice(rstarti,ri), true);
					tagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;
					if(opts.sheetRows && opts.sheetRows < tagr) continue;
					rowobj = {}; rowrite = false;
					if(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }
					if(tag.hidden == "1") { rowrite = true; rowobj.hidden = true; }
					if(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }
					if(rowrite) rows[tagr-1] = rowobj;
				}
				break;
			case "<" /*60*/: rstarti = ri; break;
		}
		if(rstarti >= ri) break;
		tag = parsexmltag(x.slice(rstarti,ri), true);
		tagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;
		if(opts.sheetRows && opts.sheetRows < tagr) continue;
		if(guess.s.r > tagr - 1) guess.s.r = tagr - 1;
		if(guess.e.r < tagr - 1) guess.e.r = tagr - 1;

		if(opts && opts.cellStyles) {
			rowobj = {}; rowrite = false;
			if(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }
			if(tag.hidden == "1") { rowrite = true; rowobj.hidden = true; }
			if(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }
			if(rowrite) rows[tagr-1] = rowobj;
		}

		/* 18.3.1.4 c CT_Cell */
		cells = x.slice(ri).split(cellregex);
		for(var rslice = 0; rslice != cells.length; ++rslice) if(cells[rslice].trim().charAt(0) != "<") break;
		cells = cells.slice(rslice);
		for(ri = 0; ri != cells.length; ++ri) {
			x = cells[ri].trim();
			if(x.length === 0) continue;
			cref = x.match(rregex); idx = ri; i=0; cc=0;
			x = "<c " + (x.slice(0,1)=="<"?">":"") + x;
			if(cref != null && cref.length === 2) {
				idx = 0; d=cref[1];
				for(i=0; i != d.length; ++i) {
					if((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;
					idx = 26*idx + cc;
				}
				--idx;
				tagc = idx;
			} else ++tagc;
			for(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;
			tag = parsexmltag(x.slice(0,i), true);
			if(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});
			d = x.slice(i);
			p = ({t:""}/*:any*/);

			if((cref=d.match(match_v))!= null && /*::cref != null && */cref[1] !== '') p.v=unescapexml(cref[1]);
			if(opts.cellFormula) {
				if((cref=d.match(match_f))!= null && /*::cref != null && */cref[1] !== '') {
					/* TODO: match against XLSXFutureFunctions */
					p.f=unescapexml(utf8read(cref[1])).replace(/\r\n/g, "\n");
					if(!opts.xlfn) p.f = _xlfn(p.f);
					if(/*::cref != null && cref[0] != null && */cref[0].indexOf('t="array"') > -1) {
						p.F = (d.match(refregex)||[])[1];
						if(p.F.indexOf(":") > -1) arrayf.push([safe_decode_range(p.F), p.F]);
					} else if(/*::cref != null && cref[0] != null && */cref[0].indexOf('t="shared"') > -1) {
						// TODO: parse formula
						ftag = parsexmltag(cref[0]);
						var ___f = unescapexml(utf8read(cref[1]));
						if(!opts.xlfn) ___f = _xlfn(___f);
						sharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];
					}
				} else if((cref=d.match(/<f[^>]*\/>/))) {
					ftag = parsexmltag(cref[0]);
					if(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);
				}
				/* TODO: factor out contains logic */
				var _tag = decode_cell(tag.r);
				for(i = 0; i < arrayf.length; ++i)
					if(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)
						if(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)
							p.F = arrayf[i][1];
			}

			if(tag.t == null && p.v === undefined) {
				if(p.f || p.F) {
					p.v = 0; p.t = "n";
				} else if(!sheetStubs) continue;
				else p.t = "z";
			}
			else p.t = tag.t || "n";
			if(guess.s.c > tagc) guess.s.c = tagc;
			if(guess.e.c < tagc) guess.e.c = tagc;
			/* 18.18.11 t ST_CellType */
			switch(p.t) {
				case 'n':
					if(p.v == "" || p.v == null) {
						if(!sheetStubs) continue;
						p.t = 'z';
					} else p.v = parseFloat(p.v);
					break;
				case 's':
					if(typeof p.v == 'undefined') {
						if(!sheetStubs) continue;
						p.t = 'z';
					} else {
						sstr = strs[parseInt(p.v, 10)];
						p.v = sstr.t;
						p.r = sstr.r;
						if(opts.cellHTML) p.h = sstr.h;
					}
					break;
				case 'str':
					p.t = "s";
					p.v = (p.v!=null) ? utf8read(p.v) : '';
					if(opts.cellHTML) p.h = escapehtml(p.v);
					break;
				case 'inlineStr':
					cref = d.match(isregex);
					p.t = 's';
					if(cref != null && (sstr = parse_si(cref[1]))) {
						p.v = sstr.t;
						if(opts.cellHTML) p.h = sstr.h;
					} else p.v = "";
					break;
				case 'b': p.v = parsexmlbool(p.v); break;
				case 'd':
					if(opts.cellDates) p.v = parseDate(p.v, 1);
					else { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }
					break;
				/* error string in .w, number in .v */
				case 'e':
					if(!opts || opts.cellText !== false) p.w = p.v;
					p.v = RBErr[p.v]; break;
			}
			/* formatting */
			fmtid = fillid = 0;
			cf = null;
			if(do_format && tag.s !== undefined) {
				cf = styles.CellXf[tag.s];
				if(cf != null) {
					if(cf.numFmtId != null) fmtid = cf.numFmtId;
					if(opts.cellStyles) {
						if(cf.fillId != null) fillid = cf.fillId;
					}
				}
			}
			safe_format(p, fmtid, fillid, opts, themes, styles);
			if(opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }
			if(tag.cm && opts.xlmeta) {
				var cm = (opts.xlmeta.Cell||[])[+tag.cm-1];
				if(cm && cm.type == 'XLDAPR') p.D = true;
			}
			if(dense) {
				var _r = decode_cell(tag.r);
				if(!s[_r.r]) s[_r.r] = [];
				s[_r.r][_r.c] = p;
			} else s[tag.r] = p;
		}
	}
	if(rows.length > 0) s['!rows'] = rows;
}; })();

/* [MS-XLSB] 2.4.726 BrtRowHdr */
function parse_BrtRowHdr(data, length) {
	var z = ({}/*:any*/);
	var tgt = data.l + length;
	z.r = data.read_shift(4);
	data.l += 4; // TODO: ixfe
	var miyRw = data.read_shift(2);
	data.l += 1; // TODO: top/bot padding
	var flags = data.read_shift(1);
	data.l = tgt;
	if(flags & 0x07) z.level = flags & 0x07;
	if(flags & 0x10) z.hidden = true;
	if(flags & 0x20) z.hpt = miyRw / 20;
	return z;
}

/* [MS-XLSB] 2.4.820 BrtWsDim */
var parse_BrtWsDim = parse_UncheckedRfX;

/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */
function parse_BrtWsFmtInfo(/*::data, length*/) {
}
//function write_BrtWsFmtInfo(ws, o) { }

/* [MS-XLSB] 2.4.823 BrtWsProp */
function parse_BrtWsProp(data, length) {
	var z = {};
	var f = data[data.l]; ++data.l;
	z.above = !(f & 0x40);
	z.left  = !(f & 0x80);
	/* TODO: pull flags */
	data.l += 18;
	z.name = parse_XLSBCodeName(data);
	return z;
}

/* [MS-XLSB] 2.4.306 BrtCellBlank */
function parse_BrtCellBlank(data) {
	var cell = parse_XLSBCell(data);
	return [cell];
}
function parse_BrtShortBlank(data) {
	var cell = parse_XLSBShortCell(data);
	return [cell];
}

/* [MS-XLSB] 2.4.307 BrtCellBool */
function parse_BrtCellBool(data) {
	var cell = parse_XLSBCell(data);
	var fBool = data.read_shift(1);
	return [cell, fBool, 'b'];
}
function parse_BrtShortBool(data) {
	var cell = parse_XLSBShortCell(data);
	var fBool = data.read_shift(1);
	return [cell, fBool, 'b'];
}

/* [MS-XLSB] 2.4.308 BrtCellError */
function parse_BrtCellError(data) {
	var cell = parse_XLSBCell(data);
	var bError = data.read_shift(1);
	return [cell, bError, 'e'];
}
function parse_BrtShortError(data) {
	var cell = parse_XLSBShortCell(data);
	var bError = data.read_shift(1);
	return [cell, bError, 'e'];
}


/* [MS-XLSB] 2.4.311 BrtCellIsst */
function parse_BrtCellIsst(data) {
	var cell = parse_XLSBCell(data);
	var isst = data.read_shift(4);
	return [cell, isst, 's'];
}
function parse_BrtShortIsst(data) {
	var cell = parse_XLSBShortCell(data);
	var isst = data.read_shift(4);
	return [cell, isst, 's'];
}

/* [MS-XLSB] 2.4.313 BrtCellReal */
function parse_BrtCellReal(data) {
	var cell = parse_XLSBCell(data);
	var value = parse_Xnum(data);
	return [cell, value, 'n'];
}
function parse_BrtShortReal(data) {
	var cell = parse_XLSBShortCell(data);
	var value = parse_Xnum(data);
	return [cell, value, 'n'];
}

/* [MS-XLSB] 2.4.314 BrtCellRk */
function parse_BrtCellRk(data) {
	var cell = parse_XLSBCell(data);
	var value = parse_RkNumber(data);
	return [cell, value, 'n'];
}
function parse_BrtShortRk(data) {
	var cell = parse_XLSBShortCell(data);
	var value = parse_RkNumber(data);
	return [cell, value, 'n'];
}

/* [MS-XLSB] 2.4.323 BrtCellRString */
function parse_BrtCellRString(data) {
	var cell = parse_XLSBCell(data);
	var value = parse_RichStr(data);
	return [cell, value, 'is'];
}

/* [MS-XLSB] 2.4.317 BrtCellSt */
function parse_BrtCellSt(data) {
	var cell = parse_XLSBCell(data);
	var value = parse_XLWideString(data);
	return [cell, value, 'str'];
}
function parse_BrtShortSt(data) {
	var cell = parse_XLSBShortCell(data);
	var value = parse_XLWideString(data);
	return [cell, value, 'str'];
}

/* [MS-XLSB] 2.4.653 BrtFmlaBool */
function parse_BrtFmlaBool(data, length, opts) {
	var end = data.l + length;
	var cell = parse_XLSBCell(data);
	cell.r = opts['!row'];
	var value = data.read_shift(1);
	var o = [cell, value, 'b'];
	if(opts.cellFormula) {
		data.l += 2;
		var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);
		o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */
	}
	else data.l = end;
	return o;
}

/* [MS-XLSB] 2.4.654 BrtFmlaError */
function parse_BrtFmlaError(data, length, opts) {
	var end = data.l + length;
	var cell = parse_XLSBCell(data);
	cell.r = opts['!row'];
	var value = data.read_shift(1);
	var o = [cell, value, 'e'];
	if(opts.cellFormula) {
		data.l += 2;
		var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);
		o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */
	}
	else data.l = end;
	return o;
}

/* [MS-XLSB] 2.4.655 BrtFmlaNum */
function parse_BrtFmlaNum(data, length, opts) {
	var end = data.l + length;
	var cell = parse_XLSBCell(data);
	cell.r = opts['!row'];
	var value = parse_Xnum(data);
	var o = [cell, value, 'n'];
	if(opts.cellFormula) {
		data.l += 2;
		var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);
		o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */
	}
	else data.l = end;
	return o;
}

/* [MS-XLSB] 2.4.656 BrtFmlaString */
function parse_BrtFmlaString(data, length, opts) {
	var end = data.l + length;
	var cell = parse_XLSBCell(data);
	cell.r = opts['!row'];
	var value = parse_XLWideString(data);
	var o = [cell, value, 'str'];
	if(opts.cellFormula) {
		data.l += 2;
		var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);
		o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */
	}
	else data.l = end;
	return o;
}

/* [MS-XLSB] 2.4.682 BrtMergeCell */
var parse_BrtMergeCell = parse_UncheckedRfX;

/* [MS-XLSB] 2.4.662 BrtHLink */
function parse_BrtHLink(data, length/*::, opts*/) {
	var end = data.l + length;
	var rfx = parse_UncheckedRfX(data);
	var relId = parse_XLNullableWideString(data);
	var loc = parse_XLWideString(data);
	var tooltip = parse_XLWideString(data);
	var display = parse_XLWideString(data);
	data.l = end;
	var o = ({rfx:rfx, relId:relId, loc:loc, display:display}/*:any*/);
	if(tooltip) o.Tooltip = tooltip;
	return o;
}

/* [MS-XLSB] 2.4.692 BrtPane */
function parse_BrtPane(/*data, length, opts*/) {
}

/* [MS-XLSB] 2.4.6 BrtArrFmla */
function parse_BrtArrFmla(data, length, opts) {
	var end = data.l + length;
	var rfx = parse_RfX(data);
	var fAlwaysCalc = data.read_shift(1);
	var o = [rfx]; o[2] = fAlwaysCalc;
	if(opts.cellFormula) {
		var formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);
		o[1] = formula;
	} else data.l = end;
	return o;
}

/* [MS-XLSB] 2.4.750 BrtShrFmla */
function parse_BrtShrFmla(data, length, opts) {
	var end = data.l + length;
	var rfx = parse_UncheckedRfX(data);
	var o = [rfx];
	if(opts.cellFormula) {
		var formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);
		o[1] = formula;
		data.l = end;
	} else data.l = end;
	return o;
}

/* [MS-XLSB] 2.4.678 BrtMargins */
var BrtMarginKeys = ["left","right","top","bottom","header","footer"];
function parse_BrtMargins(data/*::, length, opts*/)/*:Margins*/ {
	var margins = ({}/*:any*/);
	BrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data); });
	return margins;
}

/* [MS-XLSB] 2.4.299 BrtBeginWsView */
function parse_BrtBeginWsView(data/*::, length, opts*/) {
	var f = data.read_shift(2);
	data.l += 28;
	return { RTL: f & 0x20 };
}

function parse_BrtDVal(/*data, length, opts*/) {
}
function parse_BrtDVal14(/*data, length, opts*/) {
}
/* [MS-XLSB] 2.1.7.61 Worksheet */
function parse_ws_bin(data, _opts, idx, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {
	if(!data) return data;
	var opts = _opts || {};
	if(!rels) rels = {'!id':{}};
	var s/*:Worksheet*/ = (opts.dense ? [] : {});

	var ref;
	var refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };
	var pass = false, end = false;
	var row, p, cf, R, C, addr, sstr, rr, cell/*:Cell*/;
	var merges/*:Array<Range>*/ = [];
	opts.biff = 12;
	opts['!row'] = 0;

	var ai = 0, af = false;

	var arrayf/*:Array<[Range, string]>*/ = [];
	var sharedf = {};
	var supbooks = opts.supbooks || /*::(*/wb/*:: :any)*/.supbooks || ([[]]/*:any*/);
	supbooks.sharedf = sharedf;
	supbooks.arrayf = arrayf;
	supbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });
	if(!opts.supbooks) {
		opts.supbooks = supbooks;
		if(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];
	}

	var colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];
	var seencol = false;

	XLSBRecordEnum[0x0010] = { n:"BrtShortReal", f:parse_BrtShortReal };

	var cm;

	recordhopper(data, function ws_parse(val, RR, RT) {
		if(end) return;
		switch(RT) {
			case 0x0094: /* 'BrtWsDim' */
				ref = val; break;
			case 0x0000: /* 'BrtRowHdr' */
				row = val;
				if(opts.sheetRows && opts.sheetRows <= row.r) end=true;
				rr = encode_row(R = row.r);
				opts['!row'] = row.r;
				if(val.hidden || val.hpt || val.level != null) {
					if(val.hpt) val.hpx = pt2px(val.hpt);
					rowinfo[val.r] = val;
				}
				break;

			case 0x0002: /* 'BrtCellRk' */
			case 0x0003: /* 'BrtCellError' */
			case 0x0004: /* 'BrtCellBool' */
			case 0x0005: /* 'BrtCellReal' */
			case 0x0006: /* 'BrtCellSt' */
			case 0x0007: /* 'BrtCellIsst' */
			case 0x0008: /* 'BrtFmlaString' */
			case 0x0009: /* 'BrtFmlaNum' */
			case 0x000A: /* 'BrtFmlaBool' */
			case 0x000B: /* 'BrtFmlaError' */
			case 0x000D: /* 'BrtShortRk' */
			case 0x000E: /* 'BrtShortError' */
			case 0x000F: /* 'BrtShortBool' */
			case 0x0010: /* 'BrtShortReal' */
			case 0x0011: /* 'BrtShortSt' */
			case 0x0012: /* 'BrtShortIsst' */
			case 0x003E: /* 'BrtCellRString' */
				p = ({t:val[2]}/*:any*/);
				switch(val[2]) {
					case 'n': p.v = val[1]; break;
					case 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;
					case 'b': p.v = val[1] ? true : false; break;
					case 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;
					case 'str': p.t = 's'; p.v = val[1]; break;
					case 'is': p.t = 's'; p.v = val[1].t; break;
				}
				if((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);
				C = val[0].c == -1 ? C + 1 : val[0].c;
				if(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }
				else s[encode_col(C) + rr] = p;
				if(opts.cellFormula) {
					af = false;
					for(ai = 0; ai < arrayf.length; ++ai) {
						var aii = arrayf[ai];
						if(row.r >= aii[0].s.r && row.r <= aii[0].e.r)
							if(C >= aii[0].s.c && C <= aii[0].e.c) {
								p.F = encode_range(aii[0]); af = true;
							}
					}
					if(!af && val.length > 3) p.f = val[3];
				}

				if(refguess.s.r > row.r) refguess.s.r = row.r;
				if(refguess.s.c > C) refguess.s.c = C;
				if(refguess.e.r < row.r) refguess.e.r = row.r;
				if(refguess.e.c < C) refguess.e.c = C;
				if(opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {
					var _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }
				}
				if(cm) {
					if(cm.type == 'XLDAPR') p.D = true;
					cm = void 0;
				}
				break;

			case 0x0001: /* 'BrtCellBlank' */
			case 0x000C: /* 'BrtShortBlank' */
				if(!opts.sheetStubs || pass) break;
				p = ({t:'z',v:void 0}/*:any*/);
				C = val[0].c == -1 ? C + 1 : val[0].c;
				if(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }
				else s[encode_col(C) + rr] = p;
				if(refguess.s.r > row.r) refguess.s.r = row.r;
				if(refguess.s.c > C) refguess.s.c = C;
				if(refguess.e.r < row.r) refguess.e.r = row.r;
				if(refguess.e.c < C) refguess.e.c = C;
				if(cm) {
					if(cm.type == 'XLDAPR') p.D = true;
					cm = void 0;
				}
				break;

			case 0x00B0: /* 'BrtMergeCell' */
				merges.push(val); break;

			case 0x0031: { /* 'BrtCellMeta' */
				cm = ((opts.xlmeta||{}).Cell||[])[val-1];
			} break;

			case 0x01EE: /* 'BrtHLink' */
				var rel = rels['!id'][val.relId];
				if(rel) {
					val.Target = rel.Target;
					if(val.loc) val.Target += "#"+val.loc;
					val.Rel = rel;
				} else if(val.relId == '') {
					val.Target = "#" + val.loc;
				}
				for(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {
					if(opts.dense) {
						if(!s[R]) s[R] = [];
						if(!s[R][C]) s[R][C] = {t:'z',v:undefined};
						s[R][C].l = val;
					} else {
						addr = encode_cell({c:C,r:R});
						if(!s[addr]) s[addr] = {t:'z',v:undefined};
						s[addr].l = val;
					}
				}
				break;

			case 0x01AA: /* 'BrtArrFmla' */
				if(!opts.cellFormula) break;
				arrayf.push(val);
				cell = ((opts.dense ? s[R][C] : s[encode_col(C) + rr])/*:any*/);
				cell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);
				cell.F = encode_range(val[0]);
				break;
			case 0x01AB: /* 'BrtShrFmla' */
				if(!opts.cellFormula) break;
				sharedf[encode_cell(val[0].s)] = val[1];
				cell = (opts.dense ? s[R][C] : s[encode_col(C) + rr]);
				cell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);
				break;

			/* identical to 'ColInfo' in XLS */
			case 0x003C: /* 'BrtColInfo' */
				if(!opts.cellStyles) break;
				while(val.e >= val.s) {
					colinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01), level: val.level };
					if(!seencol) { seencol = true; find_mdw_colw(val.w/256); }
					process_col(colinfo[val.e+1]);
				}
				break;

			case 0x00A1: /* 'BrtBeginAFilter' */
				s['!autofilter'] = { ref:encode_range(val) };
				break;

			case 0x01DC: /* 'BrtMargins' */
				s['!margins'] = val;
				break;

			case 0x0093: /* 'BrtWsProp' */
				if(!wb.Sheets[idx]) wb.Sheets[idx] = {};
				if(val.name) wb.Sheets[idx].CodeName = val.name;
				if(val.above || val.left) s['!outline'] = { above: val.above, left: val.left };
				break;

			case 0x0089: /* 'BrtBeginWsView' */
				if(!wb.Views) wb.Views = [{}];
				if(!wb.Views[0]) wb.Views[0] = {};
				if(val.RTL) wb.Views[0].RTL = true;
				break;

			case 0x01E5: /* 'BrtWsFmtInfo' */
				break;

			case 0x0040: /* 'BrtDVal' */
			case 0x041D: /* 'BrtDVal14' */
				break;

			case 0x0097: /* 'BrtPane' */
				break;
			case 0x0098: /* 'BrtSel' */
			case 0x00AF: /* 'BrtAFilterDateGroupItem' */
			case 0x0284: /* 'BrtActiveX' */
			case 0x0271: /* 'BrtBigName' */
			case 0x0232: /* 'BrtBkHim' */
			case 0x018C: /* 'BrtBrk' */
			case 0x0458: /* 'BrtCFIcon' */
			case 0x047A: /* 'BrtCFRuleExt' */
			case 0x01D7: /* 'BrtCFVO' */
			case 0x041A: /* 'BrtCFVO14' */
			case 0x0289: /* 'BrtCellIgnoreEC' */
			case 0x0451: /* 'BrtCellIgnoreEC14' */
			case 0x024D: /* 'BrtCellSmartTagProperty' */
			case 0x025F: /* 'BrtCellWatch' */
			case 0x0234: /* 'BrtColor' */
			case 0x041F: /* 'BrtColor14' */
			case 0x00A8: /* 'BrtColorFilter' */
			case 0x00AE: /* 'BrtCustomFilter' */
			case 0x049C: /* 'BrtCustomFilter14' */
			case 0x01F3: /* 'BrtDRef' */
			case 0x01FB: /* 'BrtDXF' */
			case 0x0226: /* 'BrtDrawing' */
			case 0x00AB: /* 'BrtDynamicFilter' */
			case 0x00A7: /* 'BrtFilter' */
			case 0x0499: /* 'BrtFilter14' */
			case 0x00A9: /* 'BrtIconFilter' */
			case 0x049D: /* 'BrtIconFilter14' */
			case 0x0227: /* 'BrtLegacyDrawing' */
			case 0x0228: /* 'BrtLegacyDrawingHF' */
			case 0x0295: /* 'BrtListPart' */
			case 0x027F: /* 'BrtOleObject' */
			case 0x01DE: /* 'BrtPageSetup' */
			case 0x0219: /* 'BrtPhoneticInfo' */
			case 0x01DD: /* 'BrtPrintOptions' */
			case 0x0218: /* 'BrtRangeProtection' */
			case 0x044F: /* 'BrtRangeProtection14' */
			case 0x02A8: /* 'BrtRangeProtectionIso' */
			case 0x0450: /* 'BrtRangeProtectionIso14' */
			case 0x0400: /* 'BrtRwDescent' */
			case 0x0297: /* 'BrtSheetCalcProp' */
			case 0x0217: /* 'BrtSheetProtection' */
			case 0x02A6: /* 'BrtSheetProtectionIso' */
			case 0x01F8: /* 'BrtSlc' */
			case 0x0413: /* 'BrtSparkline' */
			case 0x01AC: /* 'BrtTable' */
			case 0x00AA: /* 'BrtTop10Filter' */
			case 0x0C00: /* 'BrtUid' */
			case 0x0032: /* 'BrtValueMeta' */
			case 0x0816: /* 'BrtWebExtension' */
			case 0x0415: /* 'BrtWsFmtInfoEx14' */
				break;

			case 0x0023: /* 'BrtFRTBegin' */
				pass = true; break;
			case 0x0024: /* 'BrtFRTEnd' */
				pass = false; break;
			case 0x0025: /* 'BrtACBegin' */
 pass = true; break;
			case 0x0026: /* 'BrtACEnd' */
 pass = false; break;

			default:
				if(RR.T);
				else if(!pass || opts.WTF) throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	}, opts);

	delete opts.supbooks;
	delete opts['!row'];

	if(!s["!ref"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s["!ref"] = encode_range(ref || refguess);
	if(opts.sheetRows && s["!ref"]) {
		var tmpref = safe_decode_range(s["!ref"]);
		if(opts.sheetRows <= +tmpref.e.r) {
			tmpref.e.r = opts.sheetRows - 1;
			if(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;
			if(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;
			if(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;
			if(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;
			s["!fullref"] = s["!ref"];
			s["!ref"] = encode_range(tmpref);
		}
	}
	if(merges.length > 0) s["!merges"] = merges;
	if(colinfo.length > 0) s["!cols"] = colinfo;
	if(rowinfo.length > 0) s["!rows"] = rowinfo;
	return s;
}
function parse_Cache(data/*:string*/)/*:[Array<number|string>, string, ?string]*/ {
	var col/*:Array<number|string>*/ = [];
	var num = data.match(/^<c:numCache>/);
	var f;

	/* 21.2.2.150 pt CT_NumVal */
	(data.match(/<c:pt idx="(\d*)">(.*?)<\/c:pt>/mg)||[]).forEach(function(pt) {
		var q = pt.match(/<c:pt idx="(\d*?)"><c:v>(.*)<\/c:v><\/c:pt>/);
		if(!q) return;
		col[+q[1]] = num ? +q[2] : q[2];
	});

	/* 21.2.2.71 formatCode CT_Xstring */
	var nf = unescapexml((data.match(/<c:formatCode>([\s\S]*?)<\/c:formatCode>/) || ["","General"])[1]);

	(data.match(/<c:f>(.*?)<\/c:f>/mg)||[]).forEach(function(F) { f = F.replace(/<.*?>/g,""); });

	return [col, nf, f];
}

/* 21.2 DrawingML - Charts */
function parse_chart(data/*:?string*/, name/*:string*/, opts, rels, wb, csheet) {
	var cs/*:Worksheet*/ = ((csheet || {"!type":"chart"})/*:any*/);
	if(!data) return csheet;
	/* 21.2.2.27 chart CT_Chart */

	var C = 0, R = 0, col = "A";
	var refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };

	/* 21.2.2.120 numCache CT_NumData */
	(data.match(/<c:numCache>[\s\S]*?<\/c:numCache>/gm)||[]).forEach(function(nc) {
		var cache = parse_Cache(nc);
		refguess.s.r = refguess.s.c = 0;
		refguess.e.c = C;
		col = encode_col(C);
		cache[0].forEach(function(n,i) {
			cs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };
			R = i;
		});
		if(refguess.e.r < R) refguess.e.r = R;
		++C;
	});
	if(C > 0) cs["!ref"] = encode_range(refguess);
	return cs;
}
/* 18.3 Worksheets also covers Chartsheets */
function parse_cs_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {
	if(!data) return data;
	/* 18.3.1.12 chartsheet CT_ChartSheet */
	if(!rels) rels = {'!id':{}};
	var s = ({'!type':"chart", '!drawel':null, '!rel':""}/*:any*/);
	var m;

	/* 18.3.1.83 sheetPr CT_ChartsheetPr */
	var sheetPr = data.match(sheetprregex);
	if(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);

	/* 18.3.1.36 drawing CT_Drawing */
	if((m = data.match(/drawing r:id="(.*?)"/))) s['!rel'] = m[1];

	if(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];
	return s;
}

/* [MS-XLSB] 2.4.331 BrtCsProp */
function parse_BrtCsProp(data, length/*:number*/) {
	data.l += 10;
	var name = parse_XLWideString(data);
	return { name: name };
}

/* [MS-XLSB] 2.1.7.7 Chart Sheet */
function parse_cs_bin(data, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {
	if(!data) return data;
	if(!rels) rels = {'!id':{}};
	var s = {'!type':"chart", '!drawel':null, '!rel':""};
	var pass = false;
	recordhopper(data, function cs_parse(val, R, RT) {
		switch(RT) {

			case 0x0226: /* 'BrtDrawing' */
				s['!rel'] = val; break;

			case 0x028B: /* 'BrtCsProp' */
				if(!wb.Sheets[idx]) wb.Sheets[idx] = {};
				if(val.name) wb.Sheets[idx].CodeName = val.name;
				break;

			case 0x0232: /* 'BrtBkHim' */
			case 0x028C: /* 'BrtCsPageSetup' */
			case 0x029D: /* 'BrtCsProtection' */
			case 0x02A7: /* 'BrtCsProtectionIso' */
			case 0x0227: /* 'BrtLegacyDrawing' */
			case 0x0228: /* 'BrtLegacyDrawingHF' */
			case 0x01DC: /* 'BrtMargins' */
			case 0x0C00: /* 'BrtUid' */
				break;

			case 0x0023: /* 'BrtFRTBegin' */
				pass = true; break;
			case 0x0024: /* 'BrtFRTEnd' */
				pass = false; break;
			case 0x0025: /* 'BrtACBegin' */
 break;
			case 0x0026: /* 'BrtACEnd' */
 break;

			default:
				if(R.T > 0) ;
				else if(R.T < 0) ;
				else if(!pass || opts.WTF) throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	}, opts);

	if(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];
	return s;
}
/* 18.2.28 (CT_WorkbookProtection) Defaults */
var WBPropsDef = [
	['allowRefreshQuery',           false, "bool"],
	['autoCompressPictures',        true,  "bool"],
	['backupFile',                  false, "bool"],
	['checkCompatibility',          false, "bool"],
	['CodeName',                    ''],
	['date1904',                    false, "bool"],
	['defaultThemeVersion',         0,      "int"],
	['filterPrivacy',               false, "bool"],
	['hidePivotFieldList',          false, "bool"],
	['promptedSolutions',           false, "bool"],
	['publishItems',                false, "bool"],
	['refreshAllConnections',       false, "bool"],
	['saveExternalLinkValues',      true,  "bool"],
	['showBorderUnselectedTables',  true,  "bool"],
	['showInkAnnotation',           true,  "bool"],
	['showObjects',                 'all'],
	['showPivotChartFilter',        false, "bool"],
	['updateLinks', 'userSet']
];

/* 18.2.30 (CT_BookView) Defaults */
var WBViewDef = [
	['activeTab',                   0,      "int"],
	['autoFilterDateGrouping',      true,  "bool"],
	['firstSheet',                  0,      "int"],
	['minimized',                   false, "bool"],
	['showHorizontalScroll',        true,  "bool"],
	['showSheetTabs',               true,  "bool"],
	['showVerticalScroll',          true,  "bool"],
	['tabRatio',                    600,    "int"],
	['visibility',                  'visible']
	//window{Height,Width}, {x,y}Window
];

/* 18.2.19 (CT_Sheet) Defaults */
var SheetDef = [
	//['state', 'visible']
];

/* 18.2.2  (CT_CalcPr) Defaults */
var CalcPrDef = [
	['calcCompleted', 'true'],
	['calcMode', 'auto'],
	['calcOnSave', 'true'],
	['concurrentCalc', 'true'],
	['fullCalcOnLoad', 'false'],
	['fullPrecision', 'true'],
	['iterate', 'false'],
	['iterateCount', '100'],
	['iterateDelta', '0.001'],
	['refMode', 'A1']
];

/* 18.2.3 (CT_CustomWorkbookView) Defaults */
/*var CustomWBViewDef = [
	['autoUpdate', 'false'],
	['changesSavedWin', 'false'],
	['includeHiddenRowCol', 'true'],
	['includePrintSettings', 'true'],
	['maximized', 'false'],
	['minimized', 'false'],
	['onlySync', 'false'],
	['personalView', 'false'],
	['showComments', 'commIndicator'],
	['showFormulaBar', 'true'],
	['showHorizontalScroll', 'true'],
	['showObjects', 'all'],
	['showSheetTabs', 'true'],
	['showStatusbar', 'true'],
	['showVerticalScroll', 'true'],
	['tabRatio', '600'],
	['xWindow', '0'],
	['yWindow', '0']
];*/

function push_defaults_array(target, defaults) {
	for(var j = 0; j != target.length; ++j) { var w = target[j];
		for(var i=0; i != defaults.length; ++i) { var z = defaults[i];
			if(w[z[0]] == null) w[z[0]] = z[1];
			else switch(z[2]) {
			case "bool": if(typeof w[z[0]] == "string") w[z[0]] = parsexmlbool(w[z[0]]); break;
			case "int": if(typeof w[z[0]] == "string") w[z[0]] = parseInt(w[z[0]], 10); break;
			}
		}
	}
}
function push_defaults(target, defaults) {
	for(var i = 0; i != defaults.length; ++i) { var z = defaults[i];
		if(target[z[0]] == null) target[z[0]] = z[1];
		else switch(z[2]) {
			case "bool": if(typeof target[z[0]] == "string") target[z[0]] = parsexmlbool(target[z[0]]); break;
			case "int": if(typeof target[z[0]] == "string") target[z[0]] = parseInt(target[z[0]], 10); break;
		}
	}
}

function parse_wb_defaults(wb) {
	push_defaults(wb.WBProps, WBPropsDef);
	push_defaults(wb.CalcPr, CalcPrDef);

	push_defaults_array(wb.WBView, WBViewDef);
	push_defaults_array(wb.Sheets, SheetDef);

	_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);
}

var badchars = /*#__PURE__*/"][*?\/\\".split("");
function check_ws_name(n/*:string*/, safe/*:?boolean*/)/*:boolean*/ {
	if(n.length > 31) { if(safe) return false; throw new Error("Sheet names cannot exceed 31 chars"); }
	var _good = true;
	badchars.forEach(function(c) {
		if(n.indexOf(c) == -1) return;
		if(!safe) throw new Error("Sheet name cannot contain : \\ / ? * [ ]");
		_good = false;
	});
	return _good;
}
/* 18.2 Workbook */
var wbnsregex = /<\w+:workbook/;
function parse_wb_xml(data, opts)/*:WorkbookFile*/ {
	if(!data) throw new Error("Could not find file");
	var wb = /*::(*/{ AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: "" }/*::)*/;
	var pass = false, xmlns = "xmlns";
	var dname = {}, dnstart = 0;
	data.replace(tagregex, function xml_wb(x, idx) {
		var y/*:any*/ = parsexmltag(x);
		switch(strip_ns(y[0])) {
			case '<?xml': break;

			/* 18.2.27 workbook CT_Workbook 1 */
			case '<workbook':
				if(x.match(wbnsregex)) xmlns = "xmlns" + x.match(/<(\w+):/)[1];
				wb.xmlns = y[xmlns];
				break;
			case '</workbook>': break;

			/* 18.2.13 fileVersion CT_FileVersion ? */
			case '<fileVersion': delete y[0]; wb.AppVersion = y; break;
			case '<fileVersion/>': case '</fileVersion>': break;

			/* 18.2.12 fileSharing CT_FileSharing ? */
			case '<fileSharing':
				break;
			case '<fileSharing/>': break;

			/* 18.2.28 workbookPr CT_WorkbookPr ? */
			case '<workbookPr':
			case '<workbookPr/>':
				WBPropsDef.forEach(function(w) {
					if(y[w[0]] == null) return;
					switch(w[2]) {
						case "bool": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;
						case "int": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;
						default: wb.WBProps[w[0]] = y[w[0]];
					}
				});
				if(y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);
				break;
			case '</workbookPr>': break;

			/* 18.2.29 workbookProtection CT_WorkbookProtection ? */
			case '<workbookProtection':
				break;
			case '<workbookProtection/>': break;

			/* 18.2.1  bookViews CT_BookViews ? */
			case '<bookViews': case '<bookViews>': case '</bookViews>': break;
			/* 18.2.30   workbookView CT_BookView + */
			case '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;
			case '</workbookView>': break;

			/* 18.2.20 sheets CT_Sheets 1 */
			case '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet
			/* 18.2.19   sheet CT_Sheet + */
			case '<sheet':
				switch(y.state) {
					case "hidden": y.Hidden = 1; break;
					case "veryHidden": y.Hidden = 2; break;
					default: y.Hidden = 0;
				}
				delete y.state;
				y.name = unescapexml(utf8read(y.name));
				delete y[0]; wb.Sheets.push(y); break;
			case '</sheet>': break;

			/* 18.2.15 functionGroups CT_FunctionGroups ? */
			case '<functionGroups': case '<functionGroups/>': break;
			/* 18.2.14   functionGroup CT_FunctionGroup + */
			case '<functionGroup': break;

			/* 18.2.9  externalReferences CT_ExternalReferences ? */
			case '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;
			/* 18.2.8    externalReference CT_ExternalReference + */
			case '<externalReference': break;

			/* 18.2.6  definedNames CT_DefinedNames ? */
			case '<definedNames/>': break;
			case '<definedNames>': case '<definedNames': pass=true; break;
			case '</definedNames>': pass=false; break;
			/* 18.2.5    definedName CT_DefinedName + */
			case '<definedName': {
				dname = {};
				dname.Name = utf8read(y.name);
				if(y.comment) dname.Comment = y.comment;
				if(y.localSheetId) dname.Sheet = +y.localSheetId;
				if(parsexmlbool(y.hidden||"0")) dname.Hidden = true;
				dnstart = idx + x.length;
			}	break;
			case '</definedName>': {
				dname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));
				wb.Names.push(dname);
			} break;
			case '<definedName/>': break;

			/* 18.2.2  calcPr CT_CalcPr ? */
			case '<calcPr': delete y[0]; wb.CalcPr = y; break;
			case '<calcPr/>': delete y[0]; wb.CalcPr = y; break;
			case '</calcPr>': break;

			/* 18.2.16 oleSize CT_OleSize ? (ref required) */
			case '<oleSize': break;

			/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */
			case '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;
			/* 18.2.3  customWorkbookView CT_CustomWorkbookView + */
			case '<customWorkbookView': case '</customWorkbookView>': break;

			/* 18.2.18 pivotCaches CT_PivotCaches ? */
			case '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;
			/* 18.2.17 pivotCache CT_PivotCache ? */
			case '<pivotCache': break;

			/* 18.2.21 smartTagPr CT_SmartTagPr ? */
			case '<smartTagPr': case '<smartTagPr/>': break;

			/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */
			case '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;
			/* 18.2.22 smartTagType CT_SmartTagType ? */
			case '<smartTagType': break;

			/* 18.2.24 webPublishing CT_WebPublishing ? */
			case '<webPublishing': case '<webPublishing/>': break;

			/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */
			case '<fileRecoveryPr': case '<fileRecoveryPr/>': break;

			/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */
			case '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;
			/* 18.2.25 webPublishObject CT_WebPublishObject ? */
			case '<webPublishObject': break;

			/* 18.2.10 extLst CT_ExtensionList ? */
			case '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;
			/* 18.2.7  ext CT_Extension + */
			case '<ext': pass=true; break; //TODO: check with versions of excel
			case '</ext>': pass=false; break;

			/* Others */
			case '<ArchID': break;
			case '<AlternateContent':
			case '<AlternateContent>': pass=true; break;
			case '</AlternateContent>': pass=false; break;

			/* TODO */
			case '<revisionPtr': break;

			default: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');
		}
		return x;
	});
	if(XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error("Unknown Namespace: " + wb.xmlns);

	parse_wb_defaults(wb);

	return wb;
}
/* [MS-XLSB] 2.4.304 BrtBundleSh */
function parse_BrtBundleSh(data, length/*:number*/) {
	var z = {};
	z.Hidden = data.read_shift(4); //hsState ST_SheetState
	z.iTabID = data.read_shift(4);
	z.strRelID = parse_RelID(data);
	z.name = parse_XLWideString(data);
	return z;
}

/* [MS-XLSB] 2.4.815 BrtWbProp */
function parse_BrtWbProp(data, length)/*:WBProps*/ {
	var o/*:WBProps*/ = ({}/*:any*/);
	var flags = data.read_shift(4);
	o.defaultThemeVersion = data.read_shift(4);
	var strName = (length > 8) ? parse_XLWideString(data) : "";
	if(strName.length > 0) o.CodeName = strName;
	o.autoCompressPictures = !!(flags & 0x10000);
	o.backupFile = !!(flags & 0x40);
	o.checkCompatibility = !!(flags & 0x1000);
	o.date1904 = !!(flags & 0x01);
	o.filterPrivacy = !!(flags & 0x08);
	o.hidePivotFieldList = !!(flags & 0x400);
	o.promptedSolutions = !!(flags & 0x10);
	o.publishItems = !!(flags & 0x800);
	o.refreshAllConnections = !!(flags & 0x40000);
	o.saveExternalLinkValues = !!(flags & 0x80);
	o.showBorderUnselectedTables = !!(flags & 0x04);
	o.showInkAnnotation = !!(flags & 0x20);
	o.showObjects = ["all", "placeholders", "none"][(flags >> 13) & 0x03];
	o.showPivotChartFilter = !!(flags & 0x8000);
	o.updateLinks = ["userSet", "never", "always"][(flags >> 8) & 0x03];
	return o;
}

function parse_BrtFRTArchID$(data, length) {
	var o = {};
	data.read_shift(4);
	o.ArchID = data.read_shift(4);
	data.l += length - 8;
	return o;
}

/* [MS-XLSB] 2.4.687 BrtName */
function parse_BrtName(data, length, opts) {
	var end = data.l + length;
	data.l += 4; //var flags = data.read_shift(4);
	data.l += 1; //var chKey = data.read_shift(1);
	var itab = data.read_shift(4);
	var name = parse_XLNameWideString(data);
	var formula = parse_XLSBNameParsedFormula(data, 0, opts);
	var comment = parse_XLNullableWideString(data);
	//if(0 /* fProc */) {
		// unusedstring1: XLNullableWideString
		// description: XLNullableWideString
		// helpTopic: XLNullableWideString
		// unusedstring2: XLNullableWideString
	//}
	data.l = end;
	var out = ({Name:name, Ptg:formula}/*:any*/);
	if(itab < 0xFFFFFFF) out.Sheet = itab;
	if(comment) out.Comment = comment;
	return out;
}

/* [MS-XLSB] 2.1.7.61 Workbook */
function parse_wb_bin(data, opts)/*:WorkbookFile*/ {
	var wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: "" };
	var state/*:Array<string>*/ = [];
	var pass = false;

	if(!opts) opts = {};
	opts.biff = 12;

	var Names = [];
	var supbooks = ([[]]/*:any*/);
	supbooks.SheetNames = [];
	supbooks.XTI = [];

	XLSBRecordEnum[0x0010] = { n:"BrtFRTArchID$", f:parse_BrtFRTArchID$ };

	recordhopper(data, function hopper_wb(val, R, RT) {
		switch(RT) {
			case 0x009C: /* 'BrtBundleSh' */
				supbooks.SheetNames.push(val.name);
				wb.Sheets.push(val); break;

			case 0x0099: /* 'BrtWbProp' */
				wb.WBProps = val; break;

			case 0x0027: /* 'BrtName' */
				if(val.Sheet != null) opts.SID = val.Sheet;
				val.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);
				delete opts.SID;
				delete val.Ptg;
				Names.push(val);
				break;
			case 0x040C: /* 'BrtNameExt' */ break;

			case 0x0165: /* 'BrtSupSelf' */
			case 0x0166: /* 'BrtSupSame' */
			case 0x0163: /* 'BrtSupBookSrc' */
			case 0x029B: /* 'BrtSupAddin' */
				if(!supbooks[0].length) supbooks[0] = [RT, val];
				else supbooks.push([RT, val]);
				supbooks[supbooks.length - 1].XTI = [];
				break;
			case 0x016A: /* 'BrtExternSheet' */
				if(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }
				supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);
				supbooks.XTI = supbooks.XTI.concat(val);
				break;
			case 0x0169: /* 'BrtPlaceholderName' */
				break;

			case 0x0817: /* 'BrtAbsPath15' */
			case 0x009E: /* 'BrtBookView' */
			case 0x008F: /* 'BrtBeginBundleShs' */
			case 0x0298: /* 'BrtBeginFnGroup' */
			case 0x0161: /* 'BrtBeginExternals' */
				break;

			/* case 'BrtModelTimeGroupingCalcCol' */
			case 0x0C00: /* 'BrtUid' */
			case 0x0C01: /* 'BrtRevisionPtr' */
			case 0x0216: /* 'BrtBookProtection' */
			case 0x02A5: /* 'BrtBookProtectionIso' */
			case 0x009D: /* 'BrtCalcProp' */
			case 0x0262: /* 'BrtCrashRecErr' */
			case 0x0802: /* 'BrtDecoupledPivotCacheID' */
			case 0x009B: /* 'BrtFileRecover' */
			case 0x0224: /* 'BrtFileSharing' */
			case 0x02A4: /* 'BrtFileSharingIso' */
			case 0x0080: /* 'BrtFileVersion' */
			case 0x0299: /* 'BrtFnGroup' */
			case 0x0850: /* 'BrtModelRelationship' */
			case 0x084D: /* 'BrtModelTable' */
			case 0x0225: /* 'BrtOleSize' */
			case 0x0805: /* 'BrtPivotTableRef' */
			case 0x0254: /* 'BrtSmartTagType' */
			case 0x081C: /* 'BrtTableSlicerCacheID' */
			case 0x081B: /* 'BrtTableSlicerCacheIDs' */
			case 0x0822: /* 'BrtTimelineCachePivotCacheID' */
			case 0x018D: /* 'BrtUserBookView' */
			case 0x009A: /* 'BrtWbFactoid' */
			case 0x045D: /* 'BrtWbProp14' */
			case 0x0229: /* 'BrtWebOpt' */
			case 0x082B: /* 'BrtWorkBookPr15' */
				break;

			case 0x0023: /* 'BrtFRTBegin' */
				state.push(RT); pass = true; break;
			case 0x0024: /* 'BrtFRTEnd' */
				state.pop(); pass = false; break;
			case 0x0025: /* 'BrtACBegin' */
				state.push(RT); pass = true; break;
			case 0x0026: /* 'BrtACEnd' */
				state.pop(); pass = false; break;

			case 0x0010: /* 'BrtFRTArchID$' */ break;

			default:
				if(R.T);
				else if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */ && state[state.length-1] != 0x0023 /* BrtFRTBegin */)) throw new Error("Unexpected record 0x" + RT.toString(16));
		}
	}, opts);

	parse_wb_defaults(wb);

	// $FlowIgnore
	wb.Names = Names;

	(wb/*:any*/).supbooks = supbooks;
	return wb;
}
function parse_wb(data, name/*:string*/, opts)/*:WorkbookFile*/ {
	if(name.slice(-4)===".bin") return parse_wb_bin((data/*:any*/), opts);
	return parse_wb_xml((data/*:any*/), opts);
}

function parse_ws(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {
	if(name.slice(-4)===".bin") return parse_ws_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);
	return parse_ws_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);
}

function parse_cs(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {
	if(name.slice(-4)===".bin") return parse_cs_bin((data/*:any*/), opts, idx, rels, wb);
	return parse_cs_xml((data/*:any*/), opts, idx, rels, wb);
}

function parse_ms(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {
	if(name.slice(-4)===".bin") return parse_ms_bin();
	return parse_ms_xml();
}

function parse_ds(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {
	if(name.slice(-4)===".bin") return parse_ds_bin();
	return parse_ds_xml();
}

function parse_sty(data, name/*:string*/, themes, opts) {
	if(name.slice(-4)===".bin") return parse_sty_bin((data/*:any*/), themes, opts);
	return parse_sty_xml((data/*:any*/), themes, opts);
}

function parse_theme(data/*:string*/, name/*:string*/, opts) {
	return parse_theme_xml(data, opts);
}

function parse_sst(data, name/*:string*/, opts)/*:SST*/ {
	if(name.slice(-4)===".bin") return parse_sst_bin((data/*:any*/), opts);
	return parse_sst_xml((data/*:any*/), opts);
}

function parse_cmnt(data, name/*:string*/, opts)/*:Array<RawComment>*/ {
	if(name.slice(-4)===".bin") return parse_comments_bin((data/*:any*/), opts);
	return parse_comments_xml((data/*:any*/), opts);
}

function parse_cc(data, name/*:string*/, opts) {
	if(name.slice(-4)===".bin") return parse_cc_bin((data/*:any*/));
	return parse_cc_xml((data/*:any*/));
}

function parse_xlink(data, rel, name/*:string*/, opts) {
	if(name.slice(-4)===".bin") return parse_xlink_bin((data/*:any*/), rel, name, opts);
	return parse_xlink_xml();
}

function parse_xlmeta(data, name/*:string*/, opts) {
	if(name.slice(-4)===".bin") return parse_xlmeta_bin((data/*:any*/), name, opts);
	return parse_xlmeta_xml((data/*:any*/), name, opts);
}
var attregexg2=/([\w:]+)=((?:")([^"]*)(?:")|(?:')([^']*)(?:'))/g;
var attregex2=/([\w:]+)=((?:")(?:[^"]*)(?:")|(?:')(?:[^']*)(?:'))/;
function xlml_parsexmltag(tag/*:string*/, skip_root/*:?boolean*/) {
	var words = tag.split(/\s+/);
	var z/*:any*/ = ([]/*:any*/); if(!skip_root) z[0] = words[0];
	if(words.length === 1) return z;
	var m = tag.match(attregexg2), y, j, w, i;
	if(m) for(i = 0; i != m.length; ++i) {
		y = m[i].match(attregex2);
/*:: if(!y || !y[2]) continue; */
		if((j=y[1].indexOf(":")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);
		else {
			if(y[1].slice(0,6) === "xmlns:") w = "xmlns"+y[1].slice(6);
			else w = y[1].slice(j+1);
			z[w] = y[2].slice(1,y[2].length-1);
		}
	}
	return z;
}
function xlml_parsexmltagobj(tag/*:string*/) {
	var words = tag.split(/\s+/);
	var z = {};
	if(words.length === 1) return z;
	var m = tag.match(attregexg2), y, j, w, i;
	if(m) for(i = 0; i != m.length; ++i) {
		y = m[i].match(attregex2);
/*:: if(!y || !y[2]) continue; */
		if((j=y[1].indexOf(":")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);
		else {
			if(y[1].slice(0,6) === "xmlns:") w = "xmlns"+y[1].slice(6);
			else w = y[1].slice(j+1);
			z[w] = y[2].slice(1,y[2].length-1);
		}
	}
	return z;
}

// ----

/* map from xlml named formats to SSF TODO: localize */
var XLMLFormatMap/*: {[string]:string}*/;

function xlml_format(format, value)/*:string*/ {
	var fmt = XLMLFormatMap[format] || unescapexml(format);
	if(fmt === "General") return SSF_general(value);
	return SSF_format(fmt, value);
}

function xlml_set_custprop(Custprops, key, cp, val/*:string*/) {
	var oval/*:any*/ = val;
	switch((cp[0].match(/dt:dt="([\w.]+)"/)||["",""])[1]) {
		case "boolean": oval = parsexmlbool(val); break;
		case "i2": case "int": oval = parseInt(val, 10); break;
		case "r4": case "float": oval = parseFloat(val); break;
		case "date": case "dateTime.tz": oval = parseDate(val); break;
		case "i8": case "string": case "fixed": case "uuid": case "bin.base64": break;
		default: throw new Error("bad custprop:" + cp[0]);
	}
	Custprops[unescapexml(key)] = oval;
}

function safe_format_xlml(cell/*:Cell*/, nf, o) {
	if(cell.t === 'z') return;
	if(!o || o.cellText !== false) try {
		if(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }
		else if(nf === "General") {
			if(cell.t === 'n') {
				if((cell.v|0) === cell.v) cell.w = cell.v.toString(10);
				else cell.w = SSF_general_num(cell.v);
			}
			else cell.w = SSF_general(cell.v);
		}
		else cell.w = xlml_format(nf||"General", cell.v);
	} catch(e) { if(o.WTF) throw e; }
	try {
		var z = XLMLFormatMap[nf]||nf||"General";
		if(o.cellNF) cell.z = z;
		if(o.cellDates && cell.t == 'n' && fmt_is_date(z)) {
			var _d = SSF_parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }
		}
	} catch(e) { if(o.WTF) throw e; }
}

function process_style_xlml(styles, stag, opts) {
	if(opts.cellStyles) {
		if(stag.Interior) {
			var I = stag.Interior;
			if(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;
		}
	}
	styles[stag.ID] = stag;
}

/* TODO: there must exist some form of OSP-blessed spec */
function parse_xlml_data(xml, ss, data, cell/*:any*/, base, styles, csty, row, arrayf, o) {
	var nf = "General", sid = cell.StyleID, S = {}; o = o || {};
	var interiors = [];
	var i = 0;
	if(sid === undefined && row) sid = row.StyleID;
	if(sid === undefined && csty) sid = csty.StyleID;
	while(styles[sid] !== undefined) {
		if(styles[sid].nf) nf = styles[sid].nf;
		if(styles[sid].Interior) interiors.push(styles[sid].Interior);
		if(!styles[sid].Parent) break;
		sid = styles[sid].Parent;
	}
	switch(data.Type) {
		case 'Boolean':
			cell.t = 'b';
			cell.v = parsexmlbool(xml);
			break;
		case 'String':
			cell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));
			cell.v = (xml.indexOf("<") > -1 ? unescapexml(ss||xml).replace(/<.*?>/g, "") : cell.r); // todo: BR etc
			break;
		case 'DateTime':
			if(xml.slice(-1) != "Z") xml += "Z";
			cell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);
			if(cell.v !== cell.v) cell.v = unescapexml(xml);
			else if(cell.v<60) cell.v = cell.v -1;
			if(!nf || nf == "General") nf = "yyyy-mm-dd";
			/* falls through */
		case 'Number':
			if(cell.v === undefined) cell.v=+xml;
			if(!cell.t) cell.t = 'n';
			break;
		case 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;
		default:
			if(xml == "" && ss == "") { cell.t = 'z'; }
			else { cell.t = 's'; cell.v = xlml_fixstr(ss||xml); }
			break;
	}
	safe_format_xlml(cell, nf, o);
	if(o.cellFormula !== false) {
		if(cell.Formula) {
			var fstr = unescapexml(cell.Formula);
			/* strictly speaking, the leading = is required but some writers omit */
			if(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);
			cell.f = rc_to_a1(fstr, base);
			delete cell.Formula;
			if(cell.ArrayRange == "RC") cell.F = rc_to_a1("RC:RC", base);
			else if(cell.ArrayRange) {
				cell.F = rc_to_a1(cell.ArrayRange, base);
				arrayf.push([safe_decode_range(cell.F), cell.F]);
			}
		} else {
			for(i = 0; i < arrayf.length; ++i)
				if(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)
					if(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)
						cell.F = arrayf[i][1];
		}
	}
	if(o.cellStyles) {
		interiors.forEach(function(x) {
			if(!S.patternType && x.patternType) S.patternType = x.patternType;
		});
		cell.s = S;
	}
	if(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;
}

function xlml_clean_comment(comment/*:any*/) {
	comment.t = comment.v || "";
	comment.t = comment.t.replace(/\r\n/g,"\n").replace(/\r/g,"\n");
	comment.v = comment.w = comment.ixfe = undefined;
}

/* TODO: Everything */
function parse_xlml_xml(d, _opts)/*:Workbook*/ {
	var opts = _opts || {};
	make_ssf();
	var str = debom(xlml_normalize(d));
	if(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {
		str = utf8read(str);
	}
	var opening = str.slice(0, 1024).toLowerCase(), ishtml = false;
	opening = opening.replace(/".*?"/g, "");
	if((opening.indexOf(">") & 1023) > Math.min((opening.indexOf(",") & 1023), (opening.indexOf(";")&1023))) { var _o = dup(opts); _o.type = "string"; return PRN.to_workbook(str, _o); }
	if(opening.indexOf("<?xml") == -1) ["html", "table", "head", "meta", "script", "style", "div"].forEach(function(tag) { if(opening.indexOf("<" + tag) >= 0) ishtml = true; });
	if(ishtml) return html_to_workbook(str, opts);

	XLMLFormatMap = ({
		"General Number": "General",
		"General Date": table_fmt[22],
		"Long Date": "dddd, mmmm dd, yyyy",
		"Medium Date": table_fmt[15],
		"Short Date": table_fmt[14],
		"Long Time": table_fmt[19],
		"Medium Time": table_fmt[18],
		"Short Time": table_fmt[20],
		"Currency": '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
		"Fixed": table_fmt[2],
		"Standard": table_fmt[4],
		"Percent": table_fmt[10],
		"Scientific": table_fmt[11],
		"Yes/No": '"Yes";"Yes";"No";@',
		"True/False": '"True";"True";"False";@',
		"On/Off": '"Yes";"Yes";"No";@'
	}/*:any*/);


	var Rn;
	var state = [], tmp;
	var sheets = {}, sheetnames/*:Array<string>*/ = [], cursheet/*:Worksheet*/ = (opts.dense ? [] : {}), sheetname = "";
	var cell = ({}/*:any*/), row = {};// eslint-disable-line no-unused-vars
	var dtag = xlml_parsexmltag('<Data ss:Type="String">'), didx = 0;
	var c = 0, r = 0;
	var refguess/*:Range*/ = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };
	var styles = {}, stag = {};
	var ss = "", fidx = 0;
	var merges/*:Array<Range>*/ = [];
	var Props = {}, Custprops = {}, pidx = 0, cp = [];
	var comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);
	var cstys = [], csty, seencol = false;
	var arrayf/*:Array<[Range, string]>*/ = [];
	var rowinfo/*:Array<RowInfo>*/ = [], rowobj = {}, cc = 0, rr = 0;
	var Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false} }/*:any*/), wsprops = {};
	xlmlregex.lastIndex = 0;
	str = str.replace(/<!--([\s\S]*?)-->/mg,"");
	var raw_Rn3 = "";
	while((Rn = xlmlregex.exec(str))) switch((Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase())) {
		case 'data' /*case 'Data'*/:
			if(raw_Rn3 == "data") {
				if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));}
				else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);
				break;
			}
			if(state[state.length-1][1]) break;
			if(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==/*"Comment"*/"comment"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);
			else { ss = ""; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }
			break;
		case 'cell' /*case 'Cell'*/:
			if(Rn[1]==='/'){
				if(comments.length > 0) cell.c = comments;
				if((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {
					if(opts.dense) {
						if(!cursheet[r]) cursheet[r] = [];
						cursheet[r][c] = cell;
					} else cursheet[encode_col(c) + encode_row(r)] = cell;
				}
				if(cell.HRef) {
					cell.l = ({Target:unescapexml(cell.HRef)}/*:any*/);
					if(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;
					delete cell.HRef; delete cell.HRefScreenTip;
				}
				if(cell.MergeAcross || cell.MergeDown) {
					cc = c + (parseInt(cell.MergeAcross,10)|0);
					rr = r + (parseInt(cell.MergeDown,10)|0);
					merges.push({s:{c:c,r:r},e:{c:cc,r:rr}});
				}
				if(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }
				else if(cell.MergeAcross || cell.MergeDown) {
					/*:: if(!cc) cc = 0; if(!rr) rr = 0; */
					for(var cma = c; cma <= cc; ++cma) {
						for(var cmd = r; cmd <= rr; ++cmd) {
							if(cma > c || cmd > r) {
								if(opts.dense) {
									if(!cursheet[cmd]) cursheet[cmd] = [];
									cursheet[cmd][cma] = {t:'z'};
								} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};
							}
						}
					}
					c = cc + 1;
				}
				else ++c;
			} else {
				cell = xlml_parsexmltagobj(Rn[0]);
				if(cell.Index) c = +cell.Index - 1;
				if(c < refguess.s.c) refguess.s.c = c;
				if(c > refguess.e.c) refguess.e.c = c;
				if(Rn[0].slice(-2) === "/>") ++c;
				comments = [];
			}
			break;
		case 'row' /*case 'Row'*/:
			if(Rn[1]==='/' || Rn[0].slice(-2) === "/>") {
				if(r < refguess.s.r) refguess.s.r = r;
				if(r > refguess.e.r) refguess.e.r = r;
				if(Rn[0].slice(-2) === "/>") {
					row = xlml_parsexmltag(Rn[0]);
					if(row.Index) r = +row.Index - 1;
				}
				c = 0; ++r;
			} else {
				row = xlml_parsexmltag(Rn[0]);
				if(row.Index) r = +row.Index - 1;
				rowobj = {};
				if(row.AutoFitHeight == "0" || row.Height) {
					rowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);
					rowinfo[r] = rowobj;
				}
				if(row.Hidden == "1") { rowobj.hidden = true; rowinfo[r] = rowobj; }
			}
			break;
		case 'worksheet' /*case 'Worksheet'*/: /* TODO: read range from FullRows/FullColumns */
			if(Rn[1]==='/'){
				if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));
				sheetnames.push(sheetname);
				if(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {
					cursheet["!ref"] = encode_range(refguess);
					if(opts.sheetRows && opts.sheetRows <= refguess.e.r) {
						cursheet["!fullref"] = cursheet["!ref"];
						refguess.e.r = opts.sheetRows - 1;
						cursheet["!ref"] = encode_range(refguess);
					}
				}
				if(merges.length) cursheet["!merges"] = merges;
				if(cstys.length > 0) cursheet["!cols"] = cstys;
				if(rowinfo.length > 0) cursheet["!rows"] = rowinfo;
				sheets[sheetname] = cursheet;
			} else {
				refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };
				r = c = 0;
				state.push([Rn[3], false]);
				tmp = xlml_parsexmltag(Rn[0]);
				sheetname = unescapexml(tmp.Name);
				cursheet = (opts.dense ? [] : {});
				merges = [];
				arrayf = [];
				rowinfo = [];
				wsprops = {name:sheetname, Hidden:0};
				Workbook.Sheets.push(wsprops);
			}
			break;
		case 'table' /*case 'Table'*/:
			if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));}
			else if(Rn[0].slice(-2) == "/>") break;
			else {
				state.push([Rn[3], false]);
				cstys = []; seencol = false;
			}
			break;

		case 'style' /*case 'Style'*/:
			if(Rn[1]==='/') process_style_xlml(styles, stag, opts);
			else stag = xlml_parsexmltag(Rn[0]);
			break;

		case 'numberformat' /*case 'NumberFormat'*/:
			stag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || "General");
			if(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];
			for(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == stag.nf) break;
			if(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == null) { SSF_load(stag.nf, ssfidx); break; }
			break;

		case 'column' /*case 'Column'*/:
			if(state[state.length-1][0] !== /*'Table'*/'table') break;
			csty = xlml_parsexmltag(Rn[0]);
			if(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }
			if(csty.Width) csty.wpx = parseInt(csty.Width, 10);
			if(!seencol && csty.wpx > 10) {
				seencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);
				for(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);
			}
			if(seencol) process_col(csty);
			cstys[(csty.Index-1||cstys.length)] = csty;
			for(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);
			break;

		case 'namedrange' /*case 'NamedRange'*/:
			if(Rn[1]==='/') break;
			if(!Workbook.Names) Workbook.Names = [];
			var _NamedRange = parsexmltag(Rn[0]);
			var _DefinedName/*:DefinedName*/ = ({
				Name: _NamedRange.Name,
				Ref: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})
			}/*:any*/);
			if(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;
			/*:: if(Workbook.Names) */Workbook.Names.push(_DefinedName);
			break;

		case 'namedcell' /*case 'NamedCell'*/: break;
		case 'b' /*case 'B'*/: break;
		case 'i' /*case 'I'*/: break;
		case 'u' /*case 'U'*/: break;
		case 's' /*case 'S'*/: break;
		case 'em' /*case 'EM'*/: break;
		case 'h2' /*case 'H2'*/: break;
		case 'h3' /*case 'H3'*/: break;
		case 'sub' /*case 'Sub'*/: break;
		case 'sup' /*case 'Sup'*/: break;
		case 'span' /*case 'Span'*/: break;
		case 'alignment' /*case 'Alignment'*/:
			break;
		case 'borders' /*case 'Borders'*/: break;
		case 'border' /*case 'Border'*/: break;
		case 'font' /*case 'Font'*/:
			if(Rn[0].slice(-2) === "/>") break;
			else if(Rn[1]==="/") ss += str.slice(fidx, Rn.index);
			else fidx = Rn.index + Rn[0].length;
			break;
		case 'interior' /*case 'Interior'*/:
			if(!opts.cellStyles) break;
			stag.Interior = xlml_parsexmltag(Rn[0]);
			break;
		case 'protection' /*case 'Protection'*/: break;

		case 'author' /*case 'Author'*/:
		case 'title' /*case 'Title'*/:
		case 'description' /*case 'Description'*/:
		case 'created' /*case 'Created'*/:
		case 'keywords' /*case 'Keywords'*/:
		case 'subject' /*case 'Subject'*/:
		case 'category' /*case 'Category'*/:
		case 'company' /*case 'Company'*/:
		case 'lastauthor' /*case 'LastAuthor'*/:
		case 'lastsaved' /*case 'LastSaved'*/:
		case 'lastprinted' /*case 'LastPrinted'*/:
		case 'version' /*case 'Version'*/:
		case 'revision' /*case 'Revision'*/:
		case 'totaltime' /*case 'TotalTime'*/:
		case 'hyperlinkbase' /*case 'HyperlinkBase'*/:
		case 'manager' /*case 'Manager'*/:
		case 'contentstatus' /*case 'ContentStatus'*/:
		case 'identifier' /*case 'Identifier'*/:
		case 'language' /*case 'Language'*/:
		case 'appname' /*case 'AppName'*/:
			if(Rn[0].slice(-2) === "/>") break;
			else if(Rn[1]==="/") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));
			else pidx = Rn.index + Rn[0].length;
			break;
		case 'paragraphs' /*case 'Paragraphs'*/: break;

		case 'styles' /*case 'Styles'*/:
		case 'workbook' /*case 'Workbook'*/:
			if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));}
			else state.push([Rn[3], false]);
			break;

		case 'comment' /*case 'Comment'*/:
			if(Rn[1]==='/'){
				if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));
				xlml_clean_comment(comment);
				comments.push(comment);
			} else {
				state.push([Rn[3], false]);
				tmp = xlml_parsexmltag(Rn[0]);
				comment = ({a:tmp.Author}/*:any*/);
			}
			break;

		case 'autofilter' /*case 'AutoFilter'*/:
			if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));}
			else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
				var AutoFilter = xlml_parsexmltag(Rn[0]);
				cursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\$/g,"") };
				state.push([Rn[3], true]);
			}
			break;

		case 'name' /*case 'Name'*/: break;

		case 'datavalidation' /*case 'DataValidation'*/:
			if(Rn[1]==='/'){
				if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));
			} else {
				if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);
			}
			break;

		case 'pixelsperinch' /*case 'PixelsPerInch'*/:
			break;
		case 'componentoptions' /*case 'ComponentOptions'*/:
		case 'documentproperties' /*case 'DocumentProperties'*/:
		case 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:
		case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:
		case 'pivottable' /*case 'PivotTable'*/:
		case 'pivotcache' /*case 'PivotCache'*/:
		case 'names' /*case 'Names'*/:
		case 'mapinfo' /*case 'MapInfo'*/:
		case 'pagebreaks' /*case 'PageBreaks'*/:
		case 'querytable' /*case 'QueryTable'*/:
		case 'sorting' /*case 'Sorting'*/:
		case 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:
		case 'conditionalformatting' /*case 'ConditionalFormatting'*/:
		case 'smarttagtype' /*case 'SmartTagType'*/:
		case 'smarttags' /*case 'SmartTags'*/:
		case 'excelworkbook' /*case 'ExcelWorkbook'*/:
		case 'workbookoptions' /*case 'WorkbookOptions'*/:
		case 'worksheetoptions' /*case 'WorksheetOptions'*/:
			if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error("Bad state: "+tmp.join("|"));}
			else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);
			break;

		case 'null' /*case 'Null'*/: break;

		default:
			/* FODS file root is <office:document> */
			if(state.length == 0 && Rn[3] == "document") return parse_fods(str, opts);
			/* UOS file root is <uof:UOF> */
			if(state.length == 0 && Rn[3] == "uof"/*"UOF"*/) return parse_fods(str, opts);

			var seen = true;
			switch(state[state.length-1][0]) {
				/* OfficeDocumentSettings */
				case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/: switch(Rn[3]) {
					case 'allowpng' /*case 'AllowPNG'*/: break;
					case 'removepersonalinformation' /*case 'RemovePersonalInformation'*/: break;
					case 'downloadcomponents' /*case 'DownloadComponents'*/: break;
					case 'locationofcomponents' /*case 'LocationOfComponents'*/: break;
					case 'colors' /*case 'Colors'*/: break;
					case 'color' /*case 'Color'*/: break;
					case 'index' /*case 'Index'*/: break;
					case 'rgb' /*case 'RGB'*/: break;
					case 'targetscreensize' /*case 'TargetScreenSize'*/: break;
					case 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/: break;
					default: seen = false;
				} break;

				/* ComponentOptions */
				case 'componentoptions' /*case 'ComponentOptions'*/: switch(Rn[3]) {
					case 'toolbar' /*case 'Toolbar'*/: break;
					case 'hideofficelogo' /*case 'HideOfficeLogo'*/: break;
					case 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/: break;
					case 'label' /*case 'Label'*/: break;
					case 'caption' /*case 'Caption'*/: break;
					case 'maxheight' /*case 'MaxHeight'*/: break;
					case 'maxwidth' /*case 'MaxWidth'*/: break;
					case 'nextsheetnumber' /*case 'NextSheetNumber'*/: break;
					default: seen = false;
				} break;

				/* ExcelWorkbook */
				case 'excelworkbook' /*case 'ExcelWorkbook'*/: switch(Rn[3]) {
					case 'date1904' /*case 'Date1904'*/:
						/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */
						Workbook.WBProps.date1904 = true;
						break;
					case 'windowheight' /*case 'WindowHeight'*/: break;
					case 'windowwidth' /*case 'WindowWidth'*/: break;
					case 'windowtopx' /*case 'WindowTopX'*/: break;
					case 'windowtopy' /*case 'WindowTopY'*/: break;
					case 'tabratio' /*case 'TabRatio'*/: break;
					case 'protectstructure' /*case 'ProtectStructure'*/: break;
					case 'protectwindow' /*case 'ProtectWindow'*/: break;
					case 'protectwindows' /*case 'ProtectWindows'*/: break;
					case 'activesheet' /*case 'ActiveSheet'*/: break;
					case 'displayinknotes' /*case 'DisplayInkNotes'*/: break;
					case 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/: break;
					case 'supbook' /*case 'SupBook'*/: break;
					case 'sheetname' /*case 'SheetName'*/: break;
					case 'sheetindex' /*case 'SheetIndex'*/: break;
					case 'sheetindexfirst' /*case 'SheetIndexFirst'*/: break;
					case 'sheetindexlast' /*case 'SheetIndexLast'*/: break;
					case 'dll' /*case 'Dll'*/: break;
					case 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/: break;
					case 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/: break;
					case 'iteration' /*case 'Iteration'*/: break;
					case 'maxiterations' /*case 'MaxIterations'*/: break;
					case 'maxchange' /*case 'MaxChange'*/: break;
					case 'path' /*case 'Path'*/: break;
					case 'xct' /*case 'Xct'*/: break;
					case 'count' /*case 'Count'*/: break;
					case 'selectedsheets' /*case 'SelectedSheets'*/: break;
					case 'calculation' /*case 'Calculation'*/: break;
					case 'uncalced' /*case 'Uncalced'*/: break;
					case 'startupprompt' /*case 'StartupPrompt'*/: break;
					case 'crn' /*case 'Crn'*/: break;
					case 'externname' /*case 'ExternName'*/: break;
					case 'formula' /*case 'Formula'*/: break;
					case 'colfirst' /*case 'ColFirst'*/: break;
					case 'collast' /*case 'ColLast'*/: break;
					case 'wantadvise' /*case 'WantAdvise'*/: break;
					case 'boolean' /*case 'Boolean'*/: break;
					case 'error' /*case 'Error'*/: break;
					case 'text' /*case 'Text'*/: break;
					case 'ole' /*case 'OLE'*/: break;
					case 'noautorecover' /*case 'NoAutoRecover'*/: break;
					case 'publishobjects' /*case 'PublishObjects'*/: break;
					case 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/: break;
					case 'number' /*case 'Number'*/: break;
					case 'refmoder1c1' /*case 'RefModeR1C1'*/: break;
					case 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/: break;
					default: seen = false;
				} break;

				/* WorkbookOptions */
				case 'workbookoptions' /*case 'WorkbookOptions'*/: switch(Rn[3]) {
					case 'owcversion' /*case 'OWCVersion'*/: break;
					case 'height' /*case 'Height'*/: break;
					case 'width' /*case 'Width'*/: break;
					default: seen = false;
				} break;

				/* WorksheetOptions */
				case 'worksheetoptions' /*case 'WorksheetOptions'*/: switch(Rn[3]) {
					case 'visible' /*case 'Visible'*/:
						if(Rn[0].slice(-2) === "/>");
						else if(Rn[1]==="/") switch(str.slice(pidx, Rn.index)) {
							case "SheetHidden": wsprops.Hidden = 1; break;
							case "SheetVeryHidden": wsprops.Hidden = 2; break;
						}
						else pidx = Rn.index + Rn[0].length;
						break;
					case 'header' /*case 'Header'*/:
						if(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');
						if(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;
						break;
					case 'footer' /*case 'Footer'*/:
						if(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');
						if(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;
						break;
					case 'pagemargins' /*case 'PageMargins'*/:
						var pagemargins = parsexmltag(Rn[0]);
						if(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');
						if(!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;
						if(!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;
						if(!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;
						if(!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;
						break;
					case 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:
						if(!Workbook.Views) Workbook.Views = [];
						if(!Workbook.Views[0]) Workbook.Views[0] = {};
						Workbook.Views[0].RTL = true;
						break;

					case 'freezepanes' /*case 'FreezePanes'*/: break;
					case 'frozennosplit' /*case 'FrozenNoSplit'*/: break;

					case 'splithorizontal' /*case 'SplitHorizontal'*/:
					case 'splitvertical' /*case 'SplitVertical'*/:
						break;

					case 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:
						break;

					case 'activerow' /*case 'ActiveRow'*/: break;
					case 'activecol' /*case 'ActiveCol'*/: break;
					case 'toprowbottompane' /*case 'TopRowBottomPane'*/: break;
					case 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/: break;

					case 'unsynced' /*case 'Unsynced'*/: break;
					case 'print' /*case 'Print'*/: break;
					case 'printerrors' /*case 'PrintErrors'*/: break;
					case 'panes' /*case 'Panes'*/: break;
					case 'scale' /*case 'Scale'*/: break;
					case 'pane' /*case 'Pane'*/: break;
					case 'number' /*case 'Number'*/: break;
					case 'layout' /*case 'Layout'*/: break;
					case 'pagesetup' /*case 'PageSetup'*/: break;
					case 'selected' /*case 'Selected'*/: break;
					case 'protectobjects' /*case 'ProtectObjects'*/: break;
					case 'enableselection' /*case 'EnableSelection'*/: break;
					case 'protectscenarios' /*case 'ProtectScenarios'*/: break;
					case 'validprinterinfo' /*case 'ValidPrinterInfo'*/: break;
					case 'horizontalresolution' /*case 'HorizontalResolution'*/: break;
					case 'verticalresolution' /*case 'VerticalResolution'*/: break;
					case 'numberofcopies' /*case 'NumberofCopies'*/: break;
					case 'activepane' /*case 'ActivePane'*/: break;
					case 'toprowvisible' /*case 'TopRowVisible'*/: break;
					case 'leftcolumnvisible' /*case 'LeftColumnVisible'*/: break;
					case 'fittopage' /*case 'FitToPage'*/: break;
					case 'rangeselection' /*case 'RangeSelection'*/: break;
					case 'papersizeindex' /*case 'PaperSizeIndex'*/: break;
					case 'pagelayoutzoom' /*case 'PageLayoutZoom'*/: break;
					case 'pagebreakzoom' /*case 'PageBreakZoom'*/: break;
					case 'filteron' /*case 'FilterOn'*/: break;
					case 'fitwidth' /*case 'FitWidth'*/: break;
					case 'fitheight' /*case 'FitHeight'*/: break;
					case 'commentslayout' /*case 'CommentsLayout'*/: break;
					case 'zoom' /*case 'Zoom'*/: break;
					case 'lefttoright' /*case 'LeftToRight'*/: break;
					case 'gridlines' /*case 'Gridlines'*/: break;
					case 'allowsort' /*case 'AllowSort'*/: break;
					case 'allowfilter' /*case 'AllowFilter'*/: break;
					case 'allowinsertrows' /*case 'AllowInsertRows'*/: break;
					case 'allowdeleterows' /*case 'AllowDeleteRows'*/: break;
					case 'allowinsertcols' /*case 'AllowInsertCols'*/: break;
					case 'allowdeletecols' /*case 'AllowDeleteCols'*/: break;
					case 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/: break;
					case 'allowformatcells' /*case 'AllowFormatCells'*/: break;
					case 'allowsizecols' /*case 'AllowSizeCols'*/: break;
					case 'allowsizerows' /*case 'AllowSizeRows'*/: break;
					case 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:
						if(!cursheet["!outline"]) cursheet["!outline"] = {};
						cursheet["!outline"].above = true;
						break;
					case 'tabcolorindex' /*case 'TabColorIndex'*/: break;
					case 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/: break;
					case 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/: break;
					case 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:
						if(!cursheet["!outline"]) cursheet["!outline"] = {};
						cursheet["!outline"].left = true;
						break;
					case 'blackandwhite' /*case 'BlackAndWhite'*/: break;
					case 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/: break;
					case 'displaypagebreak' /*case 'DisplayPageBreak'*/: break;
					case 'rowcolheadings' /*case 'RowColHeadings'*/: break;
					case 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/: break;
					case 'noorientation' /*case 'NoOrientation'*/: break;
					case 'allowusepivottables' /*case 'AllowUsePivotTables'*/: break;
					case 'zeroheight' /*case 'ZeroHeight'*/: break;
					case 'viewablerange' /*case 'ViewableRange'*/: break;
					case 'selection' /*case 'Selection'*/: break;
					case 'protectcontents' /*case 'ProtectContents'*/: break;
					default: seen = false;
				} break;

				/* PivotTable */
				case 'pivottable' /*case 'PivotTable'*/: case 'pivotcache' /*case 'PivotCache'*/: switch(Rn[3]) {
					case 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/: break;
					case 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/: break;
					case 'compactrowindent' /*case 'CompactRowIndent'*/: break;
					case 'location' /*case 'Location'*/: break;
					case 'pivotfield' /*case 'PivotField'*/: break;
					case 'orientation' /*case 'Orientation'*/: break;
					case 'layoutform' /*case 'LayoutForm'*/: break;
					case 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/: break;
					case 'layoutcompactrow' /*case 'LayoutCompactRow'*/: break;
					case 'position' /*case 'Position'*/: break;
					case 'pivotitem' /*case 'PivotItem'*/: break;
					case 'datatype' /*case 'DataType'*/: break;
					case 'datafield' /*case 'DataField'*/: break;
					case 'sourcename' /*case 'SourceName'*/: break;
					case 'parentfield' /*case 'ParentField'*/: break;
					case 'ptlineitems' /*case 'PTLineItems'*/: break;
					case 'ptlineitem' /*case 'PTLineItem'*/: break;
					case 'countofsameitems' /*case 'CountOfSameItems'*/: break;
					case 'item' /*case 'Item'*/: break;
					case 'itemtype' /*case 'ItemType'*/: break;
					case 'ptsource' /*case 'PTSource'*/: break;
					case 'cacheindex' /*case 'CacheIndex'*/: break;
					case 'consolidationreference' /*case 'ConsolidationReference'*/: break;
					case 'filename' /*case 'FileName'*/: break;
					case 'reference' /*case 'Reference'*/: break;
					case 'nocolumngrand' /*case 'NoColumnGrand'*/: break;
					case 'norowgrand' /*case 'NoRowGrand'*/: break;
					case 'blanklineafteritems' /*case 'BlankLineAfterItems'*/: break;
					case 'hidden' /*case 'Hidden'*/: break;
					case 'subtotal' /*case 'Subtotal'*/: break;
					case 'basefield' /*case 'BaseField'*/: break;
					case 'mapchilditems' /*case 'MapChildItems'*/: break;
					case 'function' /*case 'Function'*/: break;
					case 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/: break;
					case 'printsettitles' /*case 'PrintSetTitles'*/: break;
					case 'mergelabels' /*case 'MergeLabels'*/: break;
					case 'defaultversion' /*case 'DefaultVersion'*/: break;
					case 'refreshname' /*case 'RefreshName'*/: break;
					case 'refreshdate' /*case 'RefreshDate'*/: break;
					case 'refreshdatecopy' /*case 'RefreshDateCopy'*/: break;
					case 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;
					case 'versionlastupdate' /*case 'VersionLastUpdate'*/: break;
					case 'versionupdateablemin' /*case 'VersionUpdateableMin'*/: break;
					case 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/: break;
					case 'calculation' /*case 'Calculation'*/: break;
					default: seen = false;
				} break;

				/* PageBreaks */
				case 'pagebreaks' /*case 'PageBreaks'*/: switch(Rn[3]) {
					case 'colbreaks' /*case 'ColBreaks'*/: break;
					case 'colbreak' /*case 'ColBreak'*/: break;
					case 'rowbreaks' /*case 'RowBreaks'*/: break;
					case 'rowbreak' /*case 'RowBreak'*/: break;
					case 'colstart' /*case 'ColStart'*/: break;
					case 'colend' /*case 'ColEnd'*/: break;
					case 'rowend' /*case 'RowEnd'*/: break;
					default: seen = false;
				} break;

				/* AutoFilter */
				case 'autofilter' /*case 'AutoFilter'*/: switch(Rn[3]) {
					case 'autofiltercolumn' /*case 'AutoFilterColumn'*/: break;
					case 'autofiltercondition' /*case 'AutoFilterCondition'*/: break;
					case 'autofilterand' /*case 'AutoFilterAnd'*/: break;
					case 'autofilteror' /*case 'AutoFilterOr'*/: break;
					default: seen = false;
				} break;

				/* QueryTable */
				case 'querytable' /*case 'QueryTable'*/: switch(Rn[3]) {
					case 'id' /*case 'Id'*/: break;
					case 'autoformatfont' /*case 'AutoFormatFont'*/: break;
					case 'autoformatpattern' /*case 'AutoFormatPattern'*/: break;
					case 'querysource' /*case 'QuerySource'*/: break;
					case 'querytype' /*case 'QueryType'*/: break;
					case 'enableredirections' /*case 'EnableRedirections'*/: break;
					case 'refreshedinxl9' /*case 'RefreshedInXl9'*/: break;
					case 'urlstring' /*case 'URLString'*/: break;
					case 'htmltables' /*case 'HTMLTables'*/: break;
					case 'connection' /*case 'Connection'*/: break;
					case 'commandtext' /*case 'CommandText'*/: break;
					case 'refreshinfo' /*case 'RefreshInfo'*/: break;
					case 'notitles' /*case 'NoTitles'*/: break;
					case 'nextid' /*case 'NextId'*/: break;
					case 'columninfo' /*case 'ColumnInfo'*/: break;
					case 'overwritecells' /*case 'OverwriteCells'*/: break;
					case 'donotpromptforfile' /*case 'DoNotPromptForFile'*/: break;
					case 'textwizardsettings' /*case 'TextWizardSettings'*/: break;
					case 'source' /*case 'Source'*/: break;
					case 'number' /*case 'Number'*/: break;
					case 'decimal' /*case 'Decimal'*/: break;
					case 'thousandseparator' /*case 'ThousandSeparator'*/: break;
					case 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/: break;
					case 'formatsettings' /*case 'FormatSettings'*/: break;
					case 'fieldtype' /*case 'FieldType'*/: break;
					case 'delimiters' /*case 'Delimiters'*/: break;
					case 'tab' /*case 'Tab'*/: break;
					case 'comma' /*case 'Comma'*/: break;
					case 'autoformatname' /*case 'AutoFormatName'*/: break;
					case 'versionlastedit' /*case 'VersionLastEdit'*/: break;
					case 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;
					default: seen = false;
				} break;

				case 'datavalidation' /*case 'DataValidation'*/:
				switch(Rn[3]) {
					case 'range' /*case 'Range'*/: break;

					case 'type' /*case 'Type'*/: break;
					case 'min' /*case 'Min'*/: break;
					case 'max' /*case 'Max'*/: break;
					case 'sort' /*case 'Sort'*/: break;
					case 'descending' /*case 'Descending'*/: break;
					case 'order' /*case 'Order'*/: break;
					case 'casesensitive' /*case 'CaseSensitive'*/: break;
					case 'value' /*case 'Value'*/: break;
					case 'errorstyle' /*case 'ErrorStyle'*/: break;
					case 'errormessage' /*case 'ErrorMessage'*/: break;
					case 'errortitle' /*case 'ErrorTitle'*/: break;
					case 'inputmessage' /*case 'InputMessage'*/: break;
					case 'inputtitle' /*case 'InputTitle'*/: break;
					case 'combohide' /*case 'ComboHide'*/: break;
					case 'inputhide' /*case 'InputHide'*/: break;
					case 'condition' /*case 'Condition'*/: break;
					case 'qualifier' /*case 'Qualifier'*/: break;
					case 'useblank' /*case 'UseBlank'*/: break;
					case 'value1' /*case 'Value1'*/: break;
					case 'value2' /*case 'Value2'*/: break;
					case 'format' /*case 'Format'*/: break;

					case 'cellrangelist' /*case 'CellRangeList'*/: break;
					default: seen = false;
				} break;

				case 'sorting' /*case 'Sorting'*/:
				case 'conditionalformatting' /*case 'ConditionalFormatting'*/:
				switch(Rn[3]) {
					case 'range' /*case 'Range'*/: break;
					case 'type' /*case 'Type'*/: break;
					case 'min' /*case 'Min'*/: break;
					case 'max' /*case 'Max'*/: break;
					case 'sort' /*case 'Sort'*/: break;
					case 'descending' /*case 'Descending'*/: break;
					case 'order' /*case 'Order'*/: break;
					case 'casesensitive' /*case 'CaseSensitive'*/: break;
					case 'value' /*case 'Value'*/: break;
					case 'errorstyle' /*case 'ErrorStyle'*/: break;
					case 'errormessage' /*case 'ErrorMessage'*/: break;
					case 'errortitle' /*case 'ErrorTitle'*/: break;
					case 'cellrangelist' /*case 'CellRangeList'*/: break;
					case 'inputmessage' /*case 'InputMessage'*/: break;
					case 'inputtitle' /*case 'InputTitle'*/: break;
					case 'combohide' /*case 'ComboHide'*/: break;
					case 'inputhide' /*case 'InputHide'*/: break;
					case 'condition' /*case 'Condition'*/: break;
					case 'qualifier' /*case 'Qualifier'*/: break;
					case 'useblank' /*case 'UseBlank'*/: break;
					case 'value1' /*case 'Value1'*/: break;
					case 'value2' /*case 'Value2'*/: break;
					case 'format' /*case 'Format'*/: break;
					default: seen = false;
				} break;

				/* MapInfo (schema) */
				case 'mapinfo' /*case 'MapInfo'*/: case 'schema' /*case 'Schema'*/: case 'data' /*case 'data'*/: switch(Rn[3]) {
					case 'map' /*case 'Map'*/: break;
					case 'entry' /*case 'Entry'*/: break;
					case 'range' /*case 'Range'*/: break;
					case 'xpath' /*case 'XPath'*/: break;
					case 'field' /*case 'Field'*/: break;
					case 'xsdtype' /*case 'XSDType'*/: break;
					case 'filteron' /*case 'FilterOn'*/: break;
					case 'aggregate' /*case 'Aggregate'*/: break;
					case 'elementtype' /*case 'ElementType'*/: break;
					case 'attributetype' /*case 'AttributeType'*/: break;
				/* These are from xsd (XML Schema Definition) */
					case 'schema' /*case 'schema'*/:
					case 'element' /*case 'element'*/:
					case 'complextype' /*case 'complexType'*/:
					case 'datatype' /*case 'datatype'*/:
					case 'all' /*case 'all'*/:
					case 'attribute' /*case 'attribute'*/:
					case 'extends' /*case 'extends'*/: break;

					case 'row' /*case 'row'*/: break;
					default: seen = false;
				} break;

				/* SmartTags (can be anything) */
				case 'smarttags' /*case 'SmartTags'*/: break;

				default: seen = false; break;
			}
			if(seen) break;
			/* CustomDocumentProperties */
			if(Rn[3].match(/!\[CDATA/)) break;
			if(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + "|" + state.join("|");
			if(state[state.length-1][0]===/*'CustomDocumentProperties'*/'customdocumentproperties') {
				if(Rn[0].slice(-2) === "/>") break;
				else if(Rn[1]==="/") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));
				else { cp = Rn; pidx = Rn.index + Rn[0].length; }
				break;
			}
			if(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + "|" + state.join("|");
	}
	var out = ({}/*:any*/);
	if(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;
	out.SheetNames = sheetnames;
	out.Workbook = Workbook;
	out.SSF = dup(table_fmt);
	out.Props = Props;
	out.Custprops = Custprops;
	return out;
}

function parse_xlml(data/*:RawBytes|string*/, opts)/*:Workbook*/ {
	fix_read_opts(opts=opts||{});
	switch(opts.type||"base64") {
		case "base64": return parse_xlml_xml(Base64_decode(data), opts);
		case "binary": case "buffer": case "file": return parse_xlml_xml(data, opts);
		case "array": return parse_xlml_xml(a2s(data), opts);
	}
	/*:: throw new Error("unsupported type " + opts.type); */
}
/* [MS-OLEDS] 2.3.8 CompObjStream */
function parse_compobj(obj/*:CFBEntry*/) {
	var v = {};
	var o = obj.content;
	/*:: if(o == null) return; */

	/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */
	o.l = 28;

	v.AnsiUserType = o.read_shift(0, "lpstr-ansi");
	v.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);

	if(o.length - o.l <= 4) return v;

	var m/*:number*/ = o.read_shift(4);
	if(m == 0 || m > 40) return v;
	o.l-=4; v.Reserved1 = o.read_shift(0, "lpstr-ansi");

	if(o.length - o.l <= 4) return v;
	m = o.read_shift(4);
	if(m !== 0x71b239f4) return v;
	v.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);

	m = o.read_shift(4);
	if(m == 0 || m > 40) return v;
	o.l-=4; v.Reserved2 = o.read_shift(0, "lpwstr");
}

/*
	Continue logic for:
	- 2.4.58 Continue          0x003c
	- 2.4.59 ContinueBigName   0x043c
	- 2.4.60 ContinueFrt       0x0812
	- 2.4.61 ContinueFrt11     0x0875
	- 2.4.62 ContinueFrt12     0x087f
*/
var CONTINUE_RT = [ 0x003c, 0x043c, 0x0812, 0x0875, 0x087f ];
function slurp(RecordType, R, blob, length/*:number*/, opts)/*:any*/ {
	var l = length;
	var bufs = [];
	var d = blob.slice(blob.l,blob.l+l);
	if(opts && opts.enc && opts.enc.insitu && d.length > 0) switch(RecordType) {
	case 0x0009: case 0x0209: case 0x0409: case 0x0809/* BOF */: case 0x002f /* FilePass */: case 0x0195 /* FileLock */: case 0x00e1 /* InterfaceHdr */: case 0x0196 /* RRDInfo */: case 0x0138 /* RRDHead */: case 0x0194 /* UsrExcl */: case 0x000a /* EOF */:
		break;
	case 0x0085 /* BoundSheet8 */:
		break;
	default:
		opts.enc.insitu(d);
	}
	bufs.push(d);
	blob.l += l;
	var nextrt = __readUInt16LE(blob,blob.l), next = XLSRecordEnum[nextrt];
	var start = 0;
	while(next != null && CONTINUE_RT.indexOf(nextrt) > -1) {
		l = __readUInt16LE(blob,blob.l+2);
		start = blob.l + 4;
		if(nextrt == 0x0812 /* ContinueFrt */) start += 4;
		else if(nextrt == 0x0875 || nextrt == 0x087f) {
			start += 12;
		}
		d = blob.slice(start,blob.l+4+l);
		bufs.push(d);
		blob.l += 4+l;
		next = (XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)]);
	}
	var b = (bconcat(bufs)/*:any*/);
	prep_blob(b, 0);
	var ll = 0; b.lens = [];
	for(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }
	if(b.length < length) throw "XLS Record 0x" + RecordType.toString(16) + " Truncated: " + b.length + " < " + length;
	return R.f(b, b.length, opts);
}

function safe_format_xf(p/*:any*/, opts/*:ParseOpts*/, date1904/*:?boolean*/) {
	if(p.t === 'z') return;
	if(!p.XF) return;
	var fmtid = 0;
	try {
		fmtid = p.z || p.XF.numFmtId || 0;
		if(opts.cellNF) p.z = table_fmt[fmtid];
	} catch(e) { if(opts.WTF) throw e; }
	if(!opts || opts.cellText !== false) try {
		if(p.t === 'e') { p.w = p.w || BErr[p.v]; }
		else if(fmtid === 0 || fmtid == "General") {
			if(p.t === 'n') {
				if((p.v|0) === p.v) p.w = p.v.toString(10);
				else p.w = SSF_general_num(p.v);
			}
			else p.w = SSF_general(p.v);
		}
		else p.w = SSF_format(fmtid,p.v, {date1904:!!date1904, dateNF: opts && opts.dateNF});
	} catch(e) { if(opts.WTF) throw e; }
	if(opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {
		var _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }
	}
}

function make_cell(val, ixfe, t)/*:Cell*/ {
	return ({v:val, ixfe:ixfe, t:t}/*:any*/);
}

// 2.3.2
function parse_workbook(blob, options/*:ParseOpts*/)/*:Workbook*/ {
	var wb = ({opts:{}}/*:any*/);
	var Sheets = {};
	var out/*:Worksheet*/ = ((options.dense ? [] : {})/*:any*/);
	var Directory = {};
	var range/*:Range*/ = ({}/*:any*/);
	var last_formula = null;
	var sst/*:SST*/ = ([]/*:any*/);
	var cur_sheet = "";
	var Preamble = {};
	var lastcell, last_cell = "", cc/*:Cell*/, cmnt, rngC, rngR;
	var sharedf = {};
	var arrayf/*:Array<[Range, string]>*/ = [];
	var temp_val/*:Cell*/;
	var country;
	var XFs = []; /* XF records */
	var palette/*:Array<[number, number, number]>*/ = [];
	var Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }/*:any*/), wsprops = {};
	var get_rgb = function getrgb(icv/*:number*/)/*:[number, number, number]*/ {
		if(icv < 8) return XLSIcv[icv];
		if(icv < 64) return palette[icv-8] || XLSIcv[icv];
		return XLSIcv[icv];
	};
	var process_cell_style = function pcs(cell, line/*:any*/, options) {
		var xfd = line.XF.data;
		if(!xfd || !xfd.patternType || !options || !options.cellStyles) return;
		line.s = ({}/*:any*/);
		line.s.patternType = xfd.patternType;
		var t;
		if((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }
		if((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }
	};
	var addcell = function addcell(cell/*:any*/, line/*:any*/, options/*:any*/) {
		if(file_depth > 1) return;
		if(options.sheetRows && cell.r >= options.sheetRows) return;
		if(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);
		delete line.ixfe; delete line.XF;
		lastcell = cell;
		last_cell = encode_cell(cell);
		if(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};
		if(cell.r < range.s.r) range.s.r = cell.r;
		if(cell.c < range.s.c) range.s.c = cell.c;
		if(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;
		if(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;
		if(options.cellFormula && line.f) {
			for(var afi = 0; afi < arrayf.length; ++afi) {
				if(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;
				if(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;
				line.F = encode_range(arrayf[afi][0]);
				if(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;
				if(line.f) line.f = "" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);
				break;
			}
		}
		{
			if(options.dense) {
				if(!out[cell.r]) out[cell.r] = [];
				out[cell.r][cell.c] = line;
			} else out[last_cell] = line;
		}
	};
	var opts = ({
		enc: false, // encrypted
		sbcch: 0, // cch in the preceding SupBook
		snames: [], // sheetnames
		sharedf: sharedf, // shared formulae by address
		arrayf: arrayf, // array formulae array
		rrtabid: [], // RRTabId
		lastuser: "", // Last User from WriteAccess
		biff: 8, // BIFF version
		codepage: 0, // CP from CodePage record
		winlocked: 0, // fLockWn from WinProtect
		cellStyles: !!options && !!options.cellStyles,
		WTF: !!options && !!options.wtf
	}/*:any*/);
	if(options.password) opts.password = options.password;
	var themes;
	var merges/*:Array<Range>*/ = [];
	var objects = [];
	var colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];
	var seencol = false;
	var supbooks = ([]/*:any*/); // 1-indexed, will hold extern names
	supbooks.SheetNames = opts.snames;
	supbooks.sharedf = opts.sharedf;
	supbooks.arrayf = opts.arrayf;
	supbooks.names = [];
	supbooks.XTI = [];
	var last_RT = 0;
	var file_depth = 0; /* TODO: make a real stack */
	var BIFF2Fmt = 0, BIFF2FmtTable/*:Array<string>*/ = [];
	var FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */
	var last_lbl/*:?DefinedName*/;

	/* explicit override for some broken writers */
	opts.codepage = 1200;
	set_cp(1200);
	var seen_codepage = false;
	while(blob.l < blob.length - 1) {
		var s = blob.l;
		var RecordType = blob.read_shift(2);
		if(RecordType === 0 && last_RT === 0x000a /* EOF */) break;
		var length = (blob.l === blob.length ? 0 : blob.read_shift(2));
		var R = XLSRecordEnum[RecordType];
		//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);
		//if(!R) console.log(blob.slice(blob.l, blob.l + length));
		if(R && R.f) {
			if(options.bookSheets) {
				if(last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;
			}
			last_RT = RecordType;
			if(R.r === 2 || R.r == 12) {
				var rt = blob.read_shift(2); length -= 2;
				if(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error("rt mismatch: " + rt + "!=" + RecordType);
				if(R.r == 12){
					blob.l += 10; length -= 10;
				} // skip FRT
			}
			//console.error(R,blob.l,length,blob.length);
			var val/*:any*/ = ({}/*:any*/);
			if(RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts)/*:: :any)*/;
			else val = /*::(*/slurp(RecordType, R, blob, length, opts)/*:: :any)*/;
			/*:: val = (val:any); */
			if(file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* 'BOF' */) continue;
			switch(RecordType) {
				case 0x0022 /* Date1904 */:
					/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */
					wb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;
				case 0x0086 /* WriteProtect */: wb.opts.WriteProtect = true; break;
				case 0x002f /* FilePass */:
					if(!opts.enc) blob.l = 0;
					opts.enc = val;
					if(!options.password) throw new Error("File is password-protected");
					if(val.valid == null) throw new Error("Encryption scheme unsupported");
					if(!val.valid) throw new Error("Password is incorrect");
					break;
				case 0x005c /* WriteAccess */: opts.lastuser = val; break;
				case 0x0042 /* CodePage */:
					var cpval = Number(val);
					/* overrides based on test cases */
					switch(cpval) {
						case 0x5212: cpval =  1200; break;
						case 0x8000: cpval = 10000; break;
						case 0x8001: cpval =  1252; break;
					}
					set_cp(opts.codepage = cpval);
					seen_codepage = true;
					break;
				case 0x013d /* RRTabId */: opts.rrtabid = val; break;
				case 0x0019 /* WinProtect */: opts.winlocked = val; break;
				case 0x01b7 /* RefreshAll */: wb.opts["RefreshAll"] = val; break;
				case 0x000c /* CalcCount */: wb.opts["CalcCount"] = val; break;
				case 0x0010 /* CalcDelta */: wb.opts["CalcDelta"] = val; break;
				case 0x0011 /* CalcIter */: wb.opts["CalcIter"] = val; break;
				case 0x000d /* CalcMode */: wb.opts["CalcMode"] = val; break;
				case 0x000e /* CalcPrecision */: wb.opts["CalcPrecision"] = val; break;
				case 0x005f /* CalcSaveRecalc */: wb.opts["CalcSaveRecalc"] = val; break;
				case 0x000f /* CalcRefMode */: opts.CalcRefMode = val; break; // TODO: implement R1C1
				case 0x08a3 /* ForceFullCalculation */: wb.opts.FullCalc = val; break;
				case 0x0081 /* WsBool */:
					if(val.fDialog) out["!type"] = "dialog";
					if(!val.fBelow) (out["!outline"] || (out["!outline"] = {})).above = true;
					if(!val.fRight) (out["!outline"] || (out["!outline"] = {})).left = true;
					break; // TODO
				case 0x00e0 /* XF */:
					XFs.push(val); break;
				case 0x01ae /* SupBook */:
					supbooks.push([val]);
					supbooks[supbooks.length-1].XTI = [];
					break;
				case 0x0023: case 0x0223 /* ExternName */:
					supbooks[supbooks.length-1].push(val);
					break;
				case 0x0018: case 0x0218 /* Lbl */:
					last_lbl = ({
						Name: val.Name,
						Ref: stringify_formula(val.rgce,range,null,supbooks,opts)
					}/*:DefinedName*/);
					if(val.itab > 0) last_lbl.Sheet = val.itab - 1;
					supbooks.names.push(last_lbl);
					if(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }
					supbooks[supbooks.length-1].push(val);
					if(val.Name == "_xlnm._FilterDatabase" && val.itab > 0)
						if(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')
							FilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };
					break;
				case 0x0016 /* ExternCount */: opts.ExternCount = val; break;
				case 0x0017 /* ExternSheet */:
					if(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }
					supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;
				case 0x0894 /* NameCmt */:
					/* TODO: search for correct name */
					if(opts.biff < 8) break;
					if(last_lbl != null) last_lbl.Comment = val[1];
					break;
				case 0x0012 /* Protect */: out["!protect"] = val; break; /* for sheet or book */
				case 0x0013 /* Password */: if(val !== 0 && opts.WTF) console.error("Password verifier: " + val); break;
				case 0x0085 /* BoundSheet8 */: {
					Directory[val.pos] = val;
					opts.snames.push(val.name);
				} break;
				case 0x000a /* EOF */: {
					if(--file_depth) break;
					if(range.e) {
						if(range.e.r > 0 && range.e.c > 0) {
							range.e.r--; range.e.c--;
							out["!ref"] = encode_range(range);
							if(options.sheetRows && options.sheetRows <= range.e.r) {
								var tmpri = range.e.r;
								range.e.r = options.sheetRows - 1;
								out["!fullref"] = out["!ref"];
								out["!ref"] = encode_range(range);
								range.e.r = tmpri;
							}
							range.e.r++; range.e.c++;
						}
						if(merges.length > 0) out["!merges"] = merges;
						if(objects.length > 0) out["!objects"] = objects;
						if(colinfo.length > 0) out["!cols"] = colinfo;
						if(rowinfo.length > 0) out["!rows"] = rowinfo;
						Workbook.Sheets.push(wsprops);
					}
					if(cur_sheet === "") Preamble = out; else Sheets[cur_sheet] = out;
					out = ((options.dense ? [] : {})/*:any*/);
				} break;
				case 0x0009: case 0x0209: case 0x0409: case 0x0809 /* BOF */: {
					if(opts.biff === 8) opts.biff = {
						/*::[*/0x0009/*::]*/:2,
						/*::[*/0x0209/*::]*/:3,
						/*::[*/0x0409/*::]*/:4
					}[RecordType] || {
						/*::[*/0x0200/*::]*/:2,
						/*::[*/0x0300/*::]*/:3,
						/*::[*/0x0400/*::]*/:4,
						/*::[*/0x0500/*::]*/:5,
						/*::[*/0x0600/*::]*/:8,
						/*::[*/0x0002/*::]*/:2,
						/*::[*/0x0007/*::]*/:2
					}[val.BIFFVer] || 8;
					opts.biffguess = val.BIFFVer == 0;
					if(val.BIFFVer == 0 && val.dt == 0x1000) { opts.biff = 5; seen_codepage = true; set_cp(opts.codepage = 28591); }
					if(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;
					if(file_depth++) break;
					out = ((options.dense ? [] : {})/*:any*/);

					if(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }

					if(opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {
						if(cur_sheet === "") cur_sheet = "Sheet1";
						range = {s:{r:0,c:0},e:{r:0,c:0}};
						/* fake BoundSheet8 */
						var fakebs8 = {pos: blob.l - length, name:cur_sheet};
						Directory[fakebs8.pos] = fakebs8;
						opts.snames.push(cur_sheet);
					}
					else cur_sheet = (Directory[s] || {name:""}).name;
					if(val.dt == 0x20) out["!type"] = "chart";
					if(val.dt == 0x40) out["!type"] = "macro";
					merges = [];
					objects = [];
					opts.arrayf = arrayf = [];
					colinfo = []; rowinfo = [];
					seencol = false;
					wsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };
				} break;
				case 0x0203 /* Number */: case 0x0003 /* BIFF2NUM */: case 0x0002 /* BIFF2INT */: {
					if(out["!type"] == "chart") if(options.dense ? (out[val.r]||[])[val.c]: out[encode_cell({c:val.c, r:val.r})]) ++val.c;
					temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'}/*:any*/);
					if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
					safe_format_xf(temp_val, options, wb.opts.Date1904);
					addcell({c:val.c, r:val.r}, temp_val, options);
				} break;
				case 0x0005: case 0x0205 /* BoolErr */: {
					temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t}/*:any*/);
					if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
					safe_format_xf(temp_val, options, wb.opts.Date1904);
					addcell({c:val.c, r:val.r}, temp_val, options);
				} break;
				case 0x027e /* RK */: {
					temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'}/*:any*/);
					if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
					safe_format_xf(temp_val, options, wb.opts.Date1904);
					addcell({c:val.c, r:val.r}, temp_val, options);
				} break;
				case 0x00bd /* MulRk */: {
					for(var j = val.c; j <= val.C; ++j) {
						var ixfe = val.rkrec[j-val.c][0];
						temp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'}/*:any*/);
						if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
						safe_format_xf(temp_val, options, wb.opts.Date1904);
						addcell({c:j, r:val.r}, temp_val, options);
					}
				} break;
				case 0x0006: case 0x0206: case 0x0406 /* Formula */: {
					if(val.val == 'String') { last_formula = val; break; }
					temp_val = make_cell(val.val, val.cell.ixfe, val.tt);
					temp_val.XF = XFs[temp_val.ixfe];
					if(options.cellFormula) {
						var _f = val.formula;
						if(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {
							var _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];
							var _fe = encode_cell({r:_fr, c:_fc});
							if(sharedf[_fe]) temp_val.f = ""+stringify_formula(val.formula,range,val.cell,supbooks, opts);
							else temp_val.F = ((options.dense ? (out[_fr]||[])[_fc]: out[_fe]) || {}).F;
						} else temp_val.f = ""+stringify_formula(val.formula,range,val.cell,supbooks, opts);
					}
					if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
					safe_format_xf(temp_val, options, wb.opts.Date1904);
					addcell(val.cell, temp_val, options);
					last_formula = val;
				} break;
				case 0x0007: case 0x0207 /* String */: {
					if(last_formula) { /* technically always true */
						last_formula.val = val;
						temp_val = make_cell(val, last_formula.cell.ixfe, 's');
						temp_val.XF = XFs[temp_val.ixfe];
						if(options.cellFormula) {
							temp_val.f = ""+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);
						}
						if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
						safe_format_xf(temp_val, options, wb.opts.Date1904);
						addcell(last_formula.cell, temp_val, options);
						last_formula = null;
					} else throw new Error("String record expects Formula");
				} break;
				case 0x0021: case 0x0221 /* Array */: {
					arrayf.push(val);
					var _arraystart = encode_cell(val[0].s);
					cc = options.dense ? (out[val[0].s.r]||[])[val[0].s.c] : out[_arraystart];
					if(options.cellFormula && cc) {
						if(!last_formula) break; /* technically unreachable */
						if(!_arraystart || !cc) break;
						cc.f = ""+stringify_formula(val[1], range, val[0], supbooks, opts);
						cc.F = encode_range(val[0]);
					}
				} break;
				case 0x04bc /* ShrFmla */: {
					if(!options.cellFormula) break;
					if(last_cell) {
						/* TODO: capture range */
						if(!last_formula) break; /* technically unreachable */
						sharedf[encode_cell(last_formula.cell)]= val[0];
						cc = options.dense ? (out[last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];
						(cc||{}).f = ""+stringify_formula(val[0], range, lastcell, supbooks, opts);
					}
				} break;
				case 0x00fd /* LabelSst */:
					temp_val=make_cell(sst[val.isst].t, val.ixfe, 's');
					if(sst[val.isst].h) temp_val.h = sst[val.isst].h;
					temp_val.XF = XFs[temp_val.ixfe];
					if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
					safe_format_xf(temp_val, options, wb.opts.Date1904);
					addcell({c:val.c, r:val.r}, temp_val, options);
					break;
				case 0x0201 /* Blank */: if(options.sheetStubs) {
					temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'}/*:any*/);
					if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
					safe_format_xf(temp_val, options, wb.opts.Date1904);
					addcell({c:val.c, r:val.r}, temp_val, options);
				} break;
				case 0x00be /* MulBlank */: if(options.sheetStubs) {
					for(var _j = val.c; _j <= val.C; ++_j) {
						var _ixfe = val.ixfe[_j-val.c];
						temp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'}/*:any*/);
						if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
						safe_format_xf(temp_val, options, wb.opts.Date1904);
						addcell({c:_j, r:val.r}, temp_val, options);
					}
				} break;
				case 0x00d6 /* RString */:
				case 0x0204 /* Label */: case 0x0004 /* BIFF2STR */:
					temp_val=make_cell(val.val, val.ixfe, 's');
					temp_val.XF = XFs[temp_val.ixfe];
					if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];
					safe_format_xf(temp_val, options, wb.opts.Date1904);
					addcell({c:val.c, r:val.r}, temp_val, options);
					break;

				case 0x0000: case 0x0200 /* Dimensions */: {
					if(file_depth === 1) range = val; /* TODO: stack */
				} break;
				case 0x00fc /* SST */: {
					sst = val;
				} break;
				case 0x041e /* Format */: { /* val = [id, fmt] */
					if(opts.biff == 4) {
						BIFF2FmtTable[BIFF2Fmt++] = val[1];
						for(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(table_fmt[b4idx] == val[1]) break;
						if(b4idx >= 163) SSF_load(val[1], BIFF2Fmt + 163);
					}
					else SSF_load(val[1], val[0]);
				} break;
				case 0x001e /* BIFF2FORMAT */: {
					BIFF2FmtTable[BIFF2Fmt++] = val;
					for(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(table_fmt[b2idx] == val) break;
					if(b2idx >= 163) SSF_load(val, BIFF2Fmt + 163);
				} break;

				case 0x00e5 /* MergeCells */: merges = merges.concat(val); break;

				case 0x005d /* Obj */: objects[val.cmo[0]] = opts.lastobj = val; break;
				case 0x01b6 /* TxO */: opts.lastobj.TxO = val; break;
				case 0x007f /* ImData */: opts.lastobj.ImData = val; break;

				case 0x01b8 /* HLink */: {
					for(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)
						for(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {
							cc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];
							if(cc) cc.l = val[1];
						}
				} break;
				case 0x0800 /* HLinkTooltip */: {
					for(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)
						for(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {
							cc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];
							if(cc && cc.l) cc.l.Tooltip = val[1];
							}
				} break;
				case 0x001c /* Note */: {
					if(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */
					cc = options.dense ? (out[val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];
					var noteobj = objects[val[2]];
					if(!cc) {
						if(options.dense) {
							if(!out[val[0].r]) out[val[0].r] = [];
							cc = out[val[0].r][val[0].c] = ({t:"z"}/*:any*/);
						} else {
							cc = out[encode_cell(val[0])] = ({t:"z"}/*:any*/);
						}
						range.e.r = Math.max(range.e.r, val[0].r);
						range.s.r = Math.min(range.s.r, val[0].r);
						range.e.c = Math.max(range.e.c, val[0].c);
						range.s.c = Math.min(range.s.c, val[0].c);
					}
					if(!cc.c) cc.c = [];
					cmnt = {a:val[1],t:noteobj.TxO.t};
					cc.c.push(cmnt);
				} break;
				case 0x087d /* XFExt */: update_xfext(XFs[val.ixfe], val.ext); break;
				case 0x007d /* ColInfo */: {
					if(!opts.cellStyles) break;
					while(val.e >= val.s) {
						colinfo[val.e--] = { width: val.w/256, level: (val.level || 0), hidden: !!(val.flags & 1) };
						if(!seencol) { seencol = true; find_mdw_colw(val.w/256); }
						process_col(colinfo[val.e+1]);
					}
				} break;
				case 0x0208 /* Row */: {
					var rowobj = {};
					if(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }
					if(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }
					if(val.hpt) {
						rowinfo[val.r] = rowobj;
						rowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);
					}
				} break;
				case 0x0026 /* LeftMargin */:
				case 0x0027 /* RightMargin */:
				case 0x0028 /* TopMargin */:
				case 0x0029 /* BottomMargin */:
					if(!out['!margins']) default_margins(out['!margins'] = {});
					out['!margins'][({0x26: "left", 0x27:"right", 0x28:"top", 0x29:"bottom"})[RecordType]] = val;
					break;
				case 0x00a1 /* Setup */: // TODO
					if(!out['!margins']) default_margins(out['!margins'] = {});
					out['!margins'].header = val.header;
					out['!margins'].footer = val.footer;
					break;
				case 0x023e /* Window2 */: // TODO
					// $FlowIgnore
					if(val.RTL) Workbook.Views[0].RTL = true;
					break;
				case 0x0092 /* Palette */: palette = val; break;
				case 0x0896 /* Theme */: themes = val; break;
				case 0x008c /* Country */: country = val; break;
				case 0x01ba /* CodeName */: {
					/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */
					if(!cur_sheet) Workbook.WBProps.CodeName = val || "ThisWorkbook";
					else wsprops.CodeName = val || wsprops.name;
				} break;
			}
		} else {
			if(!R) console.error("Missing Info for XLS Record 0x" + RecordType.toString(16));
			blob.l += length;
		}
	}
	wb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});
	if(!options.bookSheets) wb.Sheets=Sheets;
	if(!wb.SheetNames.length && Preamble["!ref"]) {
		wb.SheetNames.push("Sheet1");
		/*jshint -W069 */
		if(wb.Sheets) wb.Sheets["Sheet1"] = Preamble;
		/*jshint +W069 */
	} else wb.Preamble=Preamble;
	if(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });
	wb.Strings = sst;
	wb.SSF = dup(table_fmt);
	if(opts.enc) wb.Encryption = opts.enc;
	if(themes) wb.Themes = themes;
	wb.Metadata = {};
	if(country !== undefined) wb.Metadata.Country = country;
	if(supbooks.names.length > 0) Workbook.Names = supbooks.names;
	wb.Workbook = Workbook;
	return wb;
}

/* TODO: split props*/
var PSCLSID = {
	SI: "e0859ff2f94f6810ab9108002b27b3d9",
	DSI: "02d5cdd59c2e1b10939708002b2cf9ae",
	UDI: "05d5cdd59c2e1b10939708002b2cf9ae"
};
function parse_xls_props(cfb/*:CFBContainer*/, props, o) {
	/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */
	var DSI = CFB.find(cfb, '/!DocumentSummaryInformation');
	if(DSI && DSI.size > 0) try {
		var DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);
		for(var d in DocSummary) props[d] = DocSummary[d];
	} catch(e) {if(o.WTF) throw e;/* empty */}

	/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/
	var SI = CFB.find(cfb, '/!SummaryInformation');
	if(SI && SI.size > 0) try {
		var Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);
		for(var s in Summary) if(props[s] == null) props[s] = Summary[s];
	} catch(e) {if(o.WTF) throw e;/* empty */}

	if(props.HeadingPairs && props.TitlesOfParts) {
		load_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);
		delete props.HeadingPairs; delete props.TitlesOfParts;
	}
}

function parse_xlscfb(cfb/*:any*/, options/*:?ParseOpts*/)/*:Workbook*/ {
if(!options) options = {};
fix_read_opts(options);
reset_cp();
if(options.codepage) set_ansi(options.codepage);
var CompObj/*:?CFBEntry*/, WB/*:?any*/;
if(cfb.FullPaths) {
	if(CFB.find(cfb, '/encryption')) throw new Error("File is password-protected");
	CompObj = CFB.find(cfb, '!CompObj');
	WB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');
} else {
	switch(options.type) {
		case 'base64': cfb = s2a(Base64_decode(cfb)); break;
		case 'binary': cfb = s2a(cfb); break;
		case 'buffer': break;
		case 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;
	}
	prep_blob(cfb, 0);
	WB = ({content: cfb}/*:any*/);
}
var /*::CompObjP, */WorkbookP/*:: :Workbook = XLSX.utils.book_new(); */;

var _data/*:?any*/;
if(CompObj) /*::CompObjP = */parse_compobj(CompObj);
if(options.bookProps && !options.bookSheets) WorkbookP = ({}/*:any*/);
else/*:: if(cfb instanceof CFBContainer) */ {
	var T = has_buf ? 'buffer' : 'array';
	if(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);
	/* Quattro Pro 7-8 */
	else if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));
	/* Quattro Pro 9 */
	else if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));
	/* Works 4 for Mac */
	else if((_data=CFB.find(cfb, 'MN0')) && _data.content) throw new Error("Unsupported Works 4 for Mac file");
	else throw new Error("Cannot find Workbook stream");
	if(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);
}

var props = {};
if(cfb.FullPaths) parse_xls_props(/*::((*/cfb/*:: :any):CFBContainer)*/, props, options);

WorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */
if(options.bookFiles) WorkbookP.cfb = cfb;
/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */
return WorkbookP;
}
/* [MS-XLSB] 2.3 Record Enumeration */
var XLSBRecordEnum = {
	/*::[*/0x0000/*::]*/: { /* n:"BrtRowHdr", */ f:parse_BrtRowHdr },
	/*::[*/0x0001/*::]*/: { /* n:"BrtCellBlank", */ f:parse_BrtCellBlank },
	/*::[*/0x0002/*::]*/: { /* n:"BrtCellRk", */ f:parse_BrtCellRk },
	/*::[*/0x0003/*::]*/: { /* n:"BrtCellError", */ f:parse_BrtCellError },
	/*::[*/0x0004/*::]*/: { /* n:"BrtCellBool", */ f:parse_BrtCellBool },
	/*::[*/0x0005/*::]*/: { /* n:"BrtCellReal", */ f:parse_BrtCellReal },
	/*::[*/0x0006/*::]*/: { /* n:"BrtCellSt", */ f:parse_BrtCellSt },
	/*::[*/0x0007/*::]*/: { /* n:"BrtCellIsst", */ f:parse_BrtCellIsst },
	/*::[*/0x0008/*::]*/: { /* n:"BrtFmlaString", */ f:parse_BrtFmlaString },
	/*::[*/0x0009/*::]*/: { /* n:"BrtFmlaNum", */ f:parse_BrtFmlaNum },
	/*::[*/0x000A/*::]*/: { /* n:"BrtFmlaBool", */ f:parse_BrtFmlaBool },
	/*::[*/0x000B/*::]*/: { /* n:"BrtFmlaError", */ f:parse_BrtFmlaError },
	/*::[*/0x000C/*::]*/: { /* n:"BrtShortBlank", */ f:parse_BrtShortBlank },
	/*::[*/0x000D/*::]*/: { /* n:"BrtShortRk", */ f:parse_BrtShortRk },
	/*::[*/0x000E/*::]*/: { /* n:"BrtShortError", */ f:parse_BrtShortError },
	/*::[*/0x000F/*::]*/: { /* n:"BrtShortBool", */ f:parse_BrtShortBool },
	/*::[*/0x0010/*::]*/: { /* n:"BrtShortReal", */ f:parse_BrtShortReal },
	/*::[*/0x0011/*::]*/: { /* n:"BrtShortSt", */ f:parse_BrtShortSt },
	/*::[*/0x0012/*::]*/: { /* n:"BrtShortIsst", */ f:parse_BrtShortIsst },
	/*::[*/0x0013/*::]*/: { /* n:"BrtSSTItem", */ f:parse_RichStr },
	/*::[*/0x0014/*::]*/: { /* n:"BrtPCDIMissing" */ },
	/*::[*/0x0015/*::]*/: { /* n:"BrtPCDINumber" */ },
	/*::[*/0x0016/*::]*/: { /* n:"BrtPCDIBoolean" */ },
	/*::[*/0x0017/*::]*/: { /* n:"BrtPCDIError" */ },
	/*::[*/0x0018/*::]*/: { /* n:"BrtPCDIString" */ },
	/*::[*/0x0019/*::]*/: { /* n:"BrtPCDIDatetime" */ },
	/*::[*/0x001A/*::]*/: { /* n:"BrtPCDIIndex" */ },
	/*::[*/0x001B/*::]*/: { /* n:"BrtPCDIAMissing" */ },
	/*::[*/0x001C/*::]*/: { /* n:"BrtPCDIANumber" */ },
	/*::[*/0x001D/*::]*/: { /* n:"BrtPCDIABoolean" */ },
	/*::[*/0x001E/*::]*/: { /* n:"BrtPCDIAError" */ },
	/*::[*/0x001F/*::]*/: { /* n:"BrtPCDIAString" */ },
	/*::[*/0x0020/*::]*/: { /* n:"BrtPCDIADatetime" */ },
	/*::[*/0x0021/*::]*/: { /* n:"BrtPCRRecord" */ },
	/*::[*/0x0022/*::]*/: { /* n:"BrtPCRRecordDt" */ },
	/*::[*/0x0023/*::]*/: { /* n:"BrtFRTBegin", */ T:1 },
	/*::[*/0x0024/*::]*/: { /* n:"BrtFRTEnd", */ T:-1 },
	/*::[*/0x0025/*::]*/: { /* n:"BrtACBegin", */ T:1 },
	/*::[*/0x0026/*::]*/: { /* n:"BrtACEnd", */ T:-1 },
	/*::[*/0x0027/*::]*/: { /* n:"BrtName", */ f:parse_BrtName },
	/*::[*/0x0028/*::]*/: { /* n:"BrtIndexRowBlock" */ },
	/*::[*/0x002A/*::]*/: { /* n:"BrtIndexBlock" */ },
	/*::[*/0x002B/*::]*/: { /* n:"BrtFont", */ f:parse_BrtFont },
	/*::[*/0x002C/*::]*/: { /* n:"BrtFmt", */ f:parse_BrtFmt },
	/*::[*/0x002D/*::]*/: { /* n:"BrtFill", */ f:parse_BrtFill },
	/*::[*/0x002E/*::]*/: { /* n:"BrtBorder", */ f:parse_BrtBorder },
	/*::[*/0x002F/*::]*/: { /* n:"BrtXF", */ f:parse_BrtXF },
	/*::[*/0x0030/*::]*/: { /* n:"BrtStyle" */ },
	/*::[*/0x0031/*::]*/: { /* n:"BrtCellMeta", */ f:parse_Int32LE },
	/*::[*/0x0032/*::]*/: { /* n:"BrtValueMeta" */ },
	/*::[*/0x0033/*::]*/: { /* n:"BrtMdb" */ f:parse_BrtMdb },
	/*::[*/0x0034/*::]*/: { /* n:"BrtBeginFmd", */ T:1 },
	/*::[*/0x0035/*::]*/: { /* n:"BrtEndFmd", */ T:-1 },
	/*::[*/0x0036/*::]*/: { /* n:"BrtBeginMdx", */ T:1 },
	/*::[*/0x0037/*::]*/: { /* n:"BrtEndMdx", */ T:-1 },
	/*::[*/0x0038/*::]*/: { /* n:"BrtBeginMdxTuple", */ T:1 },
	/*::[*/0x0039/*::]*/: { /* n:"BrtEndMdxTuple", */ T:-1 },
	/*::[*/0x003A/*::]*/: { /* n:"BrtMdxMbrIstr" */ },
	/*::[*/0x003B/*::]*/: { /* n:"BrtStr" */ },
	/*::[*/0x003C/*::]*/: { /* n:"BrtColInfo", */ f:parse_ColInfo },
	/*::[*/0x003E/*::]*/: { /* n:"BrtCellRString", */ f:parse_BrtCellRString },
	/*::[*/0x003F/*::]*/: { /* n:"BrtCalcChainItem$", */ f:parse_BrtCalcChainItem$ },
	/*::[*/0x0040/*::]*/: { /* n:"BrtDVal", */ f:parse_BrtDVal },
	/*::[*/0x0041/*::]*/: { /* n:"BrtSxvcellNum" */ },
	/*::[*/0x0042/*::]*/: { /* n:"BrtSxvcellStr" */ },
	/*::[*/0x0043/*::]*/: { /* n:"BrtSxvcellBool" */ },
	/*::[*/0x0044/*::]*/: { /* n:"BrtSxvcellErr" */ },
	/*::[*/0x0045/*::]*/: { /* n:"BrtSxvcellDate" */ },
	/*::[*/0x0046/*::]*/: { /* n:"BrtSxvcellNil" */ },
	/*::[*/0x0080/*::]*/: { /* n:"BrtFileVersion" */ },
	/*::[*/0x0081/*::]*/: { /* n:"BrtBeginSheet", */ T:1 },
	/*::[*/0x0082/*::]*/: { /* n:"BrtEndSheet", */ T:-1 },
	/*::[*/0x0083/*::]*/: { /* n:"BrtBeginBook", */ T:1, f:parsenoop, p:0 },
	/*::[*/0x0084/*::]*/: { /* n:"BrtEndBook", */ T:-1 },
	/*::[*/0x0085/*::]*/: { /* n:"BrtBeginWsViews", */ T:1 },
	/*::[*/0x0086/*::]*/: { /* n:"BrtEndWsViews", */ T:-1 },
	/*::[*/0x0087/*::]*/: { /* n:"BrtBeginBookViews", */ T:1 },
	/*::[*/0x0088/*::]*/: { /* n:"BrtEndBookViews", */ T:-1 },
	/*::[*/0x0089/*::]*/: { /* n:"BrtBeginWsView", */ T:1, f:parse_BrtBeginWsView },
	/*::[*/0x008A/*::]*/: { /* n:"BrtEndWsView", */ T:-1 },
	/*::[*/0x008B/*::]*/: { /* n:"BrtBeginCsViews", */ T:1 },
	/*::[*/0x008C/*::]*/: { /* n:"BrtEndCsViews", */ T:-1 },
	/*::[*/0x008D/*::]*/: { /* n:"BrtBeginCsView", */ T:1 },
	/*::[*/0x008E/*::]*/: { /* n:"BrtEndCsView", */ T:-1 },
	/*::[*/0x008F/*::]*/: { /* n:"BrtBeginBundleShs", */ T:1 },
	/*::[*/0x0090/*::]*/: { /* n:"BrtEndBundleShs", */ T:-1 },
	/*::[*/0x0091/*::]*/: { /* n:"BrtBeginSheetData", */ T:1 },
	/*::[*/0x0092/*::]*/: { /* n:"BrtEndSheetData", */ T:-1 },
	/*::[*/0x0093/*::]*/: { /* n:"BrtWsProp", */ f:parse_BrtWsProp },
	/*::[*/0x0094/*::]*/: { /* n:"BrtWsDim", */ f:parse_BrtWsDim, p:16 },
	/*::[*/0x0097/*::]*/: { /* n:"BrtPane", */ f:parse_BrtPane },
	/*::[*/0x0098/*::]*/: { /* n:"BrtSel" */ },
	/*::[*/0x0099/*::]*/: { /* n:"BrtWbProp", */ f:parse_BrtWbProp },
	/*::[*/0x009A/*::]*/: { /* n:"BrtWbFactoid" */ },
	/*::[*/0x009B/*::]*/: { /* n:"BrtFileRecover" */ },
	/*::[*/0x009C/*::]*/: { /* n:"BrtBundleSh", */ f:parse_BrtBundleSh },
	/*::[*/0x009D/*::]*/: { /* n:"BrtCalcProp" */ },
	/*::[*/0x009E/*::]*/: { /* n:"BrtBookView" */ },
	/*::[*/0x009F/*::]*/: { /* n:"BrtBeginSst", */ T:1, f:parse_BrtBeginSst },
	/*::[*/0x00A0/*::]*/: { /* n:"BrtEndSst", */ T:-1 },
	/*::[*/0x00A1/*::]*/: { /* n:"BrtBeginAFilter", */ T:1, f:parse_UncheckedRfX },
	/*::[*/0x00A2/*::]*/: { /* n:"BrtEndAFilter", */ T:-1 },
	/*::[*/0x00A3/*::]*/: { /* n:"BrtBeginFilterColumn", */ T:1 },
	/*::[*/0x00A4/*::]*/: { /* n:"BrtEndFilterColumn", */ T:-1 },
	/*::[*/0x00A5/*::]*/: { /* n:"BrtBeginFilters", */ T:1 },
	/*::[*/0x00A6/*::]*/: { /* n:"BrtEndFilters", */ T:-1 },
	/*::[*/0x00A7/*::]*/: { /* n:"BrtFilter" */ },
	/*::[*/0x00A8/*::]*/: { /* n:"BrtColorFilter" */ },
	/*::[*/0x00A9/*::]*/: { /* n:"BrtIconFilter" */ },
	/*::[*/0x00AA/*::]*/: { /* n:"BrtTop10Filter" */ },
	/*::[*/0x00AB/*::]*/: { /* n:"BrtDynamicFilter" */ },
	/*::[*/0x00AC/*::]*/: { /* n:"BrtBeginCustomFilters", */ T:1 },
	/*::[*/0x00AD/*::]*/: { /* n:"BrtEndCustomFilters", */ T:-1 },
	/*::[*/0x00AE/*::]*/: { /* n:"BrtCustomFilter" */ },
	/*::[*/0x00AF/*::]*/: { /* n:"BrtAFilterDateGroupItem" */ },
	/*::[*/0x00B0/*::]*/: { /* n:"BrtMergeCell", */ f:parse_BrtMergeCell },
	/*::[*/0x00B1/*::]*/: { /* n:"BrtBeginMergeCells", */ T:1 },
	/*::[*/0x00B2/*::]*/: { /* n:"BrtEndMergeCells", */ T:-1 },
	/*::[*/0x00B3/*::]*/: { /* n:"BrtBeginPivotCacheDef", */ T:1 },
	/*::[*/0x00B4/*::]*/: { /* n:"BrtEndPivotCacheDef", */ T:-1 },
	/*::[*/0x00B5/*::]*/: { /* n:"BrtBeginPCDFields", */ T:1 },
	/*::[*/0x00B6/*::]*/: { /* n:"BrtEndPCDFields", */ T:-1 },
	/*::[*/0x00B7/*::]*/: { /* n:"BrtBeginPCDField", */ T:1 },
	/*::[*/0x00B8/*::]*/: { /* n:"BrtEndPCDField", */ T:-1 },
	/*::[*/0x00B9/*::]*/: { /* n:"BrtBeginPCDSource", */ T:1 },
	/*::[*/0x00BA/*::]*/: { /* n:"BrtEndPCDSource", */ T:-1 },
	/*::[*/0x00BB/*::]*/: { /* n:"BrtBeginPCDSRange", */ T:1 },
	/*::[*/0x00BC/*::]*/: { /* n:"BrtEndPCDSRange", */ T:-1 },
	/*::[*/0x00BD/*::]*/: { /* n:"BrtBeginPCDFAtbl", */ T:1 },
	/*::[*/0x00BE/*::]*/: { /* n:"BrtEndPCDFAtbl", */ T:-1 },
	/*::[*/0x00BF/*::]*/: { /* n:"BrtBeginPCDIRun", */ T:1 },
	/*::[*/0x00C0/*::]*/: { /* n:"BrtEndPCDIRun", */ T:-1 },
	/*::[*/0x00C1/*::]*/: { /* n:"BrtBeginPivotCacheRecords", */ T:1 },
	/*::[*/0x00C2/*::]*/: { /* n:"BrtEndPivotCacheRecords", */ T:-1 },
	/*::[*/0x00C3/*::]*/: { /* n:"BrtBeginPCDHierarchies", */ T:1 },
	/*::[*/0x00C4/*::]*/: { /* n:"BrtEndPCDHierarchies", */ T:-1 },
	/*::[*/0x00C5/*::]*/: { /* n:"BrtBeginPCDHierarchy", */ T:1 },
	/*::[*/0x00C6/*::]*/: { /* n:"BrtEndPCDHierarchy", */ T:-1 },
	/*::[*/0x00C7/*::]*/: { /* n:"BrtBeginPCDHFieldsUsage", */ T:1 },
	/*::[*/0x00C8/*::]*/: { /* n:"BrtEndPCDHFieldsUsage", */ T:-1 },
	/*::[*/0x00C9/*::]*/: { /* n:"BrtBeginExtConnection", */ T:1 },
	/*::[*/0x00CA/*::]*/: { /* n:"BrtEndExtConnection", */ T:-1 },
	/*::[*/0x00CB/*::]*/: { /* n:"BrtBeginECDbProps", */ T:1 },
	/*::[*/0x00CC/*::]*/: { /* n:"BrtEndECDbProps", */ T:-1 },
	/*::[*/0x00CD/*::]*/: { /* n:"BrtBeginECOlapProps", */ T:1 },
	/*::[*/0x00CE/*::]*/: { /* n:"BrtEndECOlapProps", */ T:-1 },
	/*::[*/0x00CF/*::]*/: { /* n:"BrtBeginPCDSConsol", */ T:1 },
	/*::[*/0x00D0/*::]*/: { /* n:"BrtEndPCDSConsol", */ T:-1 },
	/*::[*/0x00D1/*::]*/: { /* n:"BrtBeginPCDSCPages", */ T:1 },
	/*::[*/0x00D2/*::]*/: { /* n:"BrtEndPCDSCPages", */ T:-1 },
	/*::[*/0x00D3/*::]*/: { /* n:"BrtBeginPCDSCPage", */ T:1 },
	/*::[*/0x00D4/*::]*/: { /* n:"BrtEndPCDSCPage", */ T:-1 },
	/*::[*/0x00D5/*::]*/: { /* n:"BrtBeginPCDSCPItem", */ T:1 },
	/*::[*/0x00D6/*::]*/: { /* n:"BrtEndPCDSCPItem", */ T:-1 },
	/*::[*/0x00D7/*::]*/: { /* n:"BrtBeginPCDSCSets", */ T:1 },
	/*::[*/0x00D8/*::]*/: { /* n:"BrtEndPCDSCSets", */ T:-1 },
	/*::[*/0x00D9/*::]*/: { /* n:"BrtBeginPCDSCSet", */ T:1 },
	/*::[*/0x00DA/*::]*/: { /* n:"BrtEndPCDSCSet", */ T:-1 },
	/*::[*/0x00DB/*::]*/: { /* n:"BrtBeginPCDFGroup", */ T:1 },
	/*::[*/0x00DC/*::]*/: { /* n:"BrtEndPCDFGroup", */ T:-1 },
	/*::[*/0x00DD/*::]*/: { /* n:"BrtBeginPCDFGItems", */ T:1 },
	/*::[*/0x00DE/*::]*/: { /* n:"BrtEndPCDFGItems", */ T:-1 },
	/*::[*/0x00DF/*::]*/: { /* n:"BrtBeginPCDFGRange", */ T:1 },
	/*::[*/0x00E0/*::]*/: { /* n:"BrtEndPCDFGRange", */ T:-1 },
	/*::[*/0x00E1/*::]*/: { /* n:"BrtBeginPCDFGDiscrete", */ T:1 },
	/*::[*/0x00E2/*::]*/: { /* n:"BrtEndPCDFGDiscrete", */ T:-1 },
	/*::[*/0x00E3/*::]*/: { /* n:"BrtBeginPCDSDTupleCache", */ T:1 },
	/*::[*/0x00E4/*::]*/: { /* n:"BrtEndPCDSDTupleCache", */ T:-1 },
	/*::[*/0x00E5/*::]*/: { /* n:"BrtBeginPCDSDTCEntries", */ T:1 },
	/*::[*/0x00E6/*::]*/: { /* n:"BrtEndPCDSDTCEntries", */ T:-1 },
	/*::[*/0x00E7/*::]*/: { /* n:"BrtBeginPCDSDTCEMembers", */ T:1 },
	/*::[*/0x00E8/*::]*/: { /* n:"BrtEndPCDSDTCEMembers", */ T:-1 },
	/*::[*/0x00E9/*::]*/: { /* n:"BrtBeginPCDSDTCEMember", */ T:1 },
	/*::[*/0x00EA/*::]*/: { /* n:"BrtEndPCDSDTCEMember", */ T:-1 },
	/*::[*/0x00EB/*::]*/: { /* n:"BrtBeginPCDSDTCQueries", */ T:1 },
	/*::[*/0x00EC/*::]*/: { /* n:"BrtEndPCDSDTCQueries", */ T:-1 },
	/*::[*/0x00ED/*::]*/: { /* n:"BrtBeginPCDSDTCQuery", */ T:1 },
	/*::[*/0x00EE/*::]*/: { /* n:"BrtEndPCDSDTCQuery", */ T:-1 },
	/*::[*/0x00EF/*::]*/: { /* n:"BrtBeginPCDSDTCSets", */ T:1 },
	/*::[*/0x00F0/*::]*/: { /* n:"BrtEndPCDSDTCSets", */ T:-1 },
	/*::[*/0x00F1/*::]*/: { /* n:"BrtBeginPCDSDTCSet", */ T:1 },
	/*::[*/0x00F2/*::]*/: { /* n:"BrtEndPCDSDTCSet", */ T:-1 },
	/*::[*/0x00F3/*::]*/: { /* n:"BrtBeginPCDCalcItems", */ T:1 },
	/*::[*/0x00F4/*::]*/: { /* n:"BrtEndPCDCalcItems", */ T:-1 },
	/*::[*/0x00F5/*::]*/: { /* n:"BrtBeginPCDCalcItem", */ T:1 },
	/*::[*/0x00F6/*::]*/: { /* n:"BrtEndPCDCalcItem", */ T:-1 },
	/*::[*/0x00F7/*::]*/: { /* n:"BrtBeginPRule", */ T:1 },
	/*::[*/0x00F8/*::]*/: { /* n:"BrtEndPRule", */ T:-1 },
	/*::[*/0x00F9/*::]*/: { /* n:"BrtBeginPRFilters", */ T:1 },
	/*::[*/0x00FA/*::]*/: { /* n:"BrtEndPRFilters", */ T:-1 },
	/*::[*/0x00FB/*::]*/: { /* n:"BrtBeginPRFilter", */ T:1 },
	/*::[*/0x00FC/*::]*/: { /* n:"BrtEndPRFilter", */ T:-1 },
	/*::[*/0x00FD/*::]*/: { /* n:"BrtBeginPNames", */ T:1 },
	/*::[*/0x00FE/*::]*/: { /* n:"BrtEndPNames", */ T:-1 },
	/*::[*/0x00FF/*::]*/: { /* n:"BrtBeginPName", */ T:1 },
	/*::[*/0x0100/*::]*/: { /* n:"BrtEndPName", */ T:-1 },
	/*::[*/0x0101/*::]*/: { /* n:"BrtBeginPNPairs", */ T:1 },
	/*::[*/0x0102/*::]*/: { /* n:"BrtEndPNPairs", */ T:-1 },
	/*::[*/0x0103/*::]*/: { /* n:"BrtBeginPNPair", */ T:1 },
	/*::[*/0x0104/*::]*/: { /* n:"BrtEndPNPair", */ T:-1 },
	/*::[*/0x0105/*::]*/: { /* n:"BrtBeginECWebProps", */ T:1 },
	/*::[*/0x0106/*::]*/: { /* n:"BrtEndECWebProps", */ T:-1 },
	/*::[*/0x0107/*::]*/: { /* n:"BrtBeginEcWpTables", */ T:1 },
	/*::[*/0x0108/*::]*/: { /* n:"BrtEndECWPTables", */ T:-1 },
	/*::[*/0x0109/*::]*/: { /* n:"BrtBeginECParams", */ T:1 },
	/*::[*/0x010A/*::]*/: { /* n:"BrtEndECParams", */ T:-1 },
	/*::[*/0x010B/*::]*/: { /* n:"BrtBeginECParam", */ T:1 },
	/*::[*/0x010C/*::]*/: { /* n:"BrtEndECParam", */ T:-1 },
	/*::[*/0x010D/*::]*/: { /* n:"BrtBeginPCDKPIs", */ T:1 },
	/*::[*/0x010E/*::]*/: { /* n:"BrtEndPCDKPIs", */ T:-1 },
	/*::[*/0x010F/*::]*/: { /* n:"BrtBeginPCDKPI", */ T:1 },
	/*::[*/0x0110/*::]*/: { /* n:"BrtEndPCDKPI", */ T:-1 },
	/*::[*/0x0111/*::]*/: { /* n:"BrtBeginDims", */ T:1 },
	/*::[*/0x0112/*::]*/: { /* n:"BrtEndDims", */ T:-1 },
	/*::[*/0x0113/*::]*/: { /* n:"BrtBeginDim", */ T:1 },
	/*::[*/0x0114/*::]*/: { /* n:"BrtEndDim", */ T:-1 },
	/*::[*/0x0115/*::]*/: { /* n:"BrtIndexPartEnd" */ },
	/*::[*/0x0116/*::]*/: { /* n:"BrtBeginStyleSheet", */ T:1 },
	/*::[*/0x0117/*::]*/: { /* n:"BrtEndStyleSheet", */ T:-1 },
	/*::[*/0x0118/*::]*/: { /* n:"BrtBeginSXView", */ T:1 },
	/*::[*/0x0119/*::]*/: { /* n:"BrtEndSXVI", */ T:-1 },
	/*::[*/0x011A/*::]*/: { /* n:"BrtBeginSXVI", */ T:1 },
	/*::[*/0x011B/*::]*/: { /* n:"BrtBeginSXVIs", */ T:1 },
	/*::[*/0x011C/*::]*/: { /* n:"BrtEndSXVIs", */ T:-1 },
	/*::[*/0x011D/*::]*/: { /* n:"BrtBeginSXVD", */ T:1 },
	/*::[*/0x011E/*::]*/: { /* n:"BrtEndSXVD", */ T:-1 },
	/*::[*/0x011F/*::]*/: { /* n:"BrtBeginSXVDs", */ T:1 },
	/*::[*/0x0120/*::]*/: { /* n:"BrtEndSXVDs", */ T:-1 },
	/*::[*/0x0121/*::]*/: { /* n:"BrtBeginSXPI", */ T:1 },
	/*::[*/0x0122/*::]*/: { /* n:"BrtEndSXPI", */ T:-1 },
	/*::[*/0x0123/*::]*/: { /* n:"BrtBeginSXPIs", */ T:1 },
	/*::[*/0x0124/*::]*/: { /* n:"BrtEndSXPIs", */ T:-1 },
	/*::[*/0x0125/*::]*/: { /* n:"BrtBeginSXDI", */ T:1 },
	/*::[*/0x0126/*::]*/: { /* n:"BrtEndSXDI", */ T:-1 },
	/*::[*/0x0127/*::]*/: { /* n:"BrtBeginSXDIs", */ T:1 },
	/*::[*/0x0128/*::]*/: { /* n:"BrtEndSXDIs", */ T:-1 },
	/*::[*/0x0129/*::]*/: { /* n:"BrtBeginSXLI", */ T:1 },
	/*::[*/0x012A/*::]*/: { /* n:"BrtEndSXLI", */ T:-1 },
	/*::[*/0x012B/*::]*/: { /* n:"BrtBeginSXLIRws", */ T:1 },
	/*::[*/0x012C/*::]*/: { /* n:"BrtEndSXLIRws", */ T:-1 },
	/*::[*/0x012D/*::]*/: { /* n:"BrtBeginSXLICols", */ T:1 },
	/*::[*/0x012E/*::]*/: { /* n:"BrtEndSXLICols", */ T:-1 },
	/*::[*/0x012F/*::]*/: { /* n:"BrtBeginSXFormat", */ T:1 },
	/*::[*/0x0130/*::]*/: { /* n:"BrtEndSXFormat", */ T:-1 },
	/*::[*/0x0131/*::]*/: { /* n:"BrtBeginSXFormats", */ T:1 },
	/*::[*/0x0132/*::]*/: { /* n:"BrtEndSxFormats", */ T:-1 },
	/*::[*/0x0133/*::]*/: { /* n:"BrtBeginSxSelect", */ T:1 },
	/*::[*/0x0134/*::]*/: { /* n:"BrtEndSxSelect", */ T:-1 },
	/*::[*/0x0135/*::]*/: { /* n:"BrtBeginISXVDRws", */ T:1 },
	/*::[*/0x0136/*::]*/: { /* n:"BrtEndISXVDRws", */ T:-1 },
	/*::[*/0x0137/*::]*/: { /* n:"BrtBeginISXVDCols", */ T:1 },
	/*::[*/0x0138/*::]*/: { /* n:"BrtEndISXVDCols", */ T:-1 },
	/*::[*/0x0139/*::]*/: { /* n:"BrtEndSXLocation", */ T:-1 },
	/*::[*/0x013A/*::]*/: { /* n:"BrtBeginSXLocation", */ T:1 },
	/*::[*/0x013B/*::]*/: { /* n:"BrtEndSXView", */ T:-1 },
	/*::[*/0x013C/*::]*/: { /* n:"BrtBeginSXTHs", */ T:1 },
	/*::[*/0x013D/*::]*/: { /* n:"BrtEndSXTHs", */ T:-1 },
	/*::[*/0x013E/*::]*/: { /* n:"BrtBeginSXTH", */ T:1 },
	/*::[*/0x013F/*::]*/: { /* n:"BrtEndSXTH", */ T:-1 },
	/*::[*/0x0140/*::]*/: { /* n:"BrtBeginISXTHRws", */ T:1 },
	/*::[*/0x0141/*::]*/: { /* n:"BrtEndISXTHRws", */ T:-1 },
	/*::[*/0x0142/*::]*/: { /* n:"BrtBeginISXTHCols", */ T:1 },
	/*::[*/0x0143/*::]*/: { /* n:"BrtEndISXTHCols", */ T:-1 },
	/*::[*/0x0144/*::]*/: { /* n:"BrtBeginSXTDMPS", */ T:1 },
	/*::[*/0x0145/*::]*/: { /* n:"BrtEndSXTDMPs", */ T:-1 },
	/*::[*/0x0146/*::]*/: { /* n:"BrtBeginSXTDMP", */ T:1 },
	/*::[*/0x0147/*::]*/: { /* n:"BrtEndSXTDMP", */ T:-1 },
	/*::[*/0x0148/*::]*/: { /* n:"BrtBeginSXTHItems", */ T:1 },
	/*::[*/0x0149/*::]*/: { /* n:"BrtEndSXTHItems", */ T:-1 },
	/*::[*/0x014A/*::]*/: { /* n:"BrtBeginSXTHItem", */ T:1 },
	/*::[*/0x014B/*::]*/: { /* n:"BrtEndSXTHItem", */ T:-1 },
	/*::[*/0x014C/*::]*/: { /* n:"BrtBeginMetadata", */ T:1 },
	/*::[*/0x014D/*::]*/: { /* n:"BrtEndMetadata", */ T:-1 },
	/*::[*/0x014E/*::]*/: { /* n:"BrtBeginEsmdtinfo", */ T:1 },
	/*::[*/0x014F/*::]*/: { /* n:"BrtMdtinfo", */ f:parse_BrtMdtinfo },
	/*::[*/0x0150/*::]*/: { /* n:"BrtEndEsmdtinfo", */ T:-1 },
	/*::[*/0x0151/*::]*/: { /* n:"BrtBeginEsmdb", */ f:parse_BrtBeginEsmdb, T:1 },
	/*::[*/0x0152/*::]*/: { /* n:"BrtEndEsmdb", */ T:-1 },
	/*::[*/0x0153/*::]*/: { /* n:"BrtBeginEsfmd", */ T:1 },
	/*::[*/0x0154/*::]*/: { /* n:"BrtEndEsfmd", */ T:-1 },
	/*::[*/0x0155/*::]*/: { /* n:"BrtBeginSingleCells", */ T:1 },
	/*::[*/0x0156/*::]*/: { /* n:"BrtEndSingleCells", */ T:-1 },
	/*::[*/0x0157/*::]*/: { /* n:"BrtBeginList", */ T:1 },
	/*::[*/0x0158/*::]*/: { /* n:"BrtEndList", */ T:-1 },
	/*::[*/0x0159/*::]*/: { /* n:"BrtBeginListCols", */ T:1 },
	/*::[*/0x015A/*::]*/: { /* n:"BrtEndListCols", */ T:-1 },
	/*::[*/0x015B/*::]*/: { /* n:"BrtBeginListCol", */ T:1 },
	/*::[*/0x015C/*::]*/: { /* n:"BrtEndListCol", */ T:-1 },
	/*::[*/0x015D/*::]*/: { /* n:"BrtBeginListXmlCPr", */ T:1 },
	/*::[*/0x015E/*::]*/: { /* n:"BrtEndListXmlCPr", */ T:-1 },
	/*::[*/0x015F/*::]*/: { /* n:"BrtListCCFmla" */ },
	/*::[*/0x0160/*::]*/: { /* n:"BrtListTrFmla" */ },
	/*::[*/0x0161/*::]*/: { /* n:"BrtBeginExternals", */ T:1 },
	/*::[*/0x0162/*::]*/: { /* n:"BrtEndExternals", */ T:-1 },
	/*::[*/0x0163/*::]*/: { /* n:"BrtSupBookSrc", */ f:parse_RelID},
	/*::[*/0x0165/*::]*/: { /* n:"BrtSupSelf" */ },
	/*::[*/0x0166/*::]*/: { /* n:"BrtSupSame" */ },
	/*::[*/0x0167/*::]*/: { /* n:"BrtSupTabs" */ },
	/*::[*/0x0168/*::]*/: { /* n:"BrtBeginSupBook", */ T:1 },
	/*::[*/0x0169/*::]*/: { /* n:"BrtPlaceholderName" */ },
	/*::[*/0x016A/*::]*/: { /* n:"BrtExternSheet", */ f:parse_ExternSheet },
	/*::[*/0x016B/*::]*/: { /* n:"BrtExternTableStart" */ },
	/*::[*/0x016C/*::]*/: { /* n:"BrtExternTableEnd" */ },
	/*::[*/0x016E/*::]*/: { /* n:"BrtExternRowHdr" */ },
	/*::[*/0x016F/*::]*/: { /* n:"BrtExternCellBlank" */ },
	/*::[*/0x0170/*::]*/: { /* n:"BrtExternCellReal" */ },
	/*::[*/0x0171/*::]*/: { /* n:"BrtExternCellBool" */ },
	/*::[*/0x0172/*::]*/: { /* n:"BrtExternCellError" */ },
	/*::[*/0x0173/*::]*/: { /* n:"BrtExternCellString" */ },
	/*::[*/0x0174/*::]*/: { /* n:"BrtBeginEsmdx", */ T:1 },
	/*::[*/0x0175/*::]*/: { /* n:"BrtEndEsmdx", */ T:-1 },
	/*::[*/0x0176/*::]*/: { /* n:"BrtBeginMdxSet", */ T:1 },
	/*::[*/0x0177/*::]*/: { /* n:"BrtEndMdxSet", */ T:-1 },
	/*::[*/0x0178/*::]*/: { /* n:"BrtBeginMdxMbrProp", */ T:1 },
	/*::[*/0x0179/*::]*/: { /* n:"BrtEndMdxMbrProp", */ T:-1 },
	/*::[*/0x017A/*::]*/: { /* n:"BrtBeginMdxKPI", */ T:1 },
	/*::[*/0x017B/*::]*/: { /* n:"BrtEndMdxKPI", */ T:-1 },
	/*::[*/0x017C/*::]*/: { /* n:"BrtBeginEsstr", */ T:1 },
	/*::[*/0x017D/*::]*/: { /* n:"BrtEndEsstr", */ T:-1 },
	/*::[*/0x017E/*::]*/: { /* n:"BrtBeginPRFItem", */ T:1 },
	/*::[*/0x017F/*::]*/: { /* n:"BrtEndPRFItem", */ T:-1 },
	/*::[*/0x0180/*::]*/: { /* n:"BrtBeginPivotCacheIDs", */ T:1 },
	/*::[*/0x0181/*::]*/: { /* n:"BrtEndPivotCacheIDs", */ T:-1 },
	/*::[*/0x0182/*::]*/: { /* n:"BrtBeginPivotCacheID", */ T:1 },
	/*::[*/0x0183/*::]*/: { /* n:"BrtEndPivotCacheID", */ T:-1 },
	/*::[*/0x0184/*::]*/: { /* n:"BrtBeginISXVIs", */ T:1 },
	/*::[*/0x0185/*::]*/: { /* n:"BrtEndISXVIs", */ T:-1 },
	/*::[*/0x0186/*::]*/: { /* n:"BrtBeginColInfos", */ T:1 },
	/*::[*/0x0187/*::]*/: { /* n:"BrtEndColInfos", */ T:-1 },
	/*::[*/0x0188/*::]*/: { /* n:"BrtBeginRwBrk", */ T:1 },
	/*::[*/0x0189/*::]*/: { /* n:"BrtEndRwBrk", */ T:-1 },
	/*::[*/0x018A/*::]*/: { /* n:"BrtBeginColBrk", */ T:1 },
	/*::[*/0x018B/*::]*/: { /* n:"BrtEndColBrk", */ T:-1 },
	/*::[*/0x018C/*::]*/: { /* n:"BrtBrk" */ },
	/*::[*/0x018D/*::]*/: { /* n:"BrtUserBookView" */ },
	/*::[*/0x018E/*::]*/: { /* n:"BrtInfo" */ },
	/*::[*/0x018F/*::]*/: { /* n:"BrtCUsr" */ },
	/*::[*/0x0190/*::]*/: { /* n:"BrtUsr" */ },
	/*::[*/0x0191/*::]*/: { /* n:"BrtBeginUsers", */ T:1 },
	/*::[*/0x0193/*::]*/: { /* n:"BrtEOF" */ },
	/*::[*/0x0194/*::]*/: { /* n:"BrtUCR" */ },
	/*::[*/0x0195/*::]*/: { /* n:"BrtRRInsDel" */ },
	/*::[*/0x0196/*::]*/: { /* n:"BrtRREndInsDel" */ },
	/*::[*/0x0197/*::]*/: { /* n:"BrtRRMove" */ },
	/*::[*/0x0198/*::]*/: { /* n:"BrtRREndMove" */ },
	/*::[*/0x0199/*::]*/: { /* n:"BrtRRChgCell" */ },
	/*::[*/0x019A/*::]*/: { /* n:"BrtRREndChgCell" */ },
	/*::[*/0x019B/*::]*/: { /* n:"BrtRRHeader" */ },
	/*::[*/0x019C/*::]*/: { /* n:"BrtRRUserView" */ },
	/*::[*/0x019D/*::]*/: { /* n:"BrtRRRenSheet" */ },
	/*::[*/0x019E/*::]*/: { /* n:"BrtRRInsertSh" */ },
	/*::[*/0x019F/*::]*/: { /* n:"BrtRRDefName" */ },
	/*::[*/0x01A0/*::]*/: { /* n:"BrtRRNote" */ },
	/*::[*/0x01A1/*::]*/: { /* n:"BrtRRConflict" */ },
	/*::[*/0x01A2/*::]*/: { /* n:"BrtRRTQSIF" */ },
	/*::[*/0x01A3/*::]*/: { /* n:"BrtRRFormat" */ },
	/*::[*/0x01A4/*::]*/: { /* n:"BrtRREndFormat" */ },
	/*::[*/0x01A5/*::]*/: { /* n:"BrtRRAutoFmt" */ },
	/*::[*/0x01A6/*::]*/: { /* n:"BrtBeginUserShViews", */ T:1 },
	/*::[*/0x01A7/*::]*/: { /* n:"BrtBeginUserShView", */ T:1 },
	/*::[*/0x01A8/*::]*/: { /* n:"BrtEndUserShView", */ T:-1 },
	/*::[*/0x01A9/*::]*/: { /* n:"BrtEndUserShViews", */ T:-1 },
	/*::[*/0x01AA/*::]*/: { /* n:"BrtArrFmla", */ f:parse_BrtArrFmla },
	/*::[*/0x01AB/*::]*/: { /* n:"BrtShrFmla", */ f:parse_BrtShrFmla },
	/*::[*/0x01AC/*::]*/: { /* n:"BrtTable" */ },
	/*::[*/0x01AD/*::]*/: { /* n:"BrtBeginExtConnections", */ T:1 },
	/*::[*/0x01AE/*::]*/: { /* n:"BrtEndExtConnections", */ T:-1 },
	/*::[*/0x01AF/*::]*/: { /* n:"BrtBeginPCDCalcMems", */ T:1 },
	/*::[*/0x01B0/*::]*/: { /* n:"BrtEndPCDCalcMems", */ T:-1 },
	/*::[*/0x01B1/*::]*/: { /* n:"BrtBeginPCDCalcMem", */ T:1 },
	/*::[*/0x01B2/*::]*/: { /* n:"BrtEndPCDCalcMem", */ T:-1 },
	/*::[*/0x01B3/*::]*/: { /* n:"BrtBeginPCDHGLevels", */ T:1 },
	/*::[*/0x01B4/*::]*/: { /* n:"BrtEndPCDHGLevels", */ T:-1 },
	/*::[*/0x01B5/*::]*/: { /* n:"BrtBeginPCDHGLevel", */ T:1 },
	/*::[*/0x01B6/*::]*/: { /* n:"BrtEndPCDHGLevel", */ T:-1 },
	/*::[*/0x01B7/*::]*/: { /* n:"BrtBeginPCDHGLGroups", */ T:1 },
	/*::[*/0x01B8/*::]*/: { /* n:"BrtEndPCDHGLGroups", */ T:-1 },
	/*::[*/0x01B9/*::]*/: { /* n:"BrtBeginPCDHGLGroup", */ T:1 },
	/*::[*/0x01BA/*::]*/: { /* n:"BrtEndPCDHGLGroup", */ T:-1 },
	/*::[*/0x01BB/*::]*/: { /* n:"BrtBeginPCDHGLGMembers", */ T:1 },
	/*::[*/0x01BC/*::]*/: { /* n:"BrtEndPCDHGLGMembers", */ T:-1 },
	/*::[*/0x01BD/*::]*/: { /* n:"BrtBeginPCDHGLGMember", */ T:1 },
	/*::[*/0x01BE/*::]*/: { /* n:"BrtEndPCDHGLGMember", */ T:-1 },
	/*::[*/0x01BF/*::]*/: { /* n:"BrtBeginQSI", */ T:1 },
	/*::[*/0x01C0/*::]*/: { /* n:"BrtEndQSI", */ T:-1 },
	/*::[*/0x01C1/*::]*/: { /* n:"BrtBeginQSIR", */ T:1 },
	/*::[*/0x01C2/*::]*/: { /* n:"BrtEndQSIR", */ T:-1 },
	/*::[*/0x01C3/*::]*/: { /* n:"BrtBeginDeletedNames", */ T:1 },
	/*::[*/0x01C4/*::]*/: { /* n:"BrtEndDeletedNames", */ T:-1 },
	/*::[*/0x01C5/*::]*/: { /* n:"BrtBeginDeletedName", */ T:1 },
	/*::[*/0x01C6/*::]*/: { /* n:"BrtEndDeletedName", */ T:-1 },
	/*::[*/0x01C7/*::]*/: { /* n:"BrtBeginQSIFs", */ T:1 },
	/*::[*/0x01C8/*::]*/: { /* n:"BrtEndQSIFs", */ T:-1 },
	/*::[*/0x01C9/*::]*/: { /* n:"BrtBeginQSIF", */ T:1 },
	/*::[*/0x01CA/*::]*/: { /* n:"BrtEndQSIF", */ T:-1 },
	/*::[*/0x01CB/*::]*/: { /* n:"BrtBeginAutoSortScope", */ T:1 },
	/*::[*/0x01CC/*::]*/: { /* n:"BrtEndAutoSortScope", */ T:-1 },
	/*::[*/0x01CD/*::]*/: { /* n:"BrtBeginConditionalFormatting", */ T:1 },
	/*::[*/0x01CE/*::]*/: { /* n:"BrtEndConditionalFormatting", */ T:-1 },
	/*::[*/0x01CF/*::]*/: { /* n:"BrtBeginCFRule", */ T:1 },
	/*::[*/0x01D0/*::]*/: { /* n:"BrtEndCFRule", */ T:-1 },
	/*::[*/0x01D1/*::]*/: { /* n:"BrtBeginIconSet", */ T:1 },
	/*::[*/0x01D2/*::]*/: { /* n:"BrtEndIconSet", */ T:-1 },
	/*::[*/0x01D3/*::]*/: { /* n:"BrtBeginDatabar", */ T:1 },
	/*::[*/0x01D4/*::]*/: { /* n:"BrtEndDatabar", */ T:-1 },
	/*::[*/0x01D5/*::]*/: { /* n:"BrtBeginColorScale", */ T:1 },
	/*::[*/0x01D6/*::]*/: { /* n:"BrtEndColorScale", */ T:-1 },
	/*::[*/0x01D7/*::]*/: { /* n:"BrtCFVO" */ },
	/*::[*/0x01D8/*::]*/: { /* n:"BrtExternValueMeta" */ },
	/*::[*/0x01D9/*::]*/: { /* n:"BrtBeginColorPalette", */ T:1 },
	/*::[*/0x01DA/*::]*/: { /* n:"BrtEndColorPalette", */ T:-1 },
	/*::[*/0x01DB/*::]*/: { /* n:"BrtIndexedColor" */ },
	/*::[*/0x01DC/*::]*/: { /* n:"BrtMargins", */ f:parse_BrtMargins },
	/*::[*/0x01DD/*::]*/: { /* n:"BrtPrintOptions" */ },
	/*::[*/0x01DE/*::]*/: { /* n:"BrtPageSetup" */ },
	/*::[*/0x01DF/*::]*/: { /* n:"BrtBeginHeaderFooter", */ T:1 },
	/*::[*/0x01E0/*::]*/: { /* n:"BrtEndHeaderFooter", */ T:-1 },
	/*::[*/0x01E1/*::]*/: { /* n:"BrtBeginSXCrtFormat", */ T:1 },
	/*::[*/0x01E2/*::]*/: { /* n:"BrtEndSXCrtFormat", */ T:-1 },
	/*::[*/0x01E3/*::]*/: { /* n:"BrtBeginSXCrtFormats", */ T:1 },
	/*::[*/0x01E4/*::]*/: { /* n:"BrtEndSXCrtFormats", */ T:-1 },
	/*::[*/0x01E5/*::]*/: { /* n:"BrtWsFmtInfo", */ f:parse_BrtWsFmtInfo },
	/*::[*/0x01E6/*::]*/: { /* n:"BrtBeginMgs", */ T:1 },
	/*::[*/0x01E7/*::]*/: { /* n:"BrtEndMGs", */ T:-1 },
	/*::[*/0x01E8/*::]*/: { /* n:"BrtBeginMGMaps", */ T:1 },
	/*::[*/0x01E9/*::]*/: { /* n:"BrtEndMGMaps", */ T:-1 },
	/*::[*/0x01EA/*::]*/: { /* n:"BrtBeginMG", */ T:1 },
	/*::[*/0x01EB/*::]*/: { /* n:"BrtEndMG", */ T:-1 },
	/*::[*/0x01EC/*::]*/: { /* n:"BrtBeginMap", */ T:1 },
	/*::[*/0x01ED/*::]*/: { /* n:"BrtEndMap", */ T:-1 },
	/*::[*/0x01EE/*::]*/: { /* n:"BrtHLink", */ f:parse_BrtHLink },
	/*::[*/0x01EF/*::]*/: { /* n:"BrtBeginDCon", */ T:1 },
	/*::[*/0x01F0/*::]*/: { /* n:"BrtEndDCon", */ T:-1 },
	/*::[*/0x01F1/*::]*/: { /* n:"BrtBeginDRefs", */ T:1 },
	/*::[*/0x01F2/*::]*/: { /* n:"BrtEndDRefs", */ T:-1 },
	/*::[*/0x01F3/*::]*/: { /* n:"BrtDRef" */ },
	/*::[*/0x01F4/*::]*/: { /* n:"BrtBeginScenMan", */ T:1 },
	/*::[*/0x01F5/*::]*/: { /* n:"BrtEndScenMan", */ T:-1 },
	/*::[*/0x01F6/*::]*/: { /* n:"BrtBeginSct", */ T:1 },
	/*::[*/0x01F7/*::]*/: { /* n:"BrtEndSct", */ T:-1 },
	/*::[*/0x01F8/*::]*/: { /* n:"BrtSlc" */ },
	/*::[*/0x01F9/*::]*/: { /* n:"BrtBeginDXFs", */ T:1 },
	/*::[*/0x01FA/*::]*/: { /* n:"BrtEndDXFs", */ T:-1 },
	/*::[*/0x01FB/*::]*/: { /* n:"BrtDXF" */ },
	/*::[*/0x01FC/*::]*/: { /* n:"BrtBeginTableStyles", */ T:1 },
	/*::[*/0x01FD/*::]*/: { /* n:"BrtEndTableStyles", */ T:-1 },
	/*::[*/0x01FE/*::]*/: { /* n:"BrtBeginTableStyle", */ T:1 },
	/*::[*/0x01FF/*::]*/: { /* n:"BrtEndTableStyle", */ T:-1 },
	/*::[*/0x0200/*::]*/: { /* n:"BrtTableStyleElement" */ },
	/*::[*/0x0201/*::]*/: { /* n:"BrtTableStyleClient" */ },
	/*::[*/0x0202/*::]*/: { /* n:"BrtBeginVolDeps", */ T:1 },
	/*::[*/0x0203/*::]*/: { /* n:"BrtEndVolDeps", */ T:-1 },
	/*::[*/0x0204/*::]*/: { /* n:"BrtBeginVolType", */ T:1 },
	/*::[*/0x0205/*::]*/: { /* n:"BrtEndVolType", */ T:-1 },
	/*::[*/0x0206/*::]*/: { /* n:"BrtBeginVolMain", */ T:1 },
	/*::[*/0x0207/*::]*/: { /* n:"BrtEndVolMain", */ T:-1 },
	/*::[*/0x0208/*::]*/: { /* n:"BrtBeginVolTopic", */ T:1 },
	/*::[*/0x0209/*::]*/: { /* n:"BrtEndVolTopic", */ T:-1 },
	/*::[*/0x020A/*::]*/: { /* n:"BrtVolSubtopic" */ },
	/*::[*/0x020B/*::]*/: { /* n:"BrtVolRef" */ },
	/*::[*/0x020C/*::]*/: { /* n:"BrtVolNum" */ },
	/*::[*/0x020D/*::]*/: { /* n:"BrtVolErr" */ },
	/*::[*/0x020E/*::]*/: { /* n:"BrtVolStr" */ },
	/*::[*/0x020F/*::]*/: { /* n:"BrtVolBool" */ },
	/*::[*/0x0210/*::]*/: { /* n:"BrtBeginCalcChain$", */ T:1 },
	/*::[*/0x0211/*::]*/: { /* n:"BrtEndCalcChain$", */ T:-1 },
	/*::[*/0x0212/*::]*/: { /* n:"BrtBeginSortState", */ T:1 },
	/*::[*/0x0213/*::]*/: { /* n:"BrtEndSortState", */ T:-1 },
	/*::[*/0x0214/*::]*/: { /* n:"BrtBeginSortCond", */ T:1 },
	/*::[*/0x0215/*::]*/: { /* n:"BrtEndSortCond", */ T:-1 },
	/*::[*/0x0216/*::]*/: { /* n:"BrtBookProtection" */ },
	/*::[*/0x0217/*::]*/: { /* n:"BrtSheetProtection" */ },
	/*::[*/0x0218/*::]*/: { /* n:"BrtRangeProtection" */ },
	/*::[*/0x0219/*::]*/: { /* n:"BrtPhoneticInfo" */ },
	/*::[*/0x021A/*::]*/: { /* n:"BrtBeginECTxtWiz", */ T:1 },
	/*::[*/0x021B/*::]*/: { /* n:"BrtEndECTxtWiz", */ T:-1 },
	/*::[*/0x021C/*::]*/: { /* n:"BrtBeginECTWFldInfoLst", */ T:1 },
	/*::[*/0x021D/*::]*/: { /* n:"BrtEndECTWFldInfoLst", */ T:-1 },
	/*::[*/0x021E/*::]*/: { /* n:"BrtBeginECTwFldInfo", */ T:1 },
	/*::[*/0x0224/*::]*/: { /* n:"BrtFileSharing" */ },
	/*::[*/0x0225/*::]*/: { /* n:"BrtOleSize" */ },
	/*::[*/0x0226/*::]*/: { /* n:"BrtDrawing", */ f:parse_RelID },
	/*::[*/0x0227/*::]*/: { /* n:"BrtLegacyDrawing" */ },
	/*::[*/0x0228/*::]*/: { /* n:"BrtLegacyDrawingHF" */ },
	/*::[*/0x0229/*::]*/: { /* n:"BrtWebOpt" */ },
	/*::[*/0x022A/*::]*/: { /* n:"BrtBeginWebPubItems", */ T:1 },
	/*::[*/0x022B/*::]*/: { /* n:"BrtEndWebPubItems", */ T:-1 },
	/*::[*/0x022C/*::]*/: { /* n:"BrtBeginWebPubItem", */ T:1 },
	/*::[*/0x022D/*::]*/: { /* n:"BrtEndWebPubItem", */ T:-1 },
	/*::[*/0x022E/*::]*/: { /* n:"BrtBeginSXCondFmt", */ T:1 },
	/*::[*/0x022F/*::]*/: { /* n:"BrtEndSXCondFmt", */ T:-1 },
	/*::[*/0x0230/*::]*/: { /* n:"BrtBeginSXCondFmts", */ T:1 },
	/*::[*/0x0231/*::]*/: { /* n:"BrtEndSXCondFmts", */ T:-1 },
	/*::[*/0x0232/*::]*/: { /* n:"BrtBkHim" */ },
	/*::[*/0x0234/*::]*/: { /* n:"BrtColor" */ },
	/*::[*/0x0235/*::]*/: { /* n:"BrtBeginIndexedColors", */ T:1 },
	/*::[*/0x0236/*::]*/: { /* n:"BrtEndIndexedColors", */ T:-1 },
	/*::[*/0x0239/*::]*/: { /* n:"BrtBeginMRUColors", */ T:1 },
	/*::[*/0x023A/*::]*/: { /* n:"BrtEndMRUColors", */ T:-1 },
	/*::[*/0x023C/*::]*/: { /* n:"BrtMRUColor" */ },
	/*::[*/0x023D/*::]*/: { /* n:"BrtBeginDVals", */ T:1 },
	/*::[*/0x023E/*::]*/: { /* n:"BrtEndDVals", */ T:-1 },
	/*::[*/0x0241/*::]*/: { /* n:"BrtSupNameStart" */ },
	/*::[*/0x0242/*::]*/: { /* n:"BrtSupNameValueStart" */ },
	/*::[*/0x0243/*::]*/: { /* n:"BrtSupNameValueEnd" */ },
	/*::[*/0x0244/*::]*/: { /* n:"BrtSupNameNum" */ },
	/*::[*/0x0245/*::]*/: { /* n:"BrtSupNameErr" */ },
	/*::[*/0x0246/*::]*/: { /* n:"BrtSupNameSt" */ },
	/*::[*/0x0247/*::]*/: { /* n:"BrtSupNameNil" */ },
	/*::[*/0x0248/*::]*/: { /* n:"BrtSupNameBool" */ },
	/*::[*/0x0249/*::]*/: { /* n:"BrtSupNameFmla" */ },
	/*::[*/0x024A/*::]*/: { /* n:"BrtSupNameBits" */ },
	/*::[*/0x024B/*::]*/: { /* n:"BrtSupNameEnd" */ },
	/*::[*/0x024C/*::]*/: { /* n:"BrtEndSupBook", */ T:-1 },
	/*::[*/0x024D/*::]*/: { /* n:"BrtCellSmartTagProperty" */ },
	/*::[*/0x024E/*::]*/: { /* n:"BrtBeginCellSmartTag", */ T:1 },
	/*::[*/0x024F/*::]*/: { /* n:"BrtEndCellSmartTag", */ T:-1 },
	/*::[*/0x0250/*::]*/: { /* n:"BrtBeginCellSmartTags", */ T:1 },
	/*::[*/0x0251/*::]*/: { /* n:"BrtEndCellSmartTags", */ T:-1 },
	/*::[*/0x0252/*::]*/: { /* n:"BrtBeginSmartTags", */ T:1 },
	/*::[*/0x0253/*::]*/: { /* n:"BrtEndSmartTags", */ T:-1 },
	/*::[*/0x0254/*::]*/: { /* n:"BrtSmartTagType" */ },
	/*::[*/0x0255/*::]*/: { /* n:"BrtBeginSmartTagTypes", */ T:1 },
	/*::[*/0x0256/*::]*/: { /* n:"BrtEndSmartTagTypes", */ T:-1 },
	/*::[*/0x0257/*::]*/: { /* n:"BrtBeginSXFilters", */ T:1 },
	/*::[*/0x0258/*::]*/: { /* n:"BrtEndSXFilters", */ T:-1 },
	/*::[*/0x0259/*::]*/: { /* n:"BrtBeginSXFILTER", */ T:1 },
	/*::[*/0x025A/*::]*/: { /* n:"BrtEndSXFilter", */ T:-1 },
	/*::[*/0x025B/*::]*/: { /* n:"BrtBeginFills", */ T:1 },
	/*::[*/0x025C/*::]*/: { /* n:"BrtEndFills", */ T:-1 },
	/*::[*/0x025D/*::]*/: { /* n:"BrtBeginCellWatches", */ T:1 },
	/*::[*/0x025E/*::]*/: { /* n:"BrtEndCellWatches", */ T:-1 },
	/*::[*/0x025F/*::]*/: { /* n:"BrtCellWatch" */ },
	/*::[*/0x0260/*::]*/: { /* n:"BrtBeginCRErrs", */ T:1 },
	/*::[*/0x0261/*::]*/: { /* n:"BrtEndCRErrs", */ T:-1 },
	/*::[*/0x0262/*::]*/: { /* n:"BrtCrashRecErr" */ },
	/*::[*/0x0263/*::]*/: { /* n:"BrtBeginFonts", */ T:1 },
	/*::[*/0x0264/*::]*/: { /* n:"BrtEndFonts", */ T:-1 },
	/*::[*/0x0265/*::]*/: { /* n:"BrtBeginBorders", */ T:1 },
	/*::[*/0x0266/*::]*/: { /* n:"BrtEndBorders", */ T:-1 },
	/*::[*/0x0267/*::]*/: { /* n:"BrtBeginFmts", */ T:1 },
	/*::[*/0x0268/*::]*/: { /* n:"BrtEndFmts", */ T:-1 },
	/*::[*/0x0269/*::]*/: { /* n:"BrtBeginCellXFs", */ T:1 },
	/*::[*/0x026A/*::]*/: { /* n:"BrtEndCellXFs", */ T:-1 },
	/*::[*/0x026B/*::]*/: { /* n:"BrtBeginStyles", */ T:1 },
	/*::[*/0x026C/*::]*/: { /* n:"BrtEndStyles", */ T:-1 },
	/*::[*/0x0271/*::]*/: { /* n:"BrtBigName" */ },
	/*::[*/0x0272/*::]*/: { /* n:"BrtBeginCellStyleXFs", */ T:1 },
	/*::[*/0x0273/*::]*/: { /* n:"BrtEndCellStyleXFs", */ T:-1 },
	/*::[*/0x0274/*::]*/: { /* n:"BrtBeginComments", */ T:1 },
	/*::[*/0x0275/*::]*/: { /* n:"BrtEndComments", */ T:-1 },
	/*::[*/0x0276/*::]*/: { /* n:"BrtBeginCommentAuthors", */ T:1 },
	/*::[*/0x0277/*::]*/: { /* n:"BrtEndCommentAuthors", */ T:-1 },
	/*::[*/0x0278/*::]*/: { /* n:"BrtCommentAuthor", */ f:parse_BrtCommentAuthor },
	/*::[*/0x0279/*::]*/: { /* n:"BrtBeginCommentList", */ T:1 },
	/*::[*/0x027A/*::]*/: { /* n:"BrtEndCommentList", */ T:-1 },
	/*::[*/0x027B/*::]*/: { /* n:"BrtBeginComment", */ T:1, f:parse_BrtBeginComment},
	/*::[*/0x027C/*::]*/: { /* n:"BrtEndComment", */ T:-1 },
	/*::[*/0x027D/*::]*/: { /* n:"BrtCommentText", */ f:parse_BrtCommentText },
	/*::[*/0x027E/*::]*/: { /* n:"BrtBeginOleObjects", */ T:1 },
	/*::[*/0x027F/*::]*/: { /* n:"BrtOleObject" */ },
	/*::[*/0x0280/*::]*/: { /* n:"BrtEndOleObjects", */ T:-1 },
	/*::[*/0x0281/*::]*/: { /* n:"BrtBeginSxrules", */ T:1 },
	/*::[*/0x0282/*::]*/: { /* n:"BrtEndSxRules", */ T:-1 },
	/*::[*/0x0283/*::]*/: { /* n:"BrtBeginActiveXControls", */ T:1 },
	/*::[*/0x0284/*::]*/: { /* n:"BrtActiveX" */ },
	/*::[*/0x0285/*::]*/: { /* n:"BrtEndActiveXControls", */ T:-1 },
	/*::[*/0x0286/*::]*/: { /* n:"BrtBeginPCDSDTCEMembersSortBy", */ T:1 },
	/*::[*/0x0288/*::]*/: { /* n:"BrtBeginCellIgnoreECs", */ T:1 },
	/*::[*/0x0289/*::]*/: { /* n:"BrtCellIgnoreEC" */ },
	/*::[*/0x028A/*::]*/: { /* n:"BrtEndCellIgnoreECs", */ T:-1 },
	/*::[*/0x028B/*::]*/: { /* n:"BrtCsProp", */ f:parse_BrtCsProp },
	/*::[*/0x028C/*::]*/: { /* n:"BrtCsPageSetup" */ },
	/*::[*/0x028D/*::]*/: { /* n:"BrtBeginUserCsViews", */ T:1 },
	/*::[*/0x028E/*::]*/: { /* n:"BrtEndUserCsViews", */ T:-1 },
	/*::[*/0x028F/*::]*/: { /* n:"BrtBeginUserCsView", */ T:1 },
	/*::[*/0x0290/*::]*/: { /* n:"BrtEndUserCsView", */ T:-1 },
	/*::[*/0x0291/*::]*/: { /* n:"BrtBeginPcdSFCIEntries", */ T:1 },
	/*::[*/0x0292/*::]*/: { /* n:"BrtEndPCDSFCIEntries", */ T:-1 },
	/*::[*/0x0293/*::]*/: { /* n:"BrtPCDSFCIEntry" */ },
	/*::[*/0x0294/*::]*/: { /* n:"BrtBeginListParts", */ T:1 },
	/*::[*/0x0295/*::]*/: { /* n:"BrtListPart" */ },
	/*::[*/0x0296/*::]*/: { /* n:"BrtEndListParts", */ T:-1 },
	/*::[*/0x0297/*::]*/: { /* n:"BrtSheetCalcProp" */ },
	/*::[*/0x0298/*::]*/: { /* n:"BrtBeginFnGroup", */ T:1 },
	/*::[*/0x0299/*::]*/: { /* n:"BrtFnGroup" */ },
	/*::[*/0x029A/*::]*/: { /* n:"BrtEndFnGroup", */ T:-1 },
	/*::[*/0x029B/*::]*/: { /* n:"BrtSupAddin" */ },
	/*::[*/0x029C/*::]*/: { /* n:"BrtSXTDMPOrder" */ },
	/*::[*/0x029D/*::]*/: { /* n:"BrtCsProtection" */ },
	/*::[*/0x029F/*::]*/: { /* n:"BrtBeginWsSortMap", */ T:1 },
	/*::[*/0x02A0/*::]*/: { /* n:"BrtEndWsSortMap", */ T:-1 },
	/*::[*/0x02A1/*::]*/: { /* n:"BrtBeginRRSort", */ T:1 },
	/*::[*/0x02A2/*::]*/: { /* n:"BrtEndRRSort", */ T:-1 },
	/*::[*/0x02A3/*::]*/: { /* n:"BrtRRSortItem" */ },
	/*::[*/0x02A4/*::]*/: { /* n:"BrtFileSharingIso" */ },
	/*::[*/0x02A5/*::]*/: { /* n:"BrtBookProtectionIso" */ },
	/*::[*/0x02A6/*::]*/: { /* n:"BrtSheetProtectionIso" */ },
	/*::[*/0x02A7/*::]*/: { /* n:"BrtCsProtectionIso" */ },
	/*::[*/0x02A8/*::]*/: { /* n:"BrtRangeProtectionIso" */ },
	/*::[*/0x02A9/*::]*/: { /* n:"BrtDValList" */ },
	/*::[*/0x0400/*::]*/: { /* n:"BrtRwDescent" */ },
	/*::[*/0x0401/*::]*/: { /* n:"BrtKnownFonts" */ },
	/*::[*/0x0402/*::]*/: { /* n:"BrtBeginSXTupleSet", */ T:1 },
	/*::[*/0x0403/*::]*/: { /* n:"BrtEndSXTupleSet", */ T:-1 },
	/*::[*/0x0404/*::]*/: { /* n:"BrtBeginSXTupleSetHeader", */ T:1 },
	/*::[*/0x0405/*::]*/: { /* n:"BrtEndSXTupleSetHeader", */ T:-1 },
	/*::[*/0x0406/*::]*/: { /* n:"BrtSXTupleSetHeaderItem" */ },
	/*::[*/0x0407/*::]*/: { /* n:"BrtBeginSXTupleSetData", */ T:1 },
	/*::[*/0x0408/*::]*/: { /* n:"BrtEndSXTupleSetData", */ T:-1 },
	/*::[*/0x0409/*::]*/: { /* n:"BrtBeginSXTupleSetRow", */ T:1 },
	/*::[*/0x040A/*::]*/: { /* n:"BrtEndSXTupleSetRow", */ T:-1 },
	/*::[*/0x040B/*::]*/: { /* n:"BrtSXTupleSetRowItem" */ },
	/*::[*/0x040C/*::]*/: { /* n:"BrtNameExt" */ },
	/*::[*/0x040D/*::]*/: { /* n:"BrtPCDH14" */ },
	/*::[*/0x040E/*::]*/: { /* n:"BrtBeginPCDCalcMem14", */ T:1 },
	/*::[*/0x040F/*::]*/: { /* n:"BrtEndPCDCalcMem14", */ T:-1 },
	/*::[*/0x0410/*::]*/: { /* n:"BrtSXTH14" */ },
	/*::[*/0x0411/*::]*/: { /* n:"BrtBeginSparklineGroup", */ T:1 },
	/*::[*/0x0412/*::]*/: { /* n:"BrtEndSparklineGroup", */ T:-1 },
	/*::[*/0x0413/*::]*/: { /* n:"BrtSparkline" */ },
	/*::[*/0x0414/*::]*/: { /* n:"BrtSXDI14" */ },
	/*::[*/0x0415/*::]*/: { /* n:"BrtWsFmtInfoEx14" */ },
	/*::[*/0x0416/*::]*/: { /* n:"BrtBeginConditionalFormatting14", */ T:1 },
	/*::[*/0x0417/*::]*/: { /* n:"BrtEndConditionalFormatting14", */ T:-1 },
	/*::[*/0x0418/*::]*/: { /* n:"BrtBeginCFRule14", */ T:1 },
	/*::[*/0x0419/*::]*/: { /* n:"BrtEndCFRule14", */ T:-1 },
	/*::[*/0x041A/*::]*/: { /* n:"BrtCFVO14" */ },
	/*::[*/0x041B/*::]*/: { /* n:"BrtBeginDatabar14", */ T:1 },
	/*::[*/0x041C/*::]*/: { /* n:"BrtBeginIconSet14", */ T:1 },
	/*::[*/0x041D/*::]*/: { /* n:"BrtDVal14", */ f: parse_BrtDVal14 },
	/*::[*/0x041E/*::]*/: { /* n:"BrtBeginDVals14", */ T:1 },
	/*::[*/0x041F/*::]*/: { /* n:"BrtColor14" */ },
	/*::[*/0x0420/*::]*/: { /* n:"BrtBeginSparklines", */ T:1 },
	/*::[*/0x0421/*::]*/: { /* n:"BrtEndSparklines", */ T:-1 },
	/*::[*/0x0422/*::]*/: { /* n:"BrtBeginSparklineGroups", */ T:1 },
	/*::[*/0x0423/*::]*/: { /* n:"BrtEndSparklineGroups", */ T:-1 },
	/*::[*/0x0425/*::]*/: { /* n:"BrtSXVD14" */ },
	/*::[*/0x0426/*::]*/: { /* n:"BrtBeginSXView14", */ T:1 },
	/*::[*/0x0427/*::]*/: { /* n:"BrtEndSXView14", */ T:-1 },
	/*::[*/0x0428/*::]*/: { /* n:"BrtBeginSXView16", */ T:1 },
	/*::[*/0x0429/*::]*/: { /* n:"BrtEndSXView16", */ T:-1 },
	/*::[*/0x042A/*::]*/: { /* n:"BrtBeginPCD14", */ T:1 },
	/*::[*/0x042B/*::]*/: { /* n:"BrtEndPCD14", */ T:-1 },
	/*::[*/0x042C/*::]*/: { /* n:"BrtBeginExtConn14", */ T:1 },
	/*::[*/0x042D/*::]*/: { /* n:"BrtEndExtConn14", */ T:-1 },
	/*::[*/0x042E/*::]*/: { /* n:"BrtBeginSlicerCacheIDs", */ T:1 },
	/*::[*/0x042F/*::]*/: { /* n:"BrtEndSlicerCacheIDs", */ T:-1 },
	/*::[*/0x0430/*::]*/: { /* n:"BrtBeginSlicerCacheID", */ T:1 },
	/*::[*/0x0431/*::]*/: { /* n:"BrtEndSlicerCacheID", */ T:-1 },
	/*::[*/0x0433/*::]*/: { /* n:"BrtBeginSlicerCache", */ T:1 },
	/*::[*/0x0434/*::]*/: { /* n:"BrtEndSlicerCache", */ T:-1 },
	/*::[*/0x0435/*::]*/: { /* n:"BrtBeginSlicerCacheDef", */ T:1 },
	/*::[*/0x0436/*::]*/: { /* n:"BrtEndSlicerCacheDef", */ T:-1 },
	/*::[*/0x0437/*::]*/: { /* n:"BrtBeginSlicersEx", */ T:1 },
	/*::[*/0x0438/*::]*/: { /* n:"BrtEndSlicersEx", */ T:-1 },
	/*::[*/0x0439/*::]*/: { /* n:"BrtBeginSlicerEx", */ T:1 },
	/*::[*/0x043A/*::]*/: { /* n:"BrtEndSlicerEx", */ T:-1 },
	/*::[*/0x043B/*::]*/: { /* n:"BrtBeginSlicer", */ T:1 },
	/*::[*/0x043C/*::]*/: { /* n:"BrtEndSlicer", */ T:-1 },
	/*::[*/0x043D/*::]*/: { /* n:"BrtSlicerCachePivotTables" */ },
	/*::[*/0x043E/*::]*/: { /* n:"BrtBeginSlicerCacheOlapImpl", */ T:1 },
	/*::[*/0x043F/*::]*/: { /* n:"BrtEndSlicerCacheOlapImpl", */ T:-1 },
	/*::[*/0x0440/*::]*/: { /* n:"BrtBeginSlicerCacheLevelsData", */ T:1 },
	/*::[*/0x0441/*::]*/: { /* n:"BrtEndSlicerCacheLevelsData", */ T:-1 },
	/*::[*/0x0442/*::]*/: { /* n:"BrtBeginSlicerCacheLevelData", */ T:1 },
	/*::[*/0x0443/*::]*/: { /* n:"BrtEndSlicerCacheLevelData", */ T:-1 },
	/*::[*/0x0444/*::]*/: { /* n:"BrtBeginSlicerCacheSiRanges", */ T:1 },
	/*::[*/0x0445/*::]*/: { /* n:"BrtEndSlicerCacheSiRanges", */ T:-1 },
	/*::[*/0x0446/*::]*/: { /* n:"BrtBeginSlicerCacheSiRange", */ T:1 },
	/*::[*/0x0447/*::]*/: { /* n:"BrtEndSlicerCacheSiRange", */ T:-1 },
	/*::[*/0x0448/*::]*/: { /* n:"BrtSlicerCacheOlapItem" */ },
	/*::[*/0x0449/*::]*/: { /* n:"BrtBeginSlicerCacheSelections", */ T:1 },
	/*::[*/0x044A/*::]*/: { /* n:"BrtSlicerCacheSelection" */ },
	/*::[*/0x044B/*::]*/: { /* n:"BrtEndSlicerCacheSelections", */ T:-1 },
	/*::[*/0x044C/*::]*/: { /* n:"BrtBeginSlicerCacheNative", */ T:1 },
	/*::[*/0x044D/*::]*/: { /* n:"BrtEndSlicerCacheNative", */ T:-1 },
	/*::[*/0x044E/*::]*/: { /* n:"BrtSlicerCacheNativeItem" */ },
	/*::[*/0x044F/*::]*/: { /* n:"BrtRangeProtection14" */ },
	/*::[*/0x0450/*::]*/: { /* n:"BrtRangeProtectionIso14" */ },
	/*::[*/0x0451/*::]*/: { /* n:"BrtCellIgnoreEC14" */ },
	/*::[*/0x0457/*::]*/: { /* n:"BrtList14" */ },
	/*::[*/0x0458/*::]*/: { /* n:"BrtCFIcon" */ },
	/*::[*/0x0459/*::]*/: { /* n:"BrtBeginSlicerCachesPivotCacheIDs", */ T:1 },
	/*::[*/0x045A/*::]*/: { /* n:"BrtEndSlicerCachesPivotCacheIDs", */ T:-1 },
	/*::[*/0x045B/*::]*/: { /* n:"BrtBeginSlicers", */ T:1 },
	/*::[*/0x045C/*::]*/: { /* n:"BrtEndSlicers", */ T:-1 },
	/*::[*/0x045D/*::]*/: { /* n:"BrtWbProp14" */ },
	/*::[*/0x045E/*::]*/: { /* n:"BrtBeginSXEdit", */ T:1 },
	/*::[*/0x045F/*::]*/: { /* n:"BrtEndSXEdit", */ T:-1 },
	/*::[*/0x0460/*::]*/: { /* n:"BrtBeginSXEdits", */ T:1 },
	/*::[*/0x0461/*::]*/: { /* n:"BrtEndSXEdits", */ T:-1 },
	/*::[*/0x0462/*::]*/: { /* n:"BrtBeginSXChange", */ T:1 },
	/*::[*/0x0463/*::]*/: { /* n:"BrtEndSXChange", */ T:-1 },
	/*::[*/0x0464/*::]*/: { /* n:"BrtBeginSXChanges", */ T:1 },
	/*::[*/0x0465/*::]*/: { /* n:"BrtEndSXChanges", */ T:-1 },
	/*::[*/0x0466/*::]*/: { /* n:"BrtSXTupleItems" */ },
	/*::[*/0x0468/*::]*/: { /* n:"BrtBeginSlicerStyle", */ T:1 },
	/*::[*/0x0469/*::]*/: { /* n:"BrtEndSlicerStyle", */ T:-1 },
	/*::[*/0x046A/*::]*/: { /* n:"BrtSlicerStyleElement" */ },
	/*::[*/0x046B/*::]*/: { /* n:"BrtBeginStyleSheetExt14", */ T:1 },
	/*::[*/0x046C/*::]*/: { /* n:"BrtEndStyleSheetExt14", */ T:-1 },
	/*::[*/0x046D/*::]*/: { /* n:"BrtBeginSlicerCachesPivotCacheID", */ T:1 },
	/*::[*/0x046E/*::]*/: { /* n:"BrtEndSlicerCachesPivotCacheID", */ T:-1 },
	/*::[*/0x046F/*::]*/: { /* n:"BrtBeginConditionalFormattings", */ T:1 },
	/*::[*/0x0470/*::]*/: { /* n:"BrtEndConditionalFormattings", */ T:-1 },
	/*::[*/0x0471/*::]*/: { /* n:"BrtBeginPCDCalcMemExt", */ T:1 },
	/*::[*/0x0472/*::]*/: { /* n:"BrtEndPCDCalcMemExt", */ T:-1 },
	/*::[*/0x0473/*::]*/: { /* n:"BrtBeginPCDCalcMemsExt", */ T:1 },
	/*::[*/0x0474/*::]*/: { /* n:"BrtEndPCDCalcMemsExt", */ T:-1 },
	/*::[*/0x0475/*::]*/: { /* n:"BrtPCDField14" */ },
	/*::[*/0x0476/*::]*/: { /* n:"BrtBeginSlicerStyles", */ T:1 },
	/*::[*/0x0477/*::]*/: { /* n:"BrtEndSlicerStyles", */ T:-1 },
	/*::[*/0x0478/*::]*/: { /* n:"BrtBeginSlicerStyleElements", */ T:1 },
	/*::[*/0x0479/*::]*/: { /* n:"BrtEndSlicerStyleElements", */ T:-1 },
	/*::[*/0x047A/*::]*/: { /* n:"BrtCFRuleExt" */ },
	/*::[*/0x047B/*::]*/: { /* n:"BrtBeginSXCondFmt14", */ T:1 },
	/*::[*/0x047C/*::]*/: { /* n:"BrtEndSXCondFmt14", */ T:-1 },
	/*::[*/0x047D/*::]*/: { /* n:"BrtBeginSXCondFmts14", */ T:1 },
	/*::[*/0x047E/*::]*/: { /* n:"BrtEndSXCondFmts14", */ T:-1 },
	/*::[*/0x0480/*::]*/: { /* n:"BrtBeginSortCond14", */ T:1 },
	/*::[*/0x0481/*::]*/: { /* n:"BrtEndSortCond14", */ T:-1 },
	/*::[*/0x0482/*::]*/: { /* n:"BrtEndDVals14", */ T:-1 },
	/*::[*/0x0483/*::]*/: { /* n:"BrtEndIconSet14", */ T:-1 },
	/*::[*/0x0484/*::]*/: { /* n:"BrtEndDatabar14", */ T:-1 },
	/*::[*/0x0485/*::]*/: { /* n:"BrtBeginColorScale14", */ T:1 },
	/*::[*/0x0486/*::]*/: { /* n:"BrtEndColorScale14", */ T:-1 },
	/*::[*/0x0487/*::]*/: { /* n:"BrtBeginSxrules14", */ T:1 },
	/*::[*/0x0488/*::]*/: { /* n:"BrtEndSxrules14", */ T:-1 },
	/*::[*/0x0489/*::]*/: { /* n:"BrtBeginPRule14", */ T:1 },
	/*::[*/0x048A/*::]*/: { /* n:"BrtEndPRule14", */ T:-1 },
	/*::[*/0x048B/*::]*/: { /* n:"BrtBeginPRFilters14", */ T:1 },
	/*::[*/0x048C/*::]*/: { /* n:"BrtEndPRFilters14", */ T:-1 },
	/*::[*/0x048D/*::]*/: { /* n:"BrtBeginPRFilter14", */ T:1 },
	/*::[*/0x048E/*::]*/: { /* n:"BrtEndPRFilter14", */ T:-1 },
	/*::[*/0x048F/*::]*/: { /* n:"BrtBeginPRFItem14", */ T:1 },
	/*::[*/0x0490/*::]*/: { /* n:"BrtEndPRFItem14", */ T:-1 },
	/*::[*/0x0491/*::]*/: { /* n:"BrtBeginCellIgnoreECs14", */ T:1 },
	/*::[*/0x0492/*::]*/: { /* n:"BrtEndCellIgnoreECs14", */ T:-1 },
	/*::[*/0x0493/*::]*/: { /* n:"BrtDxf14" */ },
	/*::[*/0x0494/*::]*/: { /* n:"BrtBeginDxF14s", */ T:1 },
	/*::[*/0x0495/*::]*/: { /* n:"BrtEndDxf14s", */ T:-1 },
	/*::[*/0x0499/*::]*/: { /* n:"BrtFilter14" */ },
	/*::[*/0x049A/*::]*/: { /* n:"BrtBeginCustomFilters14", */ T:1 },
	/*::[*/0x049C/*::]*/: { /* n:"BrtCustomFilter14" */ },
	/*::[*/0x049D/*::]*/: { /* n:"BrtIconFilter14" */ },
	/*::[*/0x049E/*::]*/: { /* n:"BrtPivotCacheConnectionName" */ },
	/*::[*/0x0800/*::]*/: { /* n:"BrtBeginDecoupledPivotCacheIDs", */ T:1 },
	/*::[*/0x0801/*::]*/: { /* n:"BrtEndDecoupledPivotCacheIDs", */ T:-1 },
	/*::[*/0x0802/*::]*/: { /* n:"BrtDecoupledPivotCacheID" */ },
	/*::[*/0x0803/*::]*/: { /* n:"BrtBeginPivotTableRefs", */ T:1 },
	/*::[*/0x0804/*::]*/: { /* n:"BrtEndPivotTableRefs", */ T:-1 },
	/*::[*/0x0805/*::]*/: { /* n:"BrtPivotTableRef" */ },
	/*::[*/0x0806/*::]*/: { /* n:"BrtSlicerCacheBookPivotTables" */ },
	/*::[*/0x0807/*::]*/: { /* n:"BrtBeginSxvcells", */ T:1 },
	/*::[*/0x0808/*::]*/: { /* n:"BrtEndSxvcells", */ T:-1 },
	/*::[*/0x0809/*::]*/: { /* n:"BrtBeginSxRow", */ T:1 },
	/*::[*/0x080A/*::]*/: { /* n:"BrtEndSxRow", */ T:-1 },
	/*::[*/0x080C/*::]*/: { /* n:"BrtPcdCalcMem15" */ },
	/*::[*/0x0813/*::]*/: { /* n:"BrtQsi15" */ },
	/*::[*/0x0814/*::]*/: { /* n:"BrtBeginWebExtensions", */ T:1 },
	/*::[*/0x0815/*::]*/: { /* n:"BrtEndWebExtensions", */ T:-1 },
	/*::[*/0x0816/*::]*/: { /* n:"BrtWebExtension" */ },
	/*::[*/0x0817/*::]*/: { /* n:"BrtAbsPath15" */ },
	/*::[*/0x0818/*::]*/: { /* n:"BrtBeginPivotTableUISettings", */ T:1 },
	/*::[*/0x0819/*::]*/: { /* n:"BrtEndPivotTableUISettings", */ T:-1 },
	/*::[*/0x081B/*::]*/: { /* n:"BrtTableSlicerCacheIDs" */ },
	/*::[*/0x081C/*::]*/: { /* n:"BrtTableSlicerCacheID" */ },
	/*::[*/0x081D/*::]*/: { /* n:"BrtBeginTableSlicerCache", */ T:1 },
	/*::[*/0x081E/*::]*/: { /* n:"BrtEndTableSlicerCache", */ T:-1 },
	/*::[*/0x081F/*::]*/: { /* n:"BrtSxFilter15" */ },
	/*::[*/0x0820/*::]*/: { /* n:"BrtBeginTimelineCachePivotCacheIDs", */ T:1 },
	/*::[*/0x0821/*::]*/: { /* n:"BrtEndTimelineCachePivotCacheIDs", */ T:-1 },
	/*::[*/0x0822/*::]*/: { /* n:"BrtTimelineCachePivotCacheID" */ },
	/*::[*/0x0823/*::]*/: { /* n:"BrtBeginTimelineCacheIDs", */ T:1 },
	/*::[*/0x0824/*::]*/: { /* n:"BrtEndTimelineCacheIDs", */ T:-1 },
	/*::[*/0x0825/*::]*/: { /* n:"BrtBeginTimelineCacheID", */ T:1 },
	/*::[*/0x0826/*::]*/: { /* n:"BrtEndTimelineCacheID", */ T:-1 },
	/*::[*/0x0827/*::]*/: { /* n:"BrtBeginTimelinesEx", */ T:1 },
	/*::[*/0x0828/*::]*/: { /* n:"BrtEndTimelinesEx", */ T:-1 },
	/*::[*/0x0829/*::]*/: { /* n:"BrtBeginTimelineEx", */ T:1 },
	/*::[*/0x082A/*::]*/: { /* n:"BrtEndTimelineEx", */ T:-1 },
	/*::[*/0x082B/*::]*/: { /* n:"BrtWorkBookPr15" */ },
	/*::[*/0x082C/*::]*/: { /* n:"BrtPCDH15" */ },
	/*::[*/0x082D/*::]*/: { /* n:"BrtBeginTimelineStyle", */ T:1 },
	/*::[*/0x082E/*::]*/: { /* n:"BrtEndTimelineStyle", */ T:-1 },
	/*::[*/0x082F/*::]*/: { /* n:"BrtTimelineStyleElement" */ },
	/*::[*/0x0830/*::]*/: { /* n:"BrtBeginTimelineStylesheetExt15", */ T:1 },
	/*::[*/0x0831/*::]*/: { /* n:"BrtEndTimelineStylesheetExt15", */ T:-1 },
	/*::[*/0x0832/*::]*/: { /* n:"BrtBeginTimelineStyles", */ T:1 },
	/*::[*/0x0833/*::]*/: { /* n:"BrtEndTimelineStyles", */ T:-1 },
	/*::[*/0x0834/*::]*/: { /* n:"BrtBeginTimelineStyleElements", */ T:1 },
	/*::[*/0x0835/*::]*/: { /* n:"BrtEndTimelineStyleElements", */ T:-1 },
	/*::[*/0x0836/*::]*/: { /* n:"BrtDxf15" */ },
	/*::[*/0x0837/*::]*/: { /* n:"BrtBeginDxfs15", */ T:1 },
	/*::[*/0x0838/*::]*/: { /* n:"BrtEndDxfs15", */ T:-1 },
	/*::[*/0x0839/*::]*/: { /* n:"BrtSlicerCacheHideItemsWithNoData" */ },
	/*::[*/0x083A/*::]*/: { /* n:"BrtBeginItemUniqueNames", */ T:1 },
	/*::[*/0x083B/*::]*/: { /* n:"BrtEndItemUniqueNames", */ T:-1 },
	/*::[*/0x083C/*::]*/: { /* n:"BrtItemUniqueName" */ },
	/*::[*/0x083D/*::]*/: { /* n:"BrtBeginExtConn15", */ T:1 },
	/*::[*/0x083E/*::]*/: { /* n:"BrtEndExtConn15", */ T:-1 },
	/*::[*/0x083F/*::]*/: { /* n:"BrtBeginOledbPr15", */ T:1 },
	/*::[*/0x0840/*::]*/: { /* n:"BrtEndOledbPr15", */ T:-1 },
	/*::[*/0x0841/*::]*/: { /* n:"BrtBeginDataFeedPr15", */ T:1 },
	/*::[*/0x0842/*::]*/: { /* n:"BrtEndDataFeedPr15", */ T:-1 },
	/*::[*/0x0843/*::]*/: { /* n:"BrtTextPr15" */ },
	/*::[*/0x0844/*::]*/: { /* n:"BrtRangePr15" */ },
	/*::[*/0x0845/*::]*/: { /* n:"BrtDbCommand15" */ },
	/*::[*/0x0846/*::]*/: { /* n:"BrtBeginDbTables15", */ T:1 },
	/*::[*/0x0847/*::]*/: { /* n:"BrtEndDbTables15", */ T:-1 },
	/*::[*/0x0848/*::]*/: { /* n:"BrtDbTable15" */ },
	/*::[*/0x0849/*::]*/: { /* n:"BrtBeginDataModel", */ T:1 },
	/*::[*/0x084A/*::]*/: { /* n:"BrtEndDataModel", */ T:-1 },
	/*::[*/0x084B/*::]*/: { /* n:"BrtBeginModelTables", */ T:1 },
	/*::[*/0x084C/*::]*/: { /* n:"BrtEndModelTables", */ T:-1 },
	/*::[*/0x084D/*::]*/: { /* n:"BrtModelTable" */ },
	/*::[*/0x084E/*::]*/: { /* n:"BrtBeginModelRelationships", */ T:1 },
	/*::[*/0x084F/*::]*/: { /* n:"BrtEndModelRelationships", */ T:-1 },
	/*::[*/0x0850/*::]*/: { /* n:"BrtModelRelationship" */ },
	/*::[*/0x0851/*::]*/: { /* n:"BrtBeginECTxtWiz15", */ T:1 },
	/*::[*/0x0852/*::]*/: { /* n:"BrtEndECTxtWiz15", */ T:-1 },
	/*::[*/0x0853/*::]*/: { /* n:"BrtBeginECTWFldInfoLst15", */ T:1 },
	/*::[*/0x0854/*::]*/: { /* n:"BrtEndECTWFldInfoLst15", */ T:-1 },
	/*::[*/0x0855/*::]*/: { /* n:"BrtBeginECTWFldInfo15", */ T:1 },
	/*::[*/0x0856/*::]*/: { /* n:"BrtFieldListActiveItem" */ },
	/*::[*/0x0857/*::]*/: { /* n:"BrtPivotCacheIdVersion" */ },
	/*::[*/0x0858/*::]*/: { /* n:"BrtSXDI15" */ },
	/*::[*/0x0859/*::]*/: { /* n:"BrtBeginModelTimeGroupings", */ T:1 },
	/*::[*/0x085A/*::]*/: { /* n:"BrtEndModelTimeGroupings", */ T:-1 },
	/*::[*/0x085B/*::]*/: { /* n:"BrtBeginModelTimeGrouping", */ T:1 },
	/*::[*/0x085C/*::]*/: { /* n:"BrtEndModelTimeGrouping", */ T:-1 },
	/*::[*/0x085D/*::]*/: { /* n:"BrtModelTimeGroupingCalcCol" */ },
	/*::[*/0x0C00/*::]*/: { /* n:"BrtUid" */ },
	/*::[*/0x0C01/*::]*/: { /* n:"BrtRevisionPtr" */ },
	/*::[*/0x1000/*::]*/: { /* n:"BrtBeginDynamicArrayPr", */ T:1 },
	/*::[*/0x1001/*::]*/: { /* n:"BrtEndDynamicArrayPr", */ T:-1 },
	/*::[*/0x138A/*::]*/: { /* n:"BrtBeginRichValueBlock", */ T:1 },
	/*::[*/0x138B/*::]*/: { /* n:"BrtEndRichValueBlock", */ T:-1 },
	/*::[*/0x13D9/*::]*/: { /* n:"BrtBeginRichFilters", */ T:1 },
	/*::[*/0x13DA/*::]*/: { /* n:"BrtEndRichFilters", */ T:-1 },
	/*::[*/0x13DB/*::]*/: { /* n:"BrtRichFilter" */ },
	/*::[*/0x13DC/*::]*/: { /* n:"BrtBeginRichFilterColumn", */ T:1 },
	/*::[*/0x13DD/*::]*/: { /* n:"BrtEndRichFilterColumn", */ T:-1 },
	/*::[*/0x13DE/*::]*/: { /* n:"BrtBeginCustomRichFilters", */ T:1 },
	/*::[*/0x13DF/*::]*/: { /* n:"BrtEndCustomRichFilters", */ T:-1 },
	/*::[*/0x13E0/*::]*/: { /* n:"BrtCustomRichFilter" */ },
	/*::[*/0x13E1/*::]*/: { /* n:"BrtTop10RichFilter" */ },
	/*::[*/0x13E2/*::]*/: { /* n:"BrtDynamicRichFilter" */ },
	/*::[*/0x13E4/*::]*/: { /* n:"BrtBeginRichSortCondition", */ T:1 },
	/*::[*/0x13E5/*::]*/: { /* n:"BrtEndRichSortCondition", */ T:-1 },
	/*::[*/0x13E6/*::]*/: { /* n:"BrtRichFilterDateGroupItem" */ },
	/*::[*/0x13E7/*::]*/: { /* n:"BrtBeginCalcFeatures", */ T:1 },
	/*::[*/0x13E8/*::]*/: { /* n:"BrtEndCalcFeatures", */ T:-1 },
	/*::[*/0x13E9/*::]*/: { /* n:"BrtCalcFeature" */ },
	/*::[*/0x13EB/*::]*/: { /* n:"BrtExternalLinksPr" */ },
	/*::[*/0xFFFF/*::]*/: { n:"" }
};

/* [MS-XLS] 2.3 Record Enumeration (and other sources) */
var XLSRecordEnum = {
	/* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */
	/*::[*/0x0006/*::]*/: { /* n:"Formula", */ f:parse_Formula },
	/*::[*/0x000a/*::]*/: { /* n:"EOF", */ f:parsenoop2 },
	/*::[*/0x000c/*::]*/: { /* n:"CalcCount", */ f:parseuint16 }, //
	/*::[*/0x000d/*::]*/: { /* n:"CalcMode", */ f:parseuint16 }, //
	/*::[*/0x000e/*::]*/: { /* n:"CalcPrecision", */ f:parsebool }, //
	/*::[*/0x000f/*::]*/: { /* n:"CalcRefMode", */ f:parsebool }, //
	/*::[*/0x0010/*::]*/: { /* n:"CalcDelta", */ f:parse_Xnum }, //
	/*::[*/0x0011/*::]*/: { /* n:"CalcIter", */ f:parsebool }, //
	/*::[*/0x0012/*::]*/: { /* n:"Protect", */ f:parsebool },
	/*::[*/0x0013/*::]*/: { /* n:"Password", */ f:parseuint16 },
	/*::[*/0x0014/*::]*/: { /* n:"Header", */ f:parse_XLHeaderFooter },
	/*::[*/0x0015/*::]*/: { /* n:"Footer", */ f:parse_XLHeaderFooter },
	/*::[*/0x0017/*::]*/: { /* n:"ExternSheet", */ f:parse_ExternSheet },
	/*::[*/0x0018/*::]*/: { /* n:"Lbl", */ f:parse_Lbl },
	/*::[*/0x0019/*::]*/: { /* n:"WinProtect", */ f:parsebool },
	/*::[*/0x001a/*::]*/: { /* n:"VerticalPageBreaks", */ },
	/*::[*/0x001b/*::]*/: { /* n:"HorizontalPageBreaks", */ },
	/*::[*/0x001c/*::]*/: { /* n:"Note", */ f:parse_Note },
	/*::[*/0x001d/*::]*/: { /* n:"Selection", */ },
	/*::[*/0x0022/*::]*/: { /* n:"Date1904", */ f:parsebool },
	/*::[*/0x0023/*::]*/: { /* n:"ExternName", */ f:parse_ExternName },
	/*::[*/0x0026/*::]*/: { /* n:"LeftMargin", */ f:parse_Xnum }, // *
	/*::[*/0x0027/*::]*/: { /* n:"RightMargin", */ f:parse_Xnum }, // *
	/*::[*/0x0028/*::]*/: { /* n:"TopMargin", */ f:parse_Xnum }, // *
	/*::[*/0x0029/*::]*/: { /* n:"BottomMargin", */ f:parse_Xnum }, // *
	/*::[*/0x002a/*::]*/: { /* n:"PrintRowCol", */ f:parsebool },
	/*::[*/0x002b/*::]*/: { /* n:"PrintGrid", */ f:parsebool },
	/*::[*/0x002f/*::]*/: { /* n:"FilePass", */ f:parse_FilePass },
	/*::[*/0x0031/*::]*/: { /* n:"Font", */ f:parse_Font },
	/*::[*/0x0033/*::]*/: { /* n:"PrintSize", */ f:parseuint16 },
	/*::[*/0x003c/*::]*/: { /* n:"Continue", */ },
	/*::[*/0x003d/*::]*/: { /* n:"Window1", */ f:parse_Window1 },
	/*::[*/0x0040/*::]*/: { /* n:"Backup", */ f:parsebool },
	/*::[*/0x0041/*::]*/: { /* n:"Pane", */ f:parse_Pane },
	/*::[*/0x0042/*::]*/: { /* n:"CodePage", */ f:parseuint16 },
	/*::[*/0x004d/*::]*/: { /* n:"Pls", */ },
	/*::[*/0x0050/*::]*/: { /* n:"DCon", */ },
	/*::[*/0x0051/*::]*/: { /* n:"DConRef", */ },
	/*::[*/0x0052/*::]*/: { /* n:"DConName", */ },
	/*::[*/0x0055/*::]*/: { /* n:"DefColWidth", */ f:parseuint16 },
	/*::[*/0x0059/*::]*/: { /* n:"XCT", */ },
	/*::[*/0x005a/*::]*/: { /* n:"CRN", */ },
	/*::[*/0x005b/*::]*/: { /* n:"FileSharing", */ },
	/*::[*/0x005c/*::]*/: { /* n:"WriteAccess", */ f:parse_WriteAccess },
	/*::[*/0x005d/*::]*/: { /* n:"Obj", */ f:parse_Obj },
	/*::[*/0x005e/*::]*/: { /* n:"Uncalced", */ },
	/*::[*/0x005f/*::]*/: { /* n:"CalcSaveRecalc", */ f:parsebool }, //
	/*::[*/0x0060/*::]*/: { /* n:"Template", */ },
	/*::[*/0x0061/*::]*/: { /* n:"Intl", */ },
	/*::[*/0x0063/*::]*/: { /* n:"ObjProtect", */ f:parsebool },
	/*::[*/0x007d/*::]*/: { /* n:"ColInfo", */ f:parse_ColInfo },
	/*::[*/0x0080/*::]*/: { /* n:"Guts", */ f:parse_Guts },
	/*::[*/0x0081/*::]*/: { /* n:"WsBool", */ f:parse_WsBool },
	/*::[*/0x0082/*::]*/: { /* n:"GridSet", */ f:parseuint16 },
	/*::[*/0x0083/*::]*/: { /* n:"HCenter", */ f:parsebool },
	/*::[*/0x0084/*::]*/: { /* n:"VCenter", */ f:parsebool },
	/*::[*/0x0085/*::]*/: { /* n:"BoundSheet8", */ f:parse_BoundSheet8 },
	/*::[*/0x0086/*::]*/: { /* n:"WriteProtect", */ },
	/*::[*/0x008c/*::]*/: { /* n:"Country", */ f:parse_Country },
	/*::[*/0x008d/*::]*/: { /* n:"HideObj", */ f:parseuint16 },
	/*::[*/0x0090/*::]*/: { /* n:"Sort", */ },
	/*::[*/0x0092/*::]*/: { /* n:"Palette", */ f:parse_Palette },
	/*::[*/0x0097/*::]*/: { /* n:"Sync", */ },
	/*::[*/0x0098/*::]*/: { /* n:"LPr", */ },
	/*::[*/0x0099/*::]*/: { /* n:"DxGCol", */ },
	/*::[*/0x009a/*::]*/: { /* n:"FnGroupName", */ },
	/*::[*/0x009b/*::]*/: { /* n:"FilterMode", */ },
	/*::[*/0x009c/*::]*/: { /* n:"BuiltInFnGroupCount", */ f:parseuint16 },
	/*::[*/0x009d/*::]*/: { /* n:"AutoFilterInfo", */ },
	/*::[*/0x009e/*::]*/: { /* n:"AutoFilter", */ },
	/*::[*/0x00a0/*::]*/: { /* n:"Scl", */ f:parse_Scl },
	/*::[*/0x00a1/*::]*/: { /* n:"Setup", */ f:parse_Setup },
	/*::[*/0x00ae/*::]*/: { /* n:"ScenMan", */ },
	/*::[*/0x00af/*::]*/: { /* n:"SCENARIO", */ },
	/*::[*/0x00b0/*::]*/: { /* n:"SxView", */ },
	/*::[*/0x00b1/*::]*/: { /* n:"Sxvd", */ },
	/*::[*/0x00b2/*::]*/: { /* n:"SXVI", */ },
	/*::[*/0x00b4/*::]*/: { /* n:"SxIvd", */ },
	/*::[*/0x00b5/*::]*/: { /* n:"SXLI", */ },
	/*::[*/0x00b6/*::]*/: { /* n:"SXPI", */ },
	/*::[*/0x00b8/*::]*/: { /* n:"DocRoute", */ },
	/*::[*/0x00b9/*::]*/: { /* n:"RecipName", */ },
	/*::[*/0x00bd/*::]*/: { /* n:"MulRk", */ f:parse_MulRk },
	/*::[*/0x00be/*::]*/: { /* n:"MulBlank", */ f:parse_MulBlank },
	/*::[*/0x00c1/*::]*/: { /* n:"Mms", */ f:parsenoop2 },
	/*::[*/0x00c5/*::]*/: { /* n:"SXDI", */ },
	/*::[*/0x00c6/*::]*/: { /* n:"SXDB", */ },
	/*::[*/0x00c7/*::]*/: { /* n:"SXFDB", */ },
	/*::[*/0x00c8/*::]*/: { /* n:"SXDBB", */ },
	/*::[*/0x00c9/*::]*/: { /* n:"SXNum", */ },
	/*::[*/0x00ca/*::]*/: { /* n:"SxBool", */ f:parsebool },
	/*::[*/0x00cb/*::]*/: { /* n:"SxErr", */ },
	/*::[*/0x00cc/*::]*/: { /* n:"SXInt", */ },
	/*::[*/0x00cd/*::]*/: { /* n:"SXString", */ },
	/*::[*/0x00ce/*::]*/: { /* n:"SXDtr", */ },
	/*::[*/0x00cf/*::]*/: { /* n:"SxNil", */ },
	/*::[*/0x00d0/*::]*/: { /* n:"SXTbl", */ },
	/*::[*/0x00d1/*::]*/: { /* n:"SXTBRGIITM", */ },
	/*::[*/0x00d2/*::]*/: { /* n:"SxTbpg", */ },
	/*::[*/0x00d3/*::]*/: { /* n:"ObProj", */ },
	/*::[*/0x00d5/*::]*/: { /* n:"SXStreamID", */ },
	/*::[*/0x00d7/*::]*/: { /* n:"DBCell", */ },
	/*::[*/0x00d8/*::]*/: { /* n:"SXRng", */ },
	/*::[*/0x00d9/*::]*/: { /* n:"SxIsxoper", */ },
	/*::[*/0x00da/*::]*/: { /* n:"BookBool", */ f:parseuint16 },
	/*::[*/0x00dc/*::]*/: { /* n:"DbOrParamQry", */ },
	/*::[*/0x00dd/*::]*/: { /* n:"ScenarioProtect", */ f:parsebool },
	/*::[*/0x00de/*::]*/: { /* n:"OleObjectSize", */ },
	/*::[*/0x00e0/*::]*/: { /* n:"XF", */ f:parse_XF },
	/*::[*/0x00e1/*::]*/: { /* n:"InterfaceHdr", */ f:parse_InterfaceHdr },
	/*::[*/0x00e2/*::]*/: { /* n:"InterfaceEnd", */ f:parsenoop2 },
	/*::[*/0x00e3/*::]*/: { /* n:"SXVS", */ },
	/*::[*/0x00e5/*::]*/: { /* n:"MergeCells", */ f:parse_MergeCells },
	/*::[*/0x00e9/*::]*/: { /* n:"BkHim", */ },
	/*::[*/0x00eb/*::]*/: { /* n:"MsoDrawingGroup", */ },
	/*::[*/0x00ec/*::]*/: { /* n:"MsoDrawing", */ },
	/*::[*/0x00ed/*::]*/: { /* n:"MsoDrawingSelection", */ },
	/*::[*/0x00ef/*::]*/: { /* n:"PhoneticInfo", */ },
	/*::[*/0x00f0/*::]*/: { /* n:"SxRule", */ },
	/*::[*/0x00f1/*::]*/: { /* n:"SXEx", */ },
	/*::[*/0x00f2/*::]*/: { /* n:"SxFilt", */ },
	/*::[*/0x00f4/*::]*/: { /* n:"SxDXF", */ },
	/*::[*/0x00f5/*::]*/: { /* n:"SxItm", */ },
	/*::[*/0x00f6/*::]*/: { /* n:"SxName", */ },
	/*::[*/0x00f7/*::]*/: { /* n:"SxSelect", */ },
	/*::[*/0x00f8/*::]*/: { /* n:"SXPair", */ },
	/*::[*/0x00f9/*::]*/: { /* n:"SxFmla", */ },
	/*::[*/0x00fb/*::]*/: { /* n:"SxFormat", */ },
	/*::[*/0x00fc/*::]*/: { /* n:"SST", */ f:parse_SST },
	/*::[*/0x00fd/*::]*/: { /* n:"LabelSst", */ f:parse_LabelSst },
	/*::[*/0x00ff/*::]*/: { /* n:"ExtSST", */ f:parse_ExtSST },
	/*::[*/0x0100/*::]*/: { /* n:"SXVDEx", */ },
	/*::[*/0x0103/*::]*/: { /* n:"SXFormula", */ },
	/*::[*/0x0122/*::]*/: { /* n:"SXDBEx", */ },
	/*::[*/0x0137/*::]*/: { /* n:"RRDInsDel", */ },
	/*::[*/0x0138/*::]*/: { /* n:"RRDHead", */ },
	/*::[*/0x013b/*::]*/: { /* n:"RRDChgCell", */ },
	/*::[*/0x013d/*::]*/: { /* n:"RRTabId", */ f:parseuint16a },
	/*::[*/0x013e/*::]*/: { /* n:"RRDRenSheet", */ },
	/*::[*/0x013f/*::]*/: { /* n:"RRSort", */ },
	/*::[*/0x0140/*::]*/: { /* n:"RRDMove", */ },
	/*::[*/0x014a/*::]*/: { /* n:"RRFormat", */ },
	/*::[*/0x014b/*::]*/: { /* n:"RRAutoFmt", */ },
	/*::[*/0x014d/*::]*/: { /* n:"RRInsertSh", */ },
	/*::[*/0x014e/*::]*/: { /* n:"RRDMoveBegin", */ },
	/*::[*/0x014f/*::]*/: { /* n:"RRDMoveEnd", */ },
	/*::[*/0x0150/*::]*/: { /* n:"RRDInsDelBegin", */ },
	/*::[*/0x0151/*::]*/: { /* n:"RRDInsDelEnd", */ },
	/*::[*/0x0152/*::]*/: { /* n:"RRDConflict", */ },
	/*::[*/0x0153/*::]*/: { /* n:"RRDDefName", */ },
	/*::[*/0x0154/*::]*/: { /* n:"RRDRstEtxp", */ },
	/*::[*/0x015f/*::]*/: { /* n:"LRng", */ },
	/*::[*/0x0160/*::]*/: { /* n:"UsesELFs", */ f:parsebool },
	/*::[*/0x0161/*::]*/: { /* n:"DSF", */ f:parsenoop2 },
	/*::[*/0x0191/*::]*/: { /* n:"CUsr", */ },
	/*::[*/0x0192/*::]*/: { /* n:"CbUsr", */ },
	/*::[*/0x0193/*::]*/: { /* n:"UsrInfo", */ },
	/*::[*/0x0194/*::]*/: { /* n:"UsrExcl", */ },
	/*::[*/0x0195/*::]*/: { /* n:"FileLock", */ },
	/*::[*/0x0196/*::]*/: { /* n:"RRDInfo", */ },
	/*::[*/0x0197/*::]*/: { /* n:"BCUsrs", */ },
	/*::[*/0x0198/*::]*/: { /* n:"UsrChk", */ },
	/*::[*/0x01a9/*::]*/: { /* n:"UserBView", */ },
	/*::[*/0x01aa/*::]*/: { /* n:"UserSViewBegin", */ },
	/*::[*/0x01ab/*::]*/: { /* n:"UserSViewEnd", */ },
	/*::[*/0x01ac/*::]*/: { /* n:"RRDUserView", */ },
	/*::[*/0x01ad/*::]*/: { /* n:"Qsi", */ },
	/*::[*/0x01ae/*::]*/: { /* n:"SupBook", */ f:parse_SupBook },
	/*::[*/0x01af/*::]*/: { /* n:"Prot4Rev", */ f:parsebool },
	/*::[*/0x01b0/*::]*/: { /* n:"CondFmt", */ },
	/*::[*/0x01b1/*::]*/: { /* n:"CF", */ },
	/*::[*/0x01b2/*::]*/: { /* n:"DVal", */ },
	/*::[*/0x01b5/*::]*/: { /* n:"DConBin", */ },
	/*::[*/0x01b6/*::]*/: { /* n:"TxO", */ f:parse_TxO },
	/*::[*/0x01b7/*::]*/: { /* n:"RefreshAll", */ f:parsebool }, //
	/*::[*/0x01b8/*::]*/: { /* n:"HLink", */ f:parse_HLink },
	/*::[*/0x01b9/*::]*/: { /* n:"Lel", */ },
	/*::[*/0x01ba/*::]*/: { /* n:"CodeName", */ f:parse_XLUnicodeString },
	/*::[*/0x01bb/*::]*/: { /* n:"SXFDBType", */ },
	/*::[*/0x01bc/*::]*/: { /* n:"Prot4RevPass", */ f:parseuint16 },
	/*::[*/0x01bd/*::]*/: { /* n:"ObNoMacros", */ },
	/*::[*/0x01be/*::]*/: { /* n:"Dv", */ },
	/*::[*/0x01c0/*::]*/: { /* n:"Excel9File", */ f:parsenoop2 },
	/*::[*/0x01c1/*::]*/: { /* n:"RecalcId", */ f:parse_RecalcId, r:2},
	/*::[*/0x01c2/*::]*/: { /* n:"EntExU2", */ f:parsenoop2 },
	/*::[*/0x0200/*::]*/: { /* n:"Dimensions", */ f:parse_Dimensions },
	/*::[*/0x0201/*::]*/: { /* n:"Blank", */ f:parse_Blank },
	/*::[*/0x0203/*::]*/: { /* n:"Number", */ f:parse_Number },
	/*::[*/0x0204/*::]*/: { /* n:"Label", */ f:parse_Label },
	/*::[*/0x0205/*::]*/: { /* n:"BoolErr", */ f:parse_BoolErr },
	/*::[*/0x0207/*::]*/: { /* n:"String", */ f:parse_String },
	/*::[*/0x0208/*::]*/: { /* n:"Row", */ f:parse_Row },
	/*::[*/0x020b/*::]*/: { /* n:"Index", */ },
	/*::[*/0x0221/*::]*/: { /* n:"Array", */ f:parse_Array },
	/*::[*/0x0225/*::]*/: { /* n:"DefaultRowHeight", */ f:parse_DefaultRowHeight },
	/*::[*/0x0236/*::]*/: { /* n:"Table", */ },
	/*::[*/0x023e/*::]*/: { /* n:"Window2", */ f:parse_Window2 },
	/*::[*/0x027e/*::]*/: { /* n:"RK", */ f:parse_RK },
	/*::[*/0x0293/*::]*/: { /* n:"Style", */ },
	/*::[*/0x0418/*::]*/: { /* n:"BigName", */ },
	/*::[*/0x041e/*::]*/: { /* n:"Format", */ f:parse_Format },
	/*::[*/0x043c/*::]*/: { /* n:"ContinueBigName", */ },
	/*::[*/0x04bc/*::]*/: { /* n:"ShrFmla", */ f:parse_ShrFmla },
	/*::[*/0x0800/*::]*/: { /* n:"HLinkTooltip", */ f:parse_HLinkTooltip },
	/*::[*/0x0801/*::]*/: { /* n:"WebPub", */ },
	/*::[*/0x0802/*::]*/: { /* n:"QsiSXTag", */ },
	/*::[*/0x0803/*::]*/: { /* n:"DBQueryExt", */ },
	/*::[*/0x0804/*::]*/: { /* n:"ExtString", */ },
	/*::[*/0x0805/*::]*/: { /* n:"TxtQry", */ },
	/*::[*/0x0806/*::]*/: { /* n:"Qsir", */ },
	/*::[*/0x0807/*::]*/: { /* n:"Qsif", */ },
	/*::[*/0x0808/*::]*/: { /* n:"RRDTQSIF", */ },
	/*::[*/0x0809/*::]*/: { /* n:"BOF", */ f:parse_BOF },
	/*::[*/0x080a/*::]*/: { /* n:"OleDbConn", */ },
	/*::[*/0x080b/*::]*/: { /* n:"WOpt", */ },
	/*::[*/0x080c/*::]*/: { /* n:"SXViewEx", */ },
	/*::[*/0x080d/*::]*/: { /* n:"SXTH", */ },
	/*::[*/0x080e/*::]*/: { /* n:"SXPIEx", */ },
	/*::[*/0x080f/*::]*/: { /* n:"SXVDTEx", */ },
	/*::[*/0x0810/*::]*/: { /* n:"SXViewEx9", */ },
	/*::[*/0x0812/*::]*/: { /* n:"ContinueFrt", */ },
	/*::[*/0x0813/*::]*/: { /* n:"RealTimeData", */ },
	/*::[*/0x0850/*::]*/: { /* n:"ChartFrtInfo", */ },
	/*::[*/0x0851/*::]*/: { /* n:"FrtWrapper", */ },
	/*::[*/0x0852/*::]*/: { /* n:"StartBlock", */ },
	/*::[*/0x0853/*::]*/: { /* n:"EndBlock", */ },
	/*::[*/0x0854/*::]*/: { /* n:"StartObject", */ },
	/*::[*/0x0855/*::]*/: { /* n:"EndObject", */ },
	/*::[*/0x0856/*::]*/: { /* n:"CatLab", */ },
	/*::[*/0x0857/*::]*/: { /* n:"YMult", */ },
	/*::[*/0x0858/*::]*/: { /* n:"SXViewLink", */ },
	/*::[*/0x0859/*::]*/: { /* n:"PivotChartBits", */ },
	/*::[*/0x085a/*::]*/: { /* n:"FrtFontList", */ },
	/*::[*/0x0862/*::]*/: { /* n:"SheetExt", */ },
	/*::[*/0x0863/*::]*/: { /* n:"BookExt", */ r:12},
	/*::[*/0x0864/*::]*/: { /* n:"SXAddl", */ },
	/*::[*/0x0865/*::]*/: { /* n:"CrErr", */ },
	/*::[*/0x0866/*::]*/: { /* n:"HFPicture", */ },
	/*::[*/0x0867/*::]*/: { /* n:"FeatHdr", */ f:parsenoop2 },
	/*::[*/0x0868/*::]*/: { /* n:"Feat", */ },
	/*::[*/0x086a/*::]*/: { /* n:"DataLabExt", */ },
	/*::[*/0x086b/*::]*/: { /* n:"DataLabExtContents", */ },
	/*::[*/0x086c/*::]*/: { /* n:"CellWatch", */ },
	/*::[*/0x0871/*::]*/: { /* n:"FeatHdr11", */ },
	/*::[*/0x0872/*::]*/: { /* n:"Feature11", */ },
	/*::[*/0x0874/*::]*/: { /* n:"DropDownObjIds", */ },
	/*::[*/0x0875/*::]*/: { /* n:"ContinueFrt11", */ },
	/*::[*/0x0876/*::]*/: { /* n:"DConn", */ },
	/*::[*/0x0877/*::]*/: { /* n:"List12", */ },
	/*::[*/0x0878/*::]*/: { /* n:"Feature12", */ },
	/*::[*/0x0879/*::]*/: { /* n:"CondFmt12", */ },
	/*::[*/0x087a/*::]*/: { /* n:"CF12", */ },
	/*::[*/0x087b/*::]*/: { /* n:"CFEx", */ },
	/*::[*/0x087c/*::]*/: { /* n:"XFCRC", */ f:parse_XFCRC, r:12 },
	/*::[*/0x087d/*::]*/: { /* n:"XFExt", */ f:parse_XFExt, r:12 },
	/*::[*/0x087e/*::]*/: { /* n:"AutoFilter12", */ },
	/*::[*/0x087f/*::]*/: { /* n:"ContinueFrt12", */ },
	/*::[*/0x0884/*::]*/: { /* n:"MDTInfo", */ },
	/*::[*/0x0885/*::]*/: { /* n:"MDXStr", */ },
	/*::[*/0x0886/*::]*/: { /* n:"MDXTuple", */ },
	/*::[*/0x0887/*::]*/: { /* n:"MDXSet", */ },
	/*::[*/0x0888/*::]*/: { /* n:"MDXProp", */ },
	/*::[*/0x0889/*::]*/: { /* n:"MDXKPI", */ },
	/*::[*/0x088a/*::]*/: { /* n:"MDB", */ },
	/*::[*/0x088b/*::]*/: { /* n:"PLV", */ },
	/*::[*/0x088c/*::]*/: { /* n:"Compat12", */ f:parsebool, r:12 },
	/*::[*/0x088d/*::]*/: { /* n:"DXF", */ },
	/*::[*/0x088e/*::]*/: { /* n:"TableStyles", */ r:12 },
	/*::[*/0x088f/*::]*/: { /* n:"TableStyle", */ },
	/*::[*/0x0890/*::]*/: { /* n:"TableStyleElement", */ },
	/*::[*/0x0892/*::]*/: { /* n:"StyleExt", */ },
	/*::[*/0x0893/*::]*/: { /* n:"NamePublish", */ },
	/*::[*/0x0894/*::]*/: { /* n:"NameCmt", */ f:parse_NameCmt, r:12 },
	/*::[*/0x0895/*::]*/: { /* n:"SortData", */ },
	/*::[*/0x0896/*::]*/: { /* n:"Theme", */ f:parse_Theme, r:12 },
	/*::[*/0x0897/*::]*/: { /* n:"GUIDTypeLib", */ },
	/*::[*/0x0898/*::]*/: { /* n:"FnGrp12", */ },
	/*::[*/0x0899/*::]*/: { /* n:"NameFnGrp12", */ },
	/*::[*/0x089a/*::]*/: { /* n:"MTRSettings", */ f:parse_MTRSettings, r:12 },
	/*::[*/0x089b/*::]*/: { /* n:"CompressPictures", */ f:parsenoop2 },
	/*::[*/0x089c/*::]*/: { /* n:"HeaderFooter", */ },
	/*::[*/0x089d/*::]*/: { /* n:"CrtLayout12", */ },
	/*::[*/0x089e/*::]*/: { /* n:"CrtMlFrt", */ },
	/*::[*/0x089f/*::]*/: { /* n:"CrtMlFrtContinue", */ },
	/*::[*/0x08a3/*::]*/: { /* n:"ForceFullCalculation", */ f:parse_ForceFullCalculation },
	/*::[*/0x08a4/*::]*/: { /* n:"ShapePropsStream", */ },
	/*::[*/0x08a5/*::]*/: { /* n:"TextPropsStream", */ },
	/*::[*/0x08a6/*::]*/: { /* n:"RichTextStream", */ },
	/*::[*/0x08a7/*::]*/: { /* n:"CrtLayout12A", */ },
	/*::[*/0x1001/*::]*/: { /* n:"Units", */ },
	/*::[*/0x1002/*::]*/: { /* n:"Chart", */ },
	/*::[*/0x1003/*::]*/: { /* n:"Series", */ },
	/*::[*/0x1006/*::]*/: { /* n:"DataFormat", */ },
	/*::[*/0x1007/*::]*/: { /* n:"LineFormat", */ },
	/*::[*/0x1009/*::]*/: { /* n:"MarkerFormat", */ },
	/*::[*/0x100a/*::]*/: { /* n:"AreaFormat", */ },
	/*::[*/0x100b/*::]*/: { /* n:"PieFormat", */ },
	/*::[*/0x100c/*::]*/: { /* n:"AttachedLabel", */ },
	/*::[*/0x100d/*::]*/: { /* n:"SeriesText", */ },
	/*::[*/0x1014/*::]*/: { /* n:"ChartFormat", */ },
	/*::[*/0x1015/*::]*/: { /* n:"Legend", */ },
	/*::[*/0x1016/*::]*/: { /* n:"SeriesList", */ },
	/*::[*/0x1017/*::]*/: { /* n:"Bar", */ },
	/*::[*/0x1018/*::]*/: { /* n:"Line", */ },
	/*::[*/0x1019/*::]*/: { /* n:"Pie", */ },
	/*::[*/0x101a/*::]*/: { /* n:"Area", */ },
	/*::[*/0x101b/*::]*/: { /* n:"Scatter", */ },
	/*::[*/0x101c/*::]*/: { /* n:"CrtLine", */ },
	/*::[*/0x101d/*::]*/: { /* n:"Axis", */ },
	/*::[*/0x101e/*::]*/: { /* n:"Tick", */ },
	/*::[*/0x101f/*::]*/: { /* n:"ValueRange", */ },
	/*::[*/0x1020/*::]*/: { /* n:"CatSerRange", */ },
	/*::[*/0x1021/*::]*/: { /* n:"AxisLine", */ },
	/*::[*/0x1022/*::]*/: { /* n:"CrtLink", */ },
	/*::[*/0x1024/*::]*/: { /* n:"DefaultText", */ },
	/*::[*/0x1025/*::]*/: { /* n:"Text", */ },
	/*::[*/0x1026/*::]*/: { /* n:"FontX", */ f:parseuint16 },
	/*::[*/0x1027/*::]*/: { /* n:"ObjectLink", */ },
	/*::[*/0x1032/*::]*/: { /* n:"Frame", */ },
	/*::[*/0x1033/*::]*/: { /* n:"Begin", */ },
	/*::[*/0x1034/*::]*/: { /* n:"End", */ },
	/*::[*/0x1035/*::]*/: { /* n:"PlotArea", */ },
	/*::[*/0x103a/*::]*/: { /* n:"Chart3d", */ },
	/*::[*/0x103c/*::]*/: { /* n:"PicF", */ },
	/*::[*/0x103d/*::]*/: { /* n:"DropBar", */ },
	/*::[*/0x103e/*::]*/: { /* n:"Radar", */ },
	/*::[*/0x103f/*::]*/: { /* n:"Surf", */ },
	/*::[*/0x1040/*::]*/: { /* n:"RadarArea", */ },
	/*::[*/0x1041/*::]*/: { /* n:"AxisParent", */ },
	/*::[*/0x1043/*::]*/: { /* n:"LegendException", */ },
	/*::[*/0x1044/*::]*/: { /* n:"ShtProps", */ f:parse_ShtProps },
	/*::[*/0x1045/*::]*/: { /* n:"SerToCrt", */ },
	/*::[*/0x1046/*::]*/: { /* n:"AxesUsed", */ },
	/*::[*/0x1048/*::]*/: { /* n:"SBaseRef", */ },
	/*::[*/0x104a/*::]*/: { /* n:"SerParent", */ },
	/*::[*/0x104b/*::]*/: { /* n:"SerAuxTrend", */ },
	/*::[*/0x104e/*::]*/: { /* n:"IFmtRecord", */ },
	/*::[*/0x104f/*::]*/: { /* n:"Pos", */ },
	/*::[*/0x1050/*::]*/: { /* n:"AlRuns", */ },
	/*::[*/0x1051/*::]*/: { /* n:"BRAI", */ },
	/*::[*/0x105b/*::]*/: { /* n:"SerAuxErrBar", */ },
	/*::[*/0x105c/*::]*/: { /* n:"ClrtClient", */ f:parse_ClrtClient },
	/*::[*/0x105d/*::]*/: { /* n:"SerFmt", */ },
	/*::[*/0x105f/*::]*/: { /* n:"Chart3DBarShape", */ },
	/*::[*/0x1060/*::]*/: { /* n:"Fbi", */ },
	/*::[*/0x1061/*::]*/: { /* n:"BopPop", */ },
	/*::[*/0x1062/*::]*/: { /* n:"AxcExt", */ },
	/*::[*/0x1063/*::]*/: { /* n:"Dat", */ },
	/*::[*/0x1064/*::]*/: { /* n:"PlotGrowth", */ },
	/*::[*/0x1065/*::]*/: { /* n:"SIIndex", */ },
	/*::[*/0x1066/*::]*/: { /* n:"GelFrame", */ },
	/*::[*/0x1067/*::]*/: { /* n:"BopPopCustom", */ },
	/*::[*/0x1068/*::]*/: { /* n:"Fbi2", */ },

	/*::[*/0x0000/*::]*/: { /* n:"Dimensions", */ f:parse_Dimensions },
	/*::[*/0x0001/*::]*/: { /* n:"BIFF2BLANK", */ },
	/*::[*/0x0002/*::]*/: { /* n:"BIFF2INT", */ f:parse_BIFF2INT },
	/*::[*/0x0003/*::]*/: { /* n:"BIFF2NUM", */ f:parse_BIFF2NUM },
	/*::[*/0x0004/*::]*/: { /* n:"BIFF2STR", */ f:parse_BIFF2STR },
	/*::[*/0x0005/*::]*/: { /* n:"BoolErr", */ f:parse_BoolErr },
	/*::[*/0x0007/*::]*/: { /* n:"String", */ f:parse_BIFF2STRING },
	/*::[*/0x0008/*::]*/: { /* n:"BIFF2ROW", */ },
	/*::[*/0x0009/*::]*/: { /* n:"BOF", */ f:parse_BOF },
	/*::[*/0x000b/*::]*/: { /* n:"Index", */ },
	/*::[*/0x0016/*::]*/: { /* n:"ExternCount", */ f:parseuint16 },
	/*::[*/0x001e/*::]*/: { /* n:"BIFF2FORMAT", */ f:parse_BIFF2Format },
	/*::[*/0x001f/*::]*/: { /* n:"BIFF2FMTCNT", */ }, /* 16-bit cnt of BIFF2FORMAT records */
	/*::[*/0x0020/*::]*/: { /* n:"BIFF2COLINFO", */ },
	/*::[*/0x0021/*::]*/: { /* n:"Array", */ f:parse_Array },
	/*::[*/0x0024/*::]*/: { /* n:"COLWIDTH", */ },
	/*::[*/0x0025/*::]*/: { /* n:"DefaultRowHeight", */ f:parse_DefaultRowHeight },
	// 0x2c ??
	// 0x2d ??
	// 0x2e ??
	// 0x30 FONTCOUNT: number of fonts
	/*::[*/0x0032/*::]*/: { /* n:"BIFF2FONTXTRA", */ f:parse_BIFF2FONTXTRA },
	// 0x35: INFOOPTS
	// 0x36: TABLE (BIFF2 only)
	// 0x37: TABLE2 (BIFF2 only)
	// 0x38: WNDESK
	// 0x39 ??
	// 0x3a: BEGINPREF
	// 0x3b: ENDPREF
	/*::[*/0x003e/*::]*/: { /* n:"BIFF2WINDOW2", */ },
	// 0x3f ??
	// 0x46: SHOWSCROLL
	// 0x47: SHOWFORMULA
	// 0x48: STATUSBAR
	// 0x49: SHORTMENUS
	// 0x4A:
	// 0x4B:
	// 0x4C:
	// 0x4E:
	// 0x4F:
	// 0x58: TOOLBAR (BIFF3)

	/* - - - */
	/*::[*/0x0034/*::]*/: { /* n:"DDEObjName", */ },
	/*::[*/0x0043/*::]*/: { /* n:"BIFF2XF", */ },
	/*::[*/0x0044/*::]*/: { /* n:"BIFF2XFINDEX", */ f:parseuint16 },
	/*::[*/0x0045/*::]*/: { /* n:"BIFF2FONTCLR", */ },
	/*::[*/0x0056/*::]*/: { /* n:"BIFF4FMTCNT", */ }, /* 16-bit cnt, similar to BIFF2 */
	/*::[*/0x007e/*::]*/: { /* n:"RK", */ }, /* Not necessarily same as 0x027e */
	/*::[*/0x007f/*::]*/: { /* n:"ImData", */ f:parse_ImData },
	/*::[*/0x0087/*::]*/: { /* n:"Addin", */ },
	/*::[*/0x0088/*::]*/: { /* n:"Edg", */ },
	/*::[*/0x0089/*::]*/: { /* n:"Pub", */ },
	// 0x8A
	// 0x8B LH: alternate menu key flag (BIFF3/4)
	// 0x8E
	// 0x8F
	/*::[*/0x0091/*::]*/: { /* n:"Sub", */ },
	// 0x93 STYLE
	/*::[*/0x0094/*::]*/: { /* n:"LHRecord", */ },
	/*::[*/0x0095/*::]*/: { /* n:"LHNGraph", */ },
	/*::[*/0x0096/*::]*/: { /* n:"Sound", */ },
	// 0xA2 FNPROTO: function prototypes (BIFF4)
	// 0xA3
	// 0xA8
	/*::[*/0x00a9/*::]*/: { /* n:"CoordList", */ },
	/*::[*/0x00ab/*::]*/: { /* n:"GCW", */ },
	/*::[*/0x00bc/*::]*/: { /* n:"ShrFmla", */ }, /* Not necessarily same as 0x04bc */
	/*::[*/0x00bf/*::]*/: { /* n:"ToolbarHdr", */ },
	/*::[*/0x00c0/*::]*/: { /* n:"ToolbarEnd", */ },
	/*::[*/0x00c2/*::]*/: { /* n:"AddMenu", */ },
	/*::[*/0x00c3/*::]*/: { /* n:"DelMenu", */ },
	/*::[*/0x00d6/*::]*/: { /* n:"RString", */ f:parse_RString },
	/*::[*/0x00df/*::]*/: { /* n:"UDDesc", */ },
	/*::[*/0x00ea/*::]*/: { /* n:"TabIdConf", */ },
	/*::[*/0x0162/*::]*/: { /* n:"XL5Modify", */ },
	/*::[*/0x01a5/*::]*/: { /* n:"FileSharing2", */ },
	/*::[*/0x0206/*::]*/: { /* n:"Formula", */ f:parse_Formula },
	/*::[*/0x0209/*::]*/: { /* n:"BOF", */ f:parse_BOF },
	/*::[*/0x0218/*::]*/: { /* n:"Lbl", */ f:parse_Lbl },
	/*::[*/0x0223/*::]*/: { /* n:"ExternName", */ f:parse_ExternName },
	/*::[*/0x0231/*::]*/: { /* n:"Font", */ },
	/*::[*/0x0243/*::]*/: { /* n:"BIFF3XF", */ },
	/*::[*/0x0406/*::]*/: { /* n:"Formula", */ f:parse_Formula },
	/*::[*/0x0409/*::]*/: { /* n:"BOF", */ f:parse_BOF },
	/*::[*/0x0443/*::]*/: { /* n:"BIFF4XF", */ },
	/*::[*/0x086d/*::]*/: { /* n:"FeatInfo", */ },
	/*::[*/0x0873/*::]*/: { /* n:"FeatInfo11", */ },
	/*::[*/0x0881/*::]*/: { /* n:"SXAddl12", */ },
	/*::[*/0x08c0/*::]*/: { /* n:"AutoWebPub", */ },
	/*::[*/0x08c1/*::]*/: { /* n:"ListObj", */ },
	/*::[*/0x08c2/*::]*/: { /* n:"ListField", */ },
	/*::[*/0x08c3/*::]*/: { /* n:"ListDV", */ },
	/*::[*/0x08c4/*::]*/: { /* n:"ListCondFmt", */ },
	/*::[*/0x08c5/*::]*/: { /* n:"ListCF", */ },
	/*::[*/0x08c6/*::]*/: { /* n:"FMQry", */ },
	/*::[*/0x08c7/*::]*/: { /* n:"FMSQry", */ },
	/*::[*/0x08c8/*::]*/: { /* n:"PLV", */ },
	/*::[*/0x08c9/*::]*/: { /* n:"LnExt", */ },
	/*::[*/0x08ca/*::]*/: { /* n:"MkrExt", */ },
	/*::[*/0x08cb/*::]*/: { /* n:"CrtCoopt", */ },
	/*::[*/0x08d6/*::]*/: { /* n:"FRTArchId$", */ r:12 },

	/*::[*/0x7262/*::]*/: {}
};

function write_biff_rec(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {
	var t/*:number*/ = type;
	if(isNaN(t)) return;
	var len = length || (payload||[]).length || 0;
	var o = ba.next(4);
	o.write_shift(2, t);
	o.write_shift(2, len);
	if(/*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);
}
/* note: browser DOM element cannot see mso- style attrs, must parse */
function html_to_sheet(str/*:string*/, _opts)/*:Workbook*/ {
	var opts = _opts || {};
	var ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);
	str = str.replace(/<!--.*?-->/g, "");
	var mtch/*:any*/ = str.match(/<table/i);
	if(!mtch) throw new Error("Invalid HTML: could not find <table>");
	var mtch2/*:any*/ = str.match(/<\/table/i);
	var i/*:number*/ = mtch.index, j/*:number*/ = mtch2 && mtch2.index || str.length;
	var rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, "<tr>");
	var R = -1, C = 0, RS = 0, CS = 0;
	var range/*:Range*/ = {s:{r:10000000, c:10000000},e:{r:0,c:0}};
	var merges/*:Array<Range>*/ = [];
	for(i = 0; i < rows.length; ++i) {
		var row = rows[i].trim();
		var hd = row.slice(0,3).toLowerCase();
		if(hd == "<tr") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }
		if(hd != "<td" && hd != "<th") continue;
		var cells = row.split(/<\/t[dh]>/i);
		for(j = 0; j < cells.length; ++j) {
			var cell = cells[j].trim();
			if(!cell.match(/<t[dh]/i)) continue;
			var m = cell, cc = 0;
			/* TODO: parse styles etc */
			while(m.charAt(0) == "<" && (cc = m.indexOf(">")) > -1) m = m.slice(cc+1);
			for(var midx = 0; midx < merges.length; ++midx) {
				var _merge/*:Range*/ = merges[midx];
				if(_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) { C = _merge.e.c + 1; midx = -1; }
			}
			var tag = parsexmltag(cell.slice(0, cell.indexOf(">")));
			CS = tag.colspan ? +tag.colspan : 1;
			if((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});
			var _t/*:string*/ = tag.t || tag["data-t"] || "";
			/* TODO: generate stub cells */
			if(!m.length) { C += CS; continue; }
			m = htmldecode(m);
			if(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;
			if(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;
			if(!m.length) { C += CS; continue; }
			var o/*:Cell*/ = {t:'s', v:m};
			if(opts.raw || !m.trim().length || _t == 's');
			else if(m === 'TRUE') o = {t:'b', v:true};
			else if(m === 'FALSE') o = {t:'b', v:false};
			else if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};
			else if(!isNaN(fuzzydate(m).getDate())) {
				o = ({t:'d', v:parseDate(m)}/*:any*/);
				if(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);
				o.z = opts.dateNF || table_fmt[14];
			}
			if(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }
			else ws[encode_cell({r:R, c:C})] = o;
			C += CS;
		}
	}
	ws['!ref'] = encode_range(range);
	if(merges.length) ws["!merges"] = merges;
	return ws;
}
function make_html_row(ws/*:Worksheet*/, r/*:Range*/, R/*:number*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {
	var M/*:Array<Range>*/ = (ws['!merges'] ||[]);
	var oo/*:Array<string>*/ = [];
	for(var C = r.s.c; C <= r.e.c; ++C) {
		var RS = 0, CS = 0;
		for(var j = 0; j < M.length; ++j) {
			if(M[j].s.r > R || M[j].s.c > C) continue;
			if(M[j].e.r < R || M[j].e.c < C) continue;
			if(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }
			RS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;
		}
		if(RS < 0) continue;
		var coord = encode_cell({r:R,c:C});
		var cell = o.dense ? (ws[R]||[])[C] : ws[coord];
		/* TODO: html entities */
		var w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || "")) || "";
		var sp = ({}/*:any*/);
		if(RS > 1) sp.rowspan = RS;
		if(CS > 1) sp.colspan = CS;
		if(o.editable) w = '<span contenteditable="true">' + w + '</span>';
		else if(cell) {
			sp["data-t"] = cell && cell.t || 'z';
			if(cell.v != null) sp["data-v"] = cell.v;
			if(cell.z != null) sp["data-z"] = cell.z;
			if(cell.l && (cell.l.Target || "#").charAt(0) != "#") w = '<a href="' + cell.l.Target +'">' + w + '</a>';
		}
		sp.id = (o.id || "sjs") + "-" + coord;
		oo.push(writextag('td', w, sp));
	}
	var preamble = "<tr>";
	return preamble + oo.join("") + "</tr>";
}

var HTML_BEGIN = '<html><head><meta charset="utf-8"/><title>SheetJS Table Export</title></head><body>';
var HTML_END = '</body></html>';

function html_to_workbook(str/*:string*/, opts)/*:Workbook*/ {
	var mtch = str.match(/<table[\s\S]*?>[\s\S]*?<\/table>/gi);
	if(!mtch || mtch.length == 0) throw new Error("Invalid HTML: could not find <table>");
	if(mtch.length == 1) return sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);
	var wb = book_new();
	mtch.forEach(function(s, idx) { book_append_sheet(wb, html_to_sheet(s, opts), "Sheet" + (idx+1)); });
	return wb;
}

function make_html_preamble(ws/*:Worksheet*/, R/*:Range*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {
	var out/*:Array<string>*/ = [];
	return out.join("") + '<table' + (o && o.id ? ' id="' + o.id + '"' : "") + '>';
}

function sheet_to_html(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*//*, wb:?Workbook*/)/*:string*/ {
	var o = opts || {};
	var header = o.header != null ? o.header : HTML_BEGIN;
	var footer = o.footer != null ? o.footer : HTML_END;
	var out/*:Array<string>*/ = [header];
	var r = decode_range(ws['!ref']);
	o.dense = Array.isArray(ws);
	out.push(make_html_preamble(ws, r, o));
	for(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));
	out.push("</table>" + footer);
	return out.join("");
}

function sheet_add_dom(ws/*:Worksheet*/, table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {
	var opts = _opts || {};
	var or_R = 0, or_C = 0;
	if(opts.origin != null) {
		if(typeof opts.origin == 'number') or_R = opts.origin;
		else {
			var _origin/*:CellAddress*/ = typeof opts.origin == "string" ? decode_cell(opts.origin) : opts.origin;
			or_R = _origin.r; or_C = _origin.c;
		}
	}

	var rows/*:HTMLCollection<HTMLTableRowElement>*/ = table.getElementsByTagName('tr');
	var sheetRows = Math.min(opts.sheetRows||10000000, rows.length);
	var range/*:Range*/ = {s:{r:0,c:0},e:{r:or_R,c:or_C}};
	if(ws["!ref"]) {
		var _range/*:Range*/ = decode_range(ws["!ref"]);
		range.s.r = Math.min(range.s.r, _range.s.r);
		range.s.c = Math.min(range.s.c, _range.s.c);
		range.e.r = Math.max(range.e.r, _range.e.r);
		range.e.c = Math.max(range.e.c, _range.e.c);
		if(or_R == -1) range.e.r = or_R = _range.e.r + 1;
	}
	var merges/*:Array<Range>*/ = [], midx = 0;
	var rowinfo/*:Array<RowInfo>*/ = ws["!rows"] || (ws["!rows"] = []);
	var _R = 0, R = 0, _C = 0, C = 0, RS = 0, CS = 0;
	if(!ws["!cols"]) ws['!cols'] = [];
	for(; _R < rows.length && R < sheetRows; ++_R) {
		var row/*:HTMLTableRowElement*/ = rows[_R];
		if (is_dom_element_hidden(row)) {
			if (opts.display) continue;
			rowinfo[R] = {hidden: true};
		}
		var elts/*:HTMLCollection<HTMLTableCellElement>*/ = (row.children/*:any*/);
		for(_C = C = 0; _C < elts.length; ++_C) {
			var elt/*:HTMLTableCellElement*/ = elts[_C];
			if (opts.display && is_dom_element_hidden(elt)) continue;
			var v/*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);
			var z/*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');
			for(midx = 0; midx < merges.length; ++midx) {
				var m/*:Range*/ = merges[midx];
				if(m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) { C = m.e.c+1 - or_C; midx = -1; }
			}
			/* TODO: figure out how to extract nonstandard mso- style */
			CS = +elt.getAttribute("colspan") || 1;
			if( ((RS = (+elt.getAttribute("rowspan") || 1)))>1 || CS>1) merges.push({s:{r:R + or_R,c:C + or_C},e:{r:R + or_R + (RS||1) - 1, c:C + or_C + (CS||1) - 1}});
			var o/*:Cell*/ = {t:'s', v:v};
			var _t/*:string*/ = elt.getAttribute("data-t") || elt.getAttribute("t") || "";
			if(v != null) {
				if(v.length == 0) o.t = _t || 'z';
				else if(opts.raw || v.trim().length == 0 || _t == "s");
				else if(v === 'TRUE') o = {t:'b', v:true};
				else if(v === 'FALSE') o = {t:'b', v:false};
				else if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};
				else if(!isNaN(fuzzydate(v).getDate())) {
					o = ({t:'d', v:parseDate(v)}/*:any*/);
					if(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);
					o.z = opts.dateNF || table_fmt[14];
				}
			}
			if(o.z === undefined && z != null) o.z = z;
			/* The first link is used.  Links are assumed to be fully specified.
			 * TODO: The right way to process relative links is to make a new <a> */
			var l = "", Aelts = elt.getElementsByTagName("A");
			if(Aelts && Aelts.length) for(var Aelti = 0; Aelti < Aelts.length; ++Aelti)	if(Aelts[Aelti].hasAttribute("href")) {
				l = Aelts[Aelti].getAttribute("href"); if(l.charAt(0) != "#") break;
			}
			if(l && l.charAt(0) != "#") o.l = ({ Target: l });
			if(opts.dense) { if(!ws[R + or_R]) ws[R + or_R] = []; ws[R + or_R][C + or_C] = o; }
			else ws[encode_cell({c:C + or_C, r:R + or_R})] = o;
			if(range.e.c < C + or_C) range.e.c = C + or_C;
			C += CS;
		}
		++R;
	}
	if(merges.length) ws['!merges'] = (ws["!merges"] || []).concat(merges);
	range.e.r = Math.max(range.e.r, R - 1 + or_R);
	ws['!ref'] = encode_range(range);
	if(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1 + or_R,range)); // We can count the real number of rows to parse but we don't to improve the performance
	return ws;
}

function parse_dom_table(table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {
	var opts = _opts || {};
	var ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);
	return sheet_add_dom(ws, table, _opts);
}

function table_to_book(table/*:HTMLElement*/, opts/*:?any*/)/*:Workbook*/ {
	return sheet_to_workbook(parse_dom_table(table, opts), opts);
}

function is_dom_element_hidden(element/*:HTMLElement*/)/*:boolean*/ {
	var display/*:string*/ = '';
	var get_computed_style/*:?function*/ = get_get_computed_style_function(element);
	if(get_computed_style) display = get_computed_style(element).getPropertyValue('display');
	if(!display) display = element.style && element.style.display;
	return display === 'none';
}

/* global getComputedStyle */
function get_get_computed_style_function(element/*:HTMLElement*/)/*:?function*/ {
	// The proper getComputedStyle implementation is the one defined in the element window
	if(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;
	// If it is not available, try to get one from the global namespace
	if(typeof getComputedStyle === 'function') return getComputedStyle;
	return null;
}
/* OpenDocument */
function parse_text_p(text/*:string*//*::, tag*/)/*:Array<any>*/ {
	/* 6.1.2 White Space Characters */
	var fixed = text
		.replace(/[\t\r\n]/g, " ").trim().replace(/ +/g, " ")
		.replace(/<text:s\/>/g," ")
		.replace(/<text:s text:c="(\d+)"\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(" "); })
		.replace(/<text:tab[^>]*\/>/g,"\t")
		.replace(/<text:line-break\/>/g,"\n");
	var v = unescapexml(fixed.replace(/<[^>]*>/g,""));

	return [v];
}

var number_formats_ods = {
	/* ods name: [short ssf fmt, long ssf fmt] */
	day:           ["d",   "dd"],
	month:         ["m",   "mm"],
	year:          ["y",   "yy"],
	hours:         ["h",   "hh"],
	minutes:       ["m",   "mm"],
	seconds:       ["s",   "ss"],
	"am-pm":       ["A/P", "AM/PM"],
	"day-of-week": ["ddd", "dddd"],
	era:           ["e",   "ee"],
	/* there is no native representation of LO "Q" format */
	quarter:       ["\\Qm", "m\\\"th quarter\""]
};


function parse_content_xml(d/*:string*/, _opts)/*:Workbook*/ {
		var opts = _opts || {};
		var str = xlml_normalize(d);
		var state/*:Array<any>*/ = [], tmp;
		var tag/*:: = {}*/;
		var NFtag = {name:""}, NF = "", pidx = 0;
		var sheetag/*:: = {name:"", '名称':""}*/;
		var rowtag/*:: = {'行号':""}*/;
		var Sheets = {}, SheetNames/*:Array<string>*/ = [];
		var ws = opts.dense ? ([]/*:any*/) : ({}/*:any*/);
		var Rn, q/*:: :any = ({t:"", v:null, z:null, w:"",c:[],}:any)*/;
		var ctag = ({value:""}/*:any*/);
		var textp = "", textpidx = 0;
		var textR = [];
		var R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};
		var row_ol = 0;
		var number_format_map = {};
		var merges/*:Array<Range>*/ = [], mrange = {}, mR = 0, mC = 0;
		var rowinfo/*:Array<RowInfo>*/ = [], rowpeat = 1, colpeat = 1;
		var arrayf/*:Array<[Range, string]>*/ = [];
		var WB = {Names:[]};
		var atag = ({}/*:any*/);
		var _Ref/*:[string, string]*/ = ["", ""];
		var comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);
		var creator = "", creatoridx = 0;
		var isstub = false, intable = false;
		var i = 0;
		xlmlregex.lastIndex = 0;
		str = str.replace(/<!--([\s\S]*?)-->/mg,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");
		while((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,""))) {

			case 'table': case '工作表': // 9.1.2 <table:table>
				if(Rn[1]==='/') {
					if(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);
					else ws['!ref'] = "A1:A1";
					if(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {
						ws['!fullref'] = ws['!ref'];
						range.e.r = opts.sheetRows - 1;
						ws['!ref'] = encode_range(range);
					}
					if(merges.length) ws['!merges'] = merges;
					if(rowinfo.length) ws["!rows"] = rowinfo;
					sheetag.name = sheetag['名称'] || sheetag.name;
					if(typeof JSON !== 'undefined') JSON.stringify(sheetag);
					SheetNames.push(sheetag.name);
					Sheets[sheetag.name] = ws;
					intable = false;
				}
				else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
					sheetag = parsexmltag(Rn[0], false);
					R = C = -1;
					range.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;
					ws = opts.dense ? ([]/*:any*/) : ({}/*:any*/); merges = [];
					rowinfo = [];
					intable = true;
				}
				break;

			case 'table-row-group': // 9.1.9 <table:table-row-group>
				if(Rn[1] === "/") --row_ol; else ++row_ol;
				break;
			case 'table-row': case '行': // 9.1.3 <table:table-row>
				if(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }
				rowtag = parsexmltag(Rn[0], false);
				if(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;
				rowpeat = +rowtag['number-rows-repeated'] || 1;
				/* TODO: remove magic */
				if(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};
				C = -1; break;
			case 'covered-table-cell': // 9.1.5 <table:covered-table-cell>
				if(Rn[1] !== '/') ++C;
				if(opts.sheetStubs) {
					if(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }
					else ws[encode_cell({r:R,c:C})] = {t:'z'};
				}
				textp = ""; textR = [];
				break; /* stub */
			case 'table-cell': case '数据':
				if(Rn[0].charAt(Rn[0].length-2) === '/') {
					++C;
					ctag = parsexmltag(Rn[0], false);
					colpeat = parseInt(ctag['number-columns-repeated']||"1", 10);
					q = ({t:'z', v:null/*:: , z:null, w:"",c:[]*/}/*:any*/);
					if(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));
					if((ctag['数据类型'] || ctag['value-type']) == "string") {
						q.t = "s"; q.v = unescapexml(ctag['string-value'] || "");
						if(opts.dense) {
							if(!ws[R]) ws[R] = [];
							ws[R][C] = q;
						} else {
							ws[encode_cell({r:R,c:C})] = q;
						}
					}
					C+= colpeat-1;
				} else if(Rn[1]!=='/') {
					++C;
					textp = ""; textpidx = 0; textR = [];
					colpeat = 1;
					var rptR = rowpeat ? R + rowpeat - 1 : R;
					if(C > range.e.c) range.e.c = C;
					if(C < range.s.c) range.s.c = C;
					if(R < range.s.r) range.s.r = R;
					if(rptR > range.e.r) range.e.r = rptR;
					ctag = parsexmltag(Rn[0], false);
					comments = []; comment = ({}/*:any*/);
					q = ({t:ctag['数据类型'] || ctag['value-type'], v:null/*:: , z:null, w:"",c:[]*/}/*:any*/);
					if(opts.cellFormula) {
						if(ctag.formula) ctag.formula = unescapexml(ctag.formula);
						if(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {
							mR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;
							mC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;
							mrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};
							q.F = encode_range(mrange);
							arrayf.push([mrange, q.F]);
						}
						if(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);
						else for(i = 0; i < arrayf.length; ++i)
							if(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)
								if(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)
									q.F = arrayf[i][1];
					}
					if(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {
						mR = parseInt(ctag['number-rows-spanned'],10) || 0;
						mC = parseInt(ctag['number-columns-spanned'],10) || 0;
						mrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};
						merges.push(mrange);
					}

					/* 19.675.2 table:number-columns-repeated */
					if(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);

					/* 19.385 office:value-type */
					switch(q.t) {
						case 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;
						case 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;
						case 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;
						case 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;
						case 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);
							if(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v); }
							q.z = 'm/d/yy'; break;
						case 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400;
							if(opts.cellDates) { q.t = 'd'; q.v = numdate(q.v); }
							q.z = 'HH:MM:SS'; break;
						case 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;
						default:
							if(q.t === 'string' || q.t === 'text' || !q.t) {
								q.t = 's';
								if(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }
							} else throw new Error('Unsupported value type ' + q.t);
					}
				} else {
					isstub = false;
					if(q.t === 's') {
						q.v = textp || '';
						if(textR.length) q.R = textR;
						isstub = textpidx == 0;
					}
					if(atag.Target) q.l = atag;
					if(comments.length > 0) { q.c = comments; comments = []; }
					if(textp && opts.cellText !== false) q.w = textp;
					if(isstub) { q.t = "z"; delete q.v; }
					if(!isstub || opts.sheetStubs) {
						if(!(opts.sheetRows && opts.sheetRows <= R)) {
							for(var rpt = 0; rpt < rowpeat; ++rpt) {
								colpeat = parseInt(ctag['number-columns-repeated']||"1", 10);
								if(opts.dense) {
									if(!ws[R + rpt]) ws[R + rpt] = [];
									ws[R + rpt][C] = rpt == 0 ? q : dup(q);
									while(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);
								} else {
									ws[encode_cell({r:R + rpt,c:C})] = q;
									while(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);
								}
								if(range.e.c <= C) range.e.c = C;
							}
						}
					}
					colpeat = parseInt(ctag['number-columns-repeated']||"1", 10);
					C += colpeat-1; colpeat = 0;
					q = {/*:: t:"", v:null, z:null, w:"",c:[]*/};
					textp = ""; textR = [];
				}
				atag = ({}/*:any*/);
				break; // 9.1.4 <table:table-cell>

			/* pure state */
			case 'document': // TODO: <office:document> is the root for FODS
			case 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>
			case 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>
			case 'scripts': // 3.12 <office:scripts>
			case 'styles': // TODO <office:styles>
			case 'font-face-decls': // 3.14 <office:font-face-decls>
			case 'master-styles': // 3.15.4 <office:master-styles> -- relevant for FODS
				if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw "Bad state: "+tmp;}
				else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);
				break;

			case 'annotation': // 14.1 <office:annotation>
				if(Rn[1]==='/'){
					if((tmp=state.pop())[0]!==Rn[3]) throw "Bad state: "+tmp;
					comment.t = textp;
					if(textR.length) /*::(*/comment/*:: :any)*/.R = textR;
					comment.a = creator;
					comments.push(comment);
				}
				else if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}
				creator = ""; creatoridx = 0;
				textp = ""; textpidx = 0; textR = [];
				break;

			case 'creator': // 4.3.2.7 <dc:creator>
				if(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }
				else creatoridx = Rn.index + Rn[0].length;
				break;

			/* ignore state */
			case 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF
			case 'settings': // TODO: <office:settings>
			case 'config-item-set': // TODO: <office:config-item-set>
			case 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>
			case 'config-item-map-entry': // TODO: <office:config-item-map-entry>
			case 'config-item-map-named': // TODO: <office:config-item-map-entry>
			case 'shapes': // 9.2.8 <table:shapes>
			case 'frame': // 10.4.2 <draw:frame>
			case 'text-box': // 10.4.3 <draw:text-box>
			case 'image': // 10.4.4 <draw:image>
			case 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>
			case 'list-style': // 16.30 <text:list-style>
			case 'form': // 13.13 <form:form>
			case 'dde-links': // 9.8 <table:dde-links>
			case 'event-listeners': // TODO
			case 'chart': // TODO
				if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw "Bad state: "+tmp;}
				else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);
				textp = ""; textpidx = 0; textR = [];
				break;

			case 'scientific-number': // TODO: <number:scientific-number>
				break;
			case 'currency-symbol': // TODO: <number:currency-symbol>
				break;
			case 'currency-style': // TODO: <number:currency-style>
				break;
			case 'number-style': // 16.27.2 <number:number-style>
			case 'percentage-style': // 16.27.9 <number:percentage-style>
			case 'date-style': // 16.27.10 <number:date-style>
			case 'time-style': // 16.27.18 <number:time-style>
				if(Rn[1]==='/'){
					number_format_map[NFtag.name] = NF;
					if((tmp=state.pop())[0]!==Rn[3]) throw "Bad state: "+tmp;
				} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
					NF = "";
					NFtag = parsexmltag(Rn[0], false);
					state.push([Rn[3], true]);
				} break;

			case 'script': break; // 3.13 <office:script>
			case 'libraries': break; // TODO: <ooo:libraries>
			case 'automatic-styles': break; // 3.15.3 <office:automatic-styles>

			case 'default-style': // TODO: <style:default-style>
			case 'page-layout': break; // TODO: <style:page-layout>
			case 'style': // 16.2 <style:style>
				break;
			case 'map': break; // 16.3 <style:map>
			case 'font-face': break; // 16.21 <style:font-face>

			case 'paragraph-properties': break; // 17.6 <style:paragraph-properties>
			case 'table-properties': break; // 17.15 <style:table-properties>
			case 'table-column-properties': break; // 17.16 <style:table-column-properties>
			case 'table-row-properties': break; // 17.17 <style:table-row-properties>
			case 'table-cell-properties': break; // 17.18 <style:table-cell-properties>

			case 'number': // 16.27.3 <number:number>
				switch(state[state.length-1][0]) {
					case 'time-style':
					case 'date-style':
						tag = parsexmltag(Rn[0], false);
						NF += number_formats_ods[Rn[3]][tag.style==='long'?1:0]; break;
				} break;

			case 'fraction': break; // TODO 16.27.6 <number:fraction>

			case 'day': // 16.27.11 <number:day>
			case 'month': // 16.27.12 <number:month>
			case 'year': // 16.27.13 <number:year>
			case 'era': // 16.27.14 <number:era>
			case 'day-of-week': // 16.27.15 <number:day-of-week>
			case 'week-of-year': // 16.27.16 <number:week-of-year>
			case 'quarter': // 16.27.17 <number:quarter>
			case 'hours': // 16.27.19 <number:hours>
			case 'minutes': // 16.27.20 <number:minutes>
			case 'seconds': // 16.27.21 <number:seconds>
			case 'am-pm': // 16.27.22 <number:am-pm>
				switch(state[state.length-1][0]) {
					case 'time-style':
					case 'date-style':
						tag = parsexmltag(Rn[0], false);
						NF += number_formats_ods[Rn[3]][tag.style==='long'?1:0]; break;
				} break;

			case 'boolean-style': break; // 16.27.23 <number:boolean-style>
			case 'boolean': break; // 16.27.24 <number:boolean>
			case 'text-style': break; // 16.27.25 <number:text-style>
			case 'text': // 16.27.26 <number:text>
				if(Rn[0].slice(-2) === "/>") break;
				else if(Rn[1]==="/") switch(state[state.length-1][0]) {
					case 'number-style':
					case 'date-style':
					case 'time-style':
						NF += str.slice(pidx, Rn.index);
						break;
				}
				else pidx = Rn.index + Rn[0].length;
				break;

			case 'named-range': // 9.4.12 <table:named-range>
				tag = parsexmltag(Rn[0], false);
				_Ref = ods_to_csf_3D(tag['cell-range-address']);
				var nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]}/*:any*/);
				if(intable) nrange.Sheet = SheetNames.length;
				WB.Names.push(nrange);
				break;

			case 'text-content': break; // 16.27.27 <number:text-content>
			case 'text-properties': break; // 16.27.27 <style:text-properties>
			case 'embedded-text': break; // 16.27.4 <number:embedded-text>

			case 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3

			case 'forms': break; // 12.25.2 13.2
			case 'table-column': break; // 9.1.6 <table:table-column>
			case 'table-header-rows': break; // 9.1.7 <table:table-header-rows>
			case 'table-rows': break; // 9.1.12 <table:table-rows>
			/* TODO: outline levels */
			case 'table-column-group': break; // 9.1.10 <table:table-column-group>
			case 'table-header-columns': break; // 9.1.11 <table:table-header-columns>
			case 'table-columns': break; // 9.1.12 <table:table-columns>

			case 'null-date': break; // 9.4.2 <table:null-date> TODO: date1904

			case 'graphic-properties': break; // 17.21 <style:graphic-properties>
			case 'calculation-settings': break; // 9.4.1 <table:calculation-settings>
			case 'named-expressions': break; // 9.4.11 <table:named-expressions>
			case 'label-range': break; // 9.4.9 <table:label-range>
			case 'label-ranges': break; // 9.4.10 <table:label-ranges>
			case 'named-expression': break; // 9.4.13 <table:named-expression>
			case 'sort': break; // 9.4.19 <table:sort>
			case 'sort-by': break; // 9.4.20 <table:sort-by>
			case 'sort-groups': break; // 9.4.22 <table:sort-groups>

			case 'tab': break; // 6.1.4 <text:tab>
			case 'line-break': break; // 6.1.5 <text:line-break>
			case 'span': break; // 6.1.7 <text:span>
			case 'p': case '文本串': // 5.1.3 <text:p>
				if(['master-styles'].indexOf(state[state.length-1][0]) > -1) break;
				if(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {
					var ptp = parse_text_p(str.slice(textpidx,Rn.index));
					textp = (textp.length > 0 ? textp + "\n" : "") + ptp[0];
				} else { parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }
				break; // <text:p>
			case 's': break; // <text:s>

			case 'database-range': // 9.4.15 <table:database-range>
				if(Rn[1]==='/') break;
				try {
					_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);
					Sheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };
				} catch(e) {/* empty */}
				break;

			case 'date': break; // <*:date>

			case 'object': break; // 10.4.6.2 <draw:object>
			case 'title': case '标题': break; // <*:title> OR <uof:标题>
			case 'desc': break; // <*:desc>
			case 'binary-data': break; // 10.4.5 TODO: b64 blob

			/* 9.2 Advanced Tables */
			case 'table-source': break; // 9.2.6
			case 'scenario': break; // 9.2.6

			case 'iteration': break; // 9.4.3 <table:iteration>
			case 'content-validations': break; // 9.4.4 <table:
			case 'content-validation': break; // 9.4.5 <table:
			case 'help-message': break; // 9.4.6 <table:
			case 'error-message': break; // 9.4.7 <table:
			case 'database-ranges': break; // 9.4.14 <table:database-ranges>
			case 'filter': break; // 9.5.2 <table:filter>
			case 'filter-and': break; // 9.5.3 <table:filter-and>
			case 'filter-or': break; // 9.5.4 <table:filter-or>
			case 'filter-condition': break; // 9.5.5 <table:filter-condition>

			case 'list-level-style-bullet': break; // 16.31 <text:
			case 'list-level-style-number': break; // 16.32 <text:
			case 'list-level-properties': break; // 17.19 <style:

			/* 7.3 Document Fields */
			case 'sender-firstname': // 7.3.6.2
			case 'sender-lastname': // 7.3.6.3
			case 'sender-initials': // 7.3.6.4
			case 'sender-title': // 7.3.6.5
			case 'sender-position': // 7.3.6.6
			case 'sender-email': // 7.3.6.7
			case 'sender-phone-private': // 7.3.6.8
			case 'sender-fax': // 7.3.6.9
			case 'sender-company': // 7.3.6.10
			case 'sender-phone-work': // 7.3.6.11
			case 'sender-street': // 7.3.6.12
			case 'sender-city': // 7.3.6.13
			case 'sender-postal-code': // 7.3.6.14
			case 'sender-country': // 7.3.6.15
			case 'sender-state-or-province': // 7.3.6.16
			case 'author-name': // 7.3.7.1
			case 'author-initials': // 7.3.7.2
			case 'chapter': // 7.3.8
			case 'file-name': // 7.3.9
			case 'template-name': // 7.3.9
			case 'sheet-name': // 7.3.9
				break;

			case 'event-listener':
				break;
			/* TODO: FODS Properties */
			case 'initial-creator':
			case 'creation-date':
			case 'print-date':
			case 'generator':
			case 'document-statistic':
			case 'user-defined':
			case 'editing-duration':
			case 'editing-cycles':
				break;

			/* TODO: FODS Config */
			case 'config-item':
				break;

			/* TODO: style tokens */
			case 'page-number': break; // TODO <text:page-number>
			case 'page-count': break; // TODO <text:page-count>
			case 'time': break; // TODO <text:time>

			/* 9.3 Advanced Table Cells */
			case 'cell-range-source': break; // 9.3.1 <table:
			case 'detective': break; // 9.3.2 <table:
			case 'operation': break; // 9.3.3 <table:
			case 'highlighted-range': break; // 9.3.4 <table:

			/* 9.6 Data Pilot Tables <table: */
			case 'data-pilot-table': // 9.6.3
			case 'source-cell-range': // 9.6.5
			case 'source-service': // 9.6.6
			case 'data-pilot-field': // 9.6.7
			case 'data-pilot-level': // 9.6.8
			case 'data-pilot-subtotals': // 9.6.9
			case 'data-pilot-subtotal': // 9.6.10
			case 'data-pilot-members': // 9.6.11
			case 'data-pilot-member': // 9.6.12
			case 'data-pilot-display-info': // 9.6.13
			case 'data-pilot-sort-info': // 9.6.14
			case 'data-pilot-layout-info': // 9.6.15
			case 'data-pilot-field-reference': // 9.6.16
			case 'data-pilot-groups': // 9.6.17
			case 'data-pilot-group': // 9.6.18
			case 'data-pilot-group-member': // 9.6.19
				break;

			/* 10.3 Drawing Shapes */
			case 'rect': // 10.3.2
				break;

			/* 14.6 DDE Connections */
			case 'dde-connection-decls': // 14.6.2 <text:
			case 'dde-connection-decl': // 14.6.3 <text:
			case 'dde-link': // 14.6.4 <table:
			case 'dde-source': // 14.6.5 <office:
				break;

			case 'properties': break; // 13.7 <form:properties>
			case 'property': break; // 13.8 <form:property>

			case 'a': // 6.1.8 hyperlink
				if(Rn[1]!== '/') {
					atag = parsexmltag(Rn[0], false);
					if(!atag.href) break;
					atag.Target = unescapexml(atag.href); delete atag.href;
					if(atag.Target.charAt(0) == "#" && atag.Target.indexOf(".") > -1) {
						_Ref = ods_to_csf_3D(atag.Target.slice(1));
						atag.Target = "#" + _Ref[0] + "!" + _Ref[1];
					} else if(atag.Target.match(/^\.\.[\\\/]/)) atag.Target = atag.Target.slice(3);
				}
				break;

			/* non-standard */
			case 'table-protection': break;
			case 'data-pilot-grand-total': break; // <table:
			case 'office-document-common-attrs': break; // bare
			default: switch(Rn[2]) {
				case 'dc:':       // TODO: properties
				case 'calcext:':  // ignore undocumented extensions
				case 'loext:':    // ignore undocumented extensions
				case 'ooo:':      // ignore undocumented extensions
				case 'chartooo:': // ignore undocumented extensions
				case 'draw:':     // TODO: drawing
				case 'style:':    // TODO: styles
				case 'chart:':    // TODO: charts
				case 'form:':     // TODO: forms
				case 'uof:':      // TODO: uof
				case '表:':       // TODO: uof
				case '字:':       // TODO: uof
					break;
				default: if(opts.WTF) throw new Error(Rn);
			}
		}
		var out/*:Workbook*/ = ({
			Sheets: Sheets,
			SheetNames: SheetNames,
			Workbook: WB
		}/*:any*/);
		if(opts.bookSheets) delete /*::(*/out/*:: :any)*/.Sheets;
		return out;
}

function parse_ods(zip/*:ZIPFile*/, opts/*:?ParseOpts*/)/*:Workbook*/ {
	opts = opts || ({}/*:any*/);
	if(safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);
	var content = getzipstr(zip, 'content.xml');
	if(!content) throw new Error("Missing content.xml in ODS / UOF file");
	var wb = parse_content_xml(utf8read(content), opts);
	if(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));
	return wb;
}
function parse_fods(data/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {
	return parse_content_xml(data, opts);
}

/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */
function u8_to_dataview(array) {
  return new DataView(array.buffer, array.byteOffset, array.byteLength);
}
function u8str(u8) {
  return typeof TextDecoder != "undefined" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));
}
function u8concat(u8a) {
  var len = u8a.reduce(function(acc, x) {
    return acc + x.length;
  }, 0);
  var out = new Uint8Array(len);
  var off = 0;
  u8a.forEach(function(u8) {
    out.set(u8, off);
    off += u8.length;
  });
  return out;
}
function popcnt(x) {
  x -= x >> 1 & 1431655765;
  x = (x & 858993459) + (x >> 2 & 858993459);
  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;
}
function readDecimal128LE(buf, offset) {
  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;
  var mantissa = buf[offset + 14] & 1;
  for (var j = offset + 13; j >= offset; --j)
    mantissa = mantissa * 256 + buf[j];
  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);
}
function parse_varint49(buf, ptr) {
  var l = ptr ? ptr[0] : 0;
  var usz = buf[l] & 127;
  varint:
    if (buf[l++] >= 128) {
      usz |= (buf[l] & 127) << 7;
      if (buf[l++] < 128)
        break varint;
      usz |= (buf[l] & 127) << 14;
      if (buf[l++] < 128)
        break varint;
      usz |= (buf[l] & 127) << 21;
      if (buf[l++] < 128)
        break varint;
      usz += (buf[l] & 127) * Math.pow(2, 28);
      ++l;
      if (buf[l++] < 128)
        break varint;
      usz += (buf[l] & 127) * Math.pow(2, 35);
      ++l;
      if (buf[l++] < 128)
        break varint;
      usz += (buf[l] & 127) * Math.pow(2, 42);
      ++l;
      if (buf[l++] < 128)
        break varint;
    }
  if (ptr)
    ptr[0] = l;
  return usz;
}
function varint_to_i32(buf) {
  var l = 0, i32 = buf[l] & 127;
  varint:
    if (buf[l++] >= 128) {
      i32 |= (buf[l] & 127) << 7;
      if (buf[l++] < 128)
        break varint;
      i32 |= (buf[l] & 127) << 14;
      if (buf[l++] < 128)
        break varint;
      i32 |= (buf[l] & 127) << 21;
      if (buf[l++] < 128)
        break varint;
      i32 |= (buf[l] & 127) << 28;
    }
  return i32;
}
function parse_shallow(buf) {
  var out = [], ptr = [0];
  while (ptr[0] < buf.length) {
    var off = ptr[0];
    var num = parse_varint49(buf, ptr);
    var type = num & 7;
    num = Math.floor(num / 8);
    var len = 0;
    var res;
    if (num == 0)
      break;
    switch (type) {
      case 0:
        {
          var l = ptr[0];
          while (buf[ptr[0]++] >= 128)
            ;
          res = buf.slice(l, ptr[0]);
        }
        break;
      case 5:
        len = 4;
        res = buf.slice(ptr[0], ptr[0] + len);
        ptr[0] += len;
        break;
      case 1:
        len = 8;
        res = buf.slice(ptr[0], ptr[0] + len);
        ptr[0] += len;
        break;
      case 2:
        len = parse_varint49(buf, ptr);
        res = buf.slice(ptr[0], ptr[0] + len);
        ptr[0] += len;
        break;
      case 3:
      case 4:
      default:
        throw new Error("PB Type ".concat(type, " for Field ").concat(num, " at offset ").concat(off));
    }
    var v = { data: res, type: type };
    if (out[num] == null)
      out[num] = [v];
    else
      out[num].push(v);
  }
  return out;
}
function mappa(data, cb) {
  return (data == null ? void 0 : data.map(function(d) {
    return cb(d.data);
  })) || [];
}
function parse_iwa_file(buf) {
  var _a;
  var out = [], ptr = [0];
  while (ptr[0] < buf.length) {
    var len = parse_varint49(buf, ptr);
    var ai = parse_shallow(buf.slice(ptr[0], ptr[0] + len));
    ptr[0] += len;
    var res = {
      id: varint_to_i32(ai[1][0].data),
      messages: []
    };
    ai[2].forEach(function(b) {
      var mi = parse_shallow(b.data);
      var fl = varint_to_i32(mi[3][0].data);
      res.messages.push({
        meta: mi,
        data: buf.slice(ptr[0], ptr[0] + fl)
      });
      ptr[0] += fl;
    });
    if ((_a = ai[3]) == null ? void 0 : _a[0])
      res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;
    out.push(res);
  }
  return out;
}
function parse_snappy_chunk(type, buf) {
  if (type != 0)
    throw new Error("Unexpected Snappy chunk type ".concat(type));
  var ptr = [0];
  var usz = parse_varint49(buf, ptr);
  var chunks = [];
  while (ptr[0] < buf.length) {
    var tag = buf[ptr[0]] & 3;
    if (tag == 0) {
      var len = buf[ptr[0]++] >> 2;
      if (len < 60)
        ++len;
      else {
        var c = len - 59;
        len = buf[ptr[0]];
        if (c > 1)
          len |= buf[ptr[0] + 1] << 8;
        if (c > 2)
          len |= buf[ptr[0] + 2] << 16;
        if (c > 3)
          len |= buf[ptr[0] + 3] << 24;
        len >>>= 0;
        len++;
        ptr[0] += c;
      }
      chunks.push(buf.slice(ptr[0], ptr[0] + len));
      ptr[0] += len;
      continue;
    } else {
      var offset = 0, length = 0;
      if (tag == 1) {
        length = (buf[ptr[0]] >> 2 & 7) + 4;
        offset = (buf[ptr[0]++] & 224) << 3;
        offset |= buf[ptr[0]++];
      } else {
        length = (buf[ptr[0]++] >> 2) + 1;
        if (tag == 2) {
          offset = buf[ptr[0]] | buf[ptr[0] + 1] << 8;
          ptr[0] += 2;
        } else {
          offset = (buf[ptr[0]] | buf[ptr[0] + 1] << 8 | buf[ptr[0] + 2] << 16 | buf[ptr[0] + 3] << 24) >>> 0;
          ptr[0] += 4;
        }
      }
      chunks = [u8concat(chunks)];
      if (offset == 0)
        throw new Error("Invalid offset 0");
      if (offset > chunks[0].length)
        throw new Error("Invalid offset beyond length");
      if (length >= offset) {
        chunks.push(chunks[0].slice(-offset));
        length -= offset;
        while (length >= chunks[chunks.length - 1].length) {
          chunks.push(chunks[chunks.length - 1]);
          length -= chunks[chunks.length - 1].length;
        }
      }
      chunks.push(chunks[0].slice(-offset, -offset + length));
    }
  }
  var o = u8concat(chunks);
  if (o.length != usz)
    throw new Error("Unexpected length: ".concat(o.length, " != ").concat(usz));
  return o;
}
function decompress_iwa_file(buf) {
  var out = [];
  var l = 0;
  while (l < buf.length) {
    var t = buf[l++];
    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;
    l += 3;
    out.push(parse_snappy_chunk(t, buf.slice(l, l + len)));
    l += len;
  }
  if (l !== buf.length)
    throw new Error("data is not a valid framed stream!");
  return u8concat(out);
}
function parse_old_storage(buf, sst, rsst, v) {
  var dv = u8_to_dataview(buf);
  var flags = dv.getUint32(4, true);
  var data_offset = (v > 1 ? 12 : 8) + popcnt(flags & (v > 1 ? 3470 : 398)) * 4;
  var ridx = -1, sidx = -1, ieee = NaN, dt = new Date(2001, 0, 1);
  if (flags & 512) {
    ridx = dv.getUint32(data_offset, true);
    data_offset += 4;
  }
  data_offset += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;
  if (flags & 16) {
    sidx = dv.getUint32(data_offset, true);
    data_offset += 4;
  }
  if (flags & 32) {
    ieee = dv.getFloat64(data_offset, true);
    data_offset += 8;
  }
  if (flags & 64) {
    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);
    data_offset += 8;
  }
  var ret;
  switch (buf[2]) {
    case 0:
      break;
    case 2:
      ret = { t: "n", v: ieee };
      break;
    case 3:
      ret = { t: "s", v: sst[sidx] };
      break;
    case 5:
      ret = { t: "d", v: dt };
      break;
    case 6:
      ret = { t: "b", v: ieee > 0 };
      break;
    case 7:
      ret = { t: "n", v: ieee / 86400 };
      break;
    case 8:
      ret = { t: "e", v: 0 };
      break;
    case 9:
      {
        if (ridx > -1)
          ret = { t: "s", v: rsst[ridx] };
        else if (sidx > -1)
          ret = { t: "s", v: sst[sidx] };
        else if (!isNaN(ieee))
          ret = { t: "n", v: ieee };
        else
          throw new Error("Unsupported cell type ".concat(buf.slice(0, 4)));
      }
      break;
    default:
      throw new Error("Unsupported cell type ".concat(buf.slice(0, 4)));
  }
  return ret;
}
function parse_new_storage(buf, sst, rsst) {
  var dv = u8_to_dataview(buf);
  var flags = dv.getUint32(8, true);
  var data_offset = 12;
  var ridx = -1, sidx = -1, d128 = NaN, ieee = NaN, dt = new Date(2001, 0, 1);
  if (flags & 1) {
    d128 = readDecimal128LE(buf, data_offset);
    data_offset += 16;
  }
  if (flags & 2) {
    ieee = dv.getFloat64(data_offset, true);
    data_offset += 8;
  }
  if (flags & 4) {
    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);
    data_offset += 8;
  }
  if (flags & 8) {
    sidx = dv.getUint32(data_offset, true);
    data_offset += 4;
  }
  if (flags & 16) {
    ridx = dv.getUint32(data_offset, true);
    data_offset += 4;
  }
  var ret;
  switch (buf[1]) {
    case 0:
      break;
    case 2:
      ret = { t: "n", v: d128 };
      break;
    case 3:
      ret = { t: "s", v: sst[sidx] };
      break;
    case 5:
      ret = { t: "d", v: dt };
      break;
    case 6:
      ret = { t: "b", v: ieee > 0 };
      break;
    case 7:
      ret = { t: "n", v: ieee / 86400 };
      break;
    case 8:
      ret = { t: "e", v: 0 };
      break;
    case 9:
      {
        if (ridx > -1)
          ret = { t: "s", v: rsst[ridx] };
        else
          throw new Error("Unsupported cell type ".concat(buf[1], " : ").concat(flags & 31, " : ").concat(buf.slice(0, 4)));
      }
      break;
    case 10:
      ret = { t: "n", v: d128 };
      break;
    default:
      throw new Error("Unsupported cell type ".concat(buf[1], " : ").concat(flags & 31, " : ").concat(buf.slice(0, 4)));
  }
  return ret;
}
function parse_cell_storage(buf, sst, rsst) {
  switch (buf[0]) {
    case 0:
    case 1:
    case 2:
    case 3:
      return parse_old_storage(buf, sst, rsst, buf[0]);
    case 5:
      return parse_new_storage(buf, sst, rsst);
    default:
      throw new Error("Unsupported payload version ".concat(buf[0]));
  }
}
function parse_TSP_Reference(buf) {
  var pb = parse_shallow(buf);
  return parse_varint49(pb[1][0].data);
}
function parse_TST_TableDataList(M, root) {
  var pb = parse_shallow(root.data);
  var type = varint_to_i32(pb[1][0].data);
  var entries = pb[3];
  var data = [];
  (entries || []).forEach(function(entry) {
    var le = parse_shallow(entry.data);
    var key = varint_to_i32(le[1][0].data) >>> 0;
    switch (type) {
      case 1:
        data[key] = u8str(le[3][0].data);
        break;
      case 8:
        {
          var rt = M[parse_TSP_Reference(le[9][0].data)][0];
          var rtp = parse_shallow(rt.data);
          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];
          var mtype = varint_to_i32(rtpref.meta[1][0].data);
          if (mtype != 2001)
            throw new Error("2000 unexpected reference to ".concat(mtype));
          var tswpsa = parse_shallow(rtpref.data);
          data[key] = tswpsa[3].map(function(x) {
            return u8str(x.data);
          }).join("");
        }
        break;
    }
  });
  return data;
}
function parse_TST_TileRowInfo(u8, type) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;
  var pb = parse_shallow(u8);
  var R = varint_to_i32(pb[1][0].data) >>> 0;
  var cnt = varint_to_i32(pb[2][0].data) >>> 0;
  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;
  var used_storage_u8, used_storage;
  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {
    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;
    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;
  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {
    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;
    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;
  } else
    throw "NUMBERS Tile missing ".concat(type, " cell storage");
  var width = wide_offsets ? 4 : 1;
  var used_storage_offsets = u8_to_dataview(used_storage_u8);
  var offsets = [];
  for (var C = 0; C < used_storage_u8.length / 2; ++C) {
    var off = used_storage_offsets.getUint16(C * 2, true);
    if (off < 65535)
      offsets.push([C, off]);
  }
  if (offsets.length != cnt)
    throw "Expected ".concat(cnt, " cells, found ").concat(offsets.length);
  var cells = [];
  for (C = 0; C < offsets.length - 1; ++C)
    cells[offsets[C][0]] = used_storage.subarray(offsets[C][1] * width, offsets[C + 1][1] * width);
  if (offsets.length >= 1)
    cells[offsets[offsets.length - 1][0]] = used_storage.subarray(offsets[offsets.length - 1][1] * width);
  return { R: R, cells: cells };
}
function parse_TST_Tile(M, root) {
  var _a;
  var pb = parse_shallow(root.data);
  var storage = ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) ? varint_to_i32(pb[7][0].data) >>> 0 > 0 ? 1 : 0 : -1;
  var ri = mappa(pb[5], function(u8) {
    return parse_TST_TileRowInfo(u8, storage);
  });
  return {
    nrows: varint_to_i32(pb[4][0].data) >>> 0,
    data: ri.reduce(function(acc, x) {
      if (!acc[x.R])
        acc[x.R] = [];
      x.cells.forEach(function(cell, C) {
        if (acc[x.R][C])
          throw new Error("Duplicate cell r=".concat(x.R, " c=").concat(C));
        acc[x.R][C] = cell;
      });
      return acc;
    }, [])
  };
}
function parse_TST_TableModelArchive(M, root, ws) {
  var _a;
  var pb = parse_shallow(root.data);
  var range = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };
  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;
  if (range.e.r < 0)
    throw new Error("Invalid row varint ".concat(pb[6][0].data));
  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;
  if (range.e.c < 0)
    throw new Error("Invalid col varint ".concat(pb[7][0].data));
  ws["!ref"] = encode_range(range);
  var store = parse_shallow(pb[4][0].data);
  var sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);
  var rsst = ((_a = store[17]) == null ? void 0 : _a[0]) ? parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]) : [];
  var tile = parse_shallow(store[3][0].data);
  var _R = 0;
  tile[1].forEach(function(t) {
    var tl = parse_shallow(t.data);
    var ref = M[parse_TSP_Reference(tl[2][0].data)][0];
    var mtype = varint_to_i32(ref.meta[1][0].data);
    if (mtype != 6002)
      throw new Error("6001 unexpected reference to ".concat(mtype));
    var _tile = parse_TST_Tile(M, ref);
    _tile.data.forEach(function(row, R) {
      row.forEach(function(buf, C) {
        var addr = encode_cell({ r: _R + R, c: C });
        var res = parse_cell_storage(buf, sst, rsst);
        if (res)
          ws[addr] = res;
      });
    });
    _R += _tile.nrows;
  });
}
function parse_TST_TableInfoArchive(M, root) {
  var pb = parse_shallow(root.data);
  var out = { "!ref": "A1" };
  var tableref = M[parse_TSP_Reference(pb[2][0].data)];
  var mtype = varint_to_i32(tableref[0].meta[1][0].data);
  if (mtype != 6001)
    throw new Error("6000 unexpected reference to ".concat(mtype));
  parse_TST_TableModelArchive(M, tableref[0], out);
  return out;
}
function parse_TN_SheetArchive(M, root) {
  var _a;
  var pb = parse_shallow(root.data);
  var out = {
    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : "",
    sheets: []
  };
  var shapeoffs = mappa(pb[2], parse_TSP_Reference);
  shapeoffs.forEach(function(off) {
    M[off].forEach(function(m) {
      var mtype = varint_to_i32(m.meta[1][0].data);
      if (mtype == 6e3)
        out.sheets.push(parse_TST_TableInfoArchive(M, m));
    });
  });
  return out;
}
function parse_TN_DocumentArchive(M, root) {
  var out = book_new();
  var pb = parse_shallow(root.data);
  var sheetoffs = mappa(pb[1], parse_TSP_Reference);
  sheetoffs.forEach(function(off) {
    M[off].forEach(function(m) {
      var mtype = varint_to_i32(m.meta[1][0].data);
      if (mtype == 2) {
        var root2 = parse_TN_SheetArchive(M, m);
        root2.sheets.forEach(function(sheet, idx) {
          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + "_" + idx, true);
        });
      }
    });
  });
  if (out.SheetNames.length == 0)
    throw new Error("Empty NUMBERS file");
  return out;
}
function parse_numbers_iwa(cfb) {
  var _a, _b, _c, _d;
  var M = {}, indices = [];
  cfb.FullPaths.forEach(function(p) {
    if (p.match(/\.iwpv2/))
      throw new Error("Unsupported password protection");
  });
  cfb.FileIndex.forEach(function(s) {
    if (!s.name.match(/\.iwa$/))
      return;
    var o;
    try {
      o = decompress_iwa_file(s.content);
    } catch (e) {
      return console.log("?? " + s.content.length + " " + (e.message || e));
    }
    var packets;
    try {
      packets = parse_iwa_file(o);
    } catch (e) {
      return console.log("## " + (e.message || e));
    }
    packets.forEach(function(packet) {
      M[packet.id] = packet.messages;
      indices.push(packet.id);
    });
  });
  if (!indices.length)
    throw new Error("File has no messages");
  var docroot = ((_d = (_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0]) == null ? void 0 : _b.meta) == null ? void 0 : _c[1]) == null ? void 0 : _d[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];
  if (!docroot)
    indices.forEach(function(idx) {
      M[idx].forEach(function(iwam) {
        var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;
        if (mtype == 1) {
          if (!docroot)
            docroot = iwam;
          else
            throw new Error("Document has multiple roots");
        }
      });
    });
  if (!docroot)
    throw new Error("Cannot find Document root");
  return parse_TN_DocumentArchive(M, docroot);
}
function fix_opts_func(defaults/*:Array<Array<any> >*/)/*:{(o:any):void}*/ {
	return function fix_opts(opts) {
		for(var i = 0; i != defaults.length; ++i) {
			var d = defaults[i];
			if(opts[d[0]] === undefined) opts[d[0]] = d[1];
			if(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);
		}
	};
}

function fix_read_opts(opts) {
fix_opts_func([
	['cellNF', false], /* emit cell number format string as .z */
	['cellHTML', true], /* emit html string as .h */
	['cellFormula', true], /* emit formulae as .f */
	['cellStyles', false], /* emits style/theme as .s */
	['cellText', true], /* emit formatted text as .w */
	['cellDates', false], /* emit date cells with type `d` */

	['sheetStubs', false], /* emit empty cells */
	['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */

	['bookDeps', false], /* parse calculation chains */
	['bookSheets', false], /* only try to get sheet names (no Sheets) */
	['bookProps', false], /* only try to get properties (no Sheets) */
	['bookFiles', false], /* include raw file structure (keys, files, cfb) */
	['bookVBA', false], /* include vba raw data (vbaraw) */

	['password',''], /* password */
	['WTF', false] /* WTF mode (throws errors) */
])(opts);
}
function get_sheet_type(n/*:string*/)/*:string*/ {
	if(RELS.WS.indexOf(n) > -1) return "sheet";
	if(n == RELS.CS) return "chart";
	if(n == RELS.DS) return "dialog";
	if(n == RELS.MS) return "macro";
	return (n && n.length) ? n : "sheet";
}
function safe_parse_wbrels(wbrels, sheets) {
	if(!wbrels) return 0;
	try {
		wbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });
	} catch(e) { return null; }
	return !wbrels || wbrels.length === 0 ? null : wbrels;
}

function safe_parse_sheet(zip, path/*:string*/, relsPath/*:string*/, sheet, idx/*:number*/, sheetRels, sheets, stype/*:string*/, opts, wb, themes, styles) {
	try {
		sheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);
		var data = getzipdata(zip, path);
		var _ws;
		switch(stype) {
			case 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;
			case 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);
				if(!_ws || !_ws['!drawel']) break;
				var dfile = resolve_path(_ws['!drawel'].Target, path);
				var drelsp = get_rels_path(dfile);
				var draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));
				var chartp = resolve_path(draw, dfile);
				var crelsp = get_rels_path(chartp);
				_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);
				break;
			case 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;
			case 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;
			default: throw new Error("Unrecognized sheet type " + stype);
		}
		sheets[sheet] = _ws;

		/* scan rels for comments and threaded comments */
		var tcomments = [];
		if(sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function(n) {
			var dfile = "";
			if(sheetRels[sheet][n].Type == RELS.CMNT) {
				dfile = resolve_path(sheetRels[sheet][n].Target, path);
				var comments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);
				if(!comments || !comments.length) return;
				sheet_insert_comments(_ws, comments, false);
			}
			if(sheetRels[sheet][n].Type == RELS.TCMNT) {
				dfile = resolve_path(sheetRels[sheet][n].Target, path);
				tcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));
			}
		});
		if(tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);
	} catch(e) { if(opts.WTF) throw e; }
}

function strip_front_slash(x/*:string*/)/*:string*/ { return x.charAt(0) == '/' ? x.slice(1) : x; }

function parse_zip(zip/*:ZIP*/, opts/*:?ParseOpts*/)/*:Workbook*/ {
	make_ssf();
	opts = opts || {};
	fix_read_opts(opts);

	/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */
	if(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);
	/* UOC */
	if(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);
	/* Numbers */
	if(safegetzipfile(zip, 'Index/Document.iwa')) {
		if(typeof Uint8Array == "undefined") throw new Error('NUMBERS file parsing requires Uint8Array support');
		if(typeof parse_numbers_iwa != "undefined") {
			if(zip.FileIndex) return parse_numbers_iwa(zip);
			var _zip = CFB.utils.cfb_new();
			zipentries(zip).forEach(function(e) { zip_add_file(_zip, e, getzipbin(zip, e)); });
			return parse_numbers_iwa(_zip);
		}
		throw new Error('Unsupported NUMBERS file');
	}
	if(!safegetzipfile(zip, '[Content_Types].xml')) {
		if(safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');
		if(safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');
		throw new Error('Unsupported ZIP file');
	}

	var entries = zipentries(zip);
	var dir = parse_ct((getzipstr(zip, '[Content_Types].xml')/*:?any*/));
	var xlsb = false;
	var sheets, binname;
	if(dir.workbooks.length === 0) {
		binname = "xl/workbook.xml";
		if(getzipdata(zip,binname, true)) dir.workbooks.push(binname);
	}
	if(dir.workbooks.length === 0) {
		binname = "xl/workbook.bin";
		if(!getzipdata(zip,binname,true)) throw new Error("Could not find workbook");
		dir.workbooks.push(binname);
		xlsb = true;
	}
	if(dir.workbooks[0].slice(-3) == "bin") xlsb = true;

	var themes = ({}/*:any*/);
	var styles = ({}/*:any*/);
	if(!opts.bookSheets && !opts.bookProps) {
		strs = [];
		if(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }

		if(opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\//,''), true)||"",dir.themes[0], opts);

		if(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);
	}

	/*var externbooks = */dir.links.map(function(link) {
		try {
			var rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);
			return parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);
		} catch(e) {}
	});

	var wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);

	var props = {}, propdata = "";

	if(dir.coreprops.length) {
		propdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);
		if(propdata) props = parse_core_props(propdata);
		if(dir.extprops.length !== 0) {
			propdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);
			if(propdata) parse_ext_props(propdata, props, opts);
		}
	}

	var custprops = {};
	if(!opts.bookSheets || opts.bookProps) {
		if (dir.custprops.length !== 0) {
			propdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);
			if(propdata) custprops = parse_cust_props(propdata, opts);
		}
	}

	var out = ({}/*:any*/);
	if(opts.bookSheets || opts.bookProps) {
		if(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });
		else if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;
		if(opts.bookProps) { out.Props = props; out.Custprops = custprops; }
		if(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;
		if(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;
	}
	sheets = {};

	var deps = {};
	if(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain);

	var i=0;
	var sheetRels = ({}/*:any*/);
	var path, relsPath;

	{
		var wbsheets = wb.Sheets;
		props.Worksheets = wbsheets.length;
		props.SheetNames = [];
		for(var j = 0; j != wbsheets.length; ++j) {
			props.SheetNames[j] = wbsheets[j].name;
		}
	}

	var wbext = xlsb ? "bin" : "xml";
	var wbrelsi = dir.workbooks[0].lastIndexOf("/");
	var wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + "_rels/" + dir.workbooks[0].slice(wbrelsi+1) + ".rels").replace(/^\//,"");
	if(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';
	var wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, "s5s"));

	if((dir.metadata || []).length >= 1) {
		/* TODO: MDX and other types of metadata */
		opts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])),dir.metadata[0],opts);
	}

	if((dir.people || []).length >= 1) {
		opts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])),opts);
	}

	if(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);

	/* Numbers iOS hack */
	var nmode = (getzipdata(zip,"xl/worksheets/sheet.xml",true))?1:0;
	wsloop: for(i = 0; i != props.Worksheets; ++i) {
		var stype = "sheet";
		if(wbrels && wbrels[i]) {
			path = 'xl/' + (wbrels[i][1]).replace(/[\/]?xl\//, "");
			if(!safegetzipfile(zip, path)) path = wbrels[i][1];
			if(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\/.*$/,"") + wbrels[i][1];
			stype = wbrels[i][2];
		} else {
			path = 'xl/worksheets/sheet'+(i+1-nmode)+"." + wbext;
			path = path.replace(/sheet0\./,"sheet.");
		}
		relsPath = path.replace(/^(.*)(\/)([^\/]*)$/, "$1/_rels/$3.rels");
		if(opts && opts.sheets != null) switch(typeof opts.sheets) {
			case "number": if(i != opts.sheets) continue wsloop; break;
			case "string": if(props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop; break;
			default: if(Array.isArray && Array.isArray(opts.sheets)) {
				var snjseen = false;
				for(var snj = 0; snj != opts.sheets.length; ++snj) {
					if(typeof opts.sheets[snj] == "number" && opts.sheets[snj] == i) snjseen=1;
					if(typeof opts.sheets[snj] == "string" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;
				}
				if(!snjseen) continue wsloop;
			}
		}
		safe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);
	}

	out = ({
		Directory: dir,
		Workbook: wb,
		Props: props,
		Custprops: custprops,
		Deps: deps,
		Sheets: sheets,
		SheetNames: props.SheetNames,
		Strings: strs,
		Styles: styles,
		Themes: themes,
		SSF: dup(table_fmt)
	}/*:any*/);
	if(opts && opts.bookFiles) {
		if(zip.files) {
			out.keys = entries;
			out.files = zip.files;
		} else {
			out.keys = [];
			out.files = {};
			zip.FullPaths.forEach(function(p, idx) {
				p = p.replace(/^Root Entry[\/]/, "");
				out.keys.push(p);
				out.files[p] = zip.FileIndex[idx];
			});
		}
	}
	if(opts && opts.bookVBA) {
		if(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);
		else if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);
	}
	return out;
}

/* [MS-OFFCRYPTO] 2.1.1 */
function parse_xlsxcfb(cfb, _opts/*:?ParseOpts*/)/*:Workbook*/ {
	var opts = _opts || {};
	var f = 'Workbook', data = CFB.find(cfb, f);
	try {
	f = '/!DataSpaces/Version';
	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
	/*var version = */parse_DataSpaceVersionInfo(data.content);

	/* 2.3.4.1 */
	f = '/!DataSpaces/DataSpaceMap';
	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
	var dsm = parse_DataSpaceMap(data.content);
	if(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== "StrongEncryptionDataSpace" || dsm[0].comps[0].v !== "EncryptedPackage")
		throw new Error("ECMA-376 Encrypted file bad " + f);

	/* 2.3.4.2 */
	f = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';
	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
	var seds = parse_DataSpaceDefinition(data.content);
	if(seds.length != 1 || seds[0] != "StrongEncryptionTransform")
		throw new Error("ECMA-376 Encrypted file bad " + f);

	/* 2.3.4.3 */
	f = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';
	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
	/*var hdr = */parse_Primary(data.content);
	} catch(e) {}

	f = '/EncryptionInfo';
	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
	var einfo = parse_EncryptionInfo(data.content);

	/* 2.3.4.4 */
	f = '/EncryptedPackage';
	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);

/*global decrypt_agile */
/*:: declare var decrypt_agile:any; */
	if(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || "", opts);
/*global decrypt_std76 */
/*:: declare var decrypt_std76:any; */
	if(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || "", opts);
	throw new Error("File is password-protected");
}

function firstbyte(f/*:RawData*/,o/*:?TypeOpts*/)/*:Array<number>*/ {
	var x = "";
	switch((o||{}).type || "base64") {
		case 'buffer': return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];
		case 'base64': x = Base64_decode(f.slice(0,12)); break;
		case 'binary': x = f; break;
		case 'array':  return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];
		default: throw new Error("Unrecognized type " + (o && o.type || "undefined"));
	}
	return [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];
}

function read_cfb(cfb/*:CFBContainer*/, opts/*:?ParseOpts*/)/*:Workbook*/ {
	if(CFB.find(cfb, "EncryptedPackage")) return parse_xlsxcfb(cfb, opts);
	return parse_xlscfb(cfb, opts);
}

function read_zip(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {
	var zip, d = data;
	var o = opts||{};
	if(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? "buffer" : "base64";
	zip = zip_read(d, o);
	return parse_zip(zip, o);
}

function read_plaintext(data/*:string*/, o/*:ParseOpts*/)/*:Workbook*/ {
	var i = 0;
	main: while(i < data.length) switch(data.charCodeAt(i)) {
		case 0x0A: case 0x0D: case 0x20: ++i; break;
		case 0x3C: return parse_xlml(data.slice(i),o);
		default: break main;
	}
	return PRN.to_workbook(data, o);
}

function read_plaintext_raw(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {
	var str = "", bytes = firstbyte(data, o);
	switch(o.type) {
		case 'base64': str = Base64_decode(data); break;
		case 'binary': str = data; break;
		case 'buffer': str = data.toString('binary'); break;
		case 'array': str = cc2str(data); break;
		default: throw new Error("Unrecognized type " + o.type);
	}
	if(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);
	o.type = "binary";
	return read_plaintext(str, o);
}

function read_utf16(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {
	var d = data;
	if(o.type == 'base64') d = Base64_decode(d);
	d = $cptable.utils.decode(1200, d.slice(2), 'str');
	o.type = "binary";
	return read_plaintext(d, o);
}

function bstrify(data/*:string*/)/*:string*/ {
	return !data.match(/[^\x00-\x7F]/) ? data : utf8write(data);
}

function read_prn(data, d, o, str) {
	if(str) { o.type = "string"; return PRN.to_workbook(data, o); }
	return PRN.to_workbook(d, o);
}

function readSync(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {
	reset_cp();
	var o = opts||{};
	if(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = "array", o));
	if(typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== "undefined" ? "buffer" : "array";
	var d = data, n = [0,0,0,0], str = false;
	if(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }
	_ssfopts = {};
	if(o.dateNF) _ssfopts.dateNF = o.dateNF;
	if(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? "buffer" : "base64";
	if(o.type == "file") { o.type = has_buf ? "buffer" : "binary"; d = read_binary(data); if(typeof Uint8Array !== 'undefined' && !has_buf) o.type = "array"; }
	if(o.type == "string") { str = true; o.type = "binary"; o.codepage = 65001; d = bstrify(data); }
	if(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {
		// $FlowIgnore
		var ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo="bar";
		// $FlowIgnore
		if(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}
	}
	switch((n = firstbyte(d, o))[0]) {
		case 0xD0: if(n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o); break;
		case 0x09: if(n[1] <= 0x08) return parse_xlscfb(d, o); break;
		case 0x3C: return parse_xlml(d, o);
		case 0x49:
			if(n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error("TIFF Image File is not a spreadsheet");
			if(n[1] === 0x44) return read_wb_ID(d, o);
			break;
		case 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;
		case 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);
		case 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);
		case 0xFF:
			if(n[1] === 0xFE) { return read_utf16(d, o); }
			else if(n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);
			break;
		case 0x00:
			if(n[1] === 0x00) {
				if(n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);
				if(n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);
			}
			break;
		case 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);
		case 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o); break;
		case 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);
		case 0x89: if(n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error("PNG Image File is not a spreadsheet"); break;
	}
	if(DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);
	return read_prn(data, d, o, str);
}
/*::
type MJRObject = {
	row: any;
	isempty: boolean;
};
*/
function make_json_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, header/*:number*/, hdr/*:Array<any>*/, dense/*:boolean*/, o/*:Sheet2JSONOpts*/)/*:MJRObject*/ {
	var rr = encode_row(R);
	var defval = o.defval, raw = o.raw || !Object.prototype.hasOwnProperty.call(o, "raw");
	var isempty = true;
	var row/*:any*/ = (header === 1) ? [] : {};
	if(header !== 1) {
		if(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }
		else row.__rowNum__ = R;
	}
	if(!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {
		var val = dense ? sheet[R][C] : sheet[cols[C] + rr];
		if(val === undefined || val.t === undefined) {
			if(defval === undefined) continue;
			if(hdr[C] != null) { row[hdr[C]] = defval; }
			continue;
		}
		var v = val.v;
		switch(val.t){
			case 'z': if(v == null) break; continue;
			case 'e': v = (v == 0 ? null : void 0); break;
			case 's': case 'd': case 'b': case 'n': break;
			default: throw new Error('unrecognized type ' + val.t);
		}
		if(hdr[C] != null) {
			if(v == null) {
				if(val.t == "e" && v === null) row[hdr[C]] = null;
				else if(defval !== undefined) row[hdr[C]] = defval;
				else if(raw && v === null) row[hdr[C]] = null;
				else continue;
			} else {
				row[hdr[C]] = raw && (val.t !== "n" || (val.t === "n" && o.rawNumbers !== false)) ? v : format_cell(val,v,o);
			}
			if(v != null) isempty = false;
		}
	}
	return { row: row, isempty: isempty };
}


function sheet_to_json(sheet/*:Worksheet*/, opts/*:?Sheet2JSONOpts*/) {
	if(sheet == null || sheet["!ref"] == null) return [];
	var val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv="";
	var r = {s:{r:0,c:0},e:{r:0,c:0}};
	var o = opts || {};
	var range = o.range != null ? o.range : sheet["!ref"];
	if(o.header === 1) header = 1;
	else if(o.header === "A") header = 2;
	else if(Array.isArray(o.header)) header = 3;
	else if(o.header == null) header = 0;
	switch(typeof range) {
		case 'string': r = safe_decode_range(range); break;
		case 'number': r = safe_decode_range(sheet["!ref"]); r.s.r = range; break;
		default: r = range;
	}
	if(header > 0) offset = 0;
	var rr = encode_row(r.s.r);
	var cols/*:Array<string>*/ = [];
	var out/*:Array<any>*/ = [];
	var outi = 0, counter = 0;
	var dense = Array.isArray(sheet);
	var R = r.s.r, C = 0;
	var header_cnt = {};
	if(dense && !sheet[R]) sheet[R] = [];
	var colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet["!cols"] || [];
	var rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet["!rows"] || [];
	for(C = r.s.c; C <= r.e.c; ++C) {
		if(((colinfo[C]||{}).hidden)) continue;
		cols[C] = encode_col(C);
		val = dense ? sheet[R][C] : sheet[cols[C] + rr];
		switch(header) {
			case 1: hdr[C] = C - r.s.c; break;
			case 2: hdr[C] = cols[C]; break;
			case 3: hdr[C] = o.header[C - r.s.c]; break;
			default:
				if(val == null) val = {w: "__EMPTY", t: "s"};
				vv = v = format_cell(val, null, o);
				counter = header_cnt[v] || 0;
				if(!counter) header_cnt[v] = 1;
				else {
					do { vv = v + "_" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;
					header_cnt[vv] = 1;
				}
				hdr[C] = vv;
		}
	}
	for (R = r.s.r + offset; R <= r.e.r; ++R) {
		if ((rowinfo[R]||{}).hidden) continue;
		var row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);
		if((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;
	}
	out.length = outi;
	return out;
}

var qreg = /"/g;
function make_csv_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, fs/*:number*/, rs/*:number*/, FS/*:string*/, o/*:Sheet2CSVOpts*/)/*:?string*/ {
	var isempty = true;
	var row/*:Array<string>*/ = [], txt = "", rr = encode_row(R);
	for(var C = r.s.c; C <= r.e.c; ++C) {
		if (!cols[C]) continue;
		var val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];
		if(val == null) txt = "";
		else if(val.v != null) {
			isempty = false;
			txt = ''+(o.rawNumbers && val.t == "n" ? val.v : format_cell(val, null, o));
			for(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {txt = "\"" + txt.replace(qreg, '""') + "\""; break; }
			if(txt == "ID") txt = '"ID"';
		} else if(val.f != null && !val.F) {
			isempty = false;
			txt = '=' + val.f; if(txt.indexOf(",") >= 0) txt = '"' + txt.replace(qreg, '""') + '"';
		} else txt = "";
		/* NOTE: Excel CSV does not support array formulae */
		row.push(txt);
	}
	if(o.blankrows === false && isempty) return null;
	return row.join(FS);
}

function sheet_to_csv(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/)/*:string*/ {
	var out/*:Array<string>*/ = [];
	var o = opts == null ? {} : opts;
	if(sheet == null || sheet["!ref"] == null) return "";
	var r = safe_decode_range(sheet["!ref"]);
	var FS = o.FS !== undefined ? o.FS : ",", fs = FS.charCodeAt(0);
	var RS = o.RS !== undefined ? o.RS : "\n", rs = RS.charCodeAt(0);
	var endregex = new RegExp((FS=="|" ? "\\|" : FS)+"+$");
	var row = "", cols/*:Array<string>*/ = [];
	o.dense = Array.isArray(sheet);
	var colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet["!cols"] || [];
	var rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet["!rows"] || [];
	for(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);
	var w = 0;
	for(var R = r.s.r; R <= r.e.r; ++R) {
		if ((rowinfo[R]||{}).hidden) continue;
		row = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);
		if(row == null) { continue; }
		if(o.strip) row = row.replace(endregex,"");
		if(row || (o.blankrows !== false)) out.push((w++ ? RS : "") + row);
	}
	delete o.dense;
	return out.join("");
}

function sheet_to_txt(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {
	if(!opts) opts = {}; opts.FS = "\t"; opts.RS = "\n";
	var s = sheet_to_csv(sheet, opts);
	return s;
}

function sheet_to_formulae(sheet/*:Worksheet*/)/*:Array<string>*/ {
	var y = "", x, val="";
	if(sheet == null || sheet["!ref"] == null) return [];
	var r = safe_decode_range(sheet['!ref']), rr = "", cols/*:Array<string>*/ = [], C;
	var cmds/*:Array<string>*/ = [];
	var dense = Array.isArray(sheet);
	for(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);
	for(var R = r.s.r; R <= r.e.r; ++R) {
		rr = encode_row(R);
		for(C = r.s.c; C <= r.e.c; ++C) {
			y = cols[C] + rr;
			x = dense ? (sheet[R]||[])[C] : sheet[y];
			val = "";
			if(x === undefined) continue;
			else if(x.F != null) {
				y = x.F;
				if(!x.f) continue;
				val = x.f;
				if(y.indexOf(":") == -1) y = y + ":" + y;
			}
			if(x.f != null) val = x.f;
			else if(x.t == 'z') continue;
			else if(x.t == 'n' && x.v != null) val = "" + x.v;
			else if(x.t == 'b') val = x.v ? "TRUE" : "FALSE";
			else if(x.w !== undefined) val = "'" + x.w;
			else if(x.v === undefined) continue;
			else if(x.t == 's') val = "'" + x.v;
			else val = ""+x.v;
			cmds[cmds.length] = y + "=" + val;
		}
	}
	return cmds;
}

function sheet_add_json(_ws/*:?Worksheet*/, js/*:Array<any>*/, opts)/*:Worksheet*/ {
	var o = opts || {};
	var offset = +!o.skipHeader;
	var ws/*:Worksheet*/ = _ws || ({}/*:any*/);
	var _R = 0, _C = 0;
	if(ws && o.origin != null) {
		if(typeof o.origin == 'number') _R = o.origin;
		else {
			var _origin/*:CellAddress*/ = typeof o.origin == "string" ? decode_cell(o.origin) : o.origin;
			_R = _origin.r; _C = _origin.c;
		}
	}
	var cell/*:Cell*/;
	var range/*:Range*/ = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}}/*:any*/);
	if(ws['!ref']) {
		var _range = safe_decode_range(ws['!ref']);
		range.e.c = Math.max(range.e.c, _range.e.c);
		range.e.r = Math.max(range.e.r, _range.e.r);
		if(_R == -1) { _R = _range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }
	} else {
		if(_R == -1) { _R = 0; range.e.r = js.length - 1 + offset; }
	}
	var hdr/*:Array<string>*/ = o.header || [], C = 0;

	js.forEach(function (JS, R/*:number*/) {
		keys(JS).forEach(function(k) {
			if((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;
			var v = JS[k];
			var t = 'z';
			var z = "";
			var ref = encode_cell({c:_C + C,r:_R + R + offset});
			cell = ws_get_cell_stub(ws, ref);
			if(v && typeof v === 'object' && !(v instanceof Date)){
				ws[ref] = v;
			} else {
				if(typeof v == 'number') t = 'n';
				else if(typeof v == 'boolean') t = 'b';
				else if(typeof v == 'string') t = 's';
				else if(v instanceof Date) {
					t = 'd';
					if(!o.cellDates) { t = 'n'; v = datenum(v); }
					z = (o.dateNF || table_fmt[14]);
				}
				else if(v === null && o.nullError) { t = 'e'; v = 0; }
				if(!cell) ws[ref] = cell = ({t:t, v:v}/*:any*/);
				else {
					cell.t = t; cell.v = v;
					delete cell.w; delete cell.R;
					if(z) cell.z = z;
				}
				if(z) cell.z = z;
			}
		});
	});
	range.e.c = Math.max(range.e.c, _C + hdr.length - 1);
	var __R = encode_row(_R);
	if(offset) for(C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};
	ws['!ref'] = encode_range(range);
	return ws;
}
function json_to_sheet(js/*:Array<any>*/, opts)/*:Worksheet*/ { return sheet_add_json(null, js, opts); }

/* get cell, creating a stub if necessary */
function ws_get_cell_stub(ws/*:Worksheet*/, R, C/*:?number*/)/*:Cell*/ {
	/* A1 cell address */
	if(typeof R == "string") {
		/* dense */
		if(Array.isArray(ws)) {
			var RC = decode_cell(R);
			if(!ws[RC.r]) ws[RC.r] = [];
			return ws[RC.r][RC.c] || (ws[RC.r][RC.c] = {t:'z'});
		}
		return ws[R] || (ws[R] = {t:'z'});
	}
	/* cell address object */
	if(typeof R != "number") return ws_get_cell_stub(ws, encode_cell(R));
	/* R and C are 0-based indices */
	return ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));
}

/* find sheet index for given name / validate index */
function wb_sheet_idx(wb/*:Workbook*/, sh/*:number|string*/) {
	if(typeof sh == "number") {
		if(sh >= 0 && wb.SheetNames.length > sh) return sh;
		throw new Error("Cannot find sheet # " + sh);
	} else if(typeof sh == "string") {
		var idx = wb.SheetNames.indexOf(sh);
		if(idx > -1) return idx;
		throw new Error("Cannot find sheet name |" + sh + "|");
	} else throw new Error("Cannot find sheet |" + sh + "|");
}

/* simple blank workbook object */
function book_new()/*:Workbook*/ {
	return { SheetNames: [], Sheets: {} };
}

/* add a worksheet to the end of a given workbook */
function book_append_sheet(wb/*:Workbook*/, ws/*:Worksheet*/, name/*:?string*/, roll/*:?boolean*/)/*:string*/ {
	var i = 1;
	if(!name) for(; i <= 0xFFFF; ++i, name = undefined) if(wb.SheetNames.indexOf(name = "Sheet" + i) == -1) break;
	if(!name || wb.SheetNames.length >= 0xFFFF) throw new Error("Too many worksheets");
	if(roll && wb.SheetNames.indexOf(name) >= 0) {
		var m = name.match(/(^.*?)(\d+)$/);
		i = m && +m[2] || 0;
		var root = m && m[1] || name;
		for(++i; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = root + i) == -1) break;
	}
	check_ws_name(name);
	if(wb.SheetNames.indexOf(name) >= 0) throw new Error("Worksheet with name |" + name + "| already exists!");

	wb.SheetNames.push(name);
	wb.Sheets[name] = ws;
	return name;
}

/* set sheet visibility (visible/hidden/very hidden) */
function book_set_sheet_visibility(wb/*:Workbook*/, sh/*:number|string*/, vis/*:number*/) {
	if(!wb.Workbook) wb.Workbook = {};
	if(!wb.Workbook.Sheets) wb.Workbook.Sheets = [];

	var idx = wb_sheet_idx(wb, sh);
	// $FlowIgnore
	if(!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};

	switch(vis) {
		case 0: case 1: case 2: break;
		default: throw new Error("Bad sheet visibility setting " + vis);
	}
	// $FlowIgnore
	wb.Workbook.Sheets[idx].Hidden = vis;
}

/* set number format */
function cell_set_number_format(cell/*:Cell*/, fmt/*:string|number*/) {
	cell.z = fmt;
	return cell;
}

/* set cell hyperlink */
function cell_set_hyperlink(cell/*:Cell*/, target/*:string*/, tooltip/*:?string*/) {
	if(!target) {
		delete cell.l;
	} else {
		cell.l = ({ Target: target }/*:Hyperlink*/);
		if(tooltip) cell.l.Tooltip = tooltip;
	}
	return cell;
}
function cell_set_internal_link(cell/*:Cell*/, range/*:string*/, tooltip/*:?string*/) { return cell_set_hyperlink(cell, "#" + range, tooltip); }

/* add to cell comments */
function cell_add_comment(cell/*:Cell*/, text/*:string*/, author/*:?string*/) {
	if(!cell.c) cell.c = [];
	cell.c.push({t:text, a:author||"SheetJS"});
}

/* set array formula and flush related cells */
function sheet_set_array_formula(ws/*:Worksheet*/, range, formula/*:string*/, dynamic/*:boolean*/) {
	var rng = typeof range != "string" ? range : safe_decode_range(range);
	var rngstr = typeof range == "string" ? range : encode_range(range);
	for(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {
		var cell = ws_get_cell_stub(ws, R, C);
		cell.t = 'n';
		cell.F = rngstr;
		delete cell.v;
		if(R == rng.s.r && C == rng.s.c) {
			cell.f = formula;
			if(dynamic) cell.D = true;
		}
	}
	return ws;
}

var utils/*:any*/ = {
	encode_col: encode_col,
	encode_row: encode_row,
	encode_cell: encode_cell,
	encode_range: encode_range,
	decode_col: decode_col,
	decode_row: decode_row,
	split_cell: split_cell,
	decode_cell: decode_cell,
	decode_range: decode_range,
	format_cell: format_cell,
	sheet_add_aoa: sheet_add_aoa,
	sheet_add_json: sheet_add_json,
	sheet_add_dom: sheet_add_dom,
	aoa_to_sheet: aoa_to_sheet,
	json_to_sheet: json_to_sheet,
	table_to_sheet: parse_dom_table,
	table_to_book: table_to_book,
	sheet_to_csv: sheet_to_csv,
	sheet_to_txt: sheet_to_txt,
	sheet_to_json: sheet_to_json,
	sheet_to_html: sheet_to_html,
	sheet_to_formulae: sheet_to_formulae,
	sheet_to_row_object_array: sheet_to_json,
	sheet_get_cell: ws_get_cell_stub,
	book_new: book_new,
	book_append_sheet: book_append_sheet,
	book_set_sheet_visibility: book_set_sheet_visibility,
	cell_set_number_format: cell_set_number_format,
	cell_set_hyperlink: cell_set_hyperlink,
	cell_set_internal_link: cell_set_internal_link,
	cell_add_comment: cell_add_comment,
	sheet_set_array_formula: sheet_set_array_formula,
	consts: {
		SHEET_VISIBLE: 0,
		SHEET_HIDDEN: 1,
		SHEET_VERY_HIDDEN: 2
	}
};

var allowedFileTypes = [
    "application/pdf",
    "application/vnd.ms-excel",
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "application/vnd.ms-powerpoint",
    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
    "application/msword",
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "text/csv",
    "image/png",
    "image/jpeg"
];
var environmentalImpactAssessmentAllowedTypes = [
    "application/pdf",
    "application/msword",
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "image/png",
    "image/jpeg"
];
var isValidateFileType = function (fileType, docType) {
    if (docType === exports.DocType.ENVIRONMENTAL_IMPACT_ASSESSMENT) {
        return environmentalImpactAssessmentAllowedTypes.includes(fileType);
    }
    else {
        return allowedFileTypes.includes(fileType);
    }
};

var maximumImageSize = process.env.REACT_APP_MAXIMUM_FILE_SIZE
    ? parseInt(process.env.REACT_APP_MAXIMUM_FILE_SIZE)
    : 5000000;
var sectoralScopes = {
    Energy: [
        "Energy Industries (Renewable – / Non-Renewable Sources)",
        "Energy Distribution",
        "Energy Demand",
    ],
    Transport: ["Transport"],
    Manufacturing: [
        "Manufacturing Industries",
        "Chemical Industries",
        "Metal Production",
    ],
    Forestry: ["Afforestation and Reforestation"],
    Waste: [
        "Waste Handling and Disposal",
        "Fugitive Emissions From Fuels (Solid, Oil and Gas)",
    ],
    Agriculture: ["Agriculture"],
    Other: [
        "Mining/Mineral Production",
        "Construction",
        "Fugitive Emissions From Production and Consumption of Halocarbons and Sulphur Hexafluoride",
        "Solvent Use",
    ],
};
var isValidPolygon = function (polygon) {
    if (!Array.isArray(polygon) || polygon.length < 3) {
        return false;
    }
    for (var _i = 0, polygon_1 = polygon; _i < polygon_1.length; _i++) {
        var point = polygon_1[_i];
        if (!Array.isArray(point) ||
            point.length !== 2 ||
            typeof point[0] !== "number" ||
            typeof point[1] !== "number" ||
            point[0] < -90 ||
            point[0] > 90 ||
            point[1] < -180 ||
            point[1] > 180) {
            return false;
        }
    }
    // Vérifier que le polygone est fermé
    var firstPoint = polygon[0];
    var lastPoint = polygon[polygon.length - 1];
    if (firstPoint[0] !== lastPoint[0] || firstPoint[1] !== lastPoint[1]) {
        return false;
    }
    return true;
};
var validatePolygons = function (polygons) {
    var validPolygons = [];
    var invalidPolygons = [];
    polygons.forEach(function (polygonData) {
        var isValid = polygonData.Polygone.every(function (polygon) {
            return isValidPolygon(polygon);
        });
        if (isValid) {
            validPolygons.push(polygonData);
        }
        else {
            invalidPolygons.push(polygonData);
        }
    });
    return { validPolygons: validPolygons, invalidPolygons: invalidPolygons };
};
var ProgrammeCreationComponent = function (props) {
    var _a, _b, _c;
    var useLocation = props.useLocation, onNavigateToProgrammeView = props.onNavigateToProgrammeView, translator = props.translator;
    var t = translator.t;
    var state = useLocation().state;
    var formOne = antd.Form.useForm()[0];
    var formTwo = antd.Form.useForm()[0];
    antd.Form.useForm()[0];
    var _d = useConnection(), put = _d.put, get = _d.get, post = _d.post;
    var userInfoState = useUserContext().userInfoState;
    var _e = React.useState(false), loading = _e[0], setLoading = _e[1];
    var _f = React.useState(false), loadingList = _f[0], setLoadingList = _f[1];
    var _g = React.useState(); _g[0]; var setNdcScopeChanged = _g[1];
    var _h = React.useState(), ndcScopeValue = _h[0], setNdcScopeValue = _h[1];
    var _j = React.useState(), stepOneData = _j[0], setStepOneData = _j[1];
    var _k = React.useState(0), current = _k[0], setCurrent = _k[1];
    var _l = React.useState(false), isUpdate = _l[0]; _l[1];
    var _m = React.useState(), includedInNDC = _m[0], setIncludedInNDC = _m[1];
    var _o = React.useState([]), countries = _o[0], setCountries = _o[1];
    var _p = React.useState([]), organisationsList = _p[0], setOrganisationList = _p[1];
    var _q = React.useState(), govData = _q[0], setGovData = _q[1];
    var _r = React.useState(), initialOrganisationOwnershipValues = _r[0], setInitialOrganisationOwnershipValues = _r[1];
    var _s = React.useState(""), userOrgTaxId = _s[0], setUserOrgTaxId = _s[1];
    var _t = React.useState([]), regionsList = _t[0], setRegionsList = _t[1];
    var _u = React.useState(); _u[0]; var setProgrammeDetailsObj = _u[1];
    var _v = React.useState(), selectedOrgs = _v[0], setSelectedOrgs = _v[1];
    var _w = React.useState(false), ownershipPercentageValidation = _w[0], setOwnershipPercentageValidation = _w[1];
    var _x = React.useState(""), selectedSector = _x[0], setSelectedSector = _x[1];
    var _y = React.useState(""), selectedCertificator = _y[0], setSelectedCertificator = _y[1];
    var _z = React.useState([]); _z[0]; var setMinistrySectoralScope = _z[1];
    var _0 = React.useState([]), availableSecoralScope = _0[0], setAvailableSectoralScope = _0[1];
    var _1 = React.useState([]), selectableSectoralScope = _1[0], setSelectableSectoralScope = _1[1];
    var _2 = React.useState(true), article6trade = _2[0], setArticletrade = _2[1];
    var _3 = React.useState([]), availableSectar = _3[0], setAvailableSectar = _3[1];
    /*
  
    const [article6_8_trade, setArticle6_8trade] = useState<boolean>(false);
    const [article6_4_trade, setArticle6_4trade] = useState<boolean>(false);
    const [article6_2_trade, setArticle6_2trade] = useState<boolean>(false);
    const [article6_MVC_ajuste_trade, setArticle6_MVC_ajuste_trade] =
      useState<boolean>(false);
    const [article6_MVC_non_ajuste_trade, setArticle6_MVC_non_ajuste_trade] =
      useState<boolean>(false);
  */
    var _4 = React.useState({
        article6_8_trade: false,
        article6_4_trade: false,
        article6_2_trade: false,
        article6_MVC_ajuste_trade: false,
        article6_MVC_non_ajuste_trade: false,
    }), selectedArticle = _4[0], setSelectedArticle = _4[1];
    var _5 = React.useState([]), ministryList = _5[0], setMinistryList = _5[1];
    var _6 = React.useState([]), certificatorList = _6[0], setCertificatorList = _6[1];
    var _7 = React.useState(); _7[0]; _7[1];
    var _8 = React.useState(), implementOwner = _8[0], setimplementOwner = _8[1];
    var _9 = React.useState([]), polygonProjet = _9[0], setPolygonProjet = _9[1];
    var _10 = React.useState([]), invalidPolygons = _10[0], setInvalidPolygons = _10[1];
    // const initialOrganisationOwnershipValues: any[] = [
    //   {
    //     organisation:
    //       userInfoState?.companyRole !== CompanyRole.GOVERNMENT &&
    //       userInfoState?.companyRole !== CompanyRole.MINISTRY &&
    //       userInfoState?.companyName,
    //     proponentPercentage:
    //       userInfoState?.companyRole !== CompanyRole.GOVERNMENT &&
    //       userInfoState?.companyRole !== CompanyRole.MINISTRY &&
    //       (100-Number(govData.nationalSopValue)),
    //   },
    // ];
    var selectedSectoralScopes = selectedSector !== String(exports.Sector.Health) &&
        selectedSector !== String(exports.Sector.Education) &&
        selectedSector !== String(exports.Sector.Hospitality)
        ? sectoralScopes[selectedSector]
        : Object.entries(exports.SectoralScope).map(function (_a) {
            var key = _a[0]; _a[1];
            return key;
        });
    var getBase64 = function (file) {
        return new Promise(function (resolve, reject) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () { return resolve(reader.result); };
            reader.onerror = function (error) { return reject(error); };
        });
    };
    var getCountryList = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingList(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, get("national/organisation/countries")];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setCountries(response.data);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting country list", error_1);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    //Upload des polygones
    var handleFileUpload = function (file) {
        var reader = new FileReader();
        reader.onload = function (e) {
            var data = new Uint8Array(e.target.result);
            var workbook = readSync(data, { type: "array" });
            var sheetName = workbook.SheetNames[0];
            var worksheet = utils.sheet_to_json(workbook.Sheets[sheetName]);
            var parsedData = worksheet.map(function (row) { return ({
                Intitule: row.Zone,
                Polygone: [JSON.parse(row.polygone)],
            }); });
            console.log(parsedData);
            var _a = validatePolygons(parsedData), validPolygons = _a.validPolygons, invalidPolygons = _a.invalidPolygons;
            setPolygonProjet(validPolygons);
            setInvalidPolygons(invalidPolygons);
        };
        reader.readAsArrayBuffer(file);
        return false; // Empêche l'upload automatique
    };
    var getRegionList = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, regionNames, uniqueRegionNames, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingList(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/organisation/regions", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "lang",
                                    operation: "=",
                                    value: "fr",
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        regionNames = response.data.map(function (item) { return item.regionName; });
                        uniqueRegionNames = Array.from(new Set(regionNames));
                        setRegionsList(__spreadArray(["National"], uniqueRegionNames, true));
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_2 = _a.sent();
                    console.log("Error in getting regions list", error_2);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getGovernmentDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    console.log("getting government profile");
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.GOVERNMENT,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setInitialOrganisationOwnershipValues([
                            {
                                organisation: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.GOVERNMENT &&
                                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.MINISTRY &&
                                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyName),
                                proponentPercentage: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.GOVERNMENT &&
                                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.MINISTRY &&
                                    100 - Number(response === null || response === void 0 ? void 0 : response.data[0].nationalSopValue),
                            },
                        ]);
                        setGovData(response === null || response === void 0 ? void 0 : response.data[0]);
                        console.log("gov profile", response === null || response === void 0 ? void 0 : response.data[0]);
                        return [2 /*return*/, response === null || response === void 0 ? void 0 : response.data[0]];
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_3 = _a.sent();
                    console.log("Error in getting government data", error_3);
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getMinistryDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    console.log("getting Ministry profile");
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 100,
                            filterOr: [
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.MINISTRY,
                                },
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.GOVERNMENT,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setMinistryList(response === null || response === void 0 ? void 0 : response.data);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_4 = _a.sent();
                    console.log("Error in getting ministry data", error_4);
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    //Liste des certificateurs
    var getCertificator_list = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_5;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    console.log("getting Certificator profile");
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 1000,
                            filterAnd: [
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.CERTIFIER,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        console.log("Liste des ceritificateurs");
                        console.log(response.data);
                        setCertificatorList(response === null || response === void 0 ? void 0 : response.data);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_5 = _a.sent();
                    console.log("Error in getting certificator data", error_5);
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getImplementOwnerDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_6;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    setLoading(true);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id,
                                },
                            ],
                        })];
                case 2:
                    response = _c.sent();
                    if (response && response.data) {
                        if ((_a = response === null || response === void 0 ? void 0 : response.data[0]) === null || _a === void 0 ? void 0 : _a.company) {
                            setimplementOwner((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.company);
                        }
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_6 = _c.sent();
                    console.log("Error in getting users", error_6);
                    antd.message.open({
                        type: "error",
                        content: error_6.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var getOrganisationsDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, userOrganisation, taxId, error_7;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingList(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/organisation/queryNames", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.PROGRAMME_DEVELOPER,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setOrganisationList(response === null || response === void 0 ? void 0 : response.data);
                        userOrganisation = response === null || response === void 0 ? void 0 : response.data.find(function (company) { return company.name === (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyName); });
                        taxId = userOrganisation ? userOrganisation.taxId : null;
                        setUserOrgTaxId(taxId);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_7 = _a.sent();
                    console.log("Error in getting organisation list", error_7);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getUserDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, sectScopeValues_1, sectSScope_1, sectors_1, error_8;
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    setLoading(true);
                    _k.label = 1;
                case 1:
                    _k.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id,
                                },
                            ],
                        })];
                case 2:
                    response = _k.sent();
                    if (response && response.data) {
                        if (((_a = response === null || response === void 0 ? void 0 : response.data[0]) === null || _a === void 0 ? void 0 : _a.companyRole) === exports.CompanyRole.MINISTRY &&
                            ((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.company) &&
                            ((_d = (_c = response === null || response === void 0 ? void 0 : response.data[0]) === null || _c === void 0 ? void 0 : _c.company) === null || _d === void 0 ? void 0 : _d.sectoralScope)) {
                            setMinistrySectoralScope((_f = (_e = response === null || response === void 0 ? void 0 : response.data[0]) === null || _e === void 0 ? void 0 : _e.company) === null || _f === void 0 ? void 0 : _f.sectoralScope);
                            sectScopeValues_1 = [];
                            sectSScope_1 = [];
                            sectors_1 = [];
                            (_j = (_h = (_g = response === null || response === void 0 ? void 0 : response.data[0]) === null || _g === void 0 ? void 0 : _g.company) === null || _h === void 0 ? void 0 : _h.sectoralScope) === null || _j === void 0 ? void 0 : _j.map(function (sScope) {
                                Object.entries(exports.SectoralScope).map(function (_a) {
                                    var key = _a[0], value = _a[1];
                                    if (sScope === String(value)) {
                                        sectSScope_1.push({ key: key, value: value });
                                        sectScopeValues_1.push(key);
                                    }
                                });
                            });
                            setAvailableSectoralScope(sectSScope_1);
                            sectScopeValues_1 === null || sectScopeValues_1 === void 0 ? void 0 : sectScopeValues_1.map(function (key) {
                                Object.values(exports.Sector).map(function (sector) {
                                    var _a;
                                    if ((_a = sectoralScopes[sector]) === null || _a === void 0 ? void 0 : _a.includes(key)) {
                                        if (!sectors_1.includes(sector)) {
                                            sectors_1.push(sector);
                                        }
                                    }
                                });
                            });
                            setAvailableSectar(__spreadArray(__spreadArray([], sectors_1, true), [
                                "Health",
                                "Education",
                                "Hospitality",
                            ], false));
                        }
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_8 = _k.sent();
                    console.log("Error in getting users", error_8);
                    antd.message.open({
                        type: "error",
                        content: error_8.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        getOrganisationsDetails();
        getCountryList();
        getRegionList();
        getGovernmentDetails();
        getMinistryDetails();
        getCertificator_list();
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            getUserDetails();
            getImplementOwnerDetails();
        }
    }, []);
    var normFile = function (e) {
        if (Array.isArray(e)) {
            return e;
        }
        return e === null || e === void 0 ? void 0 : e.fileList;
    };
    var nextOne = function (val) {
        setCurrent(current + 1);
        setStepOneData(val);
    };
    var prevOne = function () {
        setCurrent(current - 1);
    };
    var onFinishStepOne = function (values) { return __awaiter(void 0, void 0, void 0, function () {
        var programmeDetails, totalPercentage, ownershipPercentage, duplicateIds, proponentTxIds, proponentPercentages, finalImplementingOwner, supportingOwners, propTaxIds, propTaxIds, environmentalImpactAssessmentData, logoBase64;
        var _a, _b, _c, _d, _e;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    setLoading(true);
                    if (article6trade) {
                        ownershipPercentage = JSON.parse(JSON.stringify(values === null || values === void 0 ? void 0 : values.ownershipPercentage));
                        if (Number(govData.nationalSopValue) !== 0) {
                            ownershipPercentage.push({
                                organisation: govData.taxId,
                                proponentPercentage: Number(govData.nationalSopValue),
                            });
                        }
                        totalPercentage = ownershipPercentage.reduce(function (sum, field) { return sum + field.proponentPercentage; }, 0);
                        proponentPercentages = ownershipPercentage.map(function (item) { return item.proponentPercentage; });
                        proponentTxIds =
                            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.GOVERNMENT &&
                                (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.MINISTRY
                                ? ownershipPercentage === null || ownershipPercentage === void 0 ? void 0 : ownershipPercentage.slice(1).map(function (item) { return item.organisation; })
                                : ownershipPercentage === null || ownershipPercentage === void 0 ? void 0 : ownershipPercentage.map(function (item) { return item.organisation; });
                        propTaxIds = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.GOVERNMENT &&
                            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.MINISTRY
                            ? __spreadArray([userOrgTaxId], proponentTxIds, true) : proponentTxIds;
                        duplicateIds = new Set(propTaxIds).size !== propTaxIds.length;
                        console.log("proponentTxIds", proponentTxIds);
                        console.log("ownershipPercentage", ownershipPercentage);
                    }
                    if (!article6trade) {
                        ownershipPercentage = (values === null || values === void 0 ? void 0 : values.article6Percentage)
                            ? JSON.parse(JSON.stringify(values === null || values === void 0 ? void 0 : values.article6Percentage))
                            : [];
                        totalPercentage = 100;
                        if ((values === null || values === void 0 ? void 0 : values.implementingOwner) && (values === null || values === void 0 ? void 0 : values.implementingOwner.length) > 0) {
                            ownershipPercentage.push({
                                organisation: implementOwner
                                    ? implementOwner.taxId
                                    : values === null || values === void 0 ? void 0 : values.implementingOwner,
                                proponentPercentage: 100,
                            });
                        }
                        proponentPercentages = ownershipPercentage.map(function (item) {
                            return item.proponentPercentage === "Supporting" ? 0 : 100;
                        });
                        proponentTxIds = ownershipPercentage === null || ownershipPercentage === void 0 ? void 0 : ownershipPercentage.map(function (item) { return item.organisation; });
                        propTaxIds = proponentTxIds;
                        duplicateIds = new Set(propTaxIds).size !== propTaxIds.length;
                        finalImplementingOwner = implementOwner
                            ? implementOwner.taxId
                            : values === null || values === void 0 ? void 0 : values.implementingOwner;
                        supportingOwners = (_a = values === null || values === void 0 ? void 0 : values.article6Percentage) === null || _a === void 0 ? void 0 : _a.map(function (item) { return item.organisation; });
                        console.log("implementingOwner", finalImplementingOwner);
                        console.log("supportingOwners", supportingOwners);
                    }
                    environmentalImpactAssessmentData = "";
                    if (!(((_b = values === null || values === void 0 ? void 0 : values.environmentalImpactAssessment) === null || _b === void 0 ? void 0 : _b.length) > 0)) return [3 /*break*/, 2];
                    return [4 /*yield*/, getBase64((_c = values === null || values === void 0 ? void 0 : values.environmentalImpactAssessment[0]) === null || _c === void 0 ? void 0 : _c.originFileObj)];
                case 1:
                    environmentalImpactAssessmentData = _f.sent();
                    _f.label = 2;
                case 2:
                    logoBase64 = "";
                    if (!(((_d = values === null || values === void 0 ? void 0 : values.designDocument) === null || _d === void 0 ? void 0 : _d.length) > 0)) return [3 /*break*/, 4];
                    return [4 /*yield*/, getBase64((_e = values === null || values === void 0 ? void 0 : values.designDocument[0]) === null || _e === void 0 ? void 0 : _e.originFileObj)];
                case 3:
                    logoBase64 = _f.sent();
                    _f.label = 4;
                case 4:
                    if (totalPercentage !== 100) {
                        if (Number(govData.nationalSopValue) !== 0) {
                            ownershipPercentage.pop();
                        }
                        antd.message.open({
                            type: "error",
                            content: t("addProgramme:proponentPercentValidation"),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        setLoading(false);
                    }
                    else if (duplicateIds) {
                        if (Number(govData.nationalSopValue) !== 0) {
                            ownershipPercentage.pop();
                        }
                        antd.message.open({
                            type: "error",
                            content: t("addProgramme:duplicateOrg"),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        setLoading(false);
                    }
                    else {
                        programmeDetails = {
                            title: values === null || values === void 0 ? void 0 : values.title,
                            externalId: values === null || values === void 0 ? void 0 : values.externalId,
                            sectoralScope: values === null || values === void 0 ? void 0 : values.sectoralScope,
                            sector: values === null || values === void 0 ? void 0 : values.sector,
                            startTime: moment(values === null || values === void 0 ? void 0 : values.startTime).startOf("day").unix(),
                            endTime: moment(values === null || values === void 0 ? void 0 : values.endTime).endOf("day").unix(),
                            proponentTaxVatId: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.GOVERNMENT &&
                                (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.MINISTRY
                                ? __spreadArray([userOrgTaxId], proponentTxIds, true) : proponentTxIds,
                            proponentPercentage: proponentPercentages,
                            article6trade: article6trade,
                            article6_8_trade: selectedArticle.article6_8_trade,
                            article6_4_trade: selectedArticle.article6_4_trade,
                            polygoneProjet: JSON.stringify(polygonProjet),
                            article6_2_trade: selectedArticle.article6_2_trade,
                            article6_MVC_ajuste_trade: selectedArticle.article6_MVC_ajuste_trade,
                            article6_MVC_non_ajuste_trade: selectedArticle.article6_MVC_non_ajuste_trade,
                            supportingowners: !article6trade && supportingOwners ? supportingOwners : undefined,
                            implementinguser: !article6trade ? finalImplementingOwner : undefined,
                            programmeProperties: __assign(__assign({ buyerCountryEligibility: article6trade
                                    ? values === null || values === void 0 ? void 0 : values.buyerCountryEligibility
                                    : undefined, geographicalLocation: values === null || values === void 0 ? void 0 : values.geographicalLocation, greenHouseGasses: values === null || values === void 0 ? void 0 : values.greenHouseGasses }, ((values === null || values === void 0 ? void 0 : values.ndcScope) !== undefined &&
                                (values === null || values === void 0 ? void 0 : values.ndcScope) !== null && {
                                ndcScope: (values === null || values === void 0 ? void 0 : values.ndcScope) === "true" ? true : false,
                            })), (includedInNDC !== undefined &&
                                includedInNDC !== null && { includedInNdc: includedInNDC })),
                            environmentalAssessmentRegistrationNo: values === null || values === void 0 ? void 0 : values.environmentalAssessmentRegistrationNo,
                        };
                        if ((logoBase64 === null || logoBase64 === void 0 ? void 0 : logoBase64.length) > 0) {
                            programmeDetails.designDocument = logoBase64;
                        }
                        if ((environmentalImpactAssessmentData === null || environmentalImpactAssessmentData === void 0 ? void 0 : environmentalImpactAssessmentData.length) > 0) {
                            programmeDetails.environmentalImpactAssessment =
                                environmentalImpactAssessmentData;
                        }
                        setLoading(false);
                        console.log(programmeDetails);
                        nextOne(programmeDetails);
                    }
                    return [2 /*return*/];
            }
        });
    }); };
    var saveNewProgramme = function (payload) { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_9;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/programme/create", payload)];
                case 2:
                    response = _a.sent();
                    console.log("Programme creation -> ", response);
                    if ((response === null || response === void 0 ? void 0 : response.statusText) === "SUCCESS") {
                        console.log("Le log aprés la soumission du projet ");
                        console.log(response.data.programmeId);
                        console.log(Number(selectedCertificator));
                        certifyproject(response.data.programmeId, Number(selectedCertificator));
                        antd.message.open({
                            type: "success",
                            content: t("addProgramme:programmeCreationSuccess"),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                    }
                    onNavigateToProgrammeView();
                    return [3 /*break*/, 5];
                case 3:
                    error_9 = _a.sent();
                    console.log("Error in programme creation - ", error_9);
                    antd.message.open({
                        type: "error",
                        content: error_9 === null || error_9 === void 0 ? void 0 : error_9.message,
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var certifyproject = function (programmeId, certifierId) { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_10;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, put("national/programme/certify", {
                            programmeId: programmeId,
                            comment: "Certifie ce projet",
                            certifierId: certifierId,
                        })];
                case 1:
                    response = _a.sent();
                    console.log(response);
                    return [3 /*break*/, 3];
                case 2:
                    error_10 = _a.sent();
                    console.log("Error in programme certification - ", error_10);
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var addFinancingSoughtData = function (values) {
        var programmeDetails = stepOneData;
        programmeDetails.creditEst = Number(values === null || values === void 0 ? void 0 : values.creditEst);
        programmeDetails.programmeProperties.estimatedProgrammeCostUSD = Number(values === null || values === void 0 ? void 0 : values.estimatedProgrammeCostUSD);
        programmeDetails.programmeProperties.carbonPriceUSDPerTon = article6trade
            ? Number(values === null || values === void 0 ? void 0 : values.minViableCarbonPrice)
            : 0;
        setProgrammeDetailsObj(programmeDetails);
        return programmeDetails;
    };
    var onFinishStepTwo = function (values) { return __awaiter(void 0, void 0, void 0, function () {
        var updatedProgrammeDetailsObj;
        return __generator(this, function (_a) {
            updatedProgrammeDetailsObj = addFinancingSoughtData(values);
            saveNewProgramme(updatedProgrammeDetailsObj);
            return [2 /*return*/];
        });
    }); };
    var onFormTwoValuesChane = function (changedValues, allValues) {
        if (article6trade &&
            (allValues === null || allValues === void 0 ? void 0 : allValues.creditEst) !== undefined &&
            (allValues === null || allValues === void 0 ? void 0 : allValues.creditEst) !== null &&
            (allValues === null || allValues === void 0 ? void 0 : allValues.creditEst) > 0 &&
            (allValues === null || allValues === void 0 ? void 0 : allValues.estimatedProgrammeCostUSD) !== undefined &&
            (allValues === null || allValues === void 0 ? void 0 : allValues.estimatedProgrammeCostUSD) !== null &&
            (allValues === null || allValues === void 0 ? void 0 : allValues.estimatedProgrammeCostUSD) > 0) {
            var minViableCarbonPrice = Number((allValues === null || allValues === void 0 ? void 0 : allValues.estimatedProgrammeCostUSD) / (allValues === null || allValues === void 0 ? void 0 : allValues.creditEst)).toFixed(2);
            formTwo.setFieldValue("minViableCarbonPrice", addCommSepRound$1(minViableCarbonPrice));
        }
        else {
            formTwo.setFieldValue("minViableCarbonPrice", "");
        }
    };
    var onChangeNDCScope = function (event) {
        var value = event.target.value;
        if (value === ndcScopeValue) {
            setNdcScopeValue(null);
        }
        else {
            setNdcScopeChanged(true);
            setIncludedInNDC(true);
            setNdcScopeValue(value);
        }
    };
    var onClickNDCScope = function (value) {
        if (value === ndcScopeValue) {
            setNdcScopeValue(null);
            formOne.setFieldValue("ndcScope", null);
            setNdcScopeChanged(undefined);
            setIncludedInNDC(undefined);
        }
    };
    var onArticle6Trading = function (event) {
        setArticletrade(event.target.value);
        formOne.resetFields(["ownershipPercentage"]);
        formOne.resetFields(["article6Percentage"]);
        formOne.resetFields(["implementingOwner"]);
    };
    var on_type_Article6_trade = function (articlekey, article_value) {
        var newSelection = {
            article6_8_trade: false,
            article6_4_trade: false,
            article6_2_trade: false,
            article6_MVC_ajuste_trade: false,
            article6_MVC_non_ajuste_trade: false,
        };
        newSelection[articlekey] = article_value;
        setSelectedArticle(newSelection);
        formOne.resetFields(["ownershipPercentage"]);
        formOne.resetFields(["article6Percentage"]);
        formOne.resetFields(["implementingOwner"]);
    };
    var onChangeGeoLocation = function (values) {
        if (values.includes("National")) {
            var buyerCountryValues = regionsList;
            var newBuyerValues = buyerCountryValues === null || buyerCountryValues === void 0 ? void 0 : buyerCountryValues.filter(function (item) { return item !== "National"; });
            formOne.setFieldValue("geographicalLocation", __spreadArray([], newBuyerValues, true));
        }
    };
    var onChangeStepOne = function (changedValues, allValues) {
        var _a, _b, _c;
        var selectedCompanies;
        if (article6trade) {
            selectedCompanies = (_a = allValues === null || allValues === void 0 ? void 0 : allValues.ownershipPercentage) === null || _a === void 0 ? void 0 : _a.map(function (org) { return org === null || org === void 0 ? void 0 : org.organisation; });
            var orgPercentValidation = ((_b = allValues === null || allValues === void 0 ? void 0 : allValues.ownershipPercentage[0]) === null || _b === void 0 ? void 0 : _b.proponentPercentage) === false
                ? true
                : false;
            setOwnershipPercentageValidation(orgPercentValidation);
        }
        else {
            selectedCompanies = (_c = allValues === null || allValues === void 0 ? void 0 : allValues.article6Percentage) === null || _c === void 0 ? void 0 : _c.map(function (org) { return org === null || org === void 0 ? void 0 : org.organisation; });
        }
        var uniqueOrgs = new Set(selectedCompanies);
        setSelectedOrgs(__spreadArray([], uniqueOrgs, true));
    };
    var checkOrgPercentageValidation = function () {
        var _a;
        var orgPercentage = formOne.getFieldValue("ownershipPercentage");
        var orgPercentValidation = ((_a = orgPercentage[0]) === null || _a === void 0 ? void 0 : _a.proponentPercentage) === false ? true : false;
        setOwnershipPercentageValidation(orgPercentValidation);
    };
    var onChangeSector = function (val) {
        setSelectedSector(String(val));
    };
    var onChangecertificator = function (val) {
        console.log("Voici la variable de retouir: " + String(val));
        setSelectedCertificator(String(val));
    };
    React.useEffect(function () {
        if (selectedSector !== "" &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            formOne.setFieldValue("sectoralScope", "");
            if (selectedSector === String(exports.Sector.Health) ||
                selectedSector === String(exports.Sector.Education) ||
                selectedSector === String(exports.Sector.Hospitality)) {
                setSelectableSectoralScope(availableSecoralScope);
            }
            else {
                var sScopes_1 = [];
                availableSecoralScope === null || availableSecoralScope === void 0 ? void 0 : availableSecoralScope.map(function (sectoralScope) {
                    var _a;
                    if ((_a = sectoralScopes[selectedSector]) === null || _a === void 0 ? void 0 : _a.includes(sectoralScope === null || sectoralScope === void 0 ? void 0 : sectoralScope.key)) {
                        sScopes_1.push(sectoralScope);
                    }
                });
                setSelectableSectoralScope(__spreadArray([], sScopes_1, true));
            }
        }
        else if (selectedSector !== "") {
            formOne.setFieldValue("sectoralScope", "");
        }
    }, [selectedSector]);
    if (!govData) {
        console.log("gov data loading");
        return React.createElement(React.Fragment, null);
    }
    return (React.createElement("div", { className: "add-programme-main-container" },
        React.createElement("div", { className: "title-container" },
            React.createElement("div", { className: "main" }, isUpdate
                ? t("addProgramme:editProgramme")
                : t("addProgramme:addProgramme"))),
        React.createElement("div", { className: "adding-section" },
            React.createElement("div", { className: "form-section" },
                React.createElement(antd.Steps, { progressDot: true, direction: "vertical", current: current, items: [
                        {
                            title: (React.createElement("div", { className: "step-title-container" },
                                React.createElement("div", { className: "step-count" }, "01"),
                                React.createElement("div", { className: "title" }, t("addProgramme:addProgramme1")))),
                            description: current === 0 && (React.createElement("div", { className: "programme-details-form-container" },
                                React.createElement("div", { className: "programme-details-form" },
                                    React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, name: "programme-details", className: "programme-details-form", layout: "vertical", requiredMark: true, form: formOne, onFinish: onFinishStepOne, onValuesChange: onChangeStepOne },
                                        React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-one" },
                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:title"), name: "title", initialValue: (_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.name, rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("addProgramme:title"), " ").concat(t("isRequired")));
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })),
                                                    React.createElement(antd.Form.Item, { wrapperCol: { span: 13 }, label: t("addProgramme:sector"), name: "sector", rules: [
                                                            {
                                                                required: true,
                                                                message: "".concat(t("addProgramme:sector"), " ").concat(t("isRequired")),
                                                            },
                                                        ] },
                                                        React.createElement(antd.Select, { size: "large", onChange: onChangeSector }, (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                            exports.CompanyRole.MINISTRY
                                                            ? availableSectar === null || availableSectar === void 0 ? void 0 : availableSectar.map(function (sector) { return (React.createElement(antd.Select.Option, { value: sector }, sector)); })
                                                            : Object.values(exports.Sector).map(function (sector) { return (React.createElement(antd.Select.Option, { value: sector }, sector)); }))),
                                                    React.createElement(antd.Form.Item, { wrapperCol: { span: 13 }, label: t("addProgramme:startTime"), name: "startTime", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    var endTime;
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("addProgramme:startTime"), " ").concat(t("isRequired")));
                                                                        }
                                                                        else {
                                                                            endTime = formOne.getFieldValue("endTime");
                                                                            if (endTime && value >= endTime) {
                                                                                throw new Error("".concat(t("addProgramme:endTimeVal")));
                                                                            }
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.DatePicker, { size: "large", disabledDate: function (currentDate) {
                                                                return currentDate < moment().startOf("day");
                                                            } })),
                                                    React.createElement(antd.Form.Item, { wrapperCol: { span: 13 }, label: t("addProgramme:ghgCovered"), name: "greenHouseGasses", rules: [
                                                            {
                                                                required: true,
                                                                message: "".concat(t("addProgramme:ghgCovered"), " ").concat(t("isRequired")),
                                                            },
                                                        ] },
                                                        React.createElement(antd.Select, { size: "large", mode: "multiple", maxTagCount: 2, allowClear: true },
                                                            React.createElement(antd.Select.Option, { value: "CO2" },
                                                                "CO",
                                                                React.createElement("sub", null, "2")),
                                                            React.createElement(antd.Select.Option, { value: "CH4" },
                                                                "CH",
                                                                React.createElement("sub", null, "4")),
                                                            React.createElement(antd.Select.Option, { value: "N2O" },
                                                                "N",
                                                                React.createElement("sub", null, "2"),
                                                                "O"),
                                                            React.createElement(antd.Select.Option, { value: "HFCs" },
                                                                "HFC",
                                                                React.createElement("sub", null, "s")),
                                                            React.createElement(antd.Select.Option, { value: "PFCs" },
                                                                "PFC",
                                                                React.createElement("sub", null, "s")),
                                                            React.createElement(antd.Select.Option, { value: "SF6" },
                                                                "SF",
                                                                React.createElement("sub", null, "6")))),
                                                    React.createElement("div", { className: "add-Document" },
                                                        React.createElement(antd.Form.Item, { label: t("addProgramme:designDoc"), name: "designDocument", valuePropName: "fileList", getValueFromEvent: normFile, required: true, labelCol: { span: 30 }, rules: [
                                                                {
                                                                    required: true,
                                                                    message: "".concat(t("addProgramme:designDoc"), " ").concat(t("addProgramme:isRequired")),
                                                                },
                                                                {
                                                                    validator: function (rule, file) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        var _a, _b;
                                                                        return __generator(this, function (_c) {
                                                                            if ((file === null || file === void 0 ? void 0 : file.length) > 0) {
                                                                                if (!isValidateFileType((_a = file[0]) === null || _a === void 0 ? void 0 : _a.type)) {
                                                                                    throw new Error("".concat(t("addProgramme:invalidFileFormat")));
                                                                                }
                                                                                else if (((_b = file[0]) === null || _b === void 0 ? void 0 : _b.size) > maximumImageSize) {
                                                                                    // default size format of files would be in bytes ->  1MB = 1000000bytes
                                                                                    throw new Error("".concat(t("common:maxSizeVal")));
                                                                                }
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Upload, { accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", beforeUpload: function (file) {
                                                                    return false;
                                                                }, className: "design-upload-section", name: "design", action: "/upload.do", listType: "picture", multiple: false, 
                                                                // defaultFileList={fileList}
                                                                maxCount: 1 },
                                                                React.createElement(antd.Button, { className: "upload-doc", size: "large", icon: React.createElement(icons.UploadOutlined, null) }, "Upload"))),
                                                        React.createElement("div", { className: "addDoc-info" },
                                                            React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "topLeft", trigger: "hover", title: React.createElement("a", { style: { color: "#fff" }, href: "https://app-eff78ffabc4efb.app.unfccc.org/tools/cdm/testprodspt3/UNFCCC_CDM/Pages/PDDnew.aspx?t=pdd", target: "_blank" }, t("addProgramme:designDocTooltip")), overlayClassName: "custom-tooltip" },
                                                                React.createElement(Icon.InfoCircle, { color: "#000000", size: 12 })))),
                                                    React.createElement(antd.Row, { className: "selection-details-row", gutter: [16, 16] },
                                                        React.createElement(antd.Col, { md: 24, xl: 12, className: "in-ndc-col" },
                                                            React.createElement(antd.Row, { className: "in-ndc-row" },
                                                                React.createElement(antd.Col, { md: 16, lg: 18, xl: 18 },
                                                                    React.createElement("div", { className: "included-label" },
                                                                        React.createElement("div", null, t("addProgramme:article6trading")))),
                                                                React.createElement(antd.Col, { md: 8, lg: 6, xl: 6, className: "included-val" },
                                                                    React.createElement(antd.Radio.Group, { size: "middle", value: article6trade, onChange: onArticle6Trading, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                                            exports.CompanyRole.PROGRAMME_DEVELOPER },
                                                                        React.createElement("div", { className: "yes-no-radio-container" },
                                                                            React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: true }, t("addProgramme:yes"))),
                                                                        React.createElement("div", { className: "yes-no-radio-container" },
                                                                            React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: false }, t("addProgramme:no")))))))),
                                                    article6trade && (React.createElement(React.Fragment, null,
                                                        React.createElement(antd.Row, { className: "selection-details-row", gutter: [16, 16] },
                                                            React.createElement(antd.Col, { md: 24, xl: 12, className: "in-ndc-col" },
                                                                React.createElement(antd.Row, { className: "in-ndc-row" },
                                                                    React.createElement(antd.Col, { md: 16, lg: 18, xl: 18 },
                                                                        React.createElement("div", { className: "included-label" },
                                                                            React.createElement("div", null, "Article 6.8"))),
                                                                    React.createElement(antd.Col, { md: 8, lg: 6, xl: 6, className: "included-val" },
                                                                        React.createElement(antd.Radio.Group, { size: "middle", value: selectedArticle.article6_8_trade, onChange: function (e) {
                                                                                return on_type_Article6_trade("article6_8_trade", e.target.value);
                                                                            }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                                                exports.CompanyRole.PROGRAMME_DEVELOPER },
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: true }, t("addProgramme:yes"))),
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: false }, t("addProgramme:no")))))))),
                                                        React.createElement(antd.Row, { className: "selection-details-row", gutter: [16, 16] },
                                                            React.createElement(antd.Col, { md: 24, xl: 12, className: "in-ndc-col" },
                                                                React.createElement(antd.Row, { className: "in-ndc-row" },
                                                                    React.createElement(antd.Col, { md: 16, lg: 18, xl: 18 },
                                                                        React.createElement("div", { className: "included-label" },
                                                                            React.createElement("div", null, "Article 6.4"))),
                                                                    React.createElement(antd.Col, { md: 8, lg: 6, xl: 6, className: "included-val" },
                                                                        React.createElement(antd.Radio.Group, { size: "middle", value: selectedArticle.article6_4_trade, onChange: function (e) {
                                                                                return on_type_Article6_trade("article6_4_trade", e.target.value);
                                                                            }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                                                exports.CompanyRole.PROGRAMME_DEVELOPER },
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: true }, t("addProgramme:yes"))),
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: false }, t("addProgramme:no")))))))),
                                                        React.createElement(antd.Row, { className: "selection-details-row", gutter: [16, 16] },
                                                            React.createElement(antd.Col, { md: 24, xl: 12, className: "in-ndc-col" },
                                                                React.createElement(antd.Row, { className: "in-ndc-row" },
                                                                    React.createElement(antd.Col, { md: 16, lg: 18, xl: 18 },
                                                                        React.createElement("div", { className: "included-label" },
                                                                            React.createElement("div", null, "Article 6.2"))),
                                                                    React.createElement(antd.Col, { md: 8, lg: 6, xl: 6, className: "included-val" },
                                                                        React.createElement(antd.Radio.Group, { size: "middle", value: selectedArticle.article6_2_trade, onChange: function (e) {
                                                                                return on_type_Article6_trade("article6_2_trade", e.target.value);
                                                                            }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                                                exports.CompanyRole.PROGRAMME_DEVELOPER },
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: true }, t("addProgramme:yes"))),
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: false }, t("addProgramme:no")))))))),
                                                        React.createElement(antd.Row, { className: "selection-details-row", gutter: [16, 16] },
                                                            React.createElement(antd.Col, { md: 24, xl: 12, className: "in-ndc-col" },
                                                                React.createElement(antd.Row, { className: "in-ndc-row" },
                                                                    React.createElement(antd.Col, { md: 16, lg: 18, xl: 18 },
                                                                        React.createElement("div", { className: "included-label" },
                                                                            React.createElement("div", null, "MVC ajust\u00E9"))),
                                                                    React.createElement(antd.Col, { md: 8, lg: 6, xl: 6, className: "included-val" },
                                                                        React.createElement(antd.Radio.Group, { size: "middle", value: selectedArticle.article6_MVC_ajuste_trade, onChange: function (e) {
                                                                                return on_type_Article6_trade("article6_MVC_ajuste_trade", e.target.value);
                                                                            }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                                                exports.CompanyRole.PROGRAMME_DEVELOPER },
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: true }, t("addProgramme:yes"))),
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: false }, t("addProgramme:no")))))))),
                                                        React.createElement(antd.Row, { className: "selection-details-row", gutter: [16, 16] },
                                                            React.createElement(antd.Col, { md: 24, xl: 12, className: "in-ndc-col" },
                                                                React.createElement(antd.Row, { className: "in-ndc-row" },
                                                                    React.createElement(antd.Col, { md: 16, lg: 18, xl: 18 },
                                                                        React.createElement("div", { className: "included-label" },
                                                                            React.createElement("div", null, "MVC non ajust\u00E9"))),
                                                                    React.createElement(antd.Col, { md: 8, lg: 6, xl: 6, className: "included-val" },
                                                                        React.createElement(antd.Radio.Group, { size: "middle", value: selectedArticle.article6_MVC_non_ajuste_trade, onChange: function (e) {
                                                                                return on_type_Article6_trade("article6_MVC_non_ajuste_trade", e.target.value);
                                                                            }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                                                exports.CompanyRole.PROGRAMME_DEVELOPER },
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: true }, t("addProgramme:yes"))),
                                                                            React.createElement("div", { className: "yes-no-radio-container" },
                                                                                React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: false }, t("addProgramme:no")))))))),
                                                        React.createElement(antd.Form.Item, { label: t("addProgramme:buyerCountryEligibility"), name: "buyerCountryEligibility", initialValue: (_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.name, rules: [
                                                                {
                                                                    required: false,
                                                                },
                                                            ] },
                                                            React.createElement(antd.Select, { size: "large", loading: loadingList }, countries.map(function (country) { return (React.createElement(antd.Select.Option, { key: country.alpha2, value: country.alpha2 }, country.name)); }))),
                                                        govData &&
                                                            Number(govData.nationalSopValue) !== 0 && (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                                            React.createElement(antd.Space, { wrap: true, style: {
                                                                    display: "flex",
                                                                    marginBottom: 8,
                                                                }, align: "center", size: "large" },
                                                                React.createElement("div", { className: "ownership-list-item" },
                                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:company"), name: "governmentName", wrapperCol: { span: 24 }, className: "organisation", initialValue: govData
                                                                            ? govData.name
                                                                            : "Government", required: true },
                                                                        React.createElement(antd.Input, { size: "large", disabled: true })),
                                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:proponentPercentage"), className: "ownership-percent", name: "sopPercentage", labelCol: { span: 24 }, wrapperCol: { span: 24 }, required: true, initialValue: govData
                                                                            ? Number(govData.nationalSopValue)
                                                                            : 0 },
                                                                        React.createElement(antd.InputNumber, { size: "large", disabled: true, min: 1, max: 100, formatter: function (value) {
                                                                                return "".concat(value, "%");
                                                                            }, parser: function (value) {
                                                                                return value.replace("%", "");
                                                                            } })))))),
                                                        React.createElement(antd.Form.List, { name: "ownershipPercentage", initialValue: initialOrganisationOwnershipValues }, function (fields, _a) {
                                                            var add = _a.add, remove = _a.remove;
                                                            return (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                                                fields.map(function (_a) {
                                                                    var key = _a.key, name = _a.name, restField = __rest(_a, ["key", "name"]);
                                                                    return (React.createElement(antd.Space, { wrap: true, key: key, style: {
                                                                            display: "flex",
                                                                            marginBottom: 8,
                                                                        }, align: "center", size: "large" },
                                                                        React.createElement("div", { className: "ownership-list-item" },
                                                                            React.createElement(antd.Form.Item, __assign({}, restField, { label: t("addProgramme:company"), name: [
                                                                                    name,
                                                                                    "organisation",
                                                                                ], wrapperCol: { span: 24 }, className: "organisation", rules: [
                                                                                    {
                                                                                        required: true,
                                                                                        message: "".concat(t("addProgramme:company"), " ").concat(t("isRequired")),
                                                                                        validateTrigger: "onBlur",
                                                                                    },
                                                                                ], shouldUpdate: true }),
                                                                                React.createElement(antd.Select, { size: "large", loading: loadingList, disabled: name === 0 &&
                                                                                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !==
                                                                                            exports.CompanyRole.GOVERNMENT &&
                                                                                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !==
                                                                                            exports.CompanyRole.MINISTRY }, organisationsList.map(function (organisation) { return (React.createElement(antd.Select.Option, { key: organisation.companyId, value: organisation.taxId, disabled: (selectedOrgs === null || selectedOrgs === void 0 ? void 0 : selectedOrgs.includes(organisation.taxId)) ||
                                                                                        ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !==
                                                                                            exports.CompanyRole.GOVERNMENT &&
                                                                                            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !==
                                                                                                exports.CompanyRole.MINISTRY &&
                                                                                            userOrgTaxId ===
                                                                                                (organisation === null || organisation === void 0 ? void 0 : organisation.taxId)) }, organisation.name)); }))),
                                                                            React.createElement(antd.Form.Item, __assign({}, restField, { label: t("addProgramme:proponentPercentage"), className: "ownership-percent", name: [
                                                                                    name,
                                                                                    "proponentPercentage",
                                                                                ], labelCol: { span: 24 }, wrapperCol: { span: 24 }, required: true, rules: [
                                                                                    {
                                                                                        required: true,
                                                                                        message: "".concat(t("addProgramme:proponentPercentage"), " ").concat(t("isRequired")),
                                                                                    },
                                                                                    {
                                                                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                                            return __generator(this, function (_a) {
                                                                                                if (ownershipPercentageValidation &&
                                                                                                    name === 0) {
                                                                                                    throw new Error("".concat(t("addProgramme:proponentPercentage"), " ").concat(t("isRequired")));
                                                                                                }
                                                                                                return [2 /*return*/];
                                                                                            });
                                                                                        }); },
                                                                                    },
                                                                                ], shouldUpdate: true }),
                                                                                React.createElement(antd.InputNumber, { size: "large", min: 1, max: 100, formatter: function (value) {
                                                                                        return "".concat(value, "%");
                                                                                    }, parser: function (value) {
                                                                                        return value.replace("%", "");
                                                                                    }, disabled: (fields === null || fields === void 0 ? void 0 : fields.length) < 2 &&
                                                                                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !==
                                                                                            exports.CompanyRole.GOVERNMENT &&
                                                                                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !==
                                                                                            exports.CompanyRole.MINISTRY })),
                                                                            (fields === null || fields === void 0 ? void 0 : fields.length) > 1 &&
                                                                                name !== 0 && (React.createElement(icons.MinusCircleOutlined, { className: "dynamic-delete-button", onClick: function () {
                                                                                    remove(name);
                                                                                } })))));
                                                                }),
                                                                React.createElement(antd.Form.Item, null,
                                                                    React.createElement(antd.Button, { type: "dashed", onClick: function () { return add(); }, icon: React.createElement(icons.PlusOutlined, null) }))));
                                                        }))),
                                                    !article6trade && (React.createElement(React.Fragment, null,
                                                        implementOwner ? (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                                            React.createElement(antd.Space, { wrap: true, style: {
                                                                    display: "flex",
                                                                    marginBottom: 8,
                                                                }, align: "center", size: "large" },
                                                                React.createElement("div", { className: "ownership-list-item" },
                                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:governmentDepartment"), name: "implementingOwner", wrapperCol: { span: 24 }, className: "organisation", initialValue: implementOwner
                                                                            ? implementOwner.name +
                                                                                " - " +
                                                                                Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(implementOwner.govDep)]
                                                                            : "Implementing Owner", required: true },
                                                                        React.createElement(antd.Input, { size: "large", disabled: true })),
                                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:ownership"), className: "ownership-percent", name: "implementPercentage", labelCol: { span: 24 }, wrapperCol: { span: 24 }, required: true, initialValue: implementOwner
                                                                            ? "Implementing"
                                                                            : "Supporting" },
                                                                        React.createElement(antd.InputNumber, { size: "large", disabled: true })))))) : (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                                            React.createElement(antd.Space, { wrap: true, style: {
                                                                    display: "flex",
                                                                    marginBottom: 8,
                                                                }, align: "center", size: "large" },
                                                                React.createElement("div", { className: "ownership-list-item" },
                                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:governmentDepartment"), name: "implementingOwner", wrapperCol: { span: 24 }, className: "organisation", rules: [
                                                                            {
                                                                                required: true,
                                                                                message: "".concat(t("addProgramme:governmentDepartment"), " ").concat(t("isRequired")),
                                                                            },
                                                                        ] },
                                                                        React.createElement(antd.Select, { size: "large", loading: loadingList }, ministryList.map(function (organisation) {
                                                                            return organisation.govDep && (React.createElement(antd.Select.Option, { key: organisation.companyId, value: organisation.taxId }, organisation.name +
                                                                                " - " +
                                                                                Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(organisation.govDep)]));
                                                                        }))),
                                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:ownership"), className: "ownership-percent", name: "implementPercentage", labelCol: { span: 24 }, wrapperCol: { span: 24 }, required: true, initialValue: "Implementing" },
                                                                        React.createElement(antd.InputNumber, { size: "large", disabled: true })))))),
                                                        React.createElement(antd.Form.List, { name: "article6Percentage" }, function (fields, _a) {
                                                            var add = _a.add, remove = _a.remove;
                                                            return (React.createElement("div", { className: "space-container", style: { width: "100%" } },
                                                                fields.map(function (_a) {
                                                                    var key = _a.key, name = _a.name, restField = __rest(_a, ["key", "name"]);
                                                                    return (React.createElement(antd.Space, { wrap: true, key: key, style: {
                                                                            display: "flex",
                                                                            marginBottom: 8,
                                                                        }, align: "center", size: "large" },
                                                                        React.createElement("div", { className: "ownership-list-item" },
                                                                            React.createElement(antd.Form.Item, __assign({}, restField, { label: t("addProgramme:governmentDepartment"), name: [
                                                                                    name,
                                                                                    "organisation",
                                                                                ], rules: [
                                                                                    {
                                                                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                                            return __generator(this, function (_a) {
                                                                                                if (String(value).trim() === "" ||
                                                                                                    String(value).trim() ===
                                                                                                        undefined ||
                                                                                                    value === null ||
                                                                                                    value ===
                                                                                                        undefined) {
                                                                                                    throw new Error("".concat(t("addProgramme:governmentDepartment"), " shouldn't be empty"));
                                                                                                }
                                                                                                return [2 /*return*/];
                                                                                            });
                                                                                        }); },
                                                                                    },
                                                                                ], wrapperCol: { span: 24 }, className: "organisation", shouldUpdate: true }),
                                                                                React.createElement(antd.Select, { size: "large", loading: loadingList }, ministryList.map(function (organisation) {
                                                                                    var _a;
                                                                                    return organisation.govDep && (React.createElement(antd.Select.Option, { key: organisation.companyId, value: organisation.taxId, disabled: (selectedOrgs === null || selectedOrgs === void 0 ? void 0 : selectedOrgs.includes(organisation.taxId.trim())) ||
                                                                                            (implementOwner === null || implementOwner === void 0 ? void 0 : implementOwner.taxId) ===
                                                                                                organisation.taxId ||
                                                                                            ((_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.implementingOwner.trim()) ===
                                                                                                organisation.taxId }, organisation.name +
                                                                                        " - " +
                                                                                        Object.keys(exports.GovDepartment)[Object.values(exports.GovDepartment).indexOf(organisation.govDep)]));
                                                                                }))),
                                                                            React.createElement(antd.Form.Item, __assign({}, restField, { label: t("addProgramme:ownership"), className: "ownership-percent", name: [
                                                                                    name,
                                                                                    "proponentPercentage",
                                                                                ], initialValue: "Supporting", labelCol: { span: 24 }, wrapperCol: { span: 24 }, shouldUpdate: true }),
                                                                                React.createElement(antd.InputNumber, { size: "large", disabled: true })),
                                                                            React.createElement(icons.MinusCircleOutlined, { className: "dynamic-delete-button", onClick: function () {
                                                                                    remove(name);
                                                                                } }))));
                                                                }),
                                                                React.createElement(antd.Form.Item, null,
                                                                    React.createElement(antd.Button, { type: "dashed", onClick: function () { return add(); }, icon: React.createElement(icons.PlusOutlined, null) }))));
                                                        }))),
                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:environmentalAssessmentRegistrationNo"), name: "environmentalAssessmentRegistrationNo", initialValue: (_c = state === null || state === void 0 ? void 0 : state.record) === null || _c === void 0 ? void 0 : _c.environmentalAssessmentRegistrationNo, rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("addProgramme:environmentalAssessmentRegistrationNo"), " ").concat(t("isRequired")));
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })),
                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:environmentalImpactAssessment"), name: "environmentalImpactAssessment", valuePropName: "fileList", getValueFromEvent: normFile, required: false, rules: [
                                                            {
                                                                validator: function (rule, file) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    var _a, _b;
                                                                    return __generator(this, function (_c) {
                                                                        if ((file === null || file === void 0 ? void 0 : file.length) > 0) {
                                                                            if (!isValidateFileType((_a = file[0]) === null || _a === void 0 ? void 0 : _a.type, exports.DocType.ENVIRONMENTAL_IMPACT_ASSESSMENT)) {
                                                                                throw new Error("".concat(t("addProgramme:invalidFileFormat")));
                                                                            }
                                                                            else if (((_b = file[0]) === null || _b === void 0 ? void 0 : _b.size) > maximumImageSize) {
                                                                                // default size format of files would be in bytes -> 1MB = 1000000bytes
                                                                                throw new Error("".concat(t("common:maxSizeVal")));
                                                                            }
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Upload, { accept: ".doc, .docx, .pdf, .png, .jpg", beforeUpload: function (file) {
                                                                return false;
                                                            }, className: "design-upload-section", name: "design", action: "/upload.do", listType: "picture", multiple: false, maxCount: 1 },
                                                            React.createElement(antd.Button, { className: "upload-doc", size: "large", icon: React.createElement(icons.UploadOutlined, null) }, "Upload"))))),
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:externalId"), name: "externalId", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("addProgramme:externalId"), " ").concat(t("isRequired")));
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })),
                                                    React.createElement(antd.Form.Item, { wrapperCol: { span: 13 }, label: t("addProgramme:sectoralScope"), name: "sectoralScope", rules: [
                                                            {
                                                                required: true,
                                                                message: "".concat(t("addProgramme:sectoralScope"), " ").concat(t("isRequired")),
                                                            },
                                                        ] },
                                                        React.createElement(antd.Select, { size: "large" }, (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                            exports.CompanyRole.MINISTRY
                                                            ? selectableSectoralScope === null || selectableSectoralScope === void 0 ? void 0 : selectableSectoralScope.map(function (item) { return (React.createElement(antd.Select.Option, { key: item.value, value: item.value }, item.key)); })
                                                            : selectedSectoralScopes === null || selectedSectoralScopes === void 0 ? void 0 : selectedSectoralScopes.map(function (val) {
                                                                if (val in exports.SectoralScope) {
                                                                    var key = val;
                                                                    return (React.createElement(antd.Select.Option, { key: exports.SectoralScope[key], value: exports.SectoralScope[key] }, val));
                                                                }
                                                                return null;
                                                            }))),
                                                    React.createElement(antd.Form.Item, { wrapperCol: { span: 13 }, label: t("addProgramme:endTime"), name: "endTime", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    var startTime;
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("addProgramme:endTime"), " ").concat(t("isRequired")));
                                                                        }
                                                                        else {
                                                                            startTime = formOne.getFieldValue("startTime");
                                                                            if (startTime && value <= startTime) {
                                                                                throw new Error("".concat(t("addProgramme:endTimeVal")));
                                                                            }
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.DatePicker, { size: "large", disabledDate: function (currentDate) {
                                                                return currentDate < moment().endOf("day");
                                                            } })),
                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:ndcScope"), wrapperCol: { span: 13 }, className: "role-group", name: "ndcScope", initialValue: ndcScopeValue, rules: [
                                                            {
                                                                required: false,
                                                            },
                                                        ] },
                                                        React.createElement(antd.Radio.Group, { size: "large", onChange: onChangeNDCScope, value: ndcScopeValue },
                                                            React.createElement("div", { className: "condition-radio-container" },
                                                                React.createElement(antd.Radio.Button, { className: "condition-radio", value: "true", onClick: function () { return onClickNDCScope("true"); } }, t("addProgramme:conditional"))),
                                                            React.createElement("div", { className: "condition-radio-container" },
                                                                React.createElement(antd.Radio.Button, { className: "condition-radio", value: "false", onClick: function () { return onClickNDCScope("false"); } }, t("addProgramme:unConditional"))))),
                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:geographicalLocation"), name: "geographicalLocation", rules: [
                                                            {
                                                                required: true,
                                                                message: "".concat(t("addProgramme:geographicalLocation"), " ").concat(t("isRequired")),
                                                            },
                                                        ] },
                                                        React.createElement(antd.Select, { mode: "multiple", size: "large", maxTagCount: 2, onChange: onChangeGeoLocation, loading: loadingList, className: "custom-select", allowClear: true }, regionsList.map(function (region) { return (React.createElement(antd.Select.Option, { value: region }, region)); }))),
                                                    React.createElement(antd.Form.Item, { label: "Zones et polygones du projet(T\u00E9lechager le template)", name: "", valuePropName: "fileList", getValueFromEvent: normFile, required: false },
                                                        React.createElement("a", { href: "http://localhost:3005/assets/polygone.xlsx", target: "_blank", rel: "noopener noreferrer", download: true }, "Fichier template"),
                                                        React.createElement(antd.Upload, { accept: ".xlsx", beforeUpload: handleFileUpload, className: "polygone-upload-section", name: "polygone", action: "/upload.do", multiple: false, maxCount: 1 },
                                                            React.createElement(antd.Button, { className: "upload-doc", size: "large", icon: React.createElement(icons.UploadOutlined, null) }, "Upload")),
                                                        React.createElement("pre", { style: {
                                                                height: "600px",
                                                                backgroundColor: "#80808047",
                                                                overflowY: "auto",
                                                            } }, JSON.stringify(polygonProjet, null, 2)),
                                                        invalidPolygons.length > 0 && (React.createElement("div", null,
                                                            React.createElement("h3", null, "Invalid Polygons:"),
                                                            React.createElement("pre", { style: {
                                                                    height: "200px",
                                                                    backgroundColor: "#ff8080",
                                                                    overflowY: "auto",
                                                                } }, JSON.stringify(invalidPolygons.map(function (p) { return p.Intitule; }), null, 2))))),
                                                    React.createElement(antd.Form.Item, { label: "Certificateur", name: "Certificateur_choice", rules: [
                                                            {
                                                                required: false,
                                                            },
                                                        ] },
                                                        React.createElement(antd.Select, { size: "large", loading: loadingList, onChange: onChangecertificator }, certificatorList.map(function (certificator) { return (React.createElement(antd.Select.Option, { key: certificator.companyId, value: certificator.companyId }, certificator.name)); })))))),
                                        React.createElement("div", { className: "steps-actions" },
                                            React.createElement(antd.Button, { type: "primary", htmlType: "submit", loading: loading, onClick: checkOrgPercentageValidation }, t("addProgramme:next"))))))),
                        },
                        {
                            title: (React.createElement("div", { className: "step-title-container" },
                                React.createElement("div", { className: "step-count" }, "02"),
                                React.createElement("div", { className: "title" }, t("addProgramme:addProgramme2")))),
                            description: current === 1 && (React.createElement("div", { className: "programme-sought-form-container" },
                                React.createElement("div", { className: "programme-sought-form" },
                                    React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, name: "programme-sought", className: "programme-sought-form", layout: "vertical", requiredMark: true, form: formTwo, onFinish: onFinishStepTwo, onValuesChange: onFormTwoValuesChane },
                                        React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-one" },
                                                    React.createElement(antd.Form.Item, { label: t("addProgramme:estimatedProgrammeCostUSD"), name: "estimatedProgrammeCostUSD", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("addProgramme:estimatedProgrammeCostUSD"), " ").concat(t("isRequired")));
                                                                        }
                                                                        else if (!isNaN(value) &&
                                                                            Number(value) > 0) {
                                                                            return [2 /*return*/, Promise.resolve()];
                                                                        }
                                                                        else {
                                                                            throw new Error("".concat(t("addProgramme:estimatedProgrammeCostUSD"), " ").concat(t("isInvalid")));
                                                                        }
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { size: "large", style: { width: "100%", paddingRight: 12 } })),
                                                    article6trade && (React.createElement(antd.Form.Item, { label: t("addProgramme:minViableCarbonPrice"), name: "minViableCarbonPrice" },
                                                        React.createElement(antd.InputNumber, { disabled: true, size: "large", style: { width: "100%", paddingRight: 12 } }))))),
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: article6trade
                                                            ? t("addProgramme:creditEst")
                                                            : t("addProgramme:creditReduction"), name: "creditEst", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(article6trade
                                                                                ? t("addProgramme:creditEst")
                                                                                : t("addProgramme:creditReduction"), " ").concat(t("isRequired")));
                                                                        }
                                                                        else if (!isNaN(value) &&
                                                                            Number(value) > 0) {
                                                                            return [2 /*return*/, Promise.resolve()];
                                                                        }
                                                                        else {
                                                                            throw new Error("".concat(t("addProgramme:creditEst"), " ").concat(t("isInvalid")));
                                                                        }
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { size: "large", style: { width: "100%", paddingRight: 12 } }))))),
                                        React.createElement("div", { className: "steps-actions" },
                                            React.createElement(antd.Button, { type: "primary", htmlType: "submit", loading: loading }, t("addProgramme:submit")),
                                            current === 1 && (React.createElement(antd.Button, { className: "back-btn", onClick: function () { return prevOne(); }, loading: loading }, t("addProgramme:back")))))))),
                        },
                    ] })))));
};

var css_248z$q = ".mg-left-1 {\n  margin-left: 1rem; }\n\n.add-user-main-container {\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  padding: 0 50px; }\n  .add-user-main-container .title-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    border-radius: 5px; }\n    .add-user-main-container .title-container .titles {\n      display: flex;\n      flex-direction: column;\n      width: 50%; }\n      .add-user-main-container .title-container .titles .main {\n        font-size: 1.25rem;\n        font-weight: 500;\n        color: #008f39; }\n      .add-user-main-container .title-container .titles .sub {\n        font-size: 0.8rem;\n        color: #555657; }\n    .add-user-main-container .title-container .actions {\n      display: flex;\n      flex-direction: row;\n      align-items: end;\n      justify-content: end;\n      width: 50%; }\n      .add-user-main-container .title-container .actions .btn-danger {\n        color: #ff4d4f !important;\n        border-color: #ff8183 !important; }\n\n.user-content-card {\n  width: 100%;\n  padding: 2.5rem 2rem 1rem 2rem;\n  margin-top: 1rem; }\n\n.content-card .PhoneInputInput .input {\n  border-radius: 5px !important; }\n\n.content-card .user-details-form .actions {\n  display: flex;\n  flex-direction: row-reverse; }\n\n.content-card .user-details-form .row .details-part-two .role-group .admin-radio-container {\n  width: 30%; }\n  .content-card .user-details-form .row .details-part-two .role-group .admin-radio-container .ant-radio-button-wrapper-checked:not(\n  .ant-radio-button-wrapper-disabled\n) {\n    color: #d12800 !important;\n    border-color: #d12800 !important;\n    box-shadow: none; }\n    .content-card .user-details-form .row .details-part-two .role-group .admin-radio-container .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n) .anticon {\n      background: #eeeeee;\n      border-radius: 50px;\n      padding: 0.2rem;\n      color: #d12800; }\n\n.content-card .user-details-form .row .details-part-two .role-group .manager-radio-container {\n  width: 30%; }\n  .content-card .user-details-form .row .details-part-two .role-group .manager-radio-container .ant-radio-button-wrapper-checked:not(\n  .ant-radio-button-wrapper-disabled\n) {\n    color: #75009e !important;\n    border-color: #75009e !important;\n    box-shadow: none; }\n    .content-card .user-details-form .row .details-part-two .role-group .manager-radio-container .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n) .anticon {\n      background: #eeeeee;\n      border-radius: 50px;\n      padding: 0.2rem;\n      color: #75009e; }\n\n.content-card .user-details-form .row .details-part-two .role-group .view-only-radio-container {\n  width: 30%; }\n  .content-card .user-details-form .row .details-part-two .role-group .view-only-radio-container .ant-radio-button-wrapper-checked:not(\n  .ant-radio-button-wrapper-disabled\n) {\n    color: #707070 !important;\n    border-color: #707070 !important;\n    box-shadow: none; }\n  .content-card .user-details-form .row .details-part-two .role-group .view-only-radio-container .anticon {\n    background: #eeeeee;\n    border-radius: 50px;\n    padding: 0.2rem;\n    color: #707070; }\n\n.content-card .user-details-form .row .details-part-two .role-group .ant-radio-button-wrapper::before {\n  background-color: transparent; }\n\n.content-card .user-details-form .row .details-part-two .role-group .ant-radio-button-wrapper {\n  border: 1px solid #d9d9d9; }\n\n.content-card .user-details-form .row .details-part-two .role-group .role-icons {\n  margin-right: 5px; }\n\n.content-card .user-details-form .row .details-part-two .role-group .anticon {\n  margin-right: 0.5rem; }\n\n.content-card .user-details-form .row .details-part-two .role-group .admin {\n  width: 100%; }\n  .content-card .user-details-form .row .details-part-two .role-group .admin .ant-radio-button-checked {\n    background: rgba(255, 166, 166, 0.42); }\n\n.content-card .user-details-form .row .details-part-two .role-group .manager {\n  width: 100%; }\n  .content-card .user-details-form .row .details-part-two .role-group .manager .ant-radio-button-checked {\n    background: rgba(96, 27, 209, 0.13); }\n\n.content-card .user-details-form .row .details-part-two .role-group .view-only {\n  width: 100%; }\n  .content-card .user-details-form .row .details-part-two .role-group .view-only .ant-radio-button-checked {\n    background: rgba(176, 190, 197, 0.23); }\n\n.content-card .create-user-container {\n  padding: 30px 10px;\n  background-color: #ffffff; }\n  .content-card .create-user-container .ant-row {\n    margin-bottom: 0.5vw; }\n  .content-card .create-user-container .create-user-btn-container {\n    margin-top: 1.5vw;\n    margin-bottom: 0; }\n    .content-card .create-user-container .create-user-btn-container .ant-btn-primary {\n      background-color: #d12800;\n      color: #ffffff;\n      font-family: \"Inter-Regular\";\n      border: none;\n      height: 40px;\n      font-size: 0.9rem;\n      border-radius: 0.3rem;\n      box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.25);\n      min-width: 170px; }\n  .content-card .create-user-container .create-user-image-upload {\n    display: flex;\n    flex-direction: row;\n    align-items: center; }\n    .content-card .create-user-container .create-user-image-upload .create-user-image-upload-label {\n      margin-right: 2vw; }\n      .content-card .create-user-container .create-user-image-upload .create-user-image-upload-label .create-user-image-upload-txt {\n        font-family: \"Inter-Regular\";\n        font-size: 1.1rem; }\n    .content-card .create-user-container .create-user-image-upload .create-user-image-upload-btn-container {\n      display: flex;\n      flex-direction: row;\n      align-items: center; }\n      .content-card .create-user-container .create-user-image-upload .create-user-image-upload-btn-container .create-user-image-upload-btn {\n        margin-right: 1vw; }\n      .content-card .create-user-container .create-user-image-upload .create-user-image-upload-btn-container .create-user-image-upload-error-txt {\n        font-family: \"Inter-Regular\";\n        font-size: 1rem;\n        color: rgba(255, 77, 79, 0.8); }\n";
styleInject(css_248z$q);

var ChangePasswordModel = function (props) {
    var t = props.t, onPasswordChanged = props.onPasswordChanged, onFieldsChanged = props.onFieldsChanged, onCanceled = props.onCanceled, openModal = props.openModal, errorMsg = props.errorMsg, loadingBtn = props.loadingBtn, themeColor = props.themeColor;
    return (React.createElement(antd.Modal, { width: 450, title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" },
                React.createElement(Icon.Lock, { size: 100, color: themeColor })),
            React.createElement("div", null, t("passwordReset:changePassword"))), open: openModal, className: "popup-success password-reset-model", centered: true, destroyOnClose: true, footer: null, onCancel: onCanceled },
        React.createElement(antd.Form, { name: "change_password", layout: "vertical", className: "login-form", onFieldsChange: onFieldsChanged, onFinish: onPasswordChanged },
            React.createElement(antd.Form.Item, { className: "mg-top-1", name: "oldPassword", label: t("passwordReset:oldPassword"), rules: [
                    {
                        required: true,
                        message: "".concat(t("passwordReset:oldPassword"), " ").concat(t("passwordReset:isRequired")),
                    },
                ] },
                React.createElement(antd.Input.Password, { placeholder: "", className: "border-radius-5" })),
            React.createElement(antd.Form.Item, { name: "newPassword", label: t("passwordReset:newPassword"), rules: [
                    {
                        required: true,
                        message: "".concat(t("passwordReset:newPassword"), " ").concat(t("passwordReset:isRequired")),
                    },
                ] },
                React.createElement(antd.Input.Password, { placeholder: "", className: "border-radius-5" })),
            React.createElement(antd.Form.Item, { name: "confirm_password", label: t("passwordReset:confirmNewPassword"), dependencies: ["newPassword"], rules: [
                    {
                        required: true,
                        message: "".concat(t("passwordReset:confirmNewPassword"), " ").concat(t("passwordReset:isRequired")),
                    },
                    function (_a) {
                        var getFieldValue = _a.getFieldValue;
                        return ({
                            validator: function (_, value) {
                                if (!value || getFieldValue("newPassword") === value) {
                                    return Promise.resolve();
                                }
                                return Promise.reject(new Error(t("passwordReset:passwordsNotMatchedErr").toString()));
                            },
                        });
                    },
                ] },
                React.createElement(antd.Input.Password, { placeholder: "", className: "border-radius-5" })),
            errorMsg && (React.createElement(antd.Alert, { className: "error", message: errorMsg, type: "error", showIcon: true })),
            React.createElement("div", { className: "mg-top-2 ant-modal-footer" },
                React.createElement(antd.Button, { htmlType: "button", onClick: onCanceled }, t("passwordReset:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loadingBtn }, t("passwordReset:setPassword"))))));
};

var AddNewUserComponent = function (props) {
    var _a, _b, _c, _d, _e;
    var t = props.t, onNavigateToUserManagement = props.onNavigateToUserManagement, onNavigateLogin = props.onNavigateLogin, useLocation = props.useLocation, useAbilityContext = props.useAbilityContext, themeColor = props.themeColor;
    var _f = useConnection(), post = _f.post, put = _f.put, del = _f.delete, get = _f.get;
    var formOne = antd.Form.useForm()[0];
    var state = useLocation().state;
    var updateToken = useConnection().updateToken;
    var removeUserInfo = useUserContext().removeUserInfo;
    var _g = React.useState(false), loading = _g[0], setLoading = _g[1];
    var _h = React.useState({}), actionInfo = _h[0], setActionInfo = _h[1];
    var _j = React.useState(false), isUpdate = _j[0], setIsUpdate = _j[1];
    var _k = React.useState(false), isLoading = _k[0], setIsLoading = _k[1];
    var _l = React.useState(false), openDeleteConfirmationModal = _l[0], setOpenDeleteConfirmationModal = _l[1];
    var _m = React.useState(false), openPasswordChangeModal = _m[0], setopenPasswordChangeModal = _m[1];
    var _o = React.useState(""), errorMsg = _o[0], setErrorMsg = _o[1];
    var userInfoState = useUserContext().userInfoState;
    var ability = useAbilityContext();
    var _p = React.useState([]), countries = _p[0], setCountries = _p[1];
    var _q = React.useState(false), isCountryListLoading = _q[0], setIsCountryListLoading = _q[1];
    var getCountryList = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, alpha2Names, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setIsCountryListLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, get("national/organisation/countries")];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        alpha2Names = response.data.map(function (item) {
                            return item.alpha2;
                        });
                        setCountries(alpha2Names);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getCountryList", error_1);
                    antd.message.open({
                        type: "error",
                        content: "".concat(error_1.message),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setIsCountryListLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var onAddUser = function (values) { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    if (values.phoneNo && values.phoneNo.length > 4) {
                        values.phoneNo = PhoneInput.formatPhoneNumberIntl(values.phoneNo);
                    }
                    else {
                        values.phoneNo = undefined;
                    }
                    return [4 /*yield*/, post("national/user/add", values)];
                case 2:
                    response = _a.sent();
                    if (response.status === 200 || response.status === 201) {
                        antd.message.open({
                            type: "success",
                            content: t("addUserSuccess"),
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        onNavigateToUserManagement();
                        setLoading(false);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_2 = _a.sent();
                    console.log("Error in user creation", error_2);
                    antd.message.open({
                        type: "error",
                        content: "".concat(error_2.message),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var onUpdateUser = function () { return __awaiter(void 0, void 0, void 0, function () {
        var formOneValues, values, response, error_3;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setLoading(true);
                    formOneValues = formOne.getFieldsValue();
                    formOneValues.phoneNo = PhoneInput.formatPhoneNumberIntl(formOneValues.phoneNo);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, , 4]);
                    values = {
                        id: (_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.id,
                        name: formOneValues === null || formOneValues === void 0 ? void 0 : formOneValues.name,
                        phoneNo: formOneValues === null || formOneValues === void 0 ? void 0 : formOneValues.phoneNo,
                    };
                    if (ability.can(exports.Action.Update, classTransformer.plainToClass(User, state === null || state === void 0 ? void 0 : state.record), "role"))
                        values.role = formOneValues === null || formOneValues === void 0 ? void 0 : formOneValues.role;
                    if (ability.can(exports.Action.Update, classTransformer.plainToClass(User, state === null || state === void 0 ? void 0 : state.record), "email"))
                        values.email = formOneValues === null || formOneValues === void 0 ? void 0 : formOneValues.email;
                    console.log("form one values   -- > ", values, state.record);
                    return [4 /*yield*/, put("national/user/update", values)];
                case 2:
                    response = _b.sent();
                    if (response.status === 200 || response.status === 201) {
                        antd.message.open({
                            type: "success",
                            content: t("updateUserSuccess"),
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        onNavigateToUserManagement();
                        state.record = {};
                        setLoading(false);
                    }
                    return [3 /*break*/, 4];
                case 3:
                    error_3 = _b.sent();
                    console.log("Error in user update", error_3);
                    antd.message.open({
                        type: "error",
                        content: "".concat(t("updateUserError"), " ").concat(error_3.message),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onSubmitData = function (values) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            if (isUpdate)
                onUpdateUser();
            else
                onAddUser(values);
            return [2 /*return*/];
        });
    }); };
    var signOut = function () {
        onNavigateLogin();
        updateToken();
        removeUserInfo();
    };
    var onDeleteProfileUser = function () {
        setActionInfo({
            action: "Delete",
            headerText: "".concat(t("userProfile:deleteConfirmHeaderText")),
            text: "".concat(t("userProfile:deleteConfirmText")),
            type: "danger",
            icon: React.createElement(Icon__namespace.PersonDash, null),
        });
        setErrorMsg("");
        setOpenDeleteConfirmationModal(true);
    };
    var onDeleteProfileUserCanceled = function () {
        setOpenDeleteConfirmationModal(false);
        setErrorMsg("");
    };
    var onDeleteProfileUserConfirmed = function () { return __awaiter(void 0, void 0, void 0, function () {
        var userId, exception_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, 3, 4]);
                    setIsLoading(true);
                    userId = userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id;
                    return [4 /*yield*/, del("national/user/delete?userId=".concat(userId))];
                case 1:
                    _a.sent();
                    setOpenDeleteConfirmationModal(false);
                    antd.message.open({
                        type: "success",
                        content: t("userProfile:userDeletionSuccess"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setErrorMsg("");
                    signOut();
                    return [3 /*break*/, 4];
                case 2:
                    exception_1 = _a.sent();
                    setErrorMsg(exception_1.message);
                    return [3 /*break*/, 4];
                case 3:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var onPasswordChangeCompleted = function (props) { return __awaiter(void 0, void 0, void 0, function () {
        var response, responseMsg, exception_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setIsLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, put("national/user/resetPassword", {
                            newPassword: props.newPassword,
                            oldPassword: props.oldPassword,
                        })];
                case 2:
                    response = _a.sent();
                    responseMsg = response.message;
                    setopenPasswordChangeModal(false);
                    antd.message.open({
                        type: "success",
                        content: responseMsg,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setErrorMsg("");
                    signOut();
                    return [3 /*break*/, 5];
                case 3:
                    exception_2 = _a.sent();
                    setErrorMsg(exception_2.message);
                    return [3 /*break*/, 5];
                case 4:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var onChangedPassword = function () {
        setErrorMsg("");
        setopenPasswordChangeModal(true);
    };
    var onPasswordChangeCanceled = function () {
        setopenPasswordChangeModal(false);
    };
    var onFormsValueChanged = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setErrorMsg("");
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        console.log("state -- val --- ", __assign({}, state));
        getCountryList();
        setIsUpdate((state === null || state === void 0 ? void 0 : state.record) ? true : false);
    }, []);
    return (React.createElement("div", { className: "add-user-main-container" },
        React.createElement("div", { className: "title-container" },
            React.createElement("div", { className: "titles" },
                React.createElement("div", { className: "main" }, isUpdate ? t("addUser:editUser") : t("addUser:addNewUser"))),
            isUpdate &&
                !ability.can(exports.Action.Update, classTransformer.plainToClass(User, state === null || state === void 0 ? void 0 : state.record), "email") && (React.createElement("div", { className: "actions" },
                (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.Root && (React.createElement(antd.Button, { className: "mg-left-1 btn-danger", onClick: function () { return onDeleteProfileUser(); } }, t("userProfile:delete"))),
                React.createElement(antd.Button, { className: "mg-left-1", type: "primary", onClick: onChangedPassword }, t("userProfile:changePassword"))))),
        React.createElement("div", { className: "content-card user-content-card" },
            React.createElement(antd.Form, { name: "user-details", className: "user-details-form", layout: "vertical", form: formOne, requiredMark: true, onFinish: onSubmitData },
                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                    React.createElement(antd.Col, { xl: 12, md: 24 },
                        React.createElement("div", { className: "details-part-one" },
                            React.createElement(antd.Form.Item, { label: t("addUser:name"), initialValue: (_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.name, name: "name", rules: [
                                    {
                                        required: true,
                                        message: "",
                                    },
                                    {
                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                            return __generator(this, function (_a) {
                                                if (String(value).trim() === "" ||
                                                    String(value).trim() === undefined ||
                                                    value === null ||
                                                    value === undefined) {
                                                    throw new Error("".concat(t("addUser:name"), " ").concat(t("addUser:isRequired")));
                                                }
                                                return [2 /*return*/];
                                            });
                                        }); },
                                    },
                                ] },
                                React.createElement(antd.Input, { size: "large" })),
                            React.createElement(antd.Form.Item, { label: t("addUser:email"), name: "email", initialValue: (_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.email, rules: [
                                    {
                                        required: true,
                                        message: "",
                                    },
                                    {
                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                            var val, reg, matches;
                                            return __generator(this, function (_a) {
                                                if (String(value).trim() === "" ||
                                                    String(value).trim() === undefined ||
                                                    value === null ||
                                                    value === undefined) {
                                                    throw new Error("".concat(t("addUser:email"), " ").concat(t("addUser:isRequired")));
                                                }
                                                else {
                                                    val = value.trim();
                                                    reg = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                                    matches = val.match(reg) ? val.match(reg) : [];
                                                    if (matches.length === 0) {
                                                        throw new Error("".concat(t("addUser:email"), " ").concat(t("addUser:isInvalid")));
                                                    }
                                                }
                                                return [2 /*return*/];
                                            });
                                        }); },
                                    },
                                ] },
                                React.createElement(antd.Input, { disabled: isUpdate &&
                                        !ability.can(exports.Action.Update, classTransformer.plainToClass(User, state === null || state === void 0 ? void 0 : state.record), "email"), size: "large" })))),
                    React.createElement(antd.Col, { xl: 12, md: 24 },
                        React.createElement("div", { className: "details-part-two" },
                            React.createElement(antd.Form.Item, { className: "role-group", label: t("addUser:role"), initialValue: (_c = state === null || state === void 0 ? void 0 : state.record) === null || _c === void 0 ? void 0 : _c.role, name: "role", rules: [
                                    {
                                        required: true,
                                        message: "".concat(t("addUser:role"), " ").concat(t("addUser:isRequired")),
                                    },
                                ] },
                                React.createElement(antd.Radio.Group, { value: (_d = state === null || state === void 0 ? void 0 : state.record) === null || _d === void 0 ? void 0 : _d.role, size: "large", disabled: isUpdate &&
                                        !ability.can(exports.Action.Update, classTransformer.plainToClass(User, state === null || state === void 0 ? void 0 : state.record), "role") },
                                    React.createElement("div", { className: "admin-radio-container" },
                                        React.createElement(antd.Tooltip, { placement: "top", title: t("addUser:adminToolTip") },
                                            React.createElement(antd.Radio.Button, { className: "admin", value: "Admin" },
                                                React.createElement(icons.StarOutlined, { className: "role-icons" }),
                                                t("addUser:admin")))),
                                    React.createElement("div", { className: "manager-radio-container" },
                                        React.createElement(antd.Tooltip, { placement: "top", title: t("addUser:managerToolTip") },
                                            React.createElement(antd.Radio.Button, { className: "manager", value: "Manager" },
                                                React.createElement(icons.ToolOutlined, { className: "role-icons" }),
                                                t("addUser:manager")))),
                                    React.createElement("div", { className: "view-only-radio-container" },
                                        React.createElement(antd.Tooltip, { placement: "top", title: t("addUser:viewerToolTip") },
                                            React.createElement(antd.Radio.Button, { className: "view-only", value: "ViewOnly" },
                                                React.createElement(icons.EyeOutlined, { className: "role-icons" }),
                                                t("addUser:viewer")))))),
                            React.createElement(antd.Skeleton, { loading: isCountryListLoading, active: true }, countries.length > 0 && (React.createElement(antd.Form.Item, { name: "phoneNo", label: t("addUser:phoneNo"), initialValue: (_e = state === null || state === void 0 ? void 0 : state.record) === null || _e === void 0 ? void 0 : _e.phoneNo, rules: [
                                    {
                                        required: false,
                                    },
                                    {
                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                            var phoneNo;
                                            return __generator(this, function (_a) {
                                                phoneNo = PhoneInput.formatPhoneNumber(String(value));
                                                if (String(value).trim() !== "") {
                                                    if (((String(value).trim() !== "" &&
                                                        String(value).trim() !== undefined &&
                                                        value !== null &&
                                                        value !== undefined) &&
                                                        (phoneNo !== null &&
                                                            phoneNo !== "" &&
                                                            phoneNo !== undefined) &&
                                                        !PhoneInput.isPossiblePhoneNumber(String(value))) || (value === null || value === void 0 ? void 0 : value.length) > 17) {
                                                        throw new Error("".concat(t("addUser:phoneNo"), " ").concat(t("isInvalid")));
                                                    }
                                                }
                                                return [2 /*return*/];
                                            });
                                        }); },
                                    },
                                ] },
                                React.createElement(PhoneInput, { placeholder: t("addUser:phoneNo"), international: true, 
                                    // value={contactNoInput}
                                    defaultCountry: "LK", countryCallingCodeEditable: false, onChange: function (v) { }, countries: countries }))))))),
                React.createElement("div", { className: "actions" },
                    React.createElement(antd.Form.Item, null,
                        React.createElement("div", { className: "create-user-btn-container" },
                            React.createElement(antd.Button, { type: "primary", htmlType: "submit", loading: loading }, isUpdate ? t("addUser:update") : t("addUser:submit"))))))),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onDeleteProfileUserConfirmed, onActionCanceled: onDeleteProfileUserCanceled, openModal: openDeleteConfirmationModal, errorMsg: errorMsg, loading: isLoading }),
        React.createElement(ChangePasswordModel, { t: t, onPasswordChanged: onPasswordChangeCompleted, onFieldsChanged: onFormsValueChanged, onCanceled: onPasswordChangeCanceled, openModal: openPasswordChangeModal, errorMsg: errorMsg, loadingBtn: isLoading, themeColor: themeColor })));
};

var css_248z$p = ".user-profile {\n  padding: 0px 50px; }\n  .user-profile .login-language-selection-txt .ant-select {\n    width: 120px; }\n  .user-profile .card-container {\n    margin-bottom: 20px;\n    width: 100%;\n    border-radius: 10px; }\n  .user-profile .mg-left-1 {\n    margin-left: 1rem; }\n  .user-profile .mg-top-1 {\n    margin-top: 1rem; }\n  .user-profile .mg-bottom-1 {\n    margin-bottom: 1rem !important; }\n  .user-profile .profile-img {\n    width: 170px; }\n  .user-profile .company-name {\n    font-size: 16px;\n    line-height: 24px;\n    font-weight: 600;\n    color: rgba(58, 53, 65, 0.8); }\n  .user-profile .btn-danger {\n    color: #ff4d4f !important;\n    border-color: #ff8183 !important; }\n";
styleInject(css_248z$p);

var UserRoleIcon = function (props) {
    var role = props.role;
    return (React.createElement("div", { style: { display: "flex", alignItems: "center", flexDirection: "row" } },
        role === "Admin" ? (React.createElement(RoleIcon, { icon: React.createElement(icons.StarOutlined, null), bg: AdminBGColor, color: AdminColor })) : role === "Root" ? (React.createElement(RoleIcon, { icon: React.createElement(icons.SearchOutlined, null), bg: RootBGColor, color: RootColor })) : role === "Manager" ? (React.createElement(RoleIcon, { icon: React.createElement(icons.ToolOutlined, null), bg: ManagerBGColor, color: ManagerColor })) : (React.createElement(RoleIcon, { icon: React.createElement(icons.EyeOutlined, null), bg: ViewBGColor, color: ViewColor })),
        React.createElement("div", null, role === "ViewOnly" ? "Viewer" : role)));
};

var css_248z$o = ".login-language-selection-container {\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 22px;\n  color: #008f39; }\n  .login-language-selection-container .ant-select {\n    width: 183px;\n    text-align: center;\n    color: #008f39; }\n    .login-language-selection-container .ant-select .ant-select-arrow {\n      color: #008f39; }\n  .login-language-selection-container .ant-select-selector {\n    color: #008f39;\n    text-transform: uppercase;\n    border: 1px solid #008f39 !important;\n    border-radius: 4px !important; }\n  .login-language-selection-container .ant-select-item {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 22px;\n    color: #008f39; }\n  .login-language-selection-container .ant-select-selection-item {\n    color: #008f39 !important;\n    font-weight: 500; }\n\n.login-language-selection .ant-select-item {\n  font-weight: 400;\n  font-size: 13px;\n  line-height: 22px;\n  color: #008f39;\n  text-align: center; }\n\n.login-language-selection .ant-select-item-option .ant-select-item-option-content {\n  color: rgba(58, 53, 65, 0.5); }\n\n.login-language-selection .ant-select-item-option-selected {\n  color: #008f39 !important;\n  line-height: 15.73px; }\n  .login-language-selection .ant-select-item-option-selected .ant-select-item-option-content {\n    color: #008f39; }\n";
styleInject(css_248z$o);

var LanguageSelection = function (props) {
    var i18n = props.i18n;
    var handleLanguageChange = function (lang) {
        i18n.changeLanguage(lang);
    };
    return (React.createElement("div", { className: "login-language-selection-container mg-left-1" },
        React.createElement("span", { className: "login-language-selection-txt" },
            React.createElement(antd.Select, { placeholder: "Search to Select", popupClassName: "login-language-selection", defaultValue: localStorage.getItem("i18nextLng") !== null
                    ? localStorage.getItem("i18nextLng")
                    : "en", placement: "topRight", onChange: function (lan) { return handleLanguageChange(lan); }, optionFilterProp: "children", filterOption: function (input, option) { var _a; return ((_a = option === null || option === void 0 ? void 0 : option.label) !== null && _a !== void 0 ? _a : "").includes(input); }, filterSort: function (optionA, optionB) {
                    var _a, _b;
                    return ((_a = optionA === null || optionA === void 0 ? void 0 : optionA.label) !== null && _a !== void 0 ? _a : "")
                        .toLowerCase()
                        .localeCompare(((_b = optionB === null || optionB === void 0 ? void 0 : optionB.label) !== null && _b !== void 0 ? _b : "").toLowerCase());
                }, options: [
                    {
                        value: "en",
                        label: "English",
                    },
                    {
                        value: "es",
                        label: "Español",
                    },
                    {
                        value: "fr",
                        label: "Français",
                    },
                ] }))));
};

var UserProfileComponent = function (props) {
    var t = props.t, i18n = props.i18n, onNavigateUpdateUser = props.onNavigateUpdateUser, onNavigateLogin = props.onNavigateLogin;
    var get = useConnection().get;
    var _a = React.useState(undefined), organisationDetails = _a[0], setOrganisationDetails = _a[1];
    var _b = React.useState(undefined), userDetails = _b[0], setUserDetails = _b[1];
    var updateToken = useConnection().updateToken;
    var removeUserInfo = useUserContext().removeUserInfo;
    var _c = React.useState(false), isLoading = _c[0], setIsLoading = _c[1];
    var signOut = function () {
        updateToken();
        removeUserInfo();
        onNavigateLogin();
    };
    var getUserProfileDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    setIsLoading(true);
                    return [4 /*yield*/, get("national/User/profile")];
                case 1:
                    response = _a.sent();
                    if (response.data) {
                        setOrganisationDetails(response.data.Organisation);
                        setUserDetails(response.data.user);
                        setIsLoading(false);
                    }
                    return [3 /*break*/, 3];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        getUserProfileDetails();
    }, []);
    return (React.createElement("div", { className: "content-container user-profile" },
        React.createElement(antd.Row, null,
            React.createElement(antd.Col, { md: 24, lg: 8 },
                React.createElement("div", { className: "title-bar" },
                    React.createElement("div", null,
                        React.createElement("div", { className: "body-title" }, t("userProfile:title"))))),
            React.createElement(antd.Col, { md: 24, lg: 16 },
                React.createElement(antd.Row, { justify: "end" },
                    React.createElement(antd.Button, { className: "mg-left-1 btn-danger mg-bottom-1", onClick: function () { return signOut(); } }, t("userProfile:logOut")),
                    userDetails && organisationDetails && (React.createElement(antd.Button, { className: "mg-left-1 mg-bottom-1", type: "primary", onClick: function () {
                            onNavigateUpdateUser(organisationDetails, userDetails);
                        } }, t("userProfile:edit"))),
                    React.createElement(LanguageSelection, { i18n: i18n })))),
        (!userDetails || !organisationDetails) && (React.createElement("div", { className: "content-body" },
            React.createElement(antd.Skeleton, { active: true, loading: true }))),
        userDetails && organisationDetails && (React.createElement("div", { className: "content-body" },
            React.createElement(antd.Row, { gutter: 16 },
                React.createElement(antd.Col, { md: 24, lg: 8 },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement(antd.Row, { justify: "center" },
                            React.createElement(antd.Skeleton, { loading: isLoading, active: true },
                                React.createElement("img", { className: "profile-img", alt: "profile-img", src: organisationDetails.logo }))),
                        React.createElement(antd.Row, { justify: "center" },
                            React.createElement("div", { className: " company-name mg-top-1" }, organisationDetails.name)))),
                React.createElement(antd.Col, { md: 24, lg: 16 },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement("div", { className: "info-view" },
                            React.createElement("div", { className: "title" },
                                React.createElement("span", { className: "title-icon" },
                                    React.createElement(icons.UserOutlined, null)),
                                React.createElement("span", { className: "title-text" }, t("userProfile:userDetailsHeading"))),
                            React.createElement(antd.Skeleton, { loading: isLoading, active: true },
                                React.createElement(antd.Row, { className: "field" },
                                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("userProfile:name")),
                                    React.createElement(antd.Col, { span: 12, className: "field-value" }, userDetails.name ? userDetails.name : "-")),
                                React.createElement(antd.Row, { className: "field" },
                                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("userProfile:email")),
                                    React.createElement(antd.Col, { span: 12, className: "field-value nextline-overflow" }, userDetails.email ? userDetails.email : "-")),
                                React.createElement(antd.Row, { className: "field" },
                                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("userProfile:role")),
                                    React.createElement(antd.Col, { span: 12, className: "field-value" },
                                        React.createElement(UserRoleIcon, { role: userDetails.role }))),
                                React.createElement(antd.Row, { className: "field" },
                                    React.createElement(antd.Col, { span: 12, className: "field-key" }, t("userProfile:phoneNo")),
                                    React.createElement(antd.Col, { span: 12, className: "field-value" }, userDetails.phoneNo ? userDetails.phoneNo : "-"))))),
                    React.createElement(CompanyDetailsComponent, { t: t, companyDetails: organisationDetails, userDetails: userDetails, isLoading: isLoading, regionField: true })))))));
};

var css_248z$n = ".filter-menu-item .filter-title {\n  margin-bottom: 0.5rem;\n  font-weight: 600; }\n\n.table-row-gray {\n  background-color: #f0f0f0; }\n\n.user-data-download {\n  margin-left: 15px;\n  margin-top: 0.8rem; }\n";
styleInject(css_248z$n);

var Search = antd.Input.Search;
var UserManagementComponent = function (props) {
    var t = props.t, useAbilityContext = props.useAbilityContext, visibleColumns = props.visibleColumns, onNavigateToUpdateUser = props.onNavigateToUpdateUser, onClickAddUser = props.onClickAddUser;
    antd.Form.useForm()[0];
    var _a = useConnection(), post = _a.post, del = _a.delete;
    var _b = React.useState(), totalUser = _b[0], setTotalUser = _b[1];
    var _c = React.useState(false), loading = _c[0], setLoading = _c[1];
    var _d = React.useState([]), tableData = _d[0], setTableData = _d[1];
    var _e = React.useState(1), currentPage = _e[0], setCurrentPage = _e[1];
    var _f = React.useState(10), pageSize = _f[0], setPageSize = _f[1];
    var _g = React.useState("name"), searchByTermUser = _g[0], setSearchByTermUser = _g[1];
    var _h = React.useState(""), searchValueUsers = _h[0], setSearchValueUsers = _h[1];
    var _j = React.useState(""), networksearchUsers = _j[0], setNetworkSearchUsers = _j[1];
    var _k = React.useState(false), filterVisible = _k[0], setFilterVisible = _k[1];
    var _l = React.useState("All"), filterByOrganisationType = _l[0], setFilterByOrganisationType = _l[1];
    var _m = React.useState("All"), filterByRole = _m[0], setFilterByRole = _m[1];
    var _o = React.useState(""), sortOrder = _o[0], setSortOrder = _o[1];
    var _p = React.useState(""), sortField = _p[0], setSortField = _p[1];
    var _q = React.useState(), deleteUserModalRecord = _q[0], setDeleteUserModalRecord = _q[1];
    //   const { i18n, t } = useTranslation(["user"]);
    var _r = React.useState({}), actionInfo = _r[0], setActionInfo = _r[1];
    var _s = React.useState(""), errorMsg = _s[0], setErrorMsg = _s[1];
    var _t = React.useState(false), openDeleteConfirmationModal = _t[0], setOpenDeleteConfirmationModal = _t[1];
    var _u = React.useState(), dataQuery = _u[0], setDataQuery = _u[1];
    var ability = useAbilityContext();
    var userInfoState = useUserContext().userInfoState;
    document.addEventListener("mousedown", function (event) {
        var userFilterArea1 = document.querySelector(".filter-bar");
        var userFilterArea2 = document.querySelector(".filter-dropdown");
        if (userFilterArea1 !== null && userFilterArea2 !== null) {
            if (userFilterArea1.contains(event.target) ||
                userFilterArea2.contains(event.target)) {
                setFilterVisible(true);
            }
            else {
                setFilterVisible(false);
            }
        }
    });
    var getCompanyBgColor = function (item) {
        if (item === "Government") {
            return GovBGColor;
        }
        else if (item === "Certifier") {
            return CertBGColor;
        }
        return DevBGColor;
    };
    var getRoleComponent = function (item) {
        var role = item === null || item === void 0 ? void 0 : item.role;
        return (React.createElement("div", { style: { display: "flex", alignItems: "center", flexDirection: "row" } },
            role === "Admin" ? (React.createElement(RoleIcon, { icon: React.createElement(icons.StarOutlined, null), bg: AdminBGColor, color: AdminColor })) : role === "Root" ? (React.createElement(RoleIcon, { icon: React.createElement(icons.SearchOutlined, null), bg: RootBGColor, color: RootColor })) : role === "Manager" ? (React.createElement(RoleIcon, { icon: React.createElement(icons.ToolOutlined, null), bg: ManagerBGColor, color: ManagerColor })) : (React.createElement(RoleIcon, { icon: React.createElement(icons.EyeOutlined, null), bg: ViewBGColor, color: ViewColor })),
            React.createElement("div", null, role === "ViewOnly" ? "Viewer" : role)));
    };
    var getCompanyRoleComponent = function (item) {
        var _a, _b;
        var role = ((_a = item === null || item === void 0 ? void 0 : item.company) === null || _a === void 0 ? void 0 : _a.companyRole)
            ? (_b = item === null || item === void 0 ? void 0 : item.company) === null || _b === void 0 ? void 0 : _b.companyRole
            : (item === null || item === void 0 ? void 0 : item.companyRole)
                ? item === null || item === void 0 ? void 0 : item.companyRole
                : null;
        return (React.createElement("div", { style: { display: "flex", alignItems: "center" } },
            role === exports.CompanyRole.GOVERNMENT ? (React.createElement(RoleIcon, { icon: React.createElement(icons.BankOutlined, null), bg: GovBGColor, color: GovColor })) : role === exports.CompanyRole.CERTIFIER ? (React.createElement(RoleIcon, { icon: React.createElement(icons.SafetyOutlined, null), bg: CertBGColor, color: CertColor })) : role === exports.CompanyRole.MINISTRY ? (React.createElement(RoleIcon, { icon: React.createElement(icons.AuditOutlined, null), bg: MinBGColor, color: MinColor })) : (React.createElement(RoleIcon, { icon: React.createElement(icons.ExperimentOutlined, null), bg: DevBGColor, color: DevColor })),
            role === exports.CompanyRole.PROGRAMME_DEVELOPER ? (React.createElement("div", null, "Developer")) : (React.createElement("div", null, role))));
    };
    var deleteUser = function (record) { return __awaiter(void 0, void 0, void 0, function () {
        var response, temp, index, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, del("national/user/delete?userId=".concat(record === null || record === void 0 ? void 0 : record.id))];
                case 2:
                    response = _a.sent();
                    if (response.status === 200) {
                        antd.message.open({
                            type: "success",
                            content: response.message,
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        temp = __spreadArray([], tableData, true);
                        index = temp.findIndex(function (value) { return value.id === (record === null || record === void 0 ? void 0 : record.id); });
                        if (index > -1) {
                            temp.splice(index, 1);
                            setTableData(temp);
                        }
                        setLoading(false);
                        setOpenDeleteConfirmationModal(false);
                    }
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    setErrorMsg(error_1.message);
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var handleOk = function () {
        deleteUser(deleteUserModalRecord);
    };
    var handleCancel = function () {
        setOpenDeleteConfirmationModal(false);
    };
    var actionMenu = function (record) {
        return (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                {
                    text: "Edit",
                    icon: React.createElement(icons.EditOutlined, null),
                    isDisabled: !ability.can(exports.Action.Update, classTransformer.plainToClass(User, record)),
                    click: function () {
                        onNavigateToUpdateUser(record);
                    },
                },
                {
                    text: "Delete",
                    icon: React.createElement(icons.DeleteOutlined, null),
                    isDisabled: !ability.can(exports.Action.Delete, classTransformer.plainToClass(User, record)),
                    click: function () {
                        setDeleteUserModalRecord(record);
                        setActionInfo({
                            action: "Delete",
                            headerText: "".concat(t("user:deleteConfirmHeaderText")),
                            text: "".concat(t("user:deleteConfirmText")),
                            type: "danger",
                            icon: React.createElement(Icon.PersonDash, null),
                        });
                        setErrorMsg("");
                        setOpenDeleteConfirmationModal(true);
                    },
                },
            ], renderItem: function (item) {
                return !item.isDisabled && (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon" }, item.icon),
                    React.createElement("span", null, item.text)));
            } }));
    };
    var columns = [
        {
            title: "",
            dataIndex: "logo",
            key: exports.UserManagementColumns.logo,
            width: "20px",
            align: "left",
            render: function (item, itemObj) {
                var _a, _b;
                console.log(__assign({ item: item }, itemObj));
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } },
                    React.createElement(ProfileIcon, { icon: (_a = itemObj === null || itemObj === void 0 ? void 0 : itemObj.company) === null || _a === void 0 ? void 0 : _a.logo, bg: getCompanyBgColor(itemObj.companyRole), name: (_b = itemObj === null || itemObj === void 0 ? void 0 : itemObj.company) === null || _b === void 0 ? void 0 : _b.name })));
            },
        },
        {
            title: t("user:name"),
            dataIndex: "name",
            key: exports.UserManagementColumns.name,
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } },
                    React.createElement("div", { style: { fontWeight: 600 } }, item)));
            },
        },
        {
            title: t("user:email"),
            dataIndex: "email",
            key: exports.UserManagementColumns.email,
            sorter: true,
            align: "left",
        },
        {
            title: t("user:phone"),
            dataIndex: "phoneNo",
            key: exports.UserManagementColumns.phoneNo,
            align: "left",
            render: function (item, itemObj) {
                return item ? item : "-";
            },
        },
        {
            title: t("user:company"),
            dataIndex: "company",
            key: exports.UserManagementColumns.company,
            render: function (item, itemObj) {
                var _a, _b;
                return ((_a = itemObj === null || itemObj === void 0 ? void 0 : itemObj.company) === null || _a === void 0 ? void 0 : _a.name) ? (_b = itemObj === null || itemObj === void 0 ? void 0 : itemObj.company) === null || _b === void 0 ? void 0 : _b.name : "-";
            },
            align: "left",
        },
        {
            title: t("user:companyRole"),
            dataIndex: "companyRole",
            key: exports.UserManagementColumns.companyRole,
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return getCompanyRoleComponent(itemObj);
            },
        },
        {
            title: t("user:role"),
            dataIndex: "role",
            key: exports.UserManagementColumns.role,
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return getRoleComponent(itemObj);
            },
        },
        {
            title: "",
            key: exports.UserManagementColumns.actions,
            width: 6,
            align: "right",
            render: function (_, record) {
                return ((ability.can(exports.Action.Update, classTransformer.plainToClass(User, record)) ||
                    ability.can(exports.Action.Delete, classTransformer.plainToClass(User, record))) &&
                    record.id !== (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id) && (React.createElement(antd.Popover, { placement: "bottomRight", content: actionMenu(record), trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } }))));
            },
        },
    ].filter(function (column) { return visibleColumns.includes(column.key); });
    var filterOr = function () {
        if (searchByTermUser !== null &&
            searchByTermUser !== "" &&
            networksearchUsers !== null &&
            networksearchUsers !== "" &&
            filterByOrganisationType === "All" &&
            filterByRole === "All") {
            return [
                {
                    key: searchByTermUser,
                    operation: "like",
                    value: "%" + networksearchUsers + "%",
                },
            ];
        }
        else
            return undefined;
    };
    var filterAnd = function () {
        if (searchByTermUser !== null &&
            searchByTermUser !== "" &&
            networksearchUsers !== null &&
            networksearchUsers !== "" &&
            filterByRole !== "All" &&
            filterByOrganisationType !== "All") {
            return [
                {
                    key: searchByTermUser,
                    operation: "like",
                    value: "%" + networksearchUsers + "%",
                },
                {
                    key: "role",
                    operation: "=",
                    value: filterByRole,
                },
                {
                    key: "companyRole",
                    operation: "=",
                    value: filterByOrganisationType,
                },
            ];
        }
        else if (searchByTermUser !== null &&
            searchByTermUser !== "" &&
            networksearchUsers !== null &&
            networksearchUsers !== "" &&
            filterByRole !== "All") {
            return [
                {
                    key: searchByTermUser,
                    operation: "like",
                    value: "%" + networksearchUsers + "%",
                },
                {
                    key: "role",
                    operation: "=",
                    value: filterByRole,
                },
            ];
        }
        else if (searchByTermUser !== null &&
            searchByTermUser !== "" &&
            networksearchUsers !== null &&
            networksearchUsers !== "" &&
            filterByOrganisationType !== "All") {
            return [
                {
                    key: searchByTermUser,
                    operation: "like",
                    value: "%" + networksearchUsers + "%",
                },
                {
                    key: "companyRole",
                    operation: "=",
                    value: filterByOrganisationType,
                },
            ];
        }
        else if (filterByOrganisationType !== "All" && filterByRole !== "All") {
            return [
                {
                    key: "companyRole",
                    operation: "=",
                    value: filterByOrganisationType,
                },
                {
                    key: "role",
                    operation: "=",
                    value: filterByRole,
                },
            ];
        }
        else if (filterByOrganisationType !== "All") {
            return [
                {
                    key: "companyRole",
                    operation: "=",
                    value: filterByOrganisationType,
                },
            ];
        }
        else if (filterByRole !== "All") {
            return [
                {
                    key: "role",
                    operation: "=",
                    value: filterByRole,
                },
            ];
        }
        else
            return undefined;
    };
    var sort = function () {
        if (sortOrder !== "" && sortField !== "") {
            return {
                key: sortField,
                order: sortOrder,
            };
        }
        else
            return {
                key: "id",
                order: "DESC",
            };
    };
    var getAllUserParams = function () {
        return {
            page: currentPage,
            size: pageSize,
            filterOr: filterOr(),
            filterAnd: filterAnd(),
            sort: sort(),
        };
    };
    var getAllUser = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, availableUsers, error_2;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    setLoading(true);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", getAllUserParams())];
                case 2:
                    response = _c.sent();
                    if (response && response.data) {
                        availableUsers = response.data.filter(function (user) { return user.companyRole !== exports.CompanyRole.API; });
                        setTableData(availableUsers);
                        setTotalUser((_b = (_a = response === null || response === void 0 ? void 0 : response.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.total);
                    }
                    setDataQuery({
                        filterAnd: filterAnd(),
                        filterOr: filterOr(),
                        sort: sort(),
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_2 = _c.sent();
                    console.log("Error in getting users", error_2);
                    antd.message.open({
                        type: "error",
                        content: error_2.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var downloadUserData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, url, a, error_3;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setLoading(true);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/download", {
                            filterAnd: dataQuery.filterAnd,
                            filterOr: ((_a = dataQuery.filterOr) === null || _a === void 0 ? void 0 : _a.length) > 0 ? dataQuery.filterOr : undefined,
                            sort: dataQuery.sort,
                        })];
                case 2:
                    response = _b.sent();
                    if (response && response.data) {
                        url = response.data.url;
                        a = document.createElement('a');
                        a.href = url;
                        a.download = response.data.csvFile; // Specify the filename for the downloaded file
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a); // Clean up the created <a> element
                        window.URL.revokeObjectURL(url);
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_3 = _b.sent();
                    console.log("Error in exporting users", error_3);
                    antd.message.open({
                        type: "error",
                        content: error_3.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        getAllUser();
    }, [
        currentPage,
        pageSize,
        searchByTermUser,
        networksearchUsers,
        filterByRole,
        filterByOrganisationType,
        sortField,
        sortOrder,
    ]);
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var handleFilterVisibleChange = function () {
        setFilterVisible(true);
    };
    var searchByTermHandler = function (event) {
        var _a;
        setSearchByTermUser((_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.value);
    };
    var onFilterOrganisationType = function (checkedValue) {
        var _a;
        setCurrentPage(1);
        setFilterByOrganisationType((_a = checkedValue === null || checkedValue === void 0 ? void 0 : checkedValue.target) === null || _a === void 0 ? void 0 : _a.value);
    };
    var onFilterRole = function (checkedValue) {
        var _a;
        setCurrentPage(1);
        setFilterByRole((_a = checkedValue === null || checkedValue === void 0 ? void 0 : checkedValue.target) === null || _a === void 0 ? void 0 : _a.value);
    };
    var items = [
        {
            key: "1",
            title: "Search by",
            label: (React.createElement("div", { className: "filter-menu-item" },
                React.createElement("div", { className: "filter-title" }, t("user:searchBy")),
                React.createElement(antd.Radio.Group, { onChange: searchByTermHandler, value: searchByTermUser },
                    React.createElement(antd.Space, { direction: "vertical" },
                        React.createElement(antd.Radio, { value: "name" }, "Name"),
                        React.createElement(antd.Radio, { value: "email" }, "Email"))))),
        },
        {
            key: "2",
            title: "Filter by",
            label: (React.createElement("div", { className: "filter-menu-item" },
                React.createElement("div", { className: "filter-title" }, t("user:filterByRole")),
                React.createElement(antd.Radio.Group, { onChange: onFilterRole, value: filterByRole },
                    React.createElement(antd.Space, { direction: "vertical" },
                        React.createElement(antd.Radio, { value: "All" }, "All"),
                        React.createElement(antd.Radio, { value: "Admin" }, "Admin"),
                        React.createElement(antd.Radio, { value: "Manager" }, "Manager"),
                        React.createElement(antd.Radio, { value: "ViewOnly" }, "Viewer"))))),
        },
        {
            key: "3",
            title: "Filter by",
            label: (React.createElement("div", { className: "filter-menu-item" },
                React.createElement("div", { className: "filter-title" }, t("user:filterByCompanyRole")),
                React.createElement(antd.Radio.Group, { onChange: onFilterOrganisationType, value: filterByOrganisationType },
                    React.createElement(antd.Space, { direction: "vertical" },
                        React.createElement(antd.Radio, { value: "All" }, "All"),
                        React.createElement(antd.Radio, { value: "Government" }, "Government"),
                        React.createElement(antd.Radio, { value: "Ministry" }, "Ministry"),
                        React.createElement(antd.Radio, { value: "ProgrammeDeveloper" }, "Developer"),
                        React.createElement(antd.Radio, { value: "Certifier" }, "Certifier"))))),
        },
    ];
    var onSearch = function () {
        setCurrentPage(1);
        setNetworkSearchUsers(searchValueUsers);
    };
    var handleTableChange = function (pag, sorter) {
        console.log(pag, sorter);
        if (sorter.order === "ascend") {
            setSortOrder("ASC");
        }
        else if (sorter.order === "descend") {
            setSortOrder("DESC");
        }
        else if (sorter.order === undefined) {
            setSortOrder("");
        }
        if (sorter.columnKey !== undefined) {
            if (sorter.columnKey === "company") {
                setSortField("company.name");
            }
            else {
                setSortField(sorter.field);
            }
        }
        else {
            setSortField("id");
            setSortOrder("DESC");
        }
    };
    return (React.createElement("div", { className: "content-container" },
        React.createElement("div", { className: "title-bar" },
            React.createElement("div", { className: "body-title" }, t("user:viewUsers"))),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, { className: "table-actions-section" },
                React.createElement(antd.Col, { md: 8, xs: 24 },
                    React.createElement("div", { className: "action-bar" }, ability.can(exports.Action.Create, User) && (React.createElement(antd.Button, { type: "primary", size: "large", block: true, icon: React.createElement(icons.PlusOutlined, null), onClick: onClickAddUser }, t("user:addUser"))))),
                React.createElement(antd.Col, { md: 16, xs: 24 },
                    React.createElement("div", { className: "filter-section" },
                        React.createElement("div", { className: "search-bar" },
                            React.createElement(Search, { onPressEnter: onSearch, placeholder: searchByTermUser === "email"
                                    ? "Search by email"
                                    : "Search by name", allowClear: true, onChange: function (e) {
                                    return e.target.value === ""
                                        ? setNetworkSearchUsers(e.target.value)
                                        : setSearchValueUsers(e.target.value);
                                }, onSearch: onSearch, style: { width: 265 } })),
                        React.createElement("div", { className: "filter-bar" },
                            React.createElement(antd.Dropdown, { arrow: false, menu: { items: items }, placement: "bottomRight", open: filterVisible, onOpenChange: handleFilterVisibleChange, overlayClassName: "filter-dropdown", trigger: ["click"] },
                                React.createElement("a", { className: "ant-dropdown-link", onClick: function (e) { return setFilterVisible(!filterVisible); } },
                                    React.createElement(icons.FilterOutlined, { style: {
                                            color: "rgba(58, 53, 65, 0.3)",
                                            fontSize: "20px",
                                        } })))),
                        React.createElement("div", { className: "download-data-btn user-data-download" },
                            React.createElement("a", { onClick: downloadUserData },
                                React.createElement(icons.DownloadOutlined, { style: {
                                        color: "rgba(58, 53, 65, 0.3)",
                                        fontSize: "20px",
                                    } })))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "userManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalUser,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0 ? "No Users" : null })),
                            } }))))),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: handleOk, onActionCanceled: handleCancel, openModal: openDeleteConfirmationModal, errorMsg: errorMsg, loading: loading })));
};

var css_248z$m = ".steps-actions {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-right: 1rem;\n  justify-content: flex-start; }\n\n.details-part-two .ant-input-number {\n  width: 50%;\n  margin-left: 15px; }\n\n.investment-title-bar {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0px 0px 0px 0px; }\n  .investment-title-bar .title {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; }\n  .investment-title-bar .actions {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end; }\n  .investment-title-bar .flex-display {\n    margin-left: 15px; }\n\n.ownership-container {\n  padding: 15px 0px; }\n  .ownership-container .label {\n    color: rgba(58, 53, 65, 0.5); }\n\n.separator {\n  padding: 5px;\n  color: #d8d8d8; }\n\n.role-group .ant-col-13 {\n  max-width: 320px; }\n\n.role-group .condition-radio-container {\n  width: 48%;\n  text-align: center; }\n  .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n    color: #ffffff !important;\n    border-color: #9155fd;\n    box-shadow: none;\n    max-width: 200px; }\n\n.role-group .ant-radio-button-wrapper::before {\n  background-color: transparent; }\n\n.role-group .anticon {\n  margin-right: 0.5rem; }\n\n.role-group .ant-radio-button-wrapper {\n  border: 1px solid #d9d9d9;\n  color: rgba(140, 140, 140, 0.7) !important;\n  width: 100% !important; }\n\n.role-group .condition-radio {\n  width: 100%;\n  text-transform: uppercase; }\n  .role-group .condition-radio .ant-radio-button-checked {\n    background: #9155fd;\n    color: #ffffff; }\n\n.role-group .role-icons {\n  margin-right: 5px; }\n\n.investment-management .role-icon {\n  padding: 0.5rem 0.6rem; }\n\n.investment-management .ant-tag {\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value=\"Rejected\"] + .ant-checkbox-inner {\n  background-color: rgba(237, 77, 71, 0.6);\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value=\"Cancelled\"] + .ant-checkbox-inner {\n  background-color: rgba(58, 53, 65, 0.4);\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value=\"Accepted\"] + .ant-checkbox-inner {\n  background-color: #008f39;\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value=\"Pending\"] + .ant-checkbox-inner {\n  background-color: rgba(118, 195, 39, 0.6);\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value=\"Recognised\"] + .ant-checkbox-inner {\n  background-color: #976ed7;\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value=\"NotRecognised\"] + .ant-checkbox-inner {\n  background-color: #ffa070;\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value='Approved'] + .ant-checkbox-inner {\n  background-color: #008f39;\n  border: none; }\n\n.add-programme-main-container .adding-section .form-section .investment-sought-form-container .investment-sought-form .investment-radio-button .ant-radio-group {\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  width: fit-content; }\n\n.add-programme-main-container .adding-section .form-section .investment-sought-form-container .investment-sought-form .details-part-two .row .ant-picker-large {\n  height: 40px !important;\n  width: 100%; }\n";
styleInject(css_248z$m);

var Loading = function () {
    return React.createElement(antd.Spin, { className: "loading-center", size: "large" });
};

var GuaranteePayback;
(function (GuaranteePayback) {
    GuaranteePayback["UPFORNT"] = "Upfront";
    GuaranteePayback["ANNUAL"] = "Annual";
})(GuaranteePayback || (GuaranteePayback = {}));
var InsurancePayback;
(function (InsurancePayback) {
    InsurancePayback["LUMPSUM"] = "LumpSum";
    InsurancePayback["ANNUAL"] = "Annual";
})(InsurancePayback || (InsurancePayback = {}));

var RangePicker$3 = antd.DatePicker.RangePicker;
var InvestmentCreationComponent = function (props) {
    var t = props.t, useLocation = props.useLocation, onNavigateToProgrammeManagementView = props.onNavigateToProgrammeManagementView, onNavigateToProgrammeView = props.onNavigateToProgrammeView, onNavigateToInvestmentManagementView = props.onNavigateToInvestmentManagementView;
    var state = useLocation().state;
    var _a = React.useState(), data = _a[0], setData = _a[1];
    var _b = React.useState({}), companyNames = _b[0], setCompanyNames = _b[1];
    var _c = React.useState({}); _c[0]; var setUserOrganization = _c[1];
    var _d = React.useState({}), investmentNames = _d[0], setInvestmentNames = _d[1];
    var _e = React.useState(), projectData = _e[0], setProjectData = _e[1];
    var _f = React.useState(), investmentData = _f[0], setInvestmentData = _f[1];
    var _g = React.useState([]), allProjectData = _g[0], setAllProjectData = _g[1];
    var formOne = antd.Form.useForm()[0];
    var formTwo = antd.Form.useForm()[0];
    var post = useConnection().post;
    var _h = React.useState(false), loading = _h[0], setLoading = _h[1];
    var _j = React.useState("New"), typeCreation = _j[0], setTypeCreation = _j[1];
    var _k = React.useState(exports.InvestmentOwnershipType.PROJECT), investmentOwnershipType = _k[0], setInvestmentOwnershipType = _k[1];
    var _l = React.useState(false), loadingList = _l[0], setLoadingList = _l[1];
    var _m = React.useState(false), loadingInvestment = _m[0], setLoadingInvestment = _m[1];
    var _o = React.useState(false), loadingProgData = _o[0], setLoadingProgData = _o[1];
    var _p = React.useState(0), current = _p[0], setCurrent = _p[1];
    var _q = React.useState(0), currentPercTotal = _q[0], setCurrentPercTotal = _q[1];
    var _r = React.useState([]), organisationsList = _r[0], setOrganisationList = _r[1];
    var _s = React.useState([]), nationalInvestmentList = _s[0], setNationalInvestmentList = _s[1];
    var _t = React.useState([]), instrument = _t[0], setInstrument = _t[1];
    var _u = React.useState(), stepOneData = _u[0], setStepOneData = _u[1];
    var _v = React.useState(), govData = _v[0], setGovData = _v[1];
    var userInfoState = useUserContext().userInfoState;
    var _w = React.useState([]), ministrySectoralScope = _w[0], setMinistrySectoralScope = _w[1];
    var _x = React.useState({}), prevInvestor = _x[0], setPrevInvestor = _x[1];
    var instrumentOptions = Object.keys(exports.Instrument).map(function (k, index) { return ({
        label: addSpaces(Object.values(exports.Instrument)[index]),
        value: Object.values(exports.Instrument)[index],
    }); });
    var onInstrumentChange = function (e) {
        console.log("radio checked", e.target.value);
        setInstrument([e.target.value]);
    };
    var onPercentageChange = function (value) {
        setCurrentPercTotal(formTwo.getFieldValue("percentage").reduce(function (a, b) { return a + b; }, 0));
    };
    var getGovernmentDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    console.log("getting government profile");
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.GOVERNMENT,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setGovData(response === null || response === void 0 ? void 0 : response.data[0]);
                        console.log("gov profile", response === null || response === void 0 ? void 0 : response.data[0]);
                        return [2 /*return*/, response === null || response === void 0 ? void 0 : response.data[0]];
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting government data", error_1);
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getAllProjectData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingProgData(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 5, 6, 7]);
                    if (!data) return [3 /*break*/, 4];
                    if (!!(data === null || data === void 0 ? void 0 : data.programmeId)) return [3 /*break*/, 3];
                    console.log("data non existing", data);
                    console.log("getting all Project data");
                    return [4 /*yield*/, post("national/programme/query", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "currentStage",
                                    operation: "!=",
                                    value: exports.ProgrammeStageUnified.Rejected,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setAllProjectData(response === null || response === void 0 ? void 0 : response.data);
                        console.log("all Project data", response === null || response === void 0 ? void 0 : response.data);
                    }
                    return [3 /*break*/, 4];
                case 3:
                    console.log("setting current Project data");
                    setAllProjectData([data]);
                    _a.label = 4;
                case 4: return [3 /*break*/, 7];
                case 5:
                    error_2 = _a.sent();
                    console.log("Error in getting all programme data", error_2);
                    return [3 /*break*/, 7];
                case 6:
                    setLoadingProgData(false);
                    return [7 /*endfinally*/];
                case 7: return [2 /*return*/];
            }
        });
    }); };
    var setSelectedProgramme = function (value) { return __awaiter(void 0, void 0, void 0, function () {
        var _i, allProjectData_1, obj;
        return __generator(this, function (_a) {
            console.log("setSelectedProgramme", value);
            for (_i = 0, allProjectData_1 = allProjectData; _i < allProjectData_1.length; _i++) {
                obj = allProjectData_1[_i];
                if (obj.programmeId == value) {
                    setProjectData(obj);
                    break;
                }
            }
            return [2 /*return*/];
        });
    }); };
    var setSelectedInvestment = function (value) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            console.log("setSelectedInvestment", value);
            setInvestmentData(investmentNames[value]);
            return [2 /*return*/];
        });
    }); };
    var getNationalInvestmentDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var optionalFilters, filterAnd, filterOr_1, response, investmentData_1, _i, _a, investment, error_3;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setLoadingInvestment(true);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, 4, 5]);
                    optionalFilters = {};
                    filterAnd = [];
                    filterAnd = [
                        {
                            key: "category",
                            operation: "=",
                            value: exports.InvestmentOwnershipType.NATIONAL.toString(),
                        },
                        {
                            key: "amount",
                            operation: ">",
                            value: 0,
                        },
                    ];
                    if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER) {
                        filterAnd.push({
                            key: "toCompanyId",
                            operation: "=",
                            value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                        });
                    }
                    else if (((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) &&
                        (data === null || data === void 0 ? void 0 : data.programmeId)) {
                        filterOr_1 = [];
                        data.companyId.map(function (id) {
                            return filterOr_1.push({
                                key: "toCompanyId",
                                operation: "=",
                                value: id,
                            });
                        });
                        optionalFilters.filterOr = filterOr_1;
                    }
                    return [4 /*yield*/, post("national/programme/investmentQuery", __assign({ page: 1, size: 100, filterAnd: filterAnd }, optionalFilters))];
                case 2:
                    response = _b.sent();
                    if (response.data) {
                        setNationalInvestmentList(response === null || response === void 0 ? void 0 : response.data);
                        investmentData_1 = {};
                        for (_i = 0, _a = response === null || response === void 0 ? void 0 : response.data; _i < _a.length; _i++) {
                            investment = _a[_i];
                            investmentData_1[investment.requestId] = investment;
                        }
                        setInvestmentNames(investmentData_1);
                        console.log(investmentData_1);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_3 = _b.sent();
                    console.log("Error in getting national Investments list", error_3);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingInvestment(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getUserOrganization = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                { key: "companyId", operation: "=", value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId },
                            ],
                        })];
                case 1:
                    response = _a.sent();
                    console.log("getUserOrganization", response.data[0]);
                    setUserOrganization(response.data[0]);
                    setMinistrySectoralScope(response.data[0].sectoralScope);
                    return [3 /*break*/, 3];
                case 2:
                    error_4 = _a.sent();
                    console.log("Error in getting user organization", error_4);
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var getOrganisationsDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var filterAnd, filterOr, _i, _a, c, filters, response, companyName, _b, _c, company, error_5;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    setLoadingList(true);
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 3, 4, 5]);
                    filterAnd = [];
                    filterOr = [];
                    filterAnd = [
                        {
                            key: "companyRole",
                            operation: "=",
                            value: exports.CompanyRole.PROGRAMME_DEVELOPER.toString(),
                        },
                    ];
                    // if (userInfoState?.companyRole === CompanyRole.PROGRAMME_DEVELOPER) {
                    //   filterAnd.push({
                    //     key: "companyId",
                    //     operation: "!=",
                    //     value: userInfoState?.companyId,
                    //   });
                    // }
                    if (data === null || data === void 0 ? void 0 : data.companyId) {
                        for (_i = 0, _a = data === null || data === void 0 ? void 0 : data.companyId; _i < _a.length; _i++) {
                            c = _a[_i];
                            filterOr.push({
                                key: "companyId",
                                operation: "=",
                                value: c,
                            });
                        }
                    }
                    filters = void 0;
                    if (filterOr.length) {
                        filters.filterOr = filterOr;
                    }
                    return [4 /*yield*/, post("national/organisation/queryNames", __assign({ page: 1, size: 100, filterAnd: filterAnd }, filters))];
                case 2:
                    response = _d.sent();
                    if (response.data) {
                        setOrganisationList(response === null || response === void 0 ? void 0 : response.data);
                        companyName = {};
                        for (_b = 0, _c = response === null || response === void 0 ? void 0 : response.data; _b < _c.length; _b++) {
                            company = _c[_b];
                            companyName[Number(company.companyId)] = company.name;
                        }
                        setCompanyNames(companyName);
                        console.log(companyName);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_5 = _d.sent();
                    console.log("Error in getting organization list", error_5);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        if (!state) {
            onNavigateToProgrammeManagementView();
            return;
        }
        if (state === null || state === void 0 ? void 0 : state.record) {
            console.log("condition 1 data", state === null || state === void 0 ? void 0 : state.record);
            setData(state === null || state === void 0 ? void 0 : state.record);
        }
        else {
            console.log("condition 2 data", { ownership: true });
            setData({ ownership: true });
        }
    }, []);
    React.useEffect(function () {
        // if (data) {
        //   const keys = Object.keys(data);
        //   if (keys[0] !== "ownership") {
        //     getOrganisationsDetails();
        //   }
        // }
        getNationalInvestmentDetails();
        getOrganisationsDetails();
        getGovernmentDetails();
        getAllProjectData();
        getUserOrganization();
    }, [data]);
    if (!data && allProjectData.length == 0) {
        return React.createElement(Loading, null);
    }
    console.log("data", data);
    console.log("data", data);
    if (data && Object.keys(data)[0] !== "ownership") {
        // for (const company of data!?.company) {
        //   companyName[company?.companyId] = company;
        // }
        if (!data.proponentPercentage) {
            data.proponentPercentage = [100];
        }
    }
    var nextOne = function (val) {
        console.log("step 1 values", val);
        if (val.typeCreation == exports.InvestmentCreationType.EXISTING) {
            val.toCompanyId = investmentData.toCompanyId;
        }
        setCurrent(current + 1);
        setStepOneData(val);
        if (data === null || data === void 0 ? void 0 : data.programmeId)
            setSelectedProgramme(data.programmeId);
        if (prevInvestor && prevInvestor != val.toCompanyId && !(data === null || data === void 0 ? void 0 : data.programmeId)) {
            formTwo.resetFields();
            setCurrentPercTotal(0);
            setProjectData(undefined);
        }
    };
    var prevOne = function () {
        setCurrent(current - 1);
        if (stepOneData.period && Number.isInteger(stepOneData.period[0])) {
            stepOneData.period[0] = moment.unix(stepOneData.period[0]);
        }
        if (stepOneData.period && Number.isInteger(stepOneData.period[1])) {
            stepOneData.period[1] = moment.unix(stepOneData.period[1]);
        }
        setPrevInvestor(stepOneData.toCompanyId);
        // formTwo.resetFields();
        // setCurrentPercTotal(0);
        // setProjectData(undefined);
    };
    var submitInvestment = function (val) { return __awaiter(void 0, void 0, void 0, function () {
        var payload, response, error_6;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    console.log(val);
                    console.log(stepOneData);
                    console.log("OwnershipType", investmentOwnershipType);
                    setLoading(true);
                    payload = stepOneData;
                    payload.amount = parseFloat(payload.amount);
                    if (payload.interestRate) {
                        payload.interestRate = parseFloat(payload.interestRate);
                    }
                    if (payload.paymentPerMetric) {
                        payload.paymentPerMetric = parseFloat(payload.paymentPerMetric);
                    }
                    if (payload.period) {
                        payload.period[0] = moment(payload.period[0]).startOf("day").unix();
                        payload.period[1] = moment(payload.period[1]).endOf("day").unix();
                    }
                    if (payload.startOfPayback) {
                        payload.startOfPayback = moment(payload.startOfPayback)
                            .startOf("day")
                            .unix();
                    }
                    payload.instrument = Array.isArray(payload.instrument) ? payload.instrument : [payload.instrument];
                    // payload.fromCompanyIds = data.companyId.map((e) => Number(e));
                    payload.percentage = val.percentage;
                    payload.toCompanyId = Number(payload.toCompanyId);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 6, 7, 8]);
                    response = void 0;
                    if (!(investmentOwnershipType == exports.InvestmentOwnershipType.PROJECT)) return [3 /*break*/, 3];
                    if (typeCreation == exports.InvestmentCreationType.EXISTING) {
                        payload.nationalInvestmentId = investmentData.requestId;
                    }
                    else {
                        payload.instrument = payload.instrument;
                    }
                    payload.programmeId = projectData === null || projectData === void 0 ? void 0 : projectData.programmeId;
                    payload.fromCompanyIds = projectData === null || projectData === void 0 ? void 0 : projectData.companyId.map(function (e) { return Number(e); });
                    payload.percentage = val.percentage;
                    return [4 /*yield*/, post("national/programme/addInvestment", payload)];
                case 2:
                    response = _a.sent();
                    return [3 /*break*/, 5];
                case 3:
                    payload.instrument = payload.instrument;
                    return [4 /*yield*/, post("national/organisation/addInvestment", payload)];
                case 4:
                    response = _a.sent();
                    _a.label = 5;
                case 5:
                    console.log("investment creation -> ", response);
                    if ((response === null || response === void 0 ? void 0 : response.statusText) === "SUCCESS") {
                        antd.message.open({
                            type: "success",
                            content: t("programme:investmentCreationSuccess"),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                    }
                    (data === null || data === void 0 ? void 0 : data.programmeId)
                        ? onNavigateToProgrammeView(data === null || data === void 0 ? void 0 : data.programmeId)
                        : onNavigateToInvestmentManagementView();
                    return [3 /*break*/, 8];
                case 6:
                    error_6 = _a.sent();
                    console.log("Error in investment creation - ", error_6);
                    antd.message.open({
                        type: "error",
                        content: error_6 === null || error_6 === void 0 ? void 0 : error_6.message,
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 8];
                case 7:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    }); };
    var deselectOnClick = function (e, fieldName) {
        var value = e.target.value;
        if (value === formOne.getFieldValue(fieldName)) {
            console.log("double clicked button", value);
            formOne.setFieldValue(fieldName, null);
        }
    };
    var onChangeTypeCreation = function (e) {
        console.log("radio checked", e.target.value);
        setTypeCreation(e.target.value);
        formOne.resetFields();
        formTwo.resetFields();
        setCurrentPercTotal(0);
        setProjectData(undefined);
    };
    var onChangeInvestmentOwnershipType = function (e) {
        console.log("investment ownership type radio checked", e.target.value);
        setInvestmentOwnershipType(e.target.value);
    };
    return (React.createElement("div", { className: "add-programme-main-container" },
        React.createElement("div", { className: "title-container" },
            React.createElement("div", { className: "main" }, t("programme:addInvestment")),
            React.createElement("div", { className: "sub" }, t("programme:addInvestmentSub"))),
        React.createElement("div", { className: "adding-section" },
            React.createElement("div", { className: "form-section" },
                React.createElement(antd.Steps, { progressDot: true, direction: "vertical", current: current, items: [
                        {
                            title: (React.createElement("div", { className: "step-title-container" },
                                React.createElement("div", { className: "step-count" }, "01"),
                                React.createElement("div", { className: "title" }, t("programme:programmeFinancingInvested")))),
                            description: current === 0 && (React.createElement("div", { className: "investment-sought-form-container" },
                                React.createElement("div", { className: "investment-sought-form" },
                                    React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, name: "investment-sought", className: "investment-sought-form", layout: "vertical", requiredMark: true, form: formOne, onFinish: nextOne },
                                        React.createElement(antd.Row, { className: "row", gutter: [4, 4] },
                                            React.createElement(antd.Col, { xl: 8, md: 12 },
                                                React.createElement(antd.Form.Item, { label: t("programme:typeCreation"), wrapperCol: { span: 13 }, className: "role-group", name: "typeCreation", rules: [
                                                        {
                                                            required: false,
                                                        },
                                                    ] },
                                                    React.createElement(antd.Radio.Group, { size: "large", defaultValue: typeCreation }, Object.values(exports.InvestmentCreationType).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                        React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onChange: onChangeTypeCreation }, t("programme:" + k)))); }))))),
                                        typeCreation == exports.InvestmentCreationType.NEW && (React.createElement("div", null,
                                            React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-one" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:investorName"), name: "toCompanyId", wrapperCol: { span: 24 }, className: "organisation", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "".concat(t("programme:investorName"), " ").concat(t("isRequired")),
                                                                },
                                                            ] },
                                                            React.createElement(antd.Select, { size: "large", loading: loadingList }, organisationsList.map(function (organisation) {
                                                                if (data === null || data === void 0 ? void 0 : data.programmeId) {
                                                                    if (data.companyId
                                                                        .map(function (id) { return Number(id); })
                                                                        .includes(Number(organisation.companyId))) {
                                                                        return (React.createElement(antd.Select.Option, { key: organisation.companyId, value: organisation.companyId }, organisation.name));
                                                                    }
                                                                }
                                                                else {
                                                                    return (React.createElement(antd.Select.Option, { key: organisation.companyId, value: organisation.companyId }, organisation.name));
                                                                }
                                                            }))))),
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:amountInvested"), name: "amount", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:amountInvested"), " ").concat(t("isRequired")));
                                                                            }
                                                                            else if (!isNaN(value) &&
                                                                                Number(value) > 0) {
                                                                                return [2 /*return*/, Promise.resolve()];
                                                                            }
                                                                            else {
                                                                                throw new Error("".concat(t("programme:amountInvested"), " ").concat(t("isInvalid")));
                                                                            }
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" }))))),
                                            React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 24, md: 24 },
                                                    React.createElement(antd.Form.Item, { label: t("programme:instrument"), name: "instrument", required: true, className: "investment-radio-button", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("programme:instrument"), " ").concat(t("isRequired")));
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Radio.Group, { onChange: onInstrumentChange, value: instrument[0] }, instrumentOptions.map(function (e) {
                                                            return (React.createElement(antd.Radio, { value: e.value }, e.label));
                                                        }))))),
                                            instrument &&
                                                instrument.indexOf(exports.Instrument.LOAN) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 8, md: 12 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:interestRate"), name: "interestRate", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isRequired")));
                                                                            }
                                                                            else if (!isNaN(value)) {
                                                                                return [2 /*return*/, Promise.resolve()];
                                                                            }
                                                                            else {
                                                                                throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isInvalid")));
                                                                            }
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))))),
                                            instrument &&
                                                (instrument.indexOf(exports.Instrument.CONLOAN) >= 0 ||
                                                    instrument.indexOf(exports.Instrument.NONCONLOAN) >=
                                                        0) && (React.createElement("div", { className: "details-part-two" },
                                                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                    React.createElement(antd.Col, { xl: 8, md: 12 },
                                                        React.createElement(antd.Form.Item, { label: t("programme:interestRate"), name: "interestRate", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isRequired")));
                                                                            }
                                                                            else if (!isNaN(value)) {
                                                                                return [2 /*return*/, Promise.resolve()];
                                                                            }
                                                                            else {
                                                                                throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isInvalid")));
                                                                            }
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))),
                                                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                    React.createElement(antd.Col, { xl: 8, md: 12 },
                                                        React.createElement(antd.Form.Item, { label: t("programme:loanPeriod"), name: "period", required: true, rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:loanPeriod"), " ").concat(t("isRequired")));
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(RangePicker$3, { showTime: true, allowClear: true, format: "DD:MM:YYYY", size: "large" }))),
                                                    React.createElement(antd.Col, { xl: 8, md: 12 },
                                                        React.createElement(antd.Form.Item, { label: t("programme:startOfPayback"), name: "startOfPayback", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:startOfPayback"), " ").concat(t("isRequired")));
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.DatePicker, { size: "large", disabledDate: function (currentDate) {
                                                                    return currentDate <
                                                                        moment().startOf("day");
                                                                } })))))),
                                            instrument &&
                                                instrument.indexOf(exports.Instrument.GUARANTEE) >= 0 && (React.createElement("div", { className: "details-part-two" },
                                                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                    React.createElement(antd.Col, { xl: 8, md: 12 },
                                                        React.createElement(antd.Form.Item, { label: t("programme:interestRate"), name: "interestRate", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isRequired")));
                                                                            }
                                                                            else if (!isNaN(value)) {
                                                                                return [2 /*return*/, Promise.resolve()];
                                                                            }
                                                                            else {
                                                                                throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isInvalid")));
                                                                            }
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))),
                                                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                    React.createElement(antd.Col, { xl: 8, md: 12 },
                                                        React.createElement(antd.Form.Item, { label: t("programme:period"), name: "period", required: true, rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:period"), " ").concat(t("isRequired")));
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(RangePicker$3, { showTime: true, allowClear: true, format: "DD:MM:YYYY", size: "large" }))),
                                                    React.createElement(antd.Col, { xl: 8, md: 12 },
                                                        React.createElement(antd.Form.Item, { label: t("programme:payback"), wrapperCol: { span: 13 }, className: "role-group", name: "guaranteePayback", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:payback"), " ").concat(t("isRequired")));
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Radio.Group, { size: "large" }, Object.values(GuaranteePayback).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                                React.createElement(antd.Radio.Button, { className: "condition-radio", value: k }, t("programme:" + k)))); }))))))),
                                            instrument &&
                                                instrument.indexOf(exports.Instrument.RESULT_BASED) >=
                                                    0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:resultMetric"), name: "resultMetric", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:resultMetric"), " ").concat(t("isRequired")));
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))),
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:paymentPerMetric"), name: "paymentPerMetric", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:paymentPerMetric"), " ").concat(t("isRequired")));
                                                                            }
                                                                            else if (!isNaN(value)) {
                                                                                return [2 /*return*/, Promise.resolve()];
                                                                            }
                                                                            else {
                                                                                throw new Error("".concat(t("programme:paymentPerMetric"), " ").concat(t("isInvalid")));
                                                                            }
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))))),
                                            instrument &&
                                                instrument.indexOf(exports.Instrument.INKIND) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:description"), name: "description", rules: [
                                                                {
                                                                    required: false,
                                                                    message: "",
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))))),
                                            instrument &&
                                                instrument.indexOf(exports.Instrument.INSURANCE) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 8, md: 12 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:payback"), wrapperCol: { span: 13 }, className: "role-group", name: "insurancePayback", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:payback"), " ").concat(t("isRequired")));
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Radio.Group, { size: "large" }, Object.values(InsurancePayback).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                                React.createElement(antd.Radio.Button, { className: "condition-radio", value: k }, t("programme:" + k)))); }))))))),
                                            instrument &&
                                                instrument.indexOf(exports.Instrument.OTHER) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:comments"), name: "comments", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:comments"), " ").concat(t("isRequired")));
                                                                            }
                                                                            return [2 /*return*/];
                                                                        });
                                                                    }); },
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))))),
                                            React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 8, md: 12 },
                                                    React.createElement(antd.Form.Item, { label: t("programme:type"), wrapperCol: { span: 13 }, className: "role-group", name: "type", rules: [
                                                            {
                                                                required: false,
                                                            },
                                                        ] },
                                                        React.createElement(antd.Radio.Group, { size: "large" }, Object.values(exports.InvestmentType).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                            React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onClick: function (e) {
                                                                    return deselectOnClick(e, "type");
                                                                } }, t("programme:" + k)))); })))),
                                                React.createElement(antd.Col, { xl: 8, md: 12 },
                                                    React.createElement(antd.Form.Item, { label: t("programme:level"), wrapperCol: { span: 13 }, className: "role-group", name: "level", rules: [
                                                            {
                                                                required: false,
                                                            },
                                                        ] },
                                                        React.createElement(antd.Radio.Group, { size: "large" }, Object.values(exports.InvestmentLevel).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                            React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onClick: function (e) {
                                                                    return deselectOnClick(e, "level");
                                                                } }, t("programme:" + k)))); })))),
                                                React.createElement(antd.Col, { xl: 8, md: 12 },
                                                    React.createElement(antd.Form.Item, { label: t("programme:stream"), wrapperCol: { span: 13 }, className: "role-group", name: "stream", rules: [
                                                            {
                                                                required: false,
                                                            },
                                                        ] },
                                                        React.createElement(antd.Radio.Group, { size: "large" }, Object.values(exports.InvestmentStream).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                            React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onClick: function (e) {
                                                                    return deselectOnClick(e, "stream");
                                                                } }, t("programme:" + k)))); }))))),
                                            React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement(antd.Form.Item, { label: t("programme:esgType"), name: "esgClassification" },
                                                        React.createElement(antd.Select, { size: "large" }, Object.values(exports.ESGType).map(function (esg) { return (React.createElement(antd.Select.Option, { value: esg }, esg)); }))))))),
                                        typeCreation == exports.InvestmentCreationType.EXISTING && (React.createElement("div", null,
                                            React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-one" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:existingInvestmentSource"), name: "existinngInvestmentId", wrapperCol: { span: 24 }, rules: [
                                                                {
                                                                    required: true,
                                                                    message: "".concat(t("programme:existingInvestmentSource"), " ").concat(t("isRequired")),
                                                                },
                                                            ] },
                                                            React.createElement(antd.Select, { size: "large", loading: loadingInvestment, onChange: setSelectedInvestment }, nationalInvestmentList.map(function (investment) { return (React.createElement(antd.Select.Option, { key: investment.requestId, value: investment.requestId }, investment.investmentName)); })))))),
                                            React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: t("programme:amountInvested"), name: "amount", rules: [
                                                                {
                                                                    required: true,
                                                                    message: "",
                                                                },
                                                                {
                                                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                        return __generator(this, function (_a) {
                                                                            if (String(value).trim() === "" ||
                                                                                String(value).trim() ===
                                                                                    undefined ||
                                                                                value === null ||
                                                                                value === undefined) {
                                                                                throw new Error("".concat(t("programme:amountInvested"), " ").concat(t("isRequired")));
                                                                            }
                                                                            else if (!isNaN(value) &&
                                                                                Number(value) > 0) {
                                                                                return [2 /*return*/, Promise.resolve()];
                                                                            }
                                                                            else {
                                                                                throw new Error("".concat(t("programme:amountInvested"), " ").concat(t("isInvalid")));
                                                                            }
                                                                        });
                                                                    }); },
                                                                },
                                                                function (_a) {
                                                                    var getFieldValue = _a.getFieldValue;
                                                                    return ({
                                                                        validator: function (rule, v) {
                                                                            if (getFieldValue("amount") &&
                                                                                investmentData &&
                                                                                investmentData.amount <
                                                                                    parseFloat(getFieldValue("amount"))) {
                                                                                // eslint-disable-next-line prefer-promise-reject-errors
                                                                                return Promise.reject("Amount > Available");
                                                                            }
                                                                            return Promise.resolve();
                                                                        },
                                                                    });
                                                                },
                                                            ] },
                                                            React.createElement(antd.Input, { size: "large" })))),
                                                React.createElement(antd.Col, { xl: 12, md: 24 },
                                                    React.createElement("div", { className: "details-part-two" },
                                                        React.createElement(antd.Form.Item, { label: " ", name: "sourceAmount" },
                                                            React.createElement("div", null,
                                                                "/",
                                                                React.createElement(antd.InputNumber, { size: "large", width: "100%", formatter: function (value) {
                                                                        return "$".concat(addCommSep(value));
                                                                    }, disabled: true, value: investmentData
                                                                        ? investmentData.amount
                                                                        : 0 })))))))),
                                        React.createElement(antd.Form.Item, null,
                                            React.createElement("div", { className: "steps-actions" },
                                                React.createElement(antd.Button, { type: "primary", htmlType: "submit", loading: loading, onSubmit: nextOne }, t("programme:next")))))))),
                        },
                        {
                            title: (React.createElement("div", { className: "step-title-container" },
                                React.createElement("div", { className: "step-count" }, "02"),
                                React.createElement("div", { className: "title" }, t("programme:ownership")))),
                            description: current === 1 && (React.createElement("div", null,
                                React.createElement("div", { className: "investment-sought-form-container" },
                                    React.createElement("div", { className: "investment-sought-form" },
                                        React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, name: "investment-sought", className: "investment-sought-form", layout: "vertical", requiredMark: true },
                                            React.createElement(antd.Row, { className: "row", gutter: [4, 4] },
                                                React.createElement(antd.Col, { xl: 8, md: 12 },
                                                    React.createElement(antd.Form.Item, { label: t("programme:typeCreation"), wrapperCol: { span: 13 }, className: "role-group", name: "investmentOwnershipType", rules: [
                                                            {
                                                                required: false,
                                                            },
                                                        ] },
                                                        React.createElement(antd.Radio.Group, { size: "large", defaultValue: typeCreation ==
                                                                exports.InvestmentCreationType.EXISTING
                                                                ? exports.InvestmentOwnershipType.PROJECT
                                                                : investmentOwnershipType }, Object.values(exports.InvestmentOwnershipType).map(function (k, index) {
                                                            if (!(typeCreation ==
                                                                exports.InvestmentCreationType.EXISTING &&
                                                                k == exports.InvestmentOwnershipType.NATIONAL) &&
                                                                !(k ==
                                                                    exports.InvestmentOwnershipType.NATIONAL &&
                                                                    (data === null || data === void 0 ? void 0 : data.programmeId))) {
                                                                return (React.createElement("div", { className: "condition-radio-container" },
                                                                    React.createElement(antd.Tooltip, { title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ==
                                                                            exports.CompanyRole.PROGRAMME_DEVELOPER &&
                                                                            stepOneData.toCompanyId !=
                                                                                userInfoState.companyId &&
                                                                            k ==
                                                                                exports.InvestmentOwnershipType.NATIONAL
                                                                            ? "This action is unauthorized due to the selected investor name."
                                                                            : "", color: TooltipColor, key: TooltipColor },
                                                                        React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onChange: onChangeInvestmentOwnershipType, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ==
                                                                                exports.CompanyRole.PROGRAMME_DEVELOPER &&
                                                                                stepOneData.toCompanyId !=
                                                                                    userInfoState.companyId &&
                                                                                k ==
                                                                                    exports.InvestmentOwnershipType.NATIONAL }, t("programme:" + k)))));
                                                            }
                                                        })))))))),
                                React.createElement("div", { className: "programme-sought-form-container ownership-container" },
                                    React.createElement("div", { className: "programme-sought-form" },
                                        React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, form: formTwo, name: "investment-sought", className: "investment-sought-form", layout: "vertical", requiredMark: true, onChange: onPercentageChange, onFinish: submitInvestment },
                                            allProjectData.length > 0 &&
                                                investmentOwnershipType ==
                                                    exports.InvestmentOwnershipType.PROJECT && (React.createElement("div", null,
                                                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                    React.createElement(antd.Col, { xl: 12, md: 24 },
                                                        React.createElement("div", { className: "details-part-one" },
                                                            React.createElement(antd.Form.Item, { label: t("programme:title"), name: "projectId", wrapperCol: { span: 24 }, initialValue: (data === null || data === void 0 ? void 0 : data.programmeId) != undefined
                                                                    ? allProjectData[0].programmeId
                                                                    : null, rules: [
                                                                    {
                                                                        required: true,
                                                                        message: "".concat(t("programme:title"), " ").concat(t("isRequired")),
                                                                    },
                                                                ] },
                                                                React.createElement(antd.Select, { size: "large", loading: loadingProgData, 
                                                                    // defaultValue={
                                                                    //   allProjectData.length == 1
                                                                    //     ? allProjectData[0].programmeId
                                                                    //     : null
                                                                    // }
                                                                    disabled: allProjectData.length == 1 &&
                                                                        (data === null || data === void 0 ? void 0 : data.programmeId) != undefined, onChange: setSelectedProgramme }, allProjectData.map(function (project) {
                                                                    if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ==
                                                                        exports.CompanyRole.PROGRAMME_DEVELOPER &&
                                                                        Number(stepOneData.toCompanyId) !=
                                                                            userInfoState.companyId) {
                                                                        if (project.companyId
                                                                            .map(function (id) { return Number(id); })
                                                                            .includes(userInfoState.companyId)) {
                                                                            return (React.createElement(antd.Select.Option, { key: project.programmeId, value: project.programmeId }, project.title));
                                                                        }
                                                                    }
                                                                    else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                                        exports.CompanyRole.MINISTRY) {
                                                                        if (ministrySectoralScope.includes(project.sectoralScope)) {
                                                                            return (React.createElement(antd.Select.Option, { key: project.programmeId, value: project.programmeId }, project.title));
                                                                        }
                                                                    }
                                                                    else {
                                                                        return (React.createElement(antd.Select.Option, { key: project.programmeId, value: project.programmeId }, project.title));
                                                                    }
                                                                })))))), projectData === null || projectData === void 0 ? void 0 :
                                                projectData.companyId.map(function (companyId, index) {
                                                    if (formTwo.getFieldValue("percentage") &&
                                                        formTwo.getFieldValue("percentage")[index] &&
                                                        companyId == stepOneData.toCompanyId) {
                                                        formTwo.getFieldValue("percentage")[index] = 0;
                                                    }
                                                    return (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                        React.createElement(antd.Col, { xl: 8, md: 15 },
                                                            React.createElement("div", { className: "label" },
                                                                govData.companyId == companyId
                                                                    ? govData.name
                                                                    : companyNames[Number(companyId)],
                                                                React.createElement("span", { className: "required-mark" }, "*"))),
                                                        React.createElement(antd.Col, { xl: 8, md: 9 },
                                                            React.createElement(antd.Form.Item, { className: "inline", name: ["percentage", index], initialValue: 0, rules: [
                                                                    {
                                                                        pattern: new RegExp(/^[+]?([.]\d+|\d+[.]?\d*)$/g),
                                                                        message: "Percentage Should be a positive number",
                                                                    },
                                                                    {
                                                                        required: true,
                                                                        message: "Required field",
                                                                    },
                                                                    function (_a) {
                                                                        var getFieldValue = _a.getFieldValue;
                                                                        return ({
                                                                            validator: function (rule, v) {
                                                                                if (getFieldValue([
                                                                                    "percentage",
                                                                                    index,
                                                                                ]) &&
                                                                                    parseFloat(getFieldValue([
                                                                                        "percentage",
                                                                                        index,
                                                                                    ])) >
                                                                                        projectData
                                                                                            .proponentPercentage[index]) {
                                                                                    // eslint-disable-next-line prefer-promise-reject-errors
                                                                                    return Promise.reject("Amount > Available");
                                                                                }
                                                                                return Promise.resolve();
                                                                            },
                                                                        });
                                                                    },
                                                                ] },
                                                                React.createElement(antd.InputNumber, { placeholder: "", controls: false, disabled: govData.companyId ==
                                                                        companyId ||
                                                                        companyId ==
                                                                            stepOneData.toCompanyId, value: 0, 
                                                                    // disabled={userInfoState?.companyId === Number(companyId)}
                                                                    onKeyPress: function (event) {
                                                                        if (!/[0-9\.]/.test(event.key)) {
                                                                            event.preventDefault();
                                                                        }
                                                                    } })),
                                                            React.createElement("div", { className: "inline separator" }, "/"),
                                                            React.createElement(antd.Form.Item, { className: "inline" },
                                                                React.createElement(antd.InputNumber, { placeholder: String(projectData === null || projectData === void 0 ? void 0 : projectData.proponentPercentage[index]), disabled: true })))));
                                                }),
                                                React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                                    React.createElement(antd.Col, { xl: 8, md: 15 },
                                                        React.createElement("div", { className: "label" }, t("programme:total"))),
                                                    React.createElement(antd.Col, { xl: 8, md: 9 },
                                                        React.createElement(antd.Form.Item, { className: "inline", name: ["total"] },
                                                            React.createElement(antd.InputNumber, { placeholder: currentPercTotal + "", controls: false, disabled: true, onKeyPress: function (event) {
                                                                    if (!/[0-9\.]/.test(event.key)) {
                                                                        event.preventDefault();
                                                                    }
                                                                } })),
                                                        React.createElement("div", { className: "inline separator" }, "/"),
                                                        React.createElement(antd.Form.Item, { className: "inline" },
                                                            React.createElement(antd.InputNumber, { disabled: true, placeholder: "100" })))))),
                                            React.createElement(antd.Form.Item, null,
                                                React.createElement("div", { className: "steps-actions" },
                                                    React.createElement(antd.Button, { type: "primary", htmlType: "submit", loading: loading, onSubmit: submitInvestment }, t("programme:submit")),
                                                    React.createElement(antd.Button, { className: "back-btn", onClick: function () { return prevOne(); }, loading: loading }, t("programme:back"))))))))),
                        },
                    ] })))));
};

var InvestmentActionModel = function (props) {
    var investment = props.investment, onFinish = props.onFinish, onCancel = props.onCancel, actionBtnText = props.actionBtnText; props.subText; var openModal = props.openModal, title = props.title, icon = props.icon, type = props.type, remarkRequired = props.remarkRequired, translator = props.translator;
    var _a = React.useState(undefined), popupError = _a[0], setPopupError = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState(false), checked = _c[0], setChecked = _c[1];
    var t = translator.t;
    var companyList = !investment.isRetirement
        ? [
            {
                value: investment.toCompanyId,
                label: investment.receiver[0].name,
            },
        ]
        : [
            {
                value: investment.fromCompanyId,
                label: investment.sender[0].name,
            },
        ];
    return (React.createElement(antd.Modal, { title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" }, icon),
            React.createElement("div", null, title)), className: "popup-" + type, open: openModal, width: Math.min(430, window.innerWidth), centered: true, footer: null, onCancel: onCancel, destroyOnClose: true },
        React.createElement("div", { className: "transfer-form" },
            React.createElement(antd.Form, { name: "transfer_init_popup", layout: "vertical", initialValues: {
                    toCompanyId: !investment.isRetirement
                        ? investment.toCompanyId
                        : investment.fromCompanyId,
                    programmeName: investment.programmeTitle,
                    serialNo: investment.serialNo,
                    creditAmount: investment.creditAmount,
                    company: investment.toCompanyMeta
                        ? investment.toCompanyMeta.name
                        : null,
                    country: investment.toCompanyMeta
                        ? investment.toCompanyMeta.country
                        : null,
                    countryName: investment.toCompanyMeta
                        ? investment.toCompanyMeta.countryName
                        : null,
                }, onChange: function () { return setPopupError(undefined); }, onFinish: function (d) { return __awaiter(void 0, void 0, void 0, function () {
                    var res;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                setLoading(true);
                                if (d.comment) {
                                    d.comment = d.comment.trim();
                                }
                                return [4 /*yield*/, onFinish(investment.requestId, d.comment)];
                            case 1:
                                res = _a.sent();
                                setPopupError(res);
                                setLoading(false);
                                return [2 /*return*/];
                        }
                    });
                }); } },
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:from"), name: "toCompanyId" },
                            React.createElement(antd.Select, { showSearch: true, disabled: true, placeholder: t("view:searchCompany"), showArrow: true, filterOption: false, options: companyList })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:programme"), name: "programmeName" },
                            React.createElement(antd.Input, { disabled: true })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 18, md: 20 },
                        React.createElement("div", { className: "label" }, "".concat(t("view:ownershipPercentage")))),
                    React.createElement(antd.Col, { lg: 6, md: 4 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: investment.percentage + "%", disabled: true })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: "Remarks", name: "comment", rules: [
                                {
                                    required: remarkRequired,
                                    message: "Required field",
                                },
                                function (_a) {
                                    _a.getFieldValue;
                                    return ({
                                        validator: function (rule, v) {
                                            if (remarkRequired &&
                                                v !== undefined &&
                                                v !== "" &&
                                                v.trim() === "") {
                                                // eslint-disable-next-line prefer-promise-reject-errors
                                                return Promise.reject("Required field");
                                            }
                                            return Promise.resolve();
                                        },
                                    });
                                },
                            ] },
                            React.createElement(antd.Input.TextArea, { placeholder: "" })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "text-left", valuePropName: "checked", label: "", name: "confirm" },
                            React.createElement(antd.Checkbox, { className: "label", onChange: function (v) { return setChecked(v.target.checked); } }, t("view:confirmClosure"))))),
                popupError ? (React.createElement(antd.Alert, { className: "error", message: popupError, type: "error", showIcon: true })) : (""),
                React.createElement(antd.Form.Item, { className: "footer" },
                    React.createElement(antd.Button, { htmlType: "button", onClick: onCancel }, t("view:cancel")),
                    React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading, disabled: !checked }, actionBtnText))))));
};

var InvestmentManagementComponent = function (props) {
    var translator = props.translator, onNavigateToProgrammeView = props.onNavigateToProgrammeView, onClickAddOwnership = props.onClickAddOwnership, enableAddOwnership = props.enableAddOwnership;
    var t = translator.t;
    var statusOptions = Object.keys(exports.InvestmentStatus).map(function (k, index) { return ({
        label: addSpaces(Object.values(exports.InvestmentStatus)[index]),
        value: Object.values(exports.InvestmentStatus)[index],
    }); });
    var _a = React.useState(statusOptions.map(function (e) { return e.value; })), selectedStatus = _a[0], setSelectedStatus = _a[1];
    var _b = React.useState(false), indeterminate = _b[0], setIndeterminate = _b[1];
    var _c = React.useState(true), checkAll = _c[0], setCheckAll = _c[1];
    var userInfoState = useUserContext().userInfoState;
    var _d = useConnection(), post = _d.post; _d.get;
    var _e = React.useState(), totalProgramme = _e[0], setTotalProgramme = _e[1];
    var _f = React.useState(), dataFilter = _f[0]; _f[1];
    var _g = React.useState(false), loading = _g[0], setLoading = _g[1];
    var _h = React.useState([]), tableData = _h[0], setTableData = _h[1];
    var _j = React.useState(1), currentPage = _j[0], setCurrentPage = _j[1];
    var _k = React.useState(10), pageSize = _k[0], setPageSize = _k[1];
    var _l = React.useState(), search = _l[0], setSearch = _l[1];
    var _m = React.useState(), searchText = _m[0], setSearchText = _m[1];
    var _o = React.useState(), statusFilter = _o[0], setStatusFilter = _o[1];
    var _p = React.useState(), sortOrder = _p[0], setSortOrder = _p[1];
    var _q = React.useState(), sortField = _q[0], setSortField = _q[1];
    var _r = React.useState(false), modalVisible = _r[0], setModalVisible = _r[1];
    var _s = React.useState(), selectedReq = _s[0], setSelectedReq = _s[1];
    var _t = React.useState(), popupInfo = _t[0], setPopupInfo = _t[1];
    var _u = useSettingsContext(), isTransferFrozen = _u.isTransferFrozen; _u.setTransferFrozen;
    var _v = React.useState([]), ministrySectoralScope = _v[0], setMinistrySectoralScope = _v[1];
    var _w = React.useState(false), ministryLevelFilter = _w[0], setMinistryLevelFilter = _w[1];
    var _x = React.useState(), dataQuery = _x[0], setDataQuery = _x[1];
    var onStatusQuery = function (checkedValues) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            console.log(checkedValues);
            if (checkedValues !== selectedStatus) {
                setSelectedStatus(checkedValues);
            }
            if (checkedValues.length === 0) {
                setTableData([]);
                setTotalProgramme(0);
                return [2 /*return*/];
            }
            setStatusFilter({
                key: "status",
                operation: "in",
                value: checkedValues,
            });
            return [2 /*return*/];
        });
    }); };
    antd.Form.useForm()[0];
    var Search = antd.Input.Search;
    var onCheckAllChange = function (e) {
        var nw = e.target.checked ? statusOptions.map(function (el) { return el.value; }) : [];
        setSelectedStatus(nw);
        setIndeterminate(false);
        setCheckAll(e.target.checked);
        onStatusQuery(nw);
    };
    var getInvestmentData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var filter, interFilterOr, sort, filterBy, response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    filter = [];
                    if (statusFilter) {
                        filter.push(statusFilter);
                    }
                    if (search && search !== "") {
                        interFilterOr = [
                            {
                                key: "programmeTitle",
                                operation: "like",
                                value: "%".concat(search, "%"),
                            },
                        ];
                        if (!isNaN(Number(search))) {
                            interFilterOr.push({
                                key: "requestId",
                                operation: "=",
                                value: "".concat(search),
                            });
                        }
                        filter.push({
                            value: {
                                page: currentPage,
                                size: pageSize,
                                filterOr: interFilterOr,
                            },
                        });
                    }
                    if (sortOrder && sortField) {
                        sort = {
                            key: sortField,
                            order: sortOrder,
                            nullFirst: false,
                        };
                    }
                    else {
                        sort = {
                            key: "requestId",
                            order: "DESC",
                        };
                    }
                    if (ministryLevelFilter) {
                        filterBy = {
                            key: "ministryLevel",
                            value: ministrySectoralScope,
                        };
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/investmentQuery", {
                            page: currentPage,
                            size: pageSize,
                            filterAnd: filter,
                            filterOr: dataFilter,
                            sort: sort,
                            filterBy: filterBy,
                        })];
                case 2:
                    response = _a.sent();
                    console.log(response);
                    setTableData(response.data);
                    setTotalProgramme(response.response.data.total);
                    setDataQuery({
                        filterAnd: filter,
                        filterOr: dataFilter,
                        sort: sort,
                        filterBy: filterBy,
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting programme investment", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var downloadInvestmentData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, url, a, error_2;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setLoading(true);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/investments/download", {
                            filterAnd: dataQuery.filterAnd,
                            filterOr: ((_a = dataQuery.filterOr) === null || _a === void 0 ? void 0 : _a.length) > 0 ? dataQuery.filterOr : undefined,
                            sort: dataQuery.sort,
                            filterBy: dataQuery.filterBy,
                        })];
                case 2:
                    response = _b.sent();
                    if (response && response.data) {
                        url = response.data.url;
                        a = document.createElement('a');
                        a.href = url;
                        a.download = response.data.csvFile; // Specify the filename for the downloaded file
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a); // Clean up the created <a> element
                        window.URL.revokeObjectURL(url);
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_2 = _b.sent();
                    console.log("Error in exporting investments", error_2);
                    antd.message.open({
                        type: "error",
                        content: error_2.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var getUserDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_3;
        var _a, _b, _c, _d, _e, _f;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    setLoading(true);
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id,
                                },
                            ],
                        })];
                case 2:
                    response = _g.sent();
                    if (response && response.data) {
                        if (((_a = response === null || response === void 0 ? void 0 : response.data[0]) === null || _a === void 0 ? void 0 : _a.companyRole) === exports.CompanyRole.MINISTRY &&
                            ((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.company) &&
                            ((_d = (_c = response === null || response === void 0 ? void 0 : response.data[0]) === null || _c === void 0 ? void 0 : _c.company) === null || _d === void 0 ? void 0 : _d.sectoralScope)) {
                            setMinistrySectoralScope((_f = (_e = response === null || response === void 0 ? void 0 : response.data[0]) === null || _e === void 0 ? void 0 : _e.company) === null || _f === void 0 ? void 0 : _f.sectoralScope);
                        }
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_3 = _g.sent();
                    console.log("Error in getting users", error_3);
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            getUserDetails();
        }
    }, []);
    React.useEffect(function () {
        if (currentPage !== 1) {
            setCurrentPage(1);
        }
        else {
            getInvestmentData();
        }
    }, [statusFilter, dataFilter]);
    React.useEffect(function () {
        getInvestmentData();
    }, [
        currentPage,
        pageSize,
        sortField,
        sortOrder,
        search,
        ministryLevelFilter,
    ]);
    var handleRequestOk = function (reqId, remarks, endpoint, successText, isRetire) { return __awaiter(void 0, void 0, void 0, function () {
        var response, successMsg, error_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/" + endpoint, {
                            requestId: reqId,
                            comment: remarks,
                        })];
                case 2:
                    response = _a.sent();
                    successMsg = response.message;
                    if (isRetire) {
                        successMsg = t("creditTransfer:internationalTransferReqCancelled");
                    }
                    console.log(response);
                    antd.message.open({
                        type: "success",
                        content: successText ? successText : successMsg,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    getInvestmentData();
                    setModalVisible(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_4 = _a.sent();
                    console.log("Error in Cancelling transfer request", error_4);
                    setLoading(false);
                    return [2 /*return*/, error_4.message];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var showModalOnAction = function (record, info) {
        setSelectedReq(record);
        setModalVisible(true);
        setPopupInfo(info);
    };
    var actionMenu = function (record) {
        var isRetire = false;
        if (record.isRetirement === true) {
            isRetire = true;
        }
        if (record.status === "Pending" &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            return (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId) === record.initiatorCompanyId ? (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("creditTransfer:cancel"),
                        icon: React.createElement(Icon__namespace.ExclamationOctagon, null),
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:cancelTitle"),
                                icon: React.createElement(Icon__namespace.ExclamationOctagon, null),
                                actionBtnText: t("creditTransfer:proceed"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "investmentCancel", undefined, isRetire);
                                },
                                type: "danger",
                                remarkRequired: true,
                            });
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon color-error" }, item.icon),
                    React.createElement("span", null, item.text))); } })) : record.fromCompanyId === (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId) ? (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("creditTransfer:accept"),
                        icon: React.createElement(Icon__namespace.ClipboardCheck, null),
                        style: "color-primary",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:acceptFinancingTitle"),
                                icon: React.createElement(Icon__namespace.ClipboardCheck, null),
                                actionBtnText: t("creditTransfer:proceed"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "investmentApprove", "".concat(t("programme:investmentReqApproved")));
                                },
                                type: "primary",
                                remarkRequired: false,
                            });
                        },
                    },
                    {
                        text: t("creditTransfer:reject"),
                        icon: React.createElement(Icon__namespace.XOctagon, null),
                        style: "color-error",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:rejectTitle"),
                                icon: React.createElement(Icon__namespace.XOctagon, null),
                                actionBtnText: t("creditTransfer:reject"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "investmentReject");
                                },
                                type: "danger",
                                remarkRequired: true,
                            });
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon ".concat(item.style) }, item.icon),
                    React.createElement("span", null, item.text))); } })) : null;
        }
    };
    var columns = [
        {
            title: t("programme:requestId"),
            dataIndex: "requestId",
            key: "requestId",
            sorter: true,
        },
        {
            title: t("programme:date"),
            key: "txTime",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, luxon.DateTime.fromMillis(parseInt(itemObj.txTime)).toFormat("dd LLLL yyyy")));
            },
        },
        {
            title: t("programme:programmeName"),
            dataIndex: "programmeTitle",
            key: "programmeTitle",
            sorter: true,
            align: "left",
            render: function (item) {
                if (item) {
                    return React.createElement("span", { className: "clickable" }, item);
                }
                return React.createElement("span", null, "-");
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        onNavigateToProgrammeView(record.programmeId);
                    },
                };
            },
        },
        {
            title: t("programme:type"),
            key: "type",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                if (!Obj.type) {
                    return React.createElement("span", null, "-");
                }
                return (React.createElement(antd.Tooltip, { title: addSpaces(Obj.type), color: TooltipColor, key: TooltipColor },
                    React.createElement("div", null,
                        React.createElement(RoleIcon, { icon: Obj.type === exports.InvestmentType.PUBLIC ? (React.createElement(Icon__namespace.Eye, null)) : (React.createElement(Icon__namespace.EyeSlash, null)), bg: InvestmentBGColor, color: InvestmentColor }))));
            },
        },
        {
            title: t("programme:level"),
            key: "level",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                if (!Obj.level) {
                    return React.createElement("span", null, "-");
                }
                return (React.createElement(antd.Tooltip, { title: addSpaces(Obj.level), color: TooltipColor, key: TooltipColor },
                    React.createElement("div", null,
                        React.createElement(RoleIcon, { icon: Obj.level === exports.InvestmentLevel.INTERNATIONAL ? (React.createElement(Icon__namespace.Globe2, null)) : (React.createElement(Icon__namespace.Flag, null)), bg: InvestmentBGColor, color: InvestmentColor }))));
            },
        },
        {
            title: t("programme:stream"),
            key: "stream",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                if (!Obj.stream) {
                    return React.createElement("span", null, "-");
                }
                return (React.createElement(antd.Tooltip, { title: addSpaces(Obj.stream), color: TooltipColor, key: TooltipColor },
                    React.createElement("div", null,
                        React.createElement(RoleIcon, { icon: Obj.stream === exports.InvestmentStream.CLIMATE_FINANCE ? (React.createElement(Icon__namespace.Bank, null)) : (React.createElement(Icon__namespace.GraphUpArrow, null)), bg: InvestmentBGColor, color: InvestmentColor }))));
            },
        },
        {
            title: t("programme:sector"),
            dataIndex: "programmeSector",
            key: "programmeSector",
            sorter: true,
            align: "left",
            render: function (item) {
                if (item) {
                    return React.createElement("span", null, item);
                }
                return React.createElement("span", null, "-");
            },
        },
        {
            title: t("programme:investor"),
            key: "toCompanyId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.receiver &&
                    itemObj.receiver.map(function (v, i) {
                        return (React.createElement(antd.Tooltip, { title: v.name, color: TooltipColor, key: TooltipColor },
                            React.createElement("div", null,
                                React.createElement(ProfileIcon, { icon: v.logo, bg: getCompanyBgColor(v.companyRole), name: v.name }))));
                    })));
            },
        },
        {
            title: t("programme:owner"),
            key: "fromCompanyId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.sender &&
                    itemObj.sender.map(function (v, i) {
                        return (React.createElement(antd.Tooltip, { title: v.name, color: TooltipColor, key: TooltipColor },
                            React.createElement("div", null,
                                React.createElement(ProfileIcon, { icon: v.logo, bg: getCompanyBgColor(v.companyRole), name: v.name }))));
                    })));
            },
        },
        {
            title: t("programme:status"),
            key: "status",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                return (React.createElement(antd.Tooltip, { title: Obj.serialNo, color: TooltipColor, key: TooltipColor },
                    React.createElement(antd.Tag, { className: "clickable", color: getStatusTagType(Obj.status) }, addSpaces(Obj.status))));
            },
        },
        {
            title: t("programme:amount"),
            dataIndex: "amount",
            key: "amount",
            sorter: true,
            align: "right",
            render: function (item) {
                return React.createElement("span", { className: "clickable" }, addCommSepRound$1(item));
            },
        },
        {
            align: "right",
            render: function (_, record) {
                var menu = actionMenu(record);
                return menu && !isTransferFrozen ? (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } }))) : (React.createElement("span", null));
            },
        },
    ];
    var onSearch = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setSearch(searchText);
            return [2 /*return*/];
        });
    }); };
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var handleTableChange = function (pag, sorter) {
        console.log(pag, sorter);
        setSortOrder(sorter.order === "ascend"
            ? "ASC"
            : sorter.order === "descend"
                ? "DESC"
                : undefined);
        setSortField(sorter.columnKey);
        // setCurrentPage(1);
    };
    return (React.createElement("div", { className: "investment-management content-container" },
        React.createElement("div", { className: "investment-title-bar" },
            React.createElement("div", { className: "title-bar" },
                React.createElement("div", { className: "body-title" }, t("programme:investmentTitle"))),
            React.createElement("div", { className: "actions" }, enableAddOwnership &&
                ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) == exports.CompanyRole.MINISTRY ||
                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) == exports.CompanyRole.GOVERNMENT ||
                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) == exports.CompanyRole.PROGRAMME_DEVELOPER) &&
                userInfoState.userRole != exports.Role.ViewOnly && (React.createElement("div", { className: "action-bar" },
                React.createElement(antd.Button, { type: "primary", size: "large", block: true, icon: React.createElement(icons.PlusOutlined, null), onClick: onClickAddOwnership }, t("programme:addOwnership")))))),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: { span: 15 }, md: { span: 14 } },
                    React.createElement("div", { className: "action-bar" },
                        React.createElement(antd.Checkbox, { className: "all-check", indeterminate: indeterminate, onChange: onCheckAllChange, checked: checkAll, defaultChecked: true }, "All"),
                        React.createElement(antd.Checkbox.Group, { options: statusOptions, defaultValue: statusOptions.map(function (e) { return e.value; }), value: selectedStatus, onChange: onStatusQuery }))),
                React.createElement(antd.Col, { lg: { span: 9 }, md: { span: 10 } },
                    React.createElement("div", { className: "filter-section" },
                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY && (React.createElement("div", { className: "search-filter" },
                            React.createElement(antd.Checkbox, { className: "label", onChange: function (v) {
                                    if (userInfoState.companyRole === exports.CompanyRole.MINISTRY) {
                                        if (v.target.checked) {
                                            setMinistryLevelFilter(true);
                                        }
                                        else {
                                            setMinistryLevelFilter(false);
                                        }
                                    }
                                } }, t("programme:ministryLevel")))),
                        React.createElement("div", { className: "search-bar" },
                            React.createElement(Search, { onPressEnter: onSearch, placeholder: "Search", allowClear: true, onChange: function (e) {
                                    return e.target.value === ""
                                        ? setSearch(e.target.value)
                                        : setSearchText(e.target.value);
                                }, onSearch: setSearch, style: { width: 265 } })),
                        React.createElement("div", { className: "download-data-btn" },
                            React.createElement("a", { onClick: downloadInvestmentData },
                                React.createElement(icons.DownloadOutlined, { style: {
                                        color: "rgba(58, 53, 65, 0.3)",
                                        fontSize: "20px",
                                    } })))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "programmeManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalProgramme,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0
                                        ? t("programme:noinvestment")
                                        : null })),
                            } }))))),
        popupInfo && selectedReq && (React.createElement(InvestmentActionModel, { investment: selectedReq, onCancel: function () {
                setModalVisible(false);
                setSelectedReq(undefined);
            }, actionBtnText: popupInfo.actionBtnText, onFinish: popupInfo === null || popupInfo === void 0 ? void 0 : popupInfo.okAction, subText: "", openModal: modalVisible, icon: popupInfo.icon, title: popupInfo.title, type: popupInfo.type, remarkRequired: popupInfo.remarkRequired, translator: translator }))));
};

var css_248z$l = ".steps-actions {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-right: 1rem;\n  justify-content: flex-start; }\n\n.support-title-bar {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0px 0px 30px 0px; }\n  .support-title-bar .title {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; }\n  .support-title-bar .actions {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end; }\n  .support-title-bar .flex-display {\n    margin-left: 15px; }\n\n.ownership-container {\n  padding: 15px 0px; }\n  .ownership-container .label {\n    color: rgba(58, 53, 65, 0.5); }\n\n.separator {\n  padding: 5px;\n  color: #d8d8d8; }\n\n.role-group .ant-col-13 {\n  max-width: 320px; }\n\n.role-group .condition-radio-container {\n  width: 48%;\n  text-align: center; }\n  .role-group .condition-radio-container .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n    color: #ffffff !important;\n    border-color: #9155fd;\n    box-shadow: none;\n    max-width: 200px; }\n\n.role-group .ant-radio-button-wrapper::before {\n  background-color: transparent; }\n\n.role-group .anticon {\n  margin-right: 0.5rem; }\n\n.role-group .ant-radio-button-wrapper {\n  border: 1px solid #d9d9d9;\n  color: rgba(140, 140, 140, 0.7) !important;\n  width: 100% !important; }\n\n.role-group .condition-radio {\n  width: 100%;\n  text-transform: uppercase; }\n  .role-group .condition-radio .ant-radio-button-checked {\n    background: #9155fd;\n    color: #ffffff; }\n\n.role-group .role-icons {\n  margin-right: 5px; }\n\n.investment-management .role-icon {\n  padding: 0.5rem 0.6rem; }\n\n.investment-management .ant-tag {\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value='Rejected'] + .ant-checkbox-inner {\n  background-color: rgba(237, 77, 71, 0.6);\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value='Cancelled'] + .ant-checkbox-inner {\n  background-color: rgba(58, 53, 65, 0.4);\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value='Accepted'] + .ant-checkbox-inner {\n  background-color: #008f39;\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value='Pending'] + .ant-checkbox-inner {\n  background-color: rgba(118, 195, 39, 0.6);\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value='Recognised'] + .ant-checkbox-inner {\n  background-color: #976ed7;\n  border: none; }\n\n.investment-management .ant-checkbox-checked .ant-checkbox-input[value='NotRecognised'] + .ant-checkbox-inner {\n  background-color: #ffa070;\n  border: none; }\n";
styleInject(css_248z$l);

var SupportCreationComponent = function (props) {
    var t = props.t, useLocation = props.useLocation; props.onNavigateToProgrammeManagementView; props.onNavigateToProgrammeView;
    useLocation().state;
    var _a = React.useState(); _a[0]; _a[1];
    var formOne = antd.Form.useForm()[0];
    antd.Form.useForm()[0];
    var post = useConnection().post;
    var _b = React.useState(false), loading = _b[0]; _b[1];
    var _c = React.useState(false), loadingList = _c[0], setLoadingList = _c[1];
    var _d = React.useState(0), current = _d[0], setCurrent = _d[1];
    var _e = React.useState(0); _e[0]; _e[1];
    var _f = React.useState([]), organisationsList = _f[0], setOrganisationList = _f[1];
    var _g = React.useState([]), instrument = _g[0], setInstrument = _g[1];
    var _h = React.useState(); _h[0]; var setStepOneData = _h[1];
    var userInfoState = useUserContext().userInfoState;
    var instrumentOptions = Object.keys(exports.Instrument).map(function (k, index) { return ({
        label: addSpaces(Object.values(exports.Instrument)[index]),
        value: Object.values(exports.Instrument)[index],
    }); });
    var onInstrumentChange = function (value) {
        setInstrument(value);
    };
    var getOrganisationsDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var filterAnd, response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoadingList(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    filterAnd = [];
                    filterAnd = [
                        {
                            key: "companyRole",
                            operation: "=",
                            value: exports.CompanyRole.PROGRAMME_DEVELOPER.toString(),
                        },
                    ];
                    if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER) {
                        filterAnd.push({
                            key: "companyId",
                            operation: "!=",
                            value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                        });
                    }
                    return [4 /*yield*/, post("national/organisation/queryNames", {
                            page: 1,
                            size: 100,
                            filterAnd: filterAnd,
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setOrganisationList(response === null || response === void 0 ? void 0 : response.data);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting organisation list", error_1);
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingList(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        getOrganisationsDetails();
    }, []);
    // const companyName: any = {};
    // for (const company of data!?.company) {
    //   companyName[company.companyId] = company;
    // }
    // if (!data!.proponentPercentage) {
    //   data.proponentPercentage = [100];
    // }
    var nextOne = function (val) {
        setCurrent(current + 1);
        setStepOneData(val);
    };
    // const submitInvestment = async (val: any) => {
    //   console.log(val);
    //   console.log(stepOneData);
    //   setLoading(true);
    //   const payload = stepOneData;
    //   payload.programmeId = data.programmeId;
    //   payload.amount = parseFloat(payload.amount);
    //   if (payload.interestRate) {
    //     payload.interestRate = parseFloat(payload.interestRate);
    //   }
    //   if (payload.paymentPerMetric) {
    //     payload.paymentPerMetric = parseFloat(payload.paymentPerMetric);
    //   }
    //   payload.fromCompanyIds = data.companyId.map((e) => Number(e));
    //   payload.percentage = val.percentage;
    //   payload.toCompanyId = Number(payload.toCompanyId);
    //   try {
    //     const response: any = await post(
    //       "national/programme/addInvestment",
    //       payload
    //     );
    //     console.log("investment creation -> ", response);
    //     if (response?.statusText === "SUCCESS") {
    //       message.open({
    //         type: "success",
    //         content: t("programme:investmentCreationSuccess"),
    //         duration: 4,
    //         style: { textAlign: "right", marginRight: 15, marginTop: 10 },
    //       });
    //     }
    //     onNavigateToProgrammeView();
    //   } catch (error: any) {
    //     console.log("Error in investment creation - ", error);
    //     message.open({
    //       type: "error",
    //       content: error?.message,
    //       duration: 4,
    //       style: { textAlign: "right", marginRight: 15, marginTop: 10 },
    //     });
    //   } finally {
    //     setLoading(false);
    //   }
    // };
    var deselectOnClick = function (e, fieldName) {
        var value = e.target.value;
        if (value === formOne.getFieldValue(fieldName)) {
            console.log("double clicked button", value);
            formOne.setFieldValue(fieldName, null);
        }
    };
    return (React.createElement("div", { className: "add-programme-main-container" },
        React.createElement("div", { className: "title-container" },
            React.createElement("div", { className: "main" }, t("programme:addSupport")),
            React.createElement("div", { className: "sub" }, t("programme:addSupportSub"))),
        React.createElement("div", { className: "adding-section" },
            React.createElement("div", { className: "form-section" },
                React.createElement(antd.Steps, { progressDot: true, direction: "vertical", current: current, items: [
                        {
                            title: (React.createElement("div", { className: "step-title-container" },
                                React.createElement("div", { className: "step-count" }, "01"),
                                React.createElement("div", { className: "title" }, t("programme:programmeFinancingInvested")))),
                            description: current === 0 && (React.createElement("div", { className: "investment-sought-form-container" },
                                React.createElement("div", { className: "investment-sought-form" },
                                    React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, name: "investment-sought", className: "investment-sought-form", layout: "vertical", requiredMark: true, form: formOne, onFinish: nextOne },
                                        React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-one" },
                                                    React.createElement(antd.Form.Item, { label: t("programme:investorName"), name: "toCompanyId", wrapperCol: { span: 24 }, className: "organisation", rules: [
                                                            {
                                                                required: true,
                                                                message: "".concat(t("programme:investorName"), " ").concat(t("isRequired")),
                                                            },
                                                        ] },
                                                        React.createElement(antd.Select, { size: "large", loading: loadingList }, organisationsList.map(function (organisation) { return (React.createElement(antd.Select.Option, { key: organisation.companyId, value: organisation.companyId }, organisation.name)); }))))),
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: t("programme:amountInvested"), name: "amount", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() === undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("programme:amountInvested"), " ").concat(t("isRequired")));
                                                                        }
                                                                        else if (!isNaN(value) &&
                                                                            Number(value) > 0) {
                                                                            return [2 /*return*/, Promise.resolve()];
                                                                        }
                                                                        else {
                                                                            throw new Error("".concat(t("programme:amountInvested"), " ").concat(t("isInvalid")));
                                                                        }
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" }))))),
                                        React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 24, md: 24 },
                                                React.createElement(antd.Form.Item, { label: t("programme:instrument"), name: "instrument", wrapperCol: { span: 24 }, className: "" },
                                                    React.createElement(antd.Checkbox.Group, { options: instrumentOptions, defaultValue: instrumentOptions.map(function (e) { return e.value; }), onChange: onInstrumentChange })))),
                                        instrument &&
                                            instrument.indexOf(exports.Instrument.LOAN) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 8, md: 12 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: t("programme:interestRate"), name: "interestRate", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() ===
                                                                                undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isRequired")));
                                                                        }
                                                                        else if (!isNaN(value)) {
                                                                            return [2 /*return*/, Promise.resolve()];
                                                                        }
                                                                        else {
                                                                            throw new Error("".concat(t("programme:interestRate"), " ").concat(t("isInvalid")));
                                                                        }
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })))))),
                                        instrument &&
                                            instrument.indexOf(exports.Instrument.RESULT_BASED) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: t("programme:resultMetric"), name: "resultMetric", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() ===
                                                                                undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("programme:resultMetric"), " ").concat(t("isRequired")));
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })))),
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: t("programme:paymentPerMetric"), name: "paymentPerMetric", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() ===
                                                                                undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("programme:paymentPerMetric"), " ").concat(t("isRequired")));
                                                                        }
                                                                        else if (!isNaN(value)) {
                                                                            return [2 /*return*/, Promise.resolve()];
                                                                        }
                                                                        else {
                                                                            throw new Error("".concat(t("programme:paymentPerMetric"), " ").concat(t("isInvalid")));
                                                                        }
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })))))),
                                        instrument &&
                                            instrument.indexOf(exports.Instrument.INKIND) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: t("programme:description"), name: "description", rules: [
                                                            {
                                                                required: false,
                                                                message: "",
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })))))),
                                        instrument &&
                                            instrument.indexOf(exports.Instrument.OTHER) >= 0 && (React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement("div", { className: "details-part-two" },
                                                    React.createElement(antd.Form.Item, { label: t("programme:comments"), name: "comments", rules: [
                                                            {
                                                                required: true,
                                                                message: "",
                                                            },
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (String(value).trim() === "" ||
                                                                            String(value).trim() ===
                                                                                undefined ||
                                                                            value === null ||
                                                                            value === undefined) {
                                                                            throw new Error("".concat(t("programme:comments"), " ").concat(t("isRequired")));
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.Input, { size: "large" })))))),
                                        React.createElement(antd.Row, { className: "row", gutter: [4, 4] },
                                            React.createElement(antd.Col, { xl: 8, md: 12 },
                                                React.createElement(antd.Form.Item, { label: t("programme:type"), wrapperCol: { span: 13 }, className: "role-group", name: "type", rules: [
                                                        {
                                                            required: false,
                                                        },
                                                    ] },
                                                    React.createElement(antd.Radio.Group, { size: "large" }, Object.values(exports.InvestmentType).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                        React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onClick: function (e) {
                                                                return deselectOnClick(e, "type");
                                                            } }, t("programme:" + k)))); })))),
                                            React.createElement(antd.Col, { xl: 8, md: 12 },
                                                React.createElement(antd.Form.Item, { label: t("programme:level"), wrapperCol: { span: 13 }, className: "role-group", name: "level", rules: [
                                                        {
                                                            required: false,
                                                        },
                                                    ] },
                                                    React.createElement(antd.Radio.Group, { size: "large" }, Object.values(exports.InvestmentLevel).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                        React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onClick: function (e) {
                                                                return deselectOnClick(e, "level");
                                                            } }, t("programme:" + k)))); })))),
                                            React.createElement(antd.Col, { xl: 8, md: 12 },
                                                React.createElement(antd.Form.Item, { label: t("programme:stream"), wrapperCol: { span: 13 }, className: "role-group", name: "stream", rules: [
                                                        {
                                                            required: false,
                                                        },
                                                    ] },
                                                    React.createElement(antd.Radio.Group, { size: "large" }, Object.values(exports.InvestmentStream).map(function (k, index) { return (React.createElement("div", { className: "condition-radio-container" },
                                                        React.createElement(antd.Radio.Button, { className: "condition-radio", value: k, onClick: function (e) {
                                                                return deselectOnClick(e, "stream");
                                                            } }, t("programme:" + k)))); }))))),
                                        React.createElement(antd.Row, { className: "row", gutter: [16, 16] },
                                            React.createElement(antd.Col, { xl: 12, md: 24 },
                                                React.createElement(antd.Form.Item, { label: t("programme:esgType"), name: "esgClassification" },
                                                    React.createElement(antd.Select, { size: "large" }, Object.values(exports.ESGType).map(function (esg) { return (React.createElement(antd.Select.Option, { value: esg }, esg)); }))))),
                                        React.createElement(antd.Form.Item, null,
                                            React.createElement("div", { className: "steps-actions" },
                                                React.createElement(antd.Button, { type: "primary", htmlType: "submit", loading: loading, onSubmit: nextOne }, t("programme:next")))))))),
                        },
                        {
                            title: (React.createElement("div", { className: "step-title-container" },
                                React.createElement("div", { className: "step-count" }, "02"),
                                React.createElement("div", { className: "title" }, t("programme:ownership")))),
                            description: current === 1 && (React.createElement("div", null,
                                React.createElement("div", { className: "programme-sought-form-container ownership-container" }))),
                        },
                    ] })))));
};

var SupportManagementComponent = function (props) {
    var translator = props.translator; props.onNavigateToProgrammeView; var enableAddSupport = props.enableAddSupport, onClickAddSupport = props.onClickAddSupport;
    var t = translator.t;
    var statusOptions = Object.keys(exports.InvestmentStatus).map(function (k, index) { return ({
        label: addSpaces(Object.values(exports.InvestmentStatus)[index]),
        value: Object.values(exports.InvestmentStatus)[index],
    }); });
    var _a = React.useState(statusOptions.map(function (e) { return e.value; })), selectedStatus = _a[0], setSelectedStatus = _a[1];
    var _b = React.useState(false), indeterminate = _b[0], setIndeterminate = _b[1];
    var _c = React.useState(true), checkAll = _c[0], setCheckAll = _c[1];
    var userInfoState = useUserContext().userInfoState;
    var _d = useConnection(), post = _d.post; _d.get;
    var _e = React.useState(), totalProgramme = _e[0], setTotalProgramme = _e[1];
    var _f = React.useState(), dataFilter = _f[0]; _f[1];
    var _g = React.useState(false), loading = _g[0], setLoading = _g[1];
    var _h = React.useState([]), tableData = _h[0], setTableData = _h[1];
    var _j = React.useState(1), currentPage = _j[0], setCurrentPage = _j[1];
    var _k = React.useState(10), pageSize = _k[0], setPageSize = _k[1];
    var _l = React.useState(), search = _l[0], setSearch = _l[1];
    var _m = React.useState(), searchText = _m[0], setSearchText = _m[1];
    var _o = React.useState(), statusFilter = _o[0], setStatusFilter = _o[1];
    var _p = React.useState(), sortOrder = _p[0], setSortOrder = _p[1];
    var _q = React.useState(), sortField = _q[0], setSortField = _q[1];
    var _r = React.useState(false), modalVisible = _r[0], setModalVisible = _r[1];
    var _s = React.useState(), selectedReq = _s[0], setSelectedReq = _s[1];
    var _t = React.useState(), popupInfo = _t[0], setPopupInfo = _t[1];
    var _u = useSettingsContext(), isTransferFrozen = _u.isTransferFrozen; _u.setTransferFrozen;
    var _v = React.useState([]), ministrySectoralScope = _v[0], setMinistrySectoralScope = _v[1];
    var _w = React.useState(false), ministryLevelFilter = _w[0], setMinistryLevelFilter = _w[1];
    var onStatusQuery = function (checkedValues) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            console.log(checkedValues);
            if (checkedValues !== selectedStatus) {
                setSelectedStatus(checkedValues);
            }
            if (checkedValues.length === 0) {
                setTableData([]);
                setTotalProgramme(0);
                return [2 /*return*/];
            }
            setStatusFilter({
                key: "status",
                operation: "in",
                value: checkedValues,
            });
            return [2 /*return*/];
        });
    }); };
    antd.Form.useForm()[0];
    var Search = antd.Input.Search;
    var onCheckAllChange = function (e) {
        var nw = e.target.checked ? statusOptions.map(function (el) { return el.value; }) : [];
        setSelectedStatus(nw);
        setIndeterminate(false);
        setCheckAll(e.target.checked);
        onStatusQuery(nw);
    };
    var getInvestmentData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var filter, interFilterOr, sort, filterBy, response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    filter = [];
                    if (statusFilter) {
                        filter.push(statusFilter);
                    }
                    if (search && search !== "") {
                        interFilterOr = [
                            {
                                key: "programmeTitle",
                                operation: "like",
                                value: "%".concat(search, "%"),
                            },
                        ];
                        if (!isNaN(Number(search))) {
                            interFilterOr.push({
                                key: "requestId",
                                operation: "=",
                                value: "".concat(search),
                            });
                        }
                        filter.push({
                            value: {
                                page: currentPage,
                                size: pageSize,
                                filterOr: interFilterOr,
                            },
                        });
                    }
                    if (sortOrder && sortField) {
                        sort = {
                            key: sortField,
                            order: sortOrder,
                            nullFirst: false,
                        };
                    }
                    else {
                        sort = {
                            key: "requestId",
                            order: "DESC",
                        };
                    }
                    if (ministryLevelFilter) {
                        filterBy = {
                            key: "ministryLevel",
                            value: ministrySectoralScope,
                        };
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/investmentQuery", {
                            page: currentPage,
                            size: pageSize,
                            filterAnd: filter,
                            filterOr: dataFilter,
                            sort: sort,
                            filterBy: filterBy,
                        })];
                case 2:
                    response = _a.sent();
                    console.log(response);
                    setTableData(response.data);
                    setTotalProgramme(response.response.data.total);
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting programme investment", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var getUserDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_2;
        var _a, _b, _c, _d, _e, _f;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    setLoading(true);
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id,
                                },
                            ],
                        })];
                case 2:
                    response = _g.sent();
                    if (response && response.data) {
                        if (((_a = response === null || response === void 0 ? void 0 : response.data[0]) === null || _a === void 0 ? void 0 : _a.companyRole) === exports.CompanyRole.MINISTRY &&
                            ((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.company) &&
                            ((_d = (_c = response === null || response === void 0 ? void 0 : response.data[0]) === null || _c === void 0 ? void 0 : _c.company) === null || _d === void 0 ? void 0 : _d.sectoralScope)) {
                            setMinistrySectoralScope((_f = (_e = response === null || response === void 0 ? void 0 : response.data[0]) === null || _e === void 0 ? void 0 : _e.company) === null || _f === void 0 ? void 0 : _f.sectoralScope);
                        }
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_2 = _g.sent();
                    console.log("Error in getting users", error_2);
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            getUserDetails();
        }
    }, []);
    React.useEffect(function () {
        if (currentPage !== 1) {
            setCurrentPage(1);
        }
        else {
            getInvestmentData();
        }
    }, [statusFilter, dataFilter]);
    React.useEffect(function () {
        getInvestmentData();
    }, [
        currentPage,
        pageSize,
        sortField,
        sortOrder,
        search,
        ministryLevelFilter,
    ]);
    var handleRequestOk = function (reqId, remarks, endpoint, successText, isRetire) { return __awaiter(void 0, void 0, void 0, function () {
        var response, successMsg, error_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/" + endpoint, {
                            requestId: reqId,
                            comment: remarks,
                        })];
                case 2:
                    response = _a.sent();
                    successMsg = response.message;
                    if (isRetire) {
                        successMsg = t("creditTransfer:internationalTransferReqCancelled");
                    }
                    console.log(response);
                    antd.message.open({
                        type: "success",
                        content: successText ? successText : successMsg,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    getInvestmentData();
                    setModalVisible(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_3 = _a.sent();
                    console.log("Error in Cancelling transfer request", error_3);
                    setLoading(false);
                    return [2 /*return*/, error_3.message];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var showModalOnAction = function (record, info) {
        setSelectedReq(record);
        setModalVisible(true);
        setPopupInfo(info);
    };
    var actionMenu = function (record) {
        var isRetire = false;
        if (record.isRetirement === true) {
            isRetire = true;
        }
        if (record.status === "Pending" &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            return (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId) === record.initiatorCompanyId ? (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("creditTransfer:cancel"),
                        icon: React.createElement(Icon__namespace.ExclamationOctagon, null),
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:cancelTitle"),
                                icon: React.createElement(Icon__namespace.ExclamationOctagon, null),
                                actionBtnText: t("creditTransfer:proceed"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "investmentCancel", undefined, isRetire);
                                },
                                type: "danger",
                                remarkRequired: true,
                            });
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon color-error" }, item.icon),
                    React.createElement("span", null, item.text))); } })) : record.fromCompanyId === (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId) ? (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("creditTransfer:accept"),
                        icon: React.createElement(Icon__namespace.ClipboardCheck, null),
                        style: "color-primary",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:acceptTitle"),
                                icon: React.createElement(Icon__namespace.ClipboardCheck, null),
                                actionBtnText: t("creditTransfer:proceed"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "investmentApprove", "".concat(t("programme:investmentReqApproved")));
                                },
                                type: "primary",
                                remarkRequired: false,
                            });
                        },
                    },
                    {
                        text: t("creditTransfer:reject"),
                        icon: React.createElement(Icon__namespace.XOctagon, null),
                        style: "color-error",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:rejectTitle"),
                                icon: React.createElement(Icon__namespace.XOctagon, null),
                                actionBtnText: t("creditTransfer:reject"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "investmentReject");
                                },
                                type: "danger",
                                remarkRequired: true,
                            });
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon ".concat(item.style) }, item.icon),
                    React.createElement("span", null, item.text))); } })) : null;
        }
    };
    var columns = [
        {
            title: t("programme:requestId"),
            dataIndex: "requestId",
            key: "requestId",
            sorter: true,
        },
        {
            title: t("programme:date"),
            key: "txTime",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, luxon.DateTime.fromMillis(parseInt(itemObj.txTime)).toFormat("dd LLLL yyyy")));
            },
        },
        {
            title: t("programme:type"),
            key: "type",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                if (!Obj.type) {
                    return React.createElement("span", null, "-");
                }
                return (React.createElement(antd.Tooltip, { title: addSpaces(Obj.type), color: TooltipColor, key: TooltipColor },
                    React.createElement("div", null,
                        React.createElement(RoleIcon, { icon: Obj.type === exports.InvestmentType.PUBLIC ? (React.createElement(Icon__namespace.Eye, null)) : (React.createElement(Icon__namespace.EyeSlash, null)), bg: InvestmentBGColor, color: InvestmentColor }))));
            },
        },
        {
            title: t("programme:level"),
            key: "level",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                if (!Obj.level) {
                    return React.createElement("span", null, "-");
                }
                return (React.createElement(antd.Tooltip, { title: addSpaces(Obj.level), color: TooltipColor, key: TooltipColor },
                    React.createElement("div", null,
                        React.createElement(RoleIcon, { icon: Obj.level === exports.InvestmentLevel.INTERNATIONAL ? (React.createElement(Icon__namespace.Globe2, null)) : (React.createElement(Icon__namespace.Flag, null)), bg: InvestmentBGColor, color: InvestmentColor }))));
            },
        },
        {
            title: t("programme:stream"),
            key: "stream",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                if (!Obj.stream) {
                    return React.createElement("span", null, "-");
                }
                return (React.createElement(antd.Tooltip, { title: addSpaces(Obj.stream), color: TooltipColor, key: TooltipColor },
                    React.createElement("div", null,
                        React.createElement(RoleIcon, { icon: Obj.stream === exports.InvestmentStream.CLIMATE_FINANCE ? (React.createElement(Icon__namespace.Bank, null)) : (React.createElement(Icon__namespace.GraphUpArrow, null)), bg: InvestmentBGColor, color: InvestmentColor }))));
            },
        },
        {
            title: t("programme:sector"),
            dataIndex: "programmeSector",
            key: "programmeSector",
            sorter: true,
            align: "left",
        },
        {
            title: t("programme:investor"),
            key: "toCompanyId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.receiver &&
                    itemObj.receiver.map(function (v, i) {
                        return (React.createElement(antd.Tooltip, { title: v.name, color: TooltipColor, key: TooltipColor },
                            React.createElement("div", null,
                                React.createElement(ProfileIcon, { icon: v.logo, bg: getCompanyBgColor(v.companyRole), name: v.name }))));
                    })));
            },
        },
        {
            title: t("programme:status"),
            key: "status",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                return (React.createElement(antd.Tooltip, { title: Obj.serialNo, color: TooltipColor, key: TooltipColor },
                    React.createElement(antd.Tag, { className: "clickable", color: getStatusTagType(Obj.status) }, addSpaces(Obj.status))));
            },
        },
        {
            title: t("programme:amount"),
            dataIndex: "amount",
            key: "amount",
            sorter: true,
            align: "right",
            render: function (item) {
                return React.createElement("span", { className: "clickable" }, addCommSepRound$1(item));
            },
        },
        {
            align: "right",
            render: function (_, record) {
                var menu = actionMenu(record);
                return menu && !isTransferFrozen ? (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } }))) : (React.createElement("span", null));
            },
        },
    ];
    var onSearch = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setSearch(searchText);
            return [2 /*return*/];
        });
    }); };
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var handleTableChange = function (pag, sorter) {
        console.log(pag, sorter);
        setSortOrder(sorter.order === "ascend"
            ? "ASC"
            : sorter.order === "descend"
                ? "DESC"
                : undefined);
        setSortField(sorter.columnKey);
        // setCurrentPage(1);
    };
    return (React.createElement("div", { className: "investment-management content-container" },
        React.createElement("div", { className: "support-title-bar" },
            React.createElement("div", { className: "title-bar" },
                React.createElement("div", { className: "body-title" }, t("programme:supportTitle"))),
            React.createElement("div", { className: "actions" }, enableAddSupport && (React.createElement("div", { className: "action-bar" },
                React.createElement(antd.Button, { type: "primary", size: "large", block: true, icon: React.createElement(icons.PlusOutlined, null), onClick: onClickAddSupport }, t("programme:addSupportBtnText")))))),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: { span: 15 }, md: { span: 14 } },
                    React.createElement("div", { className: "action-bar" },
                        React.createElement(antd.Checkbox, { className: "all-check", indeterminate: indeterminate, onChange: onCheckAllChange, checked: checkAll, defaultChecked: true }, "All"),
                        React.createElement(antd.Checkbox.Group, { options: statusOptions, defaultValue: statusOptions.map(function (e) { return e.value; }), value: selectedStatus, onChange: onStatusQuery }))),
                React.createElement(antd.Col, { lg: { span: 9 }, md: { span: 10 } },
                    React.createElement("div", { className: "filter-section" },
                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY && (React.createElement("div", { className: "search-filter" },
                            React.createElement(antd.Checkbox, { className: "label", onChange: function (v) {
                                    if (userInfoState.companyRole === exports.CompanyRole.MINISTRY) {
                                        if (v.target.checked) {
                                            setMinistryLevelFilter(true);
                                        }
                                        else {
                                            setMinistryLevelFilter(false);
                                        }
                                    }
                                } }, t("programme:ministryLevel")))),
                        React.createElement("div", { className: "search-bar" },
                            React.createElement(Search, { onPressEnter: onSearch, placeholder: "Search", allowClear: true, onChange: function (e) {
                                    return e.target.value === ""
                                        ? setSearch(e.target.value)
                                        : setSearchText(e.target.value);
                                }, onSearch: setSearch, style: { width: 265 } }))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "programmeManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalProgramme,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0
                                        ? t("creditTransfer:noTransfer")
                                        : null })),
                            } }))))),
        popupInfo && selectedReq && (React.createElement(InvestmentActionModel, { investment: selectedReq, onCancel: function () {
                setModalVisible(false);
                setSelectedReq(undefined);
            }, actionBtnText: popupInfo.actionBtnText, onFinish: popupInfo === null || popupInfo === void 0 ? void 0 : popupInfo.okAction, subText: "", openModal: modalVisible, icon: popupInfo.icon, title: popupInfo.title, type: popupInfo.type, remarkRequired: popupInfo.remarkRequired, translator: translator }))));
};

var css_248z$k = ".ndc-management .ant-checkbox-checked .ant-checkbox-input[value='Pending'] + .ant-checkbox-inner {\n  background-color: rgba(118, 195, 39, 0.6);\n  border: none; }\n\n.ndc-management .ant-checkbox-checked .ant-checkbox-input[value='Approved'] + .ant-checkbox-inner {\n  background-color: #008f39;\n  border: none; }\n";
styleInject(css_248z$k);

var NdcActionManagementComponent = function (props) {
    var t = props.t, onNavigateToNdcManagementView = props.onNavigateToNdcManagementView, onNavigateToProgrammeManagementView = props.onNavigateToProgrammeManagementView;
    var _a = React.useState(true), checkAll = _a[0], setCheckAll = _a[1];
    var _b = React.useState([]), tableData = _b[0], setTableData = _b[1];
    var _c = React.useState(), totalProgramme = _c[0], setTotalProgramme = _c[1];
    var _d = React.useState(), statusFilter = _d[0], setStatusFilter = _d[1];
    var _e = React.useState(), search = _e[0], setSearch = _e[1];
    var _f = React.useState(), searchText = _f[0], setSearchText = _f[1];
    var _g = React.useState(false), loading = _g[0], setLoading = _g[1];
    var _h = React.useState(1), currentPage = _h[0], setCurrentPage = _h[1];
    var _j = React.useState(10), pageSize = _j[0], setPageSize = _j[1];
    var _k = React.useState(), sortOrder = _k[0], setSortOrder = _k[1];
    var _l = React.useState(), sortField = _l[0], setSortField = _l[1];
    var _m = React.useState(), dataFilter = _m[0]; _m[1];
    var _o = React.useState([]), ministrySectoralScope = _o[0], setMinistrySectoralScope = _o[1];
    var _p = React.useState(false), ministryLevelFilter = _p[0], setMinistryLevelFilter = _p[1];
    var _q = React.useState(), dataQuery = _q[0], setDataQuery = _q[1];
    var Search = antd.Input.Search;
    var post = useConnection().post;
    var userInfoState = useUserContext().userInfoState;
    var statusOptions = Object.keys(exports.NdcActionStatus).map(function (k, index) { return ({
        label: addSpaces(Object.values(exports.NdcActionStatus)[index]),
        value: Object.values(exports.NdcActionStatus)[index],
    }); });
    var _r = React.useState(statusOptions.map(function (e) { return e.value; })), selectedStatus = _r[0], setSelectedStatus = _r[1];
    var getNdcActionNames = function (action) {
        switch (action) {
            case exports.NdcActionTypes.Adaptation:
                return t("ndcAction:adaptation");
            case exports.NdcActionTypes.Mitigation:
                return t("ndcAction:mitigation");
            case exports.NdcActionTypes.CrossCutting:
                return t("ndcAction:crossCutting");
            case exports.NdcActionTypes.Enablement:
                return t("ndcAction:enablement");
            default:
                return "";
        }
    };
    var getCompanyLogos = function (companyId, itemObj) {
        if (companyId && itemObj.company.length > 0) {
            var selectedCompany = itemObj.company.find(function (c) { return c.companyId === parseInt(companyId); });
            if (selectedCompany) {
                return (React.createElement(antd.Tooltip, { title: selectedCompany.name, color: TooltipColor, key: TooltipColor },
                    React.createElement("div", null,
                        React.createElement(ProfileIcon, { icon: selectedCompany.logo, bg: getCompanyBgColor(selectedCompany.companyRole), name: selectedCompany.name }))));
            }
            else {
                return React.createElement("div", null);
            }
        }
    };
    var actionMenu = function (record) {
        return (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                {
                    text: t("ndcAction:view"),
                    icon: React.createElement(Icon__namespace.InfoCircle, null),
                    click: function () {
                        onNavigateToNdcManagementView(record);
                    },
                },
            ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                React.createElement(antd.Typography.Text, { className: "action-icon color-primary" }, item.icon),
                React.createElement("span", null, item.text))); } }));
    };
    var columns = [
        {
            title: t("ndcAction:ndcColumnsActionId"),
            dataIndex: "id",
            key: "id",
            align: "left",
            sorter: true,
            render: function (item) {
                return React.createElement("span", { className: "clickable" }, item);
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        onNavigateToNdcManagementView(record);
                    },
                };
            },
        },
        {
            title: t("ndcAction:ndcColumnsDate"),
            key: "createdTime",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, luxon.DateTime.fromMillis(parseInt(itemObj.createdTime)).toFormat("dd LLLL yyyy")));
            },
        },
        {
            title: t("ndcAction:ndcColumnsNdcAction"),
            dataIndex: "action",
            key: "action",
            sorter: true,
            align: "left",
            render: function (item) {
                return getNdcActionNames(item);
            },
        },
        {
            title: t("ndcAction:ndcColumnsProgrammeName"),
            dataIndex: "programmeName",
            key: "programmeName",
            sorter: true,
            align: "left",
            render: function (item) {
                return React.createElement("span", { className: "clickable" }, item);
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        onNavigateToProgrammeManagementView(record.programmeId);
                    },
                };
            },
        },
        {
            title: t("ndcAction:ndcColumnsSector"),
            dataIndex: "sector",
            key: "sector",
            align: "left",
            sorter: true,
        },
        {
            title: t("ndcAction:ndcColumnsOwners"),
            key: "companyId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.companyId &&
                    itemObj.companyId.map(function (v, i) {
                        return getCompanyLogos(v, itemObj);
                    })));
            },
        },
        {
            title: t("ndcAction:ndcColumnsStatus"),
            dataIndex: "status",
            align: "center",
            key: "status",
            sorter: true,
            render: function (item, Obj) {
                return (React.createElement(antd.Tooltip, { title: Obj.status, color: TooltipColor, key: TooltipColor },
                    React.createElement(antd.Tag, { className: "clickable", color: getNdcStatusTagType(Obj.status) }, addSpaces(Obj.status))));
            },
        },
        {
            title: t(""),
            width: 6,
            align: "right",
            key: "action",
            render: function (_, record) {
                var menu = actionMenu(record);
                return menu && (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } })));
            },
        },
    ];
    var getNdcActionData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var filter, interFilterOr, sort, filterBy, response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    filter = [];
                    if (statusFilter) {
                        filter.push(statusFilter);
                    }
                    if (dataFilter) {
                        filter.push(dataFilter);
                    }
                    if (search && search !== "") {
                        interFilterOr = [
                            {
                                key: "programmeName",
                                operation: "like",
                                value: "%".concat(search, "%"),
                            },
                        ];
                        if (!isNaN(Number(search))) {
                            interFilterOr.push({
                                key: "id",
                                operation: "like",
                                value: "%".concat(search, "%"),
                            });
                        }
                        filter.push({
                            value: {
                                page: currentPage,
                                size: pageSize,
                                filterOr: interFilterOr,
                            },
                        });
                    }
                    if (sortOrder && sortField) {
                        sort = {
                            key: sortField,
                            order: sortOrder,
                            nullFirst: false,
                        };
                    }
                    else {
                        sort = {
                            key: "txTime",
                            order: "DESC",
                        };
                    }
                    if (ministryLevelFilter) {
                        filterBy = {
                            key: "ministryLevel",
                            value: ministrySectoralScope,
                        };
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/queryNdcActions", {
                            page: currentPage,
                            size: pageSize,
                            filterAnd: filter,
                            sort: sort,
                            filterBy: filterBy,
                        })];
                case 2:
                    response = _a.sent();
                    setTableData(response.data);
                    setTotalProgramme(response.response.data.total);
                    setDataQuery({
                        filterAnd: filter,
                        filterBy: filterBy,
                        sort: sort,
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting ndc actions", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var getUserDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_2;
        var _a, _b, _c, _d, _e, _f;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    setLoading(true);
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id,
                                },
                            ],
                        })];
                case 2:
                    response = _g.sent();
                    if (response && response.data) {
                        if (((_a = response === null || response === void 0 ? void 0 : response.data[0]) === null || _a === void 0 ? void 0 : _a.companyRole) === exports.CompanyRole.MINISTRY &&
                            ((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.company) &&
                            ((_d = (_c = response === null || response === void 0 ? void 0 : response.data[0]) === null || _c === void 0 ? void 0 : _c.company) === null || _d === void 0 ? void 0 : _d.sectoralScope)) {
                            setMinistrySectoralScope((_f = (_e = response === null || response === void 0 ? void 0 : response.data[0]) === null || _e === void 0 ? void 0 : _e.company) === null || _f === void 0 ? void 0 : _f.sectoralScope);
                        }
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_2 = _g.sent();
                    console.log("Error in getting users", error_2);
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var downloadNdcData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, url, a, error_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/queryNdcActions/download", {
                            filterAnd: dataQuery.filterAnd,
                            filterBy: dataQuery.filterBy,
                            sort: dataQuery.sort,
                        })];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        url = response.data.url;
                        a = document.createElement('a');
                        a.href = url;
                        a.download = response.data.csvFile; // Specify the filename for the downloaded file
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a); // Clean up the created <a> element
                        window.URL.revokeObjectURL(url);
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_3 = _a.sent();
                    console.log("Error in exporting NDC Actions", error_3);
                    antd.message.open({
                        type: "error",
                        content: error_3.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            getUserDetails();
        }
    }, []);
    React.useEffect(function () {
        if (currentPage !== 1) {
            setCurrentPage(1);
        }
        else {
            getNdcActionData();
        }
    }, [statusFilter, dataFilter]);
    React.useEffect(function () {
        getNdcActionData();
    }, [
        currentPage,
        pageSize,
        sortField,
        sortOrder,
        search,
        ministryLevelFilter,
    ]);
    var onStatusQuery = function (checkedValues) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            if (checkedValues !== selectedStatus) {
                setSelectedStatus(checkedValues);
            }
            if (checkedValues.length === 0) {
                setTableData([]);
                setTotalProgramme(0);
                return [2 /*return*/];
            }
            setStatusFilter({
                key: "status",
                operation: "in",
                value: checkedValues,
            });
            return [2 /*return*/];
        });
    }); };
    var onCheckAllChange = function (e) {
        var nw = e.target.checked ? statusOptions.map(function (el) { return el.value; }) : [];
        setSelectedStatus(nw);
        setCheckAll(e.target.checked);
        onStatusQuery(nw);
    };
    var onSearch = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setSearch(searchText);
            return [2 /*return*/];
        });
    }); };
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var handleTableChange = function (page, sorter) {
        setSortOrder(sorter.order === "ascend"
            ? "ASC"
            : sorter.order === "descend"
                ? "DESC"
                : undefined);
        setSortField(sorter.columnKey);
    };
    return (React.createElement("div", { className: "ndc-management content-container" },
        React.createElement("div", { className: "title-bar" },
            React.createElement(antd.Row, { justify: "space-between", align: "middle" },
                React.createElement(antd.Col, { span: 20 },
                    React.createElement("div", { className: "body-title" }, t("ndcAction:NdcTitle"))))),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: { span: 15 }, md: { span: 14 } },
                    React.createElement("div", { className: "action-bar" },
                        React.createElement(antd.Checkbox, { className: "all-check", onChange: onCheckAllChange, checked: checkAll, defaultChecked: true }, "All"),
                        React.createElement(antd.Checkbox.Group, { options: statusOptions, defaultValue: statusOptions.map(function (e) { return e.value; }), value: selectedStatus, onChange: onStatusQuery }))),
                React.createElement(antd.Col, { lg: { span: 9 }, md: { span: 10 } },
                    React.createElement("div", { className: "filter-section" },
                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY && (React.createElement("div", { className: "search-filter" },
                            React.createElement(antd.Checkbox, { className: "label", onChange: function (v) {
                                    if (userInfoState.companyRole === exports.CompanyRole.MINISTRY) {
                                        if (v.target.checked) {
                                            setMinistryLevelFilter(true);
                                        }
                                        else {
                                            setMinistryLevelFilter(false);
                                        }
                                    }
                                } }, t("ndcAction:ministryLevel")))),
                        React.createElement("div", { className: "search-bar" },
                            React.createElement(Search, { onPressEnter: onSearch, placeholder: "".concat(t("ndcAction:searchByProgrammeName")), allowClear: true, onChange: function (e) {
                                    return e.target.value === ""
                                        ? setSearch(e.target.value)
                                        : setSearchText(e.target.value);
                                }, onSearch: setSearch, style: { width: 265 } })),
                        React.createElement("div", { className: "download-data-btn" },
                            React.createElement("a", { onClick: downloadNdcData },
                                React.createElement(icons.DownloadOutlined, { style: {
                                        color: "rgba(58, 53, 65, 0.3)",
                                        fontSize: "20px",
                                    } })))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "programmeManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalProgramme,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0
                                        ? t("ndcAction:noNdcActions")
                                        : null })),
                            } })))))));
};

var css_248z$j = ".ndc-action-details-container Input {\n  height: 40px; }\n\n.ndc-action-details-container .in-nap-col {\n  width: 100%; }\n\n.ndc-action-details-container .included-nap-col {\n  width: 40%;\n  display: flex; }\n  .ndc-action-details-container .included-nap-col .in-nap-row {\n    width: 100%;\n    align-items: center; }\n    .ndc-action-details-container .included-nap-col .in-nap-row .included-label {\n      display: flex;\n      flex-direction: row;\n      width: fit-content;\n      align-items: center;\n      justify-content: space-between;\n      font-size: 14px;\n      color: rgba(58, 53, 65, 0.5); }\n      .ndc-action-details-container .included-nap-col .in-nap-row .included-label .info-container {\n        display: flex;\n        flex-direction: row;\n        width: 10%;\n        height: 30px;\n        align-items: center;\n        justify-content: flex-end; }\n    .ndc-action-details-container .included-nap-col .in-nap-row .included-val {\n      width: 100%; }\n      .ndc-action-details-container .included-nap-col .in-nap-row .included-val .yes-no-radio-container {\n        width: 43%;\n        text-align: center; }\n        .ndc-action-details-container .included-nap-col .in-nap-row .included-val .yes-no-radio-container .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n          color: #ffffff !important;\n          border-color: #9155fd;\n          box-shadow: none;\n          border-radius: 4px; }\n      .ndc-action-details-container .included-nap-col .in-nap-row .included-val .ant-radio-button-wrapper::before {\n        background-color: transparent;\n        border-radius: 4px; }\n      .ndc-action-details-container .included-nap-col .in-nap-row .included-val .ant-radio-button-wrapper {\n        border: 1px solid #d9d9d9;\n        border-radius: 4px;\n        color: #8c8c8c; }\n      .ndc-action-details-container .included-nap-col .in-nap-row .included-val .anticon {\n        margin-right: 0.5rem; }\n      .ndc-action-details-container .included-nap-col .in-nap-row .included-val .yes-no-radio {\n        width: 100%; }\n        .ndc-action-details-container .included-nap-col .in-nap-row .included-val .yes-no-radio .ant-radio-button-checked {\n          background: #9155fd;\n          color: #ffffff; }\n\n.ndc-action-details-container .row-custom-1 {\n  display: flex;\n  margin-bottom: 2px; }\n\n.ndc-action-details-container .row-custom {\n  display: flex;\n  width: 200px;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem; }\n  .ndc-action-details-container .row-custom .ant-input-number {\n    height: 35px;\n    display: flex;\n    align-items: center;\n    justify-content: center; }\n\n.ndc-action-details-container .enablement-type-item {\n  display: flex;\n  width: 100%; }\n  .ndc-action-details-container .enablement-type-item .ant-form-item-row {\n    display: flex;\n    width: 100%; }\n  .ndc-action-details-container .enablement-type-item .ant-checkbox-wrapper {\n    color: rgba(58, 53, 65, 0.5);\n    font-size: 14px; }\n  .ndc-action-details-container .enablement-type-item .type-checkbox-grp {\n    display: flex;\n    width: 100%; }\n    .ndc-action-details-container .enablement-type-item .type-checkbox-grp .grp-row {\n      display: flex;\n      width: 100%; }\n\n.ndc-action-details-container .ant-select-selection-item {\n  color: #949599 !important; }\n\n.ndc-action-details-container .ant-select-dropdown {\n  font-family: \"Inter\";\n  color: #949599 !important; }\n\n.ndc-action-details-container .ant-select-selector {\n  color: #949599 !important; }\n\n.ndc-action-details-container .ant-select-disabled .ant-select-arrow {\n  display: none; }\n\n.ndc-action-details-container .label-heading {\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 22px;\n  color: rgba(58, 53, 65, 0.5);\n  margin-bottom: 5px; }\n\n.ndc-action-details-container .steps-actions {\n  display: flex;\n  flex-direction: row-reverse; }\n  .ndc-action-details-container .steps-actions .mg-left-1 {\n    margin-left: 1rem; }\n\n.ndc-action-details-container .upload-doc {\n  height: 40px !important;\n  margin-right: 240px; }\n\n.ndc-action-details-container .ant-upload-list-item {\n  border-radius: 5px !important;\n  height: 40px !important; }\n\n.ndc-action-details-container .design-upload-section {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: start;\n  width: 100%; }\n  .ndc-action-details-container .design-upload-section .icon-color {\n    color: #008f39 !important; }\n  .ndc-action-details-container .design-upload-section .ant-upload {\n    width: 20%; }\n  .ndc-action-details-container .design-upload-section .ant-upload-list {\n    align-items: center;\n    justify-content: center;\n    width: 75%; }\n    .ndc-action-details-container .design-upload-section .ant-upload-list .ant-upload-list-item {\n      margin-top: 0; }\n";
styleInject(css_248z$j);

var EnablementTypes;
(function (EnablementTypes) {
    EnablementTypes["CapacityBuilding"] = "Capacity Building";
    EnablementTypes["TechnologyTransfer"] = "Technology Transfer";
    EnablementTypes["Financial"] = "Financial";
    EnablementTypes["EnhancedTransparency"] = "Enhanced Transparency";
})(EnablementTypes || (EnablementTypes = {}));
var enablementTypesAndValues = [
    { type: EnablementTypes.CapacityBuilding.valueOf(), col: 4 },
    {
        type: EnablementTypes.TechnologyTransfer.valueOf(),
        col: 5,
    },
    { type: EnablementTypes.Financial.valueOf(), col: 4 },
    { type: EnablementTypes.EnhancedTransparency.valueOf(), col: 5 },
];

var NdcActionDetails = function (props) {
    var isBackBtnVisible = props.isBackBtnVisible, onFormSubmit = props.onFormSubmit, ndcActionDetails = props.ndcActionDetails, translator = props.translator, programmeDetails = props.programmeDetails, onClickedBackBtn = props.onClickedBackBtn;
    translator.setDefaultNamespace("ndcAction");
    var t = translator.t;
    var _a = React.useState(), ndcActionType = _a[0], setNdcActionType = _a[1];
    var _b = React.useState(), methodology = _b[0], setMethodology = _b[1];
    var _c = React.useState(), mitigationType = _c[0], setmitigationType = _c[1];
    var _d = React.useState(""), mitigationSubType = _d[0], setMitigationSubType = _d[1];
    var _e = React.useState(""), sector = _e[0], setSector = _e[1];
    var _f = React.useState(ndcActionTypeList), ndcActionTypeListFiltered = _f[0]; _f[1];
    var _g = React.useState([]), checkedOptionsGhgReduced = _g[0], setCheckedOptionsGhgReduced = _g[1];
    var _h = React.useState([]), checkedOptionsGhgAvoided = _h[0], setCheckedOptionsGhgAvoided = _h[1];
    var _j = React.useState(), inputNumberValueGhgAvoidedGas = _j[0], setInputNumberValueGhgAvoidedGas = _j[1];
    var _k = React.useState(), inputNumberValueGhgReducedGas = _k[0], setInputNumberValueGhgReducedGas = _k[1];
    var _l = React.useState(), includedInNAP = _l[0], setIncludedInNAP = _l[1];
    var form = antd.Form.useForm()[0];
    var maximumImageSize = process.env.REACT_APP_MAXIMUM_FILE_SIZE
        ? parseInt(process.env.REACT_APP_MAXIMUM_FILE_SIZE)
        : 5000000;
    //changing value to N2O. Previously it was N20(N-Two-Zero)
    var ghgEmissionsGas = ["CO2", "CH4", "N2O", "HFCs", "PFCs", "SF6"];
    React.useEffect(function () {
        if (programmeDetails) {
            setSector(programmeDetails === null || programmeDetails === void 0 ? void 0 : programmeDetails.sector);
        }
    }, [programmeDetails]);
    React.useEffect(function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
        if (ndcActionDetails) {
            if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action) {
                setNdcActionType(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action);
            }
            if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation) {
                setmitigationType(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation);
            }
            if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) {
                setMitigationSubType(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation);
            }
            if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.includedInNAP) {
                setIncludedInNAP(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.includedInNAP);
            }
            if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.inputNumberValueGhgAvoidedGas) {
                setInputNumberValueGhgAvoidedGas(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.inputNumberValueGhgAvoidedGas);
            }
            if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.inputNumberValueGhgReducedGas) {
                setInputNumberValueGhgReducedGas(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.inputNumberValueGhgReducedGas);
            }
            form.setFieldsValue({
                ndcActionType: ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action,
                mitigationType: ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation,
                mitigationSubType: ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation,
                energyGeneration: (_a = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.solarProperties) === null || _a === void 0 ? void 0 : _a.energyGeneration,
                energyGenerationUnit: (_b = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.solarProperties) === null || _b === void 0 ? void 0 : _b.energyGenerationUnit,
                consumerGroup: (_c = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.solarProperties) === null || _c === void 0 ? void 0 : _c.consumerGroup,
                eligibleLandArea: (_d = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.agricultureProperties) === null || _d === void 0 ? void 0 : _d.landArea,
                landAreaUnit: (_e = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.agricultureProperties) === null || _e === void 0 ? void 0 : _e.landAreaUnit,
                implementingAgency: (_f = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) === null || _f === void 0 ? void 0 : _f.implementingAgency,
                nationalPlanObjectives: (_g = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) === null || _g === void 0 ? void 0 : _g.nationalPlanObjectives,
                nationalPlanCoverage: (_h = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) === null || _h === void 0 ? void 0 : _h.nationalPlanCoverage,
                EnablementTitle: (_j = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.enablementProperties) === null || _j === void 0 ? void 0 : _j.title,
                EnablementType: (_k = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.enablementProperties) === null || _k === void 0 ? void 0 : _k.type,
                EnablementReport: ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.enablementReportData,
                userEstimatedCredits: (_l = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.ndcFinancing) === null || _l === void 0 ? void 0 : _l.userEstimatedCredits,
                methodologyEstimatedCredits: 0,
            });
        }
        else {
            form.setFieldsValue({
                methodologyEstimatedCredits: 0,
            });
            handleNdcActionChange(exports.NdcActionTypes.Mitigation.valueOf());
            form.setFieldsValue({
                ndcActionType: exports.NdcActionTypes.Mitigation
            });
        }
    }, []);
    var implementingAgencyList = [
        "Ministry of Agriculture, Water and Forestry (MAWF)",
        "Ministry of Defence (MoD)",
        "Ministry of Education, Arts and Culture (MoE)",
        "Ministry of Environment, Forestry and Tourism (MEFT)",
        "Ministry of Finance (MoF)",
        "Ministry of Fisheries and Marine Resources (MFMR)",
        "Ministry of Health and Social Services (MHSS)",
        "Ministry of Higher Education, Training and Innovation (MHETI)",
        "Ministry of Home Affairs, Immigration, Safety and Security (MHAISS)",
        "Ministry of Industrialisation and Trade (MIT)",
        "Ministry of International Relations and Cooperation (MIRCo)",
        "Ministry of Information and Communication Technology (MICT)",
        "Ministry of Justice (MoJ)",
        "Ministry of Labour, Industrial Relations and Employment Creation (MOL)",
        "Ministry of Mines and Energy (MME)",
        "Ministry of Public Enterprises (MPE)",
        "Ministry of Sport, Youth and National Service (MSYNS)",
        "Ministry of Works and Transport (MoW)",
        "Ministry of Urban and Rural Development (MURD)",
    ];
    var nationalPlanObjectives = [
        " Enhance value addition in key growth opportunities",
        "Strengthen the private sector to create jobs",
        "Consolidate and increase the stock and quality of productive infrastructure",
        "Enhance the productivity and social wellbeing of the population",
        "Strengthen the role of the state in guiding and facilitating development",
    ];
    var nationalPlanCoverageList = [
        "Agro-Industrialization",
        "Mineral-based Industrialization",
        "Petroleum Development",
        "Tourism Development",
        "Water, Climate Change and ENR Management",
        "Private Sector Development",
        "Manufacturing",
        "Digital Transformation ",
        "Integrated Transport Infrastructure and Services",
        "Sustainable Energy Development",
        "Sustainable Urban and Housing Development",
        "Human Capital Development",
        "Community Mobilization and Mindset Change",
        "Innovation, Technology Development and Transfer",
        "Regional Development",
        "Governance and Security",
        "Public Sector Transformation",
        "Development Plan Implementation",
        "Climate Hazard ",
    ];
    var calculateMethodologyEstimatedCredits = function () {
        try {
            var creditRequest = {};
            var formValues = form.getFieldsValue();
            if (formValues.ndcActionType === exports.NdcActionTypes.Mitigation ||
                formValues.ndcActionType === exports.NdcActionTypes.CrossCutting) {
                if (formValues.mitigationType === exports.MitigationTypes.AGRICULTURE) {
                    if (formValues.mitigationSubType === exports.MitigationSubTypes.RICE_CROPS) {
                        creditRequest = new cjs.AgricultureCreationRequest();
                        creditRequest.landArea = formValues.eligibleLandArea;
                        creditRequest.landAreaUnit = formValues.landAreaUnit;
                        creditRequest.duration =
                            programmeDetails.endTime - programmeDetails.startTime;
                        creditRequest.durationUnit = "s";
                    }
                    else if (formValues.mitigationSubType === exports.MitigationSubTypes.SOIL_ENRICHMENT_BIOCHAR) {
                        creditRequest = new cjs.SoilEnrichmentCreationRequest();
                        creditRequest.weight = formValues.tonnesOnDryBasis;
                    }
                }
                else if (formValues.mitigationType === exports.MitigationTypes.SOLAR) {
                    if (formValues.mitigationSubType === exports.MitigationSubTypes.SOLAR_PHOTOVOLTAICS_PV) {
                        creditRequest = new cjs.SolarCreationRequest();
                        creditRequest.buildingType = formValues.consumerGroup;
                        creditRequest.energyGeneration = formValues.energyGeneration;
                        creditRequest.energyGenerationUnit = formValues.energyGenerationUnit;
                    }
                    else if (formValues.mitigationSubType === exports.MitigationSubTypes.SOLAR_WATER_PUMPING_OFF_GRID) {
                        creditRequest = new cjs.SolarWaterPumpingOffGridCreationRequest();
                        creditRequest.energyGeneration = formValues.energyGeneration;
                        creditRequest.energyGenerationUnit = formValues.energyGenerationUnit;
                    }
                    else if (formValues.mitigationSubType === exports.MitigationSubTypes.SOLAR_WATER_PUMPING_ON_GRID) {
                        creditRequest = new cjs.SolarWaterPumpingOnGridCreationRequest();
                        creditRequest.energyGeneration = formValues.energyGeneration;
                        creditRequest.energyGenerationUnit = formValues.energyGenerationUnit;
                    }
                }
                else if (formValues.mitigationType === exports.MitigationTypes.EE_HOUSEHOLDS
                    && formValues.mitigationSubType === exports.MitigationSubTypes.STOVES_HOUSES_IN_NAMIBIA) {
                    creditRequest = new cjs.StovesHousesNamibiaCreationRequest();
                    creditRequest.numberOfDays = formValues.numberOfDays;
                    creditRequest.numberOfPeopleInHousehold = formValues.numberOfPeople;
                }
            }
            var creditResponse = cjs.calculateCredit(creditRequest);
            if (!isNaN(creditResponse)) {
                form.setFieldsValue({
                    methodologyEstimatedCredits: addCommSepRound$1(creditResponse),
                });
            }
            else {
                form.setFieldsValue({
                    methodologyEstimatedCredits: 0,
                });
            }
        }
        catch (exception) {
            form.setFieldsValue({
                methodologyEstimatedCredits: 0,
            });
        }
    };
    var handleNdcActionChange = function (selectedNdcType) {
        setNdcActionType(selectedNdcType);
        calculateMethodologyEstimatedCredits();
    };
    var handleMitigationTypeChange = function (selectedMitigationType) {
        setmitigationType(selectedMitigationType);
        form.setFieldsValue({
            mitigationSubType: "",
            tonnesOnDryBasis: "",
            numberOfPeople: "",
            numberOfDays: "",
            landAreaUnit: "",
            eligibleLandArea: "",
            consumerGroup: "",
            energyGenerationUnit: "",
            energyGeneration: "",
            methodologyEstimatedCredits: 0,
        });
        calculateMethodologyEstimatedCredits();
    };
    var handleMitigationSubTypeChange = function (selectedSubMitigationType) {
        setMitigationSubType(selectedSubMitigationType);
        form.setFieldsValue({
            tonnesOnDryBasis: "",
            numberOfPeople: "",
            numberOfDays: "",
            landAreaUnit: "",
            eligibleLandArea: "",
            consumerGroup: "",
            energyGenerationUnit: "",
            energyGeneration: "",
            methodologyEstimatedCredits: 0,
        });
    };
    var handleMethodologyChange = function (selectedMethodology) {
        setMethodology(selectedMethodology);
    };
    var onNdcActionDetailsFormSubmit = function (ndcActionFormvalues) { return __awaiter(void 0, void 0, void 0, function () {
        var ndcActionDetailObj, enablementReport;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    ndcActionDetailObj = {};
                    ndcActionDetailObj.action = ndcActionFormvalues.ndcActionType;
                    if (ndcActionFormvalues.ndcActionType === exports.NdcActionTypes.Mitigation ||
                        ndcActionFormvalues.ndcActionType === exports.NdcActionTypes.CrossCutting) {
                        ndcActionDetailObj.methodology = ndcActionFormvalues.methodology;
                        ndcActionDetailObj.typeOfMitigation = ndcActionFormvalues.mitigationType;
                        ndcActionDetailObj.subTypeOfMitigation = ndcActionFormvalues.mitigationSubType;
                        if (ndcActionFormvalues.mitigationType === exports.MitigationTypes.AGRICULTURE
                            && ndcActionFormvalues.mitigationSubType === exports.MitigationSubTypes.RICE_CROPS) {
                            ndcActionDetailObj.agricultureProperties = {
                                landArea: ndcActionFormvalues.eligibleLandArea
                                    ? ndcActionFormvalues.eligibleLandArea
                                    : 0,
                                landAreaUnit: ndcActionFormvalues.landAreaUnit,
                            };
                            ndcActionDetailObj.creditCalculationProperties = {
                                typeOfMitigation: ndcActionFormvalues.mitigationType,
                                subTypeOfMitigation: ndcActionFormvalues.mitigationSubType,
                                landArea: ndcActionFormvalues.eligibleLandArea
                                    ? ndcActionFormvalues.eligibleLandArea
                                    : 0,
                                landAreaUnit: ndcActionFormvalues.landAreaUnit,
                            };
                        }
                        else if (ndcActionFormvalues.mitigationType === exports.MitigationTypes.SOLAR
                            && ndcActionFormvalues.mitigationSubType === exports.MitigationSubTypes.SOLAR_PHOTOVOLTAICS_PV) {
                            ndcActionDetailObj.solarProperties = {
                                energyGeneration: ndcActionFormvalues.energyGeneration
                                    ? ndcActionFormvalues.energyGeneration
                                    : 0,
                                energyGenerationUnit: ndcActionFormvalues.energyGenerationUnit,
                                consumerGroup: ndcActionFormvalues.consumerGroup,
                            };
                            ndcActionDetailObj.creditCalculationProperties = {
                                typeOfMitigation: ndcActionFormvalues.mitigationType,
                                subTypeOfMitigation: ndcActionFormvalues.mitigationSubType,
                                energyGeneration: ndcActionFormvalues.energyGeneration
                                    ? ndcActionFormvalues.energyGeneration
                                    : 0,
                                energyGenerationUnit: ndcActionFormvalues.energyGenerationUnit,
                                consumerGroup: ndcActionFormvalues.consumerGroup,
                            };
                        }
                        else if (ndcActionFormvalues.mitigationType === exports.MitigationTypes.SOLAR
                            && ndcActionFormvalues.mitigationSubType === exports.MitigationSubTypes.SOLAR_WATER_PUMPING_OFF_GRID) {
                            ndcActionDetailObj.creditCalculationProperties = {
                                typeOfMitigation: ndcActionFormvalues.mitigationType,
                                subTypeOfMitigation: ndcActionFormvalues.mitigationSubType,
                                energyGeneration: ndcActionFormvalues.energyGeneration
                                    ? ndcActionFormvalues.energyGeneration
                                    : 0,
                                energyGenerationUnit: ndcActionFormvalues.energyGenerationUnit,
                            };
                        }
                        else if (ndcActionFormvalues.mitigationType === exports.MitigationTypes.SOLAR
                            && ndcActionFormvalues.mitigationSubType === exports.MitigationSubTypes.SOLAR_WATER_PUMPING_ON_GRID) {
                            ndcActionDetailObj.creditCalculationProperties = {
                                typeOfMitigation: ndcActionFormvalues.mitigationType,
                                subTypeOfMitigation: ndcActionFormvalues.mitigationSubType,
                                energyGeneration: ndcActionFormvalues.energyGeneration
                                    ? ndcActionFormvalues.energyGeneration
                                    : 0,
                                energyGenerationUnit: ndcActionFormvalues.energyGenerationUnit,
                            };
                        }
                        else if (ndcActionFormvalues.mitigationType === exports.MitigationTypes.EE_HOUSEHOLDS
                            && ndcActionFormvalues.mitigationSubType === exports.MitigationSubTypes.STOVES_HOUSES_IN_NAMIBIA) {
                            ndcActionDetailObj.creditCalculationProperties = {
                                typeOfMitigation: ndcActionFormvalues.mitigationType,
                                subTypeOfMitigation: ndcActionFormvalues.mitigationSubType,
                                numberOfDays: ndcActionFormvalues.numberOfDays,
                                numberOfPeopleInHousehold: ndcActionFormvalues.numberOfPeople,
                            };
                        }
                        else if (ndcActionFormvalues.mitigationType === exports.MitigationTypes.AGRICULTURE
                            && ndcActionFormvalues.mitigationSubType === exports.MitigationSubTypes.SOIL_ENRICHMENT_BIOCHAR) {
                            ndcActionDetailObj.creditCalculationProperties = {
                                typeOfMitigation: ndcActionFormvalues.mitigationType,
                                subTypeOfMitigation: ndcActionFormvalues.mitigationSubType,
                                weight: ndcActionFormvalues.tonnesOnDryBasis,
                            };
                        }
                        if (ndcActionFormvalues.userEstimatedCredits > programmeDetails.creditEst) {
                            antd.message.open({
                                type: "error",
                                content: t("userEstimatedCreditsInvalid"),
                                duration: 4,
                                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                            });
                            return [2 /*return*/];
                        }
                    }
                    if (ndcActionFormvalues.ndcActionType === exports.NdcActionTypes.Adaptation ||
                        ndcActionFormvalues.ndcActionType === exports.NdcActionTypes.CrossCutting) {
                        ndcActionDetailObj.adaptationProperties = {
                            implementingAgency: ndcActionFormvalues.implementingAgency,
                            nationalPlanObjectives: ndcActionFormvalues.nationalPlanObjectives,
                            nationalPlanCoverage: ndcActionFormvalues.nationalPlanCoverage,
                        };
                        if (includedInNAP === true || includedInNAP === false) {
                            ndcActionDetailObj.adaptationProperties.includedInNAP = includedInNAP;
                        }
                        if (inputNumberValueGhgAvoidedGas !== null ||
                            inputNumberValueGhgAvoidedGas !== undefined) {
                            ndcActionDetailObj.adaptationProperties.ghgEmissionsAvoided =
                                inputNumberValueGhgAvoidedGas;
                        }
                        if (inputNumberValueGhgReducedGas !== null ||
                            inputNumberValueGhgReducedGas !== undefined) {
                            ndcActionDetailObj.adaptationProperties.ghgEmissionsReduced =
                                inputNumberValueGhgReducedGas;
                        }
                    }
                    if (!(ndcActionFormvalues.ndcActionType === exports.NdcActionTypes.Enablement)) return [3 /*break*/, 3];
                    ndcActionDetailObj.enablementProperties = {
                        title: ndcActionFormvalues.EnablementTitle,
                    };
                    if (ndcActionFormvalues.EnablementType &&
                        ndcActionFormvalues.EnablementType.length > 0) {
                        ndcActionDetailObj.enablementProperties.type =
                            ndcActionFormvalues.EnablementType;
                    }
                    if (!(ndcActionFormvalues.EnablementReport &&
                        ndcActionFormvalues.EnablementReport.length > 0)) return [3 /*break*/, 2];
                    return [4 /*yield*/, getBase64((_a = ndcActionFormvalues.EnablementReport[0]) === null || _a === void 0 ? void 0 : _a.originFileObj)];
                case 1:
                    enablementReport = _b.sent();
                    ndcActionDetailObj.enablementProperties.report = enablementReport;
                    _b.label = 2;
                case 2:
                    ndcActionDetailObj.enablementReportData =
                        ndcActionFormvalues.EnablementReport;
                    _b.label = 3;
                case 3:
                    ndcActionDetailObj.ndcFinancing = {
                        userEstimatedCredits: ndcActionFormvalues.userEstimatedCredits
                            ? ndcActionFormvalues.userEstimatedCredits
                            : 0,
                        systemEstimatedCredits: Number(ndcActionFormvalues.methodologyEstimatedCredits),
                    };
                    onFormSubmit(ndcActionDetailObj);
                    return [2 /*return*/];
            }
        });
    }); };
    var normFile = function (e) {
        if (Array.isArray(e)) {
            return e;
        }
        return e === null || e === void 0 ? void 0 : e.fileList;
    };
    var onClickIncludedInNAPScope = function (value) {
        if (value === includedInNAP) {
            setIncludedInNAP(undefined);
        }
        else {
            setIncludedInNAP(value);
        }
    };
    var onInCludedNAPChange = function (event) {
        var _a, _b;
        if (((_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.value) === "inNAP") {
            setIncludedInNAP(true);
        }
        else if (((_b = event === null || event === void 0 ? void 0 : event.target) === null || _b === void 0 ? void 0 : _b.value) === "notInNAP") {
            setIncludedInNAP(false);
        }
    };
    return (React.createElement("div", { className: "ndc-action-details-container" },
        React.createElement(antd.Form, { name: "ndcActionDetails", layout: "vertical", requiredMark: true, onFinish: onNdcActionDetailsFormSubmit, form: form },
            React.createElement(antd.Row, { justify: "start", align: "middle" },
                React.createElement(antd.Col, null,
                    React.createElement(antd.Form.Item, { label: t("ndcAction:ndcAction"), name: "ndcActionType", rules: [
                            {
                                required: true,
                                message: "".concat(t("ndcAction:ndcAction"), " ").concat(t("ndcAction:isRequired")),
                            },
                        ] },
                        React.createElement(antd.Select, { size: "large", onChange: handleNdcActionChange, style: {
                                width: "249px",
                                borderRadius: "4px",
                            }, dropdownStyle: { color: "red" }, options: ndcActionTypeListFiltered, disabled: true, defaultValue: exports.NdcActionTypes.Mitigation.valueOf() })))),
            ndcActionType === exports.NdcActionTypes.CrossCutting && (React.createElement(antd.Row, null,
                React.createElement("label", { className: "label-heading" }, t("ndcAction:mitigation")))),
            (ndcActionType === exports.NdcActionTypes.Mitigation ||
                ndcActionType === exports.NdcActionTypes.CrossCutting) && (React.createElement(React.Fragment, null,
                React.createElement(antd.Row, { justify: "start", align: "middle" },
                    React.createElement(antd.Col, null,
                        React.createElement(antd.Form.Item, { label: t("ndcAction:mitigationType"), name: "mitigationType", rules: [
                                {
                                    required: true,
                                    message: "".concat(t("ndcAction:mitigationType"), " ").concat(t("ndcAction:isRequired")),
                                },
                            ] },
                            React.createElement(antd.Select, { size: "large", onChange: handleMitigationTypeChange, style: {
                                    width: "249px",
                                    borderRadius: "4px",
                                }, options: (programmeDetails === null || programmeDetails === void 0 ? void 0 : programmeDetails.sector) === exports.Sector.Health ||
                                    (programmeDetails === null || programmeDetails === void 0 ? void 0 : programmeDetails.sector) === exports.Sector.Education ||
                                    (programmeDetails === null || programmeDetails === void 0 ? void 0 : programmeDetails.sector) === exports.Sector.Hospitality
                                    ? mitigationTypeList
                                    : sectorMitigationTypesListMapped[sector] }))),
                    (ndcActionType === exports.NdcActionTypes.Mitigation ||
                        ndcActionType === exports.NdcActionTypes.CrossCutting) &&
                        mitigationType && mitigationSubTypesListMapped[mitigationType] && (React.createElement(antd.Col, { style: { marginLeft: "38px" } },
                        React.createElement(antd.Form.Item, { label: t("ndcAction:mitigationSubType"), name: "mitigationSubType", rules: [
                                {
                                    required: true,
                                    message: "".concat(t("ndcAction:mitigationSubType"), " ").concat(t("ndcAction:isRequired")),
                                },
                            ] },
                            React.createElement(antd.Select, { size: "large", onChange: handleMitigationSubTypeChange, style: {
                                    width: "249px",
                                    borderRadius: "4px",
                                }, options: mitigationSubTypesListMapped[mitigationType], value: mitigationSubType }))))),
                React.createElement(antd.Row, { justify: "start", align: "middle" },
                    React.createElement(antd.Col, { span: 20 },
                        React.createElement(antd.Form.Item, { label: t("ndcAction:methodology"), name: "methodology", rules: [
                                {
                                    required: true,
                                    message: "".concat(t("ndcAction:methodology"), " ").concat(t("ndcAction:isRequired")),
                                },
                            ] },
                            React.createElement(antd.Select, { size: "large", onChange: handleMethodologyChange, style: {
                                    borderRadius: "4px",
                                }, value: methodology }, methodologyOptions.map(function (option) { return (React.createElement(antd.Select.Option, { key: option, value: option }, option)); }))))))),
            (ndcActionType === exports.NdcActionTypes.Mitigation ||
                ndcActionType === exports.NdcActionTypes.CrossCutting) &&
                mitigationType === exports.MitigationTypes.SOLAR &&
                (mitigationSubType === exports.MitigationSubTypes.SOLAR_PHOTOVOLTAICS_PV ||
                    mitigationSubType === exports.MitigationSubTypes.SOLAR_WATER_PUMPING_OFF_GRID ||
                    mitigationSubType === exports.MitigationSubTypes.SOLAR_WATER_PUMPING_ON_GRID) && (React.createElement(React.Fragment, null,
                React.createElement(antd.Row, { justify: "start", align: "middle" },
                    React.createElement(antd.Col, null,
                        React.createElement(antd.Form.Item, { label: t("ndcAction:energyGeneration"), rules: [
                                {
                                    required: true,
                                    message: "",
                                },
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (String(value).trim() === "" ||
                                                String(value).trim() === undefined ||
                                                value === null ||
                                                value === undefined) {
                                                throw new Error("".concat(t("ndcAction:energyGeneration"), " ").concat(t("ndcAction:isRequired")));
                                            }
                                            if (value < 0) {
                                                throw new Error("".concat(t("ndcAction:allowOnlyNumericValueAndDecimal")));
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ], name: "energyGeneration" },
                            React.createElement(antd.InputNumber, { style: { width: 442, paddingRight: 12 }, onChange: function (value) {
                                    var numericValue = Number(value); // Convert value to a number
                                    if (!isNaN(numericValue) && numericValue >= 0) {
                                        calculateMethodologyEstimatedCredits();
                                    }
                                } }))),
                    React.createElement(antd.Col, { style: { marginLeft: "38px" } },
                        React.createElement(antd.Form.Item, { label: t("ndcAction:energyGenerationUnit"), name: "energyGenerationUnit", rules: [
                                {
                                    required: true,
                                    message: "".concat(t("ndcAction:energyGenerationUnit"), " ").concat(t("ndcAction:isRequired")),
                                },
                            ] },
                            React.createElement(antd.Select, { size: "large", style: { width: 442 }, options: energyGenerationUnitList, onChange: calculateMethodologyEstimatedCredits })))),
                mitigationSubType === exports.MitigationSubTypes.SOLAR_PHOTOVOLTAICS_PV && (React.createElement(antd.Form.Item, { label: t("ndcAction:consumerGroup"), name: "consumerGroup", rules: [
                        {
                            required: true,
                            message: "".concat(t("ndcAction:consumerGroup"), " ").concat(t("ndcAction:isRequired")),
                        },
                    ] },
                    React.createElement(antd.Select, { size: "large", style: { width: 442 }, onChange: calculateMethodologyEstimatedCredits, options: consumerGroupList }))))),
            (ndcActionType === exports.NdcActionTypes.Mitigation ||
                ndcActionType === exports.NdcActionTypes.CrossCutting) &&
                mitigationType === exports.MitigationTypes.AGRICULTURE &&
                mitigationSubType === exports.MitigationSubTypes.RICE_CROPS && (React.createElement(antd.Row, { justify: "start", align: "middle" },
                React.createElement(antd.Col, null,
                    React.createElement(antd.Form.Item, { label: t("ndcAction:eligibleLandArea"), name: "eligibleLandArea", rules: [
                            {
                                required: true,
                                message: "",
                            },
                            {
                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                    return __generator(this, function (_a) {
                                        if (String(value).trim() === "" ||
                                            String(value).trim() === undefined ||
                                            value === null ||
                                            value === undefined) {
                                            throw new Error("".concat(t("ndcAction:eligibleLandArea"), " ").concat(t("ndcAction:isRequired")));
                                        }
                                        if (value < 0) {
                                            throw new Error("".concat(t("ndcAction:allowOnlyNumericValueAndDecimal")));
                                        }
                                        return [2 /*return*/];
                                    });
                                }); },
                            },
                        ] },
                        React.createElement(antd.InputNumber, { style: { width: 442, paddingRight: 12 }, onChange: function (value) {
                                var numericValue = Number(value); // Convert value to a number
                                if (!isNaN(numericValue) && numericValue >= 0) {
                                    calculateMethodologyEstimatedCredits();
                                }
                            } }))),
                React.createElement(antd.Col, { style: { marginLeft: "38px" } },
                    React.createElement(antd.Form.Item, { label: t("ndcAction:landAreaUnit"), name: "landAreaUnit", rules: [
                            {
                                required: true,
                                message: "".concat(t("ndcAction:landAreaUnit"), " ").concat(t("ndcAction:isRequired")),
                            },
                        ] },
                        React.createElement(antd.Select, { onChange: calculateMethodologyEstimatedCredits, size: "large", style: { width: 442 }, options: landAreaUnitList }))))),
            (ndcActionType === exports.NdcActionTypes.Mitigation ||
                ndcActionType === exports.NdcActionTypes.CrossCutting) &&
                mitigationType === exports.MitigationTypes.AGRICULTURE &&
                mitigationSubType === exports.MitigationSubTypes.SOIL_ENRICHMENT_BIOCHAR && (React.createElement(antd.Row, { justify: "start", align: "middle" },
                React.createElement(antd.Col, null,
                    React.createElement(antd.Form.Item, { label: t("ndcAction:tonnesOnDryBasis"), name: "tonnesOnDryBasis", rules: [
                            {
                                required: true,
                                message: "",
                            },
                            {
                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                    return __generator(this, function (_a) {
                                        if (String(value).trim() === "" ||
                                            String(value).trim() === undefined ||
                                            value === null ||
                                            value === undefined) {
                                            throw new Error("".concat(t("ndcAction:tonnesOnDryBasis"), " ").concat(t("ndcAction:isRequired")));
                                        }
                                        if (value < 1) {
                                            throw new Error("".concat(t("ndcAction:allowOnlyNumericValueAndDecimal")));
                                        }
                                        return [2 /*return*/];
                                    });
                                }); },
                            },
                        ] },
                        React.createElement(antd.InputNumber, { style: { width: 442, paddingRight: 12 }, onChange: function (value) {
                                var numericValue = Number(value); // Convert value to a number
                                if (!isNaN(numericValue) && numericValue >= 0) {
                                    calculateMethodologyEstimatedCredits();
                                }
                            } }))))),
            (ndcActionType === exports.NdcActionTypes.Mitigation ||
                ndcActionType === exports.NdcActionTypes.CrossCutting) &&
                mitigationType === exports.MitigationTypes.EE_HOUSEHOLDS &&
                mitigationSubType === exports.MitigationSubTypes.STOVES_HOUSES_IN_NAMIBIA && (React.createElement(React.Fragment, null,
                React.createElement(antd.Row, { justify: "start", align: "middle" },
                    React.createElement(antd.Col, null,
                        React.createElement(antd.Form.Item, { label: t("ndcAction:numberOfDays"), rules: [
                                {
                                    required: true,
                                    message: "",
                                },
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (String(value).trim() === "" ||
                                                String(value).trim() === undefined ||
                                                value === null ||
                                                value === undefined) {
                                                throw new Error("".concat(t("ndcAction:numberOfDays"), " ").concat(t("ndcAction:isRequired")));
                                            }
                                            if (value < 0) {
                                                throw new Error("".concat(t("ndcAction:allowOnlyNumericValue")));
                                            }
                                            if (!Number.isInteger(value)) {
                                                throw new Error("".concat(t("ndcAction:allowOnlyIntegerValue")));
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ], name: "numberOfDays" },
                            React.createElement(antd.InputNumber, { style: { width: 442, paddingRight: 12 }, onChange: function (value) {
                                    var numericValue = Number(value); // Convert value to a number
                                    if (!isNaN(numericValue) && numericValue >= 0) {
                                        calculateMethodologyEstimatedCredits();
                                    }
                                } }))),
                    React.createElement(antd.Col, { style: { marginLeft: "38px" } },
                        React.createElement(antd.Form.Item, { label: t("ndcAction:numberOfPeople"), rules: [
                                {
                                    required: true,
                                    message: "",
                                },
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (String(value).trim() === "" ||
                                                String(value).trim() === undefined ||
                                                value === null ||
                                                value === undefined) {
                                                throw new Error("".concat(t("ndcAction:numberOfPeople"), " ").concat(t("ndcAction:isRequired")));
                                            }
                                            if (value < 0) {
                                                throw new Error("".concat(t("ndcAction:allowOnlyNumericValue")));
                                            }
                                            if (!Number.isInteger(value)) {
                                                throw new Error("".concat(t("ndcAction:allowOnlyIntegerValue")));
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ], name: "numberOfPeople" },
                            React.createElement(antd.InputNumber, { style: { width: 442, paddingRight: 12 }, onChange: function (value) {
                                    var numericValue = Number(value); // Convert value to a number
                                    if (!isNaN(numericValue) && numericValue >= 0) {
                                        calculateMethodologyEstimatedCredits();
                                    }
                                } })))))),
            (ndcActionType === exports.NdcActionTypes.Mitigation ||
                ndcActionType === exports.NdcActionTypes.CrossCutting) && (React.createElement(antd.Row, { justify: "start", align: "middle" },
                React.createElement(antd.Col, null,
                    React.createElement(antd.Form.Item, { name: "userEstimatedCredits", label: t("ndcAction:userEstimatedCredits"), style: { display: "inline-block", width: "calc(100% - 15px)" } },
                        React.createElement(antd.InputNumber, { style: { width: 442, paddingRight: 12 } }))),
                React.createElement(antd.Col, { style: { marginLeft: "38px" } },
                    React.createElement(antd.Form.Item, { name: "methodologyEstimatedCredits", label: t("ndcAction:methodologyEstimatedCredits"), style: { display: "inline-block", width: "100%" } },
                        React.createElement(antd.InputNumber, { disabled: true, style: { width: 442, paddingRight: 12 } }))))),
            ndcActionType === exports.NdcActionTypes.CrossCutting && (React.createElement(antd.Row, null,
                React.createElement("label", { className: "label-heading" }, t("ndcAction:adaptation")))),
            (ndcActionType === exports.NdcActionTypes.Adaptation ||
                ndcActionType === exports.NdcActionTypes.CrossCutting) && (React.createElement(React.Fragment, null,
                React.createElement(antd.Row, { justify: "start", align: "middle" },
                    React.createElement(antd.Col, null,
                        React.createElement(antd.Form.Item, { label: t("ndcAction:implementingAgency"), name: "implementingAgency" },
                            React.createElement(antd.Select, { style: { width: 442 }, size: "large", options: implementingAgencyList.map(function (item) { return ({
                                    value: item,
                                    label: item,
                                }); }) }))),
                    React.createElement(antd.Col, { style: { marginLeft: "38px" }, className: "included-nap-col" },
                        React.createElement(antd.Row, { className: "in-nap-row" },
                            React.createElement(antd.Col, { span: 9 },
                                React.createElement("div", { className: "included-label" },
                                    React.createElement("div", null, t("ndcAction:inNAP")),
                                    React.createElement("div", { className: "info-container" },
                                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "topLeft", trigger: "hover", title: t("ndcAction:inNAPToolTip"), overlayClassName: "custom-tooltip" },
                                            React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 }))))),
                            React.createElement(antd.Col, { span: 8, className: "included-val" },
                                React.createElement(antd.Radio.Group, { size: "middle", onChange: onInCludedNAPChange, value: includedInNAP },
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: true, onClick: function () { return onClickIncludedInNAPScope(true); } }, t("ndcAction:yes"))),
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: false, onClick: function () { return onClickIncludedInNAPScope(false); } }, t("ndcAction:no")))))))),
                React.createElement(antd.Row, { justify: "start", align: "middle" },
                    React.createElement(antd.Col, null,
                        React.createElement(antd.Form.Item, { label: t("ndcAction:nationalPlanObjectives"), name: "nationalPlanObjectives" },
                            React.createElement(antd.Select, { size: "large", style: { width: 442 }, options: nationalPlanObjectives.map(function (item) { return ({
                                    value: item,
                                    label: item,
                                }); }) }))),
                    React.createElement(antd.Col, { style: { marginLeft: "38px" } },
                        React.createElement(antd.Form.Item, { label: t("ndcAction:nationalPlanCoverage"), name: "nationalPlanCoverage" },
                            React.createElement(antd.Select, { style: { width: 442 }, size: "large", options: nationalPlanCoverageList.map(function (item) { return ({
                                    value: item,
                                    label: item,
                                }); }) })))),
                React.createElement(antd.Row, { justify: "start", align: "middle" },
                    React.createElement(antd.Col, null,
                        React.createElement(antd.Form.Item, { label: t("ndcAction:ghgEmiReduced"), name: "ghgEmissionsReduced", style: { width: 442 }, rules: [
                                {
                                    required: true,
                                    validateTrigger: "onBlur",
                                    validator: function (rule, value) {
                                        if (!value || value.length === 0) {
                                            return Promise.reject("".concat(t("ndcAction:ghgEmiReduced"), " ").concat(t("ndcAction:isRequired")));
                                        }
                                        var isMissingValue = false;
                                        value === null || value === void 0 ? void 0 : value.map(function (item) {
                                            if (inputNumberValueGhgReducedGas === undefined ||
                                                !inputNumberValueGhgReducedGas[item]) {
                                                isMissingValue = true;
                                            }
                                        });
                                        if (isMissingValue) {
                                            return Promise.reject("".concat(t("ndcAction:value"), " ").concat(t("ndcAction:isRequired")));
                                        }
                                        return Promise.resolve();
                                    },
                                },
                            ] },
                            React.createElement(antd.Checkbox.Group, null, ghgEmissionsGas.map(function (option, i) { return (React.createElement("div", { key: option, className: "row-custom" },
                                React.createElement(antd.Checkbox, { value: option, checked: checkedOptionsGhgReduced.includes(option), onChange: function (e) {
                                        var _a, _b;
                                        if ((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.checked) {
                                            setCheckedOptionsGhgReduced(__spreadArray(__spreadArray([], checkedOptionsGhgReduced, true), [
                                                option,
                                            ], false));
                                        }
                                        else if (!((_b = e === null || e === void 0 ? void 0 : e.target) === null || _b === void 0 ? void 0 : _b.checked)) {
                                            var reducedGasAndVal = inputNumberValueGhgReducedGas;
                                            if (reducedGasAndVal &&
                                                reducedGasAndVal[option]) {
                                                delete reducedGasAndVal[option];
                                            }
                                            setInputNumberValueGhgReducedGas(reducedGasAndVal);
                                            setCheckedOptionsGhgReduced(__spreadArray([], checkedOptionsGhgReduced.filter(function (value) { return value !== option; }), true));
                                        }
                                    } }, option),
                                React.createElement(antd.InputNumber, { value: inputNumberValueGhgReducedGas &&
                                        inputNumberValueGhgReducedGas[option]
                                        ? inputNumberValueGhgReducedGas[option]
                                        : null, size: "small", min: 0, disabled: !checkedOptionsGhgReduced.includes(option), onChange: function (e) {
                                        var _a;
                                        setInputNumberValueGhgReducedGas(__assign(__assign({}, inputNumberValueGhgReducedGas), (_a = {}, _a[option] = e, _a)));
                                    } }))); })))),
                    React.createElement(antd.Col, { style: { marginLeft: "38px" } },
                        React.createElement(antd.Form.Item, { label: t("ndcAction:ghgEmiAvoided"), name: "ghgEmissionsAvoided", style: { width: 442 }, rules: [
                                {
                                    required: true,
                                    validateTrigger: "onBlur",
                                    validator: function (rule, value) {
                                        if (!value || value.length === 0) {
                                            return Promise.reject("".concat(t("ndcAction:ghgEmiAvoided"), " ").concat(t("ndcAction:isRequired")));
                                        }
                                        var isMissingValue = false;
                                        value === null || value === void 0 ? void 0 : value.map(function (item) {
                                            if (inputNumberValueGhgAvoidedGas === undefined ||
                                                !inputNumberValueGhgAvoidedGas[item]) {
                                                isMissingValue = true;
                                            }
                                        });
                                        if (isMissingValue) {
                                            return Promise.reject("".concat(t("ndcAction:value"), " ").concat(t("ndcAction:isRequired")));
                                        }
                                        return Promise.resolve();
                                    },
                                },
                            ] },
                            React.createElement(antd.Checkbox.Group, null, ghgEmissionsGas.map(function (option, i) { return (React.createElement("div", { key: option, className: "row-custom" },
                                React.createElement(antd.Checkbox, { value: option, checked: checkedOptionsGhgAvoided.includes(option), onChange: function (e) {
                                        var _a, _b;
                                        if ((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.checked) {
                                            setCheckedOptionsGhgAvoided(__spreadArray(__spreadArray([], checkedOptionsGhgAvoided, true), [
                                                option,
                                            ], false));
                                        }
                                        else if (!((_b = e === null || e === void 0 ? void 0 : e.target) === null || _b === void 0 ? void 0 : _b.checked)) {
                                            var avaoidedGasAndVal = inputNumberValueGhgAvoidedGas;
                                            if (avaoidedGasAndVal &&
                                                avaoidedGasAndVal[option]) {
                                                delete avaoidedGasAndVal[option];
                                            }
                                            setInputNumberValueGhgAvoidedGas(avaoidedGasAndVal);
                                            setCheckedOptionsGhgAvoided(__spreadArray([], checkedOptionsGhgAvoided.filter(function (value) { return value !== option; }), true));
                                        }
                                    } }, option),
                                React.createElement(antd.InputNumber, { value: inputNumberValueGhgAvoidedGas &&
                                        inputNumberValueGhgAvoidedGas[option]
                                        ? inputNumberValueGhgAvoidedGas[option]
                                        : null, size: "small", min: 0, disabled: !checkedOptionsGhgAvoided.includes(option), onChange: function (e) {
                                        var _a;
                                        setInputNumberValueGhgAvoidedGas(__assign(__assign({}, inputNumberValueGhgAvoidedGas), (_a = {}, _a[option] = e, _a)));
                                    } }))); }))))))),
            ndcActionType === exports.NdcActionTypes.Enablement && (React.createElement(React.Fragment, null,
                React.createElement(antd.Form.Item, { label: t("ndcAction:title"), name: "EnablementTitle" },
                    React.createElement(antd.Input, { style: { width: 442 } })),
                React.createElement(antd.Form.Item, { label: t("ndcAction:type"), name: "EnablementType", className: "enablement-type-item" },
                    React.createElement(antd.Checkbox.Group, { className: "type-checkbox-grp" },
                        React.createElement(antd.Row, { className: "grp-row" }, enablementTypesAndValues === null || enablementTypesAndValues === void 0 ? void 0 : enablementTypesAndValues.map(function (type) { return (React.createElement(antd.Col, { lg: type.col, md: type.col + 1 },
                            React.createElement(antd.Checkbox, { value: type.type, style: { lineHeight: "32px" } }, type.type))); })))),
                React.createElement(antd.Row, { justify: "space-between", align: "middle" },
                    React.createElement(antd.Form.Item, { label: t("ndcAction:report"), name: "EnablementReport", valuePropName: "fileList", getValueFromEvent: normFile, required: false, rules: [
                            {
                                validator: function (rule, file) { return __awaiter(void 0, void 0, void 0, function () {
                                    var _a, _b;
                                    return __generator(this, function (_c) {
                                        if (file && file.length > 0) {
                                            if (!isValidateFileType((_a = file[0]) === null || _a === void 0 ? void 0 : _a.type)) {
                                                throw new Error("".concat(t("ndcAction:invalidFileFormat")));
                                            }
                                            else if (((_b = file[0]) === null || _b === void 0 ? void 0 : _b.size) > maximumImageSize) {
                                                throw new Error("".concat(t("common:maxSizeVal")));
                                            }
                                        }
                                        return [2 /*return*/];
                                    });
                                }); },
                            },
                        ] },
                        React.createElement(antd.Upload, { accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", beforeUpload: function (file) {
                                return false;
                            }, className: "design-upload-section", name: "design", listType: "picture", multiple: false, maxCount: 1 },
                            React.createElement(antd.Button, { className: "upload-doc", size: "large", icon: React.createElement(icons.UploadOutlined, null) }, "Upload")))))),
            React.createElement("div", { className: "steps-actions" },
                React.createElement(antd.Row, null,
                    isBackBtnVisible && (React.createElement(antd.Button, { onClick: onClickedBackBtn }, t("ndcAction:back"))),
                    React.createElement(antd.Button, { className: "mg-left-1", type: "primary", htmlType: "submit" }, t("ndcAction:next")))))));
};

var css_248z$i = ".add-ndc-main-container {\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  padding: 0 50px; }\n  .add-ndc-main-container .ant-input-status-error:not(.ant-input-disabled):not(.ant-input-borderless).ant-input,\n  .add-ndc-main-container .ant-input-status-error:not(.ant-input-disabled):not(.ant-input-borderless).ant-input:hover {\n    border-color: #ff4d4f !important; }\n  .add-ndc-main-container .step-title-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 1rem; }\n    .add-ndc-main-container .step-title-container .step-count {\n      font-size: 2.2rem;\n      font-weight: 800;\n      margin-right: 0.4rem;\n      color: rgba(58, 53, 65, 0.8); }\n    .add-ndc-main-container .step-title-container .title {\n      font-size: 1rem;\n      font-weight: 600;\n      color: #3a3541;\n      white-space: nowrap; }\n  .add-ndc-main-container .title-container {\n    display: flex;\n    flex-direction: column;\n    border-radius: 5px; }\n    .add-ndc-main-container .title-container .main {\n      font-size: 1.25rem;\n      font-weight: 500;\n      color: #6642eb; }\n    .add-ndc-main-container .title-container .sub {\n      font-size: 0.8rem;\n      color: #555657; }\n  .add-ndc-main-container .steps-actions {\n    display: flex;\n    flex-direction: row-reverse; }\n    .add-ndc-main-container .steps-actions .mg-left-1 {\n      margin-left: 1rem; }\n  .add-ndc-main-container .adding-section {\n    display: flex;\n    flex-direction: column;\n    background-color: #ffffff;\n    margin: 1rem 0 1rem 0;\n    border-radius: 10px;\n    padding: 2.5rem 1.5rem 2.5rem 1.5rem; }\n    .add-ndc-main-container .adding-section .design-upload-section {\n      display: flex;\n      flex-direction: row;\n      justify-content: start;\n      align-items: start;\n      width: 100%; }\n      .add-ndc-main-container .adding-section .design-upload-section .icon-color {\n        color: #9155fd !important; }\n      .add-ndc-main-container .adding-section .design-upload-section .ant-upload {\n        width: 130px; }\n      .add-ndc-main-container .adding-section .design-upload-section .ant-upload-list {\n        align-items: center;\n        justify-content: center;\n        width: 300px; }\n        .add-ndc-main-container .adding-section .design-upload-section .ant-upload-list .ant-upload-list-item {\n          margin-top: 0; }\n  .add-ndc-main-container .info-container {\n    display: flex;\n    flex-direction: row;\n    width: 10%;\n    height: 30px;\n    align-items: center;\n    justify-content: start;\n    margin-left: 10px; }\n  .add-ndc-main-container .upload-doc {\n    height: 40px !important;\n    margin-right: 240px; }\n  .add-ndc-main-container .ant-upload-list-item {\n    border-radius: 5px !important;\n    height: 40px !important; }\n";
styleInject(css_248z$i);

var css_248z$h = ".co-benifits-container {\n  width: 100%; }\n  .co-benifits-container .ant-form-item-label > label::after {\n    content: none; }\n  .co-benifits-container .ant-radio-button-wrapper {\n    border-radius: 4px !important;\n    color: rgba(140, 140, 140, 0.7) !important; }\n  .co-benifits-container .view-section .ant-radio-button-wrapper-disabled:first-child,\n  .co-benifits-container .view-section .ant-radio-button-wrapper-disabled:hover {\n    color: rgba(140, 140, 140, 0.7);\n    background-color: #ffffff;\n    border-color: rgba(140, 140, 140, 0.7); }\n  .co-benifits-container .view-section .ant-input[disabled] {\n    color: rgba(140, 140, 140, 0.7) !important;\n    background-color: #ffffff !important;\n    border-color: rgba(140, 140, 140, 0.7) !important; }\n  .co-benifits-container .steps-actions {\n    display: flex;\n    flex-direction: row-reverse; }\n    .co-benifits-container .steps-actions .mg-left-1 {\n      margin-left: 1rem; }\n  .co-benifits-container .co-sub-title-text {\n    color: rgba(58, 53, 65, 0.5);\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 22px; }\n  .co-benifits-container .co-sub-header-text {\n    color: rgba(58, 53, 65, 0.5);\n    font-size: 16px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 22px; }\n  .co-benifits-container .co-view-label-text {\n    color: rgba(58, 53, 65, 0.5);\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 400;\n    line-height: 18.5px; }\n  .co-benifits-container .benifits-tabs {\n    width: 100%; }\n    .co-benifits-container .benifits-tabs .unfcccSdTool-section-title {\n      text-align: center;\n      margin-bottom: 5px;\n      margin-top: 10px;\n      font-weight: 700;\n      color: rgba(58, 53, 65, 0.5); }\n      .co-benifits-container .benifits-tabs .unfcccSdTool-section-title a {\n        color: rgba(58, 53, 65, 0.5); }\n    .co-benifits-container .benifits-tabs .unfccSdTool-section-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center; }\n    .co-benifits-container .benifits-tabs .unfccSdTool-section-divider {\n      border-bottom: 1px solid rgba(58, 53, 65, 0.5) !important;\n      width: 100% !important; }\n    .co-benifits-container .benifits-tabs .undpSesp-section-title {\n      text-align: center;\n      margin-bottom: 5px;\n      margin-top: 5px;\n      font-weight: 700;\n      color: rgba(58, 53, 65, 0.5); }\n    .co-benifits-container .benifits-tabs .undpSesp-section-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center; }\n    .co-benifits-container .benifits-tabs .undpSesp-section-divider {\n      border-bottom: 1px solid rgba(58, 53, 65, 0.5) !important;\n      width: 100% !important;\n      margin-bottom: 20px; }\n    .co-benifits-container .benifits-tabs .co-benifits-tab-item {\n      width: 100%;\n      margin-left: 3rem; }\n      .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity {\n        width: 95%; }\n        .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one {\n          width: 100%; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item {\n            width: 100%; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .ant-form-item-label {\n              display: flex;\n              flex-direction: row;\n              align-items: center;\n              text-align: left;\n              justify-content: flex-start;\n              white-space: initial; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .ant-radio-group {\n              width: 95%;\n              text-align: center;\n              align-items: center;\n              justify-content: flex-end; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .ant-radio-group .yes-no-radio-container:first-child {\n                margin-right: 1rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .yes-no-radio-container {\n              width: 35%;\n              text-align: center;\n              max-width: 90px; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n              .ant-radio-button-wrapper-disabled\n) {\n                color: #ffffff !important;\n                border-color: #9155fd;\n                box-shadow: none; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .ant-radio-button-wrapper::before {\n              background-color: transparent; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .ant-radio-button-wrapper {\n              border: 1px solid #d9d9d9; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .anticon {\n              margin-right: 0.5rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .yes-no-radio {\n              width: 100%; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-gender-parity .part-one .form-item .yes-no-radio .ant-radio-button-checked {\n                background: #9155fd;\n                color: #ffffff; }\n      .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals {\n        width: 95%; }\n        .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row {\n          width: 100%; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col {\n            width: 100%; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col .img-container {\n              display: flex;\n              width: 88%;\n              align-items: center;\n              justify-content: center;\n              padding-top: 1.5rem; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col .img-container .images {\n                display: flex;\n                border: 1px solid black;\n                width: 100%;\n                align-items: center;\n                justify-content: center; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col .img-container img {\n                width: 100%;\n                height: auto;\n                border: 1px solid #e4e4e4;\n                border-radius: 5px; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col .img-container img:hover {\n                box-shadow: 0 0 11px rgba(33, 33, 33, 0.2); }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col .img-container-data {\n              display: flex;\n              width: 88%;\n              align-items: center;\n              justify-content: center;\n              padding-top: 1.5rem; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col .img-container-data .images {\n                display: flex;\n                border: 1px solid black;\n                width: 100%;\n                align-items: center;\n                justify-content: center; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-sdg-goals .row .col .img-container-data img {\n                width: 100%;\n                height: auto;\n                border: 1px solid #e4e4e4;\n                border-radius: 5px; }\n      .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental {\n        width: 95%; }\n        .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section {\n          width: 100%;\n          display: flex;\n          flex-direction: column; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .title {\n            width: 100%;\n            color: rgba(58, 53, 65, 0.5);\n            font-weight: 600; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .field-margin {\n            padding-left: 2rem; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item {\n            width: 100%;\n            padding-left: 2rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .ant-form-item-label {\n              width: 100%;\n              display: flex;\n              flex-direction: row;\n              align-items: center;\n              text-align: left;\n              justify-content: flex-start;\n              white-space: initial; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .ant-radio-group {\n              width: 95%;\n              text-align: center;\n              align-items: center;\n              justify-content: flex-end; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .ant-radio-group .yes-no-radio-container:first-child {\n                margin-right: 1rem; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .ant-radio-group .yes-no-radio-container:last-child {\n                margin-left: 1rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .yes-no-radio-container {\n              width: 25%;\n              text-align: center;\n              max-width: 90px; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n              .ant-radio-button-wrapper-disabled\n) {\n                color: #ffffff !important;\n                border-color: #9155fd;\n                box-shadow: none; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .ant-radio-button-wrapper::before {\n              background-color: transparent; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .ant-radio-button-wrapper {\n              border: 1px solid #d9d9d9; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .anticon {\n              margin-right: 0.5rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .yes-no-radio {\n              width: 100%; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-environmental .section .form-item .yes-no-radio .ant-radio-button-checked {\n                background: #9155fd;\n                color: #ffffff; }\n      .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic {\n        width: 95%; }\n        .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section {\n          width: 100%;\n          display: flex;\n          flex-direction: column; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .title {\n            width: 100%;\n            color: rgba(58, 53, 65, 0.5);\n            font-weight: 600; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .field-margin {\n            padding-left: 2rem; }\n          .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item {\n            width: 100%;\n            padding-left: 2rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .ant-form-item-label {\n              width: 100%;\n              display: flex;\n              flex-direction: row;\n              align-items: center;\n              text-align: left;\n              justify-content: flex-start;\n              white-space: initial; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .ant-radio-group {\n              width: 95%;\n              text-align: center;\n              align-items: center;\n              justify-content: flex-end; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .ant-radio-group .yes-no-radio-container:first-child {\n                margin-right: 1rem; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .ant-radio-group .yes-no-radio-container:last-child {\n                margin-left: 1rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .yes-no-radio-container {\n              width: 25%;\n              text-align: center;\n              max-width: 90px; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .yes-no-radio-container .ant-radio-button-wrapper-checked:not(\n              .ant-radio-button-wrapper-disabled\n) {\n                color: #ffffff !important;\n                border-color: #9155fd;\n                box-shadow: none; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .ant-radio-button-wrapper::before {\n              background-color: transparent; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .ant-radio-button-wrapper {\n              border: 1px solid #d9d9d9; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .anticon {\n              margin-right: 0.5rem; }\n            .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .yes-no-radio {\n              width: 100%; }\n              .co-benifits-container .benifits-tabs .co-benifits-tab-item .benifits-details-economic .section .form-item .yes-no-radio .ant-radio-button-checked {\n                background: #9155fd;\n                color: #ffffff; }\n      .co-benifits-container .benifits-tabs .co-benifits-tab-item .row .col {\n        display: flex;\n        flex-direction: column !important; }\n    .co-benifits-container .benifits-tabs .assesment-tab-item {\n      width: 95%;\n      margin-left: 3rem; }\n      .co-benifits-container .benifits-tabs .assesment-tab-item .ant-radio-group {\n        text-align: center;\n        align-items: center;\n        justify-content: flex-end; }\n        .co-benifits-container .benifits-tabs .assesment-tab-item .ant-radio-group .radio-container {\n          margin-right: 1rem;\n          width: 35%;\n          max-width: 90px;\n          text-align: center; }\n          .co-benifits-container .benifits-tabs .assesment-tab-item .ant-radio-group .radio-container .ant-radio-button-wrapper-checked:not(\n          .ant-radio-button-wrapper-disabled\n) {\n            color: #ffffff !important;\n            border-color: #9155fd;\n            box-shadow: none; }\n        .co-benifits-container .benifits-tabs .assesment-tab-item .ant-radio-group .radio {\n          width: 100%; }\n          .co-benifits-container .benifits-tabs .assesment-tab-item .ant-radio-group .radio .ant-radio-button-checked {\n            background: #9155fd;\n            color: #ffffff; }\n      .co-benifits-container .benifits-tabs .assesment-tab-item Input {\n        height: 40px; }\n      .co-benifits-container .benifits-tabs .assesment-tab-item .design-upload-section {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: start;\n        width: 100%; }\n        .co-benifits-container .benifits-tabs .assesment-tab-item .design-upload-section .icon-color {\n          color: #008f39 !important; }\n        .co-benifits-container .benifits-tabs .assesment-tab-item .design-upload-section .ant-upload-list {\n          align-items: center;\n          justify-content: center;\n          max-width: 500px;\n          margin-left: 5px; }\n          .co-benifits-container .benifits-tabs .assesment-tab-item .design-upload-section .ant-upload-list .ant-upload-list-item {\n            margin-top: 0; }\n      .co-benifits-container .benifits-tabs .assesment-tab-item .upload-doc {\n        height: 40px !important;\n        margin-right: 240px; }\n      .co-benifits-container .benifits-tabs .assesment-tab-item .ant-upload-list-item {\n        border-radius: 5px !important;\n        height: 40px !important; }\n      .co-benifits-container .benifits-tabs .assesment-tab-item .ant-form-item-label-left {\n        padding-right: 5px; }\n    .co-benifits-container .benifits-tabs .safeguard-tab-item {\n      width: 95%;\n      margin-left: 3rem; }\n      .co-benifits-container .benifits-tabs .safeguard-tab-item .ant-radio-group {\n        text-align: center;\n        align-items: center;\n        justify-content: flex-end; }\n        .co-benifits-container .benifits-tabs .safeguard-tab-item .ant-radio-group .radio-container {\n          margin-right: 1rem;\n          width: 35%;\n          max-width: 90px;\n          text-align: center; }\n          .co-benifits-container .benifits-tabs .safeguard-tab-item .ant-radio-group .radio-container .ant-radio-button-wrapper-checked:not(\n          .ant-radio-button-wrapper-disabled\n) {\n            color: #ffffff !important;\n            border-color: #9155fd;\n            box-shadow: none; }\n        .co-benifits-container .benifits-tabs .safeguard-tab-item .ant-radio-group .radio {\n          width: 100%; }\n          .co-benifits-container .benifits-tabs .safeguard-tab-item .ant-radio-group .radio .ant-radio-button-checked {\n            background: #9155fd;\n            color: #ffffff; }\n      .co-benifits-container .benifits-tabs .safeguard-tab-item Input {\n        height: 40px; }\n      .co-benifits-container .benifits-tabs .safeguard-tab-item .ant-form-item-label-left {\n        padding-right: 5px; }\n    .co-benifits-container .benifits-tabs .social-tab-item {\n      width: 95%;\n      margin-left: 3rem; }\n      .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group {\n        text-align: center;\n        align-items: center;\n        justify-content: flex-end; }\n        .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container {\n          margin-right: 1rem;\n          width: 35%;\n          max-width: 90px;\n          text-align: center; }\n          .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container .ant-radio-button-wrapper-checked:not(\n          .ant-radio-button-wrapper-disabled\n) {\n            color: #ffffff !important;\n            border-color: #9155fd;\n            box-shadow: none; }\n          .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container .ant-radio-button-wrapper {\n            border: 1px solid #d9d9d9; }\n        .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container-view {\n          margin-right: 2rem;\n          width: 35%;\n          max-width: 90px;\n          text-align: center; }\n          .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container-view .ant-radio-button-wrapper-checked:not(\n          .ant-radio-button-wrapper-disabled\n) {\n            color: #ffffff !important;\n            border-color: #9155fd;\n            box-shadow: none; }\n          .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container-view .ant-radio-button-wrapper {\n            border: 1px solid #d9d9d9; }\n        .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container-view-child {\n          margin-right: 2rem;\n          width: 28%;\n          max-width: 90px;\n          text-align: center; }\n          .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container-view-child .ant-radio-button-wrapper-checked:not(\n          .ant-radio-button-wrapper-disabled\n) {\n            color: #ffffff !important;\n            border-color: #9155fd;\n            box-shadow: none; }\n          .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio-container-view-child .ant-radio-button-wrapper {\n            border: 1px solid #d9d9d9; }\n        .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio {\n          width: 100%; }\n          .co-benifits-container .benifits-tabs .social-tab-item .ant-radio-group .radio .ant-radio-button-checked {\n            background: #9155fd;\n            color: #ffffff; }\n      .co-benifits-container .benifits-tabs .social-tab-item Input {\n        height: 40px; }\n    .co-benifits-container .benifits-tabs .social-environment-tab-item {\n      width: 95%;\n      margin-left: 3rem; }\n      .co-benifits-container .benifits-tabs .social-environment-tab-item .ant-radio-group {\n        text-align: center;\n        align-items: center;\n        justify-content: flex-end; }\n        .co-benifits-container .benifits-tabs .social-environment-tab-item .ant-radio-group .radio-container {\n          margin-right: 1rem;\n          width: 35%;\n          max-width: 90px;\n          text-align: center; }\n          .co-benifits-container .benifits-tabs .social-environment-tab-item .ant-radio-group .radio-container .ant-radio-button-wrapper-checked:not(\n          .ant-radio-button-wrapper-disabled\n) {\n            color: #ffffff !important;\n            border-color: #9155fd;\n            box-shadow: none; }\n        .co-benifits-container .benifits-tabs .social-environment-tab-item .ant-radio-group .radio {\n          width: 100%; }\n          .co-benifits-container .benifits-tabs .social-environment-tab-item .ant-radio-group .radio .ant-radio-button-checked {\n            background: #9155fd;\n            color: #ffffff; }\n      .co-benifits-container .benifits-tabs .social-environment-tab-item .social-environment-risk-title-section {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 15px;\n        margin-top: 5px; }\n      .co-benifits-container .benifits-tabs .social-environment-tab-item .social-environment-risk-title-section:not(:first-child) {\n        border-top: 1px solid rgba(58, 53, 65, 0.5) !important; }\n      .co-benifits-container .benifits-tabs .social-environment-tab-item .social-environment-risk-title-section:first-child {\n        border-bottom: 1px solid rgba(58, 53, 65, 0.5) !important; }\n      .co-benifits-container .benifits-tabs .social-environment-tab-item .social-environment-risk-title {\n        text-align: center;\n        margin-bottom: 5px;\n        margin-top: 10px;\n        font-weight: 700;\n        color: rgba(58, 53, 65, 0.5); }\n      .co-benifits-container .benifits-tabs .social-environment-tab-item .ant-form-item-label > label {\n        height: auto; }\n";
styleInject(css_248z$h);

var GenderParity = function (props) {
    var onFormSubmit = props.onFormSubmit, genderParityViewData = props.genderParityViewData, viewOnly = props.viewOnly, translator = props.translator;
    var formOne = antd.Form.useForm()[0];
    var formTwo = antd.Form.useForm()[0];
    var t = translator.t;
    var _a = React.useState(), genderParityDetails = _a[0], setGenderParityDetails = _a[1];
    var genderParityDetailsOne = [
        {
            label: t("genderParity:benifit1"),
            name: "descriminationAgainstGirls",
            value: true,
        },
        {
            label: t("genderParity:benifit2"),
            name: "violationAgainstGirls",
            value: true,
        },
        {
            label: t("genderParity:benifit3"),
            name: "harmfulPracticesAgainstGirls",
            value: true,
        },
        {
            label: t("genderParity:benifit4"),
            name: "equealRightsToGirls",
            value: true,
        },
        {
            label: t("genderParity:benifit5"),
            name: "equealRightsToHealthToGirls",
            value: true,
        },
    ];
    var genderParityDetailsTwo = [
        {
            label: t("genderParity:benifit6"),
            name: "numberOfWomenEmpoyed",
            col: { md: 18, lg: 10 },
            labelCol: 24,
            wrapperCol: 18,
        },
        {
            label: t("genderParity:benifit7"),
            name: "numberOfWomenTrained",
            col: { md: 18, lg: 10 },
            labelCol: 24,
            wrapperCol: 18,
        },
        {
            label: t("genderParity:benifit8"),
            name: "numberOfWomenSelectedForDecisionMaking",
            col: { md: 18, lg: 16 },
            labelCol: 24,
            wrapperCol: 11,
        },
        {
            label: t("genderParity:benifit9"),
            name: "numberOfWomenProvidedAccessForTech",
            col: { md: 18, lg: 16 },
            labelCol: 24,
            wrapperCol: 11,
        },
    ];
    var _b = React.useState(genderParityDetailsOne), genderParityFormOneFields = _b[0], setGenderParityFormOneFields = _b[1];
    var _c = React.useState(genderParityDetailsTwo), genderParityFormTwoFields = _c[0], setGenderParityFormTwoFields = _c[1];
    React.useEffect(function () {
        onFormSubmit(genderParityDetails);
    }, [genderParityDetails]);
    var onGenderParityValuesChanged = function (changedValues) {
        setGenderParityDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
    };
    var onGenderParityValuesChangedSub = function (changedValues) {
        setGenderParityDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
    };
    React.useEffect(function () {
        if (viewOnly === true && !genderParityViewData) {
            setGenderParityFormOneFields([]);
            setGenderParityFormTwoFields([]);
        }
        if (genderParityViewData) {
            var updatedGenderParityFormOneFields = genderParityFormOneFields
                .filter(function (field) { return genderParityViewData.hasOwnProperty(field.name); })
                .map(function (field) { return (__assign(__assign({}, field), { value: genderParityViewData[field.name] })); });
            var updatedGenderParityFormTwoFields = genderParityFormTwoFields.map(function (field) {
                var _a;
                return (__assign(__assign({}, field), { value: ((_a = genderParityViewData[field.name]) === null || _a === void 0 ? void 0 : _a.length) > 0
                        ? genderParityViewData[field.name]
                        : "-" }));
            });
            setGenderParityFormOneFields(updatedGenderParityFormOneFields);
            setGenderParityFormTwoFields(updatedGenderParityFormTwoFields);
            if ((updatedGenderParityFormTwoFields === null || updatedGenderParityFormTwoFields === void 0 ? void 0 : updatedGenderParityFormTwoFields.length) > 0) {
                updatedGenderParityFormTwoFields === null || updatedGenderParityFormTwoFields === void 0 ? void 0 : updatedGenderParityFormTwoFields.map(function (fieldData) {
                    formTwo.setFieldValue(fieldData === null || fieldData === void 0 ? void 0 : fieldData.name, fieldData === null || fieldData === void 0 ? void 0 : fieldData.value);
                });
            }
        }
    }, []);
    return (React.createElement("div", { className: "co-benifits-tab-item" },
        React.createElement(antd.Form, { name: "gender-parity-details", className: "benifits-details-gender-parity", labelCol: { md: 16, lg: 19, xl: 19 }, wrapperCol: { md: 8, lg: 5, xl: 5 }, layout: "horizontal", requiredMark: true, form: formOne, onValuesChange: onGenderParityValuesChanged },
            (genderParityFormOneFields === null || genderParityFormOneFields === void 0 ? void 0 : genderParityFormOneFields.length) === 0 &&
                (genderParityFormTwoFields === null || genderParityFormTwoFields === void 0 ? void 0 : genderParityFormTwoFields.length) === 0 && (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE })),
            React.createElement("div", { className: "part-one view-section" }, genderParityFormOneFields === null || genderParityFormOneFields === void 0 ? void 0 : genderParityFormOneFields.map(function (genderParityItem) {
                return (React.createElement(antd.Form.Item, { label: genderParityItem === null || genderParityItem === void 0 ? void 0 : genderParityItem.label, className: "form-item", name: genderParityItem === null || genderParityItem === void 0 ? void 0 : genderParityItem.name, rules: [
                        {
                            required: false,
                        },
                    ] }, genderParityViewData ? (React.createElement(React.Fragment, null,
                    React.createElement(antd.Radio.Group, { size: "middle", onChange: function () { }, disabled: true },
                        React.createElement("div", { className: "yes-no-radio-container" },
                            React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: genderParityItem === null || genderParityItem === void 0 ? void 0 : genderParityItem.value }, (genderParityItem === null || genderParityItem === void 0 ? void 0 : genderParityItem.value) === true
                                ? t("genderParity:yes")
                                : t("genderParity:no")))))) : (React.createElement(antd.Radio.Group, { size: "middle", onChange: function () { } },
                    React.createElement("div", { className: "yes-no-radio-container" },
                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: genderParityItem === null || genderParityItem === void 0 ? void 0 : genderParityItem.value }, t("genderParity:yes"))),
                    React.createElement("div", { className: "yes-no-radio-container" },
                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: !(genderParityItem === null || genderParityItem === void 0 ? void 0 : genderParityItem.value) }, t("genderParity:no")))))));
            })),
            React.createElement("div", { className: "part-two" },
                React.createElement(antd.Form, { name: "additional-details", layout: "vertical", form: formTwo, onValuesChange: onGenderParityValuesChangedSub },
                    React.createElement(antd.Row, { gutter: [16, 16] }, genderParityFormTwoFields === null || genderParityFormTwoFields === void 0 ? void 0 : genderParityFormTwoFields.map(function (genderDetail) {
                        var _a, _b;
                        return (React.createElement(antd.Col, { md: (_a = genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.col) === null || _a === void 0 ? void 0 : _a.md, lg: (_b = genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.col) === null || _b === void 0 ? void 0 : _b.lg },
                            React.createElement(antd.Form.Item, { labelCol: { span: genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.labelCol }, wrapperCol: { span: genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.wrapperCol }, label: genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.label, className: "form-item", name: genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.name, rules: [
                                    {
                                        required: false,
                                    },
                                ] }, genderParityViewData ? (React.createElement(antd.Input, { disabled: genderParityViewData && true, size: "large", defaultValue: (genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.value)
                                    ? genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.value
                                    : !genderParityViewData
                                        ? undefined
                                        : undefined })) : (React.createElement(antd.Input, { disabled: genderParityViewData && true, size: "large", defaultValue: (genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.value)
                                    ? genderDetail === null || genderDetail === void 0 ? void 0 : genderDetail.value
                                    : !genderParityViewData
                                        ? undefined
                                        : undefined })))));
                    })))))));
};

var Assessment = function (props) {
    var onFormSubmit = props.onFormSubmit, assessmentViewData = props.assessmentViewData, viewOnly = props.viewOnly, translator = props.translator;
    var t = translator.t;
    var form1 = antd.Form.useForm()[0];
    var form2 = antd.Form.useForm()[0];
    var form3 = antd.Form.useForm()[0];
    var form4 = antd.Form.useForm()[0];
    var _a = React.useState(), cobenefitsAssessmentDetails = _a[0], setCobenefitsAssessmentDetails = _a[1];
    var _b = React.useState(false), isVerifyingOrgVisible = _b[0], setIsVerifyingOrgVisible = _b[1];
    var _c = React.useState(false), isVerifyingDetailsVisible = _c[0], setIsVerifyingDetailsVisible = _c[1];
    var _d = React.useState(false), isPersonListedDetailsVisible = _d[0], setIsPersonListedDetailsVisible = _d[1];
    var _e = React.useState(true), isFormValid = _e[0], setIsFormValid = _e[1];
    var _f = React.useState([]), countries = _f[0], setCountries = _f[1];
    var get = useConnection().get;
    var _g = React.useState(false), isCountryListLoading = _g[0], setIsCountryListLoading = _g[1];
    var maximumFileSize = process.env.REACT_APP_MAXIMUM_FILE_SIZE
        ? parseInt(process.env.REACT_APP_MAXIMUM_FILE_SIZE)
        : 5000000;
    var getCountryList = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, alpha2Names, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setIsCountryListLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, get("national/organisation/countries")];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        alpha2Names = response.data.map(function (item) {
                            return item.alpha2;
                        });
                        setCountries(alpha2Names);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getCountryList", error_1);
                    antd.message.open({
                        type: "error",
                        content: "".concat(error_1.message),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setIsCountryListLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        onFormSubmit(cobenefitsAssessmentDetails, isFormValid);
    }, [cobenefitsAssessmentDetails, isFormValid]);
    React.useEffect(function () {
        if (assessmentViewData) {
            setCobenefitsAssessmentDetails(assessmentViewData);
            form1.setFieldsValue(assessmentViewData);
            form2.setFieldsValue(assessmentViewData);
            form3.setFieldsValue(assessmentViewData);
        }
    }, [assessmentViewData]);
    React.useEffect(function () {
        getCountryList();
    }, []);
    var validateForms = function () { return __awaiter(void 0, void 0, void 0, function () {
        var verifyingOrgName, personListedDetails;
        return __generator(this, function (_a) {
            setIsFormValid(true);
            if (isVerifyingOrgVisible) {
                verifyingOrgName = form1.getFieldValue("verifyingOrgName");
                if (verifyingOrgName === undefined || verifyingOrgName === "") {
                    setIsFormValid(false);
                }
            }
            if (isPersonListedDetailsVisible) {
                personListedDetails = form3.getFieldValue("personListedDetails");
                if (personListedDetails === undefined || personListedDetails === "") {
                    setIsFormValid(false);
                }
            }
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        validateForms();
    });
    var onFormChanged = function (formName, info) { return __awaiter(void 0, void 0, void 0, function () {
        var changedValues;
        return __generator(this, function (_a) {
            changedValues = {};
            if (info.changedFields && info.changedFields.length > 0) {
                info.changedFields.map(function (changedField) { return __awaiter(void 0, void 0, void 0, function () {
                    var base64Value, values_1;
                    var _a;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                if (!(changedField.name[0] === "document")) return [3 /*break*/, 2];
                                return [4 /*yield*/, getBase64(changedField.value[0].originFileObj)];
                            case 1:
                                base64Value = _b.sent();
                                values_1 = base64Value;
                                setCobenefitsAssessmentDetails(function (pre) { return (__assign(__assign({}, pre), { document: values_1 })); });
                                return [3 /*break*/, 3];
                            case 2:
                                if (changedField.value && ((_a = changedField.value) === null || _a === void 0 ? void 0 : _a.length) > 0) {
                                    changedValues[changedField.name[0]] = changedField.value;
                                }
                                else {
                                    changedValues[changedField.name[0]] = undefined;
                                }
                                _b.label = 3;
                            case 3: return [2 /*return*/];
                        }
                    });
                }); });
                setCobenefitsAssessmentDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
            }
            return [2 /*return*/];
        });
    }); };
    var onIsThirdPartyVerifiedChanged = function (e) {
        var _a;
        if (((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value) === exports.RadioButtonStatus.YES) {
            setIsVerifyingOrgVisible(true);
        }
        else {
            setIsVerifyingOrgVisible(false);
        }
    };
    var onIsWillingToVerifiedChanged = function (e) {
        var _a;
        if (((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value) === exports.RadioButtonStatus.YES) {
            setIsVerifyingDetailsVisible(true);
        }
        else {
            setIsVerifyingDetailsVisible(false);
        }
    };
    var onIsThePersonListedChanged = function (e) {
        var _a;
        if (((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value) !== exports.RadioButtonStatus.YES) {
            setIsPersonListedDetailsVisible(true);
        }
        else {
            setIsPersonListedDetailsVisible(false);
        }
    };
    var onAssesmentDocument = function (e) { return __awaiter(void 0, void 0, void 0, function () {
        var base64Value, values_2;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!((e === null || e === void 0 ? void 0 : e.fileList.length) > 0 && ((_a = e === null || e === void 0 ? void 0 : e.fileList[0]) === null || _a === void 0 ? void 0 : _a.name))) return [3 /*break*/, 2];
                    return [4 /*yield*/, getBase64(e.fileList[0].originFileObj)];
                case 1:
                    base64Value = _b.sent();
                    values_2 = base64Value;
                    setCobenefitsAssessmentDetails(function (pre) { return (__assign(__assign({}, pre), { document: values_2 })); });
                    return [3 /*break*/, 3];
                case 2:
                    setCobenefitsAssessmentDetails(function (pre) {
                        pre.document; var rest = __rest(pre, ["document"]);
                        if (Object.keys(rest).length === 0) {
                            return undefined;
                        }
                        else {
                            return __assign({}, rest);
                        }
                    });
                    _b.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var normFile = function (e) {
        if (Array.isArray(e)) {
            return e;
        }
        return e === null || e === void 0 ? void 0 : e.fileList;
    };
    return (React.createElement("div", { className: "assesment-tab-item" },
        viewOnly && !assessmentViewData && (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE })),
        ((viewOnly && assessmentViewData) || !viewOnly) && (React.createElement(antd.Form.Provider, { onFormChange: onFormChanged },
            React.createElement(antd.Row, null,
                React.createElement(antd.Form, { name: "from1", labelCol: { span: 18 }, labelWrap: true, labelAlign: "left", wrapperCol: { span: 6 }, layout: "horizontal", requiredMark: true, form: form1, onValuesChange: function () { return validateForms(); } },
                    !viewOnly && (React.createElement("div", { className: "radio-content" },
                        React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentIsThirdPartyVerified", {
                                ns: "coBenifits",
                            }), className: "form-item", name: "IsThirdPartyVerified" },
                            React.createElement(antd.Radio.Group, { size: "middle", onChange: onIsThirdPartyVerifiedChanged },
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.YES }, t("coBenifits:yes"))),
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NO }, t("coBenifits:no"))),
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NA }, t("coBenifits:n/a"))))),
                        isVerifyingOrgVisible === true && (React.createElement(antd.Form.Item, { labelCol: { span: 24 }, wrapperCol: { span: 24 }, label: t("coBenifits:verifyingOrgNamelbl"), name: "verifyingOrgName", rules: [
                                {
                                    required: true,
                                    message: "",
                                },
                            ] },
                            React.createElement(antd.Input, { style: { width: 303 } }))),
                        React.createElement(antd.Form.Item, { label: t("coBenifits:assesmentIsWillingToVerified"), className: "form-item", name: "IsWillingToVerified" },
                            React.createElement(antd.Radio.Group, { size: "middle", onChange: onIsWillingToVerifiedChanged },
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.YES }, t("coBenifits:yes"))),
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NO }, t("coBenifits:no"))),
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NA }, t("coBenifits:n/a"))))),
                        isVerifyingDetailsVisible === true && (React.createElement(antd.Form.Item, { label: t("coBenifits:verifyingDetailslbl"), name: "verifyingDetails", labelCol: { span: 24 }, wrapperCol: { span: 24 } },
                            React.createElement(antd.Input, { style: { width: 303 } }))))),
                    viewOnly && (React.createElement("div", { className: "radio-content view-section" },
                        assessmentViewData.hasOwnProperty("IsThirdPartyVerified") && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentIsThirdPartyVerified"), className: "form-item", name: "IsThirdPartyVerified" },
                            React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio" }, assessmentViewData.IsThirdPartyVerified))))),
                        assessmentViewData.IsThirdPartyVerified ===
                            exports.RadioButtonStatus.YES && (React.createElement(antd.Form.Item, { labelCol: { span: 24 }, wrapperCol: { span: 24 }, label: t("coBenifits:verifyingOrgNamelbl"), name: "verifyingOrgName" },
                            React.createElement(antd.Input, { disabled: true, style: { width: 303 }, defaultValue: assessmentViewData.verifyingOrgName
                                    ? assessmentViewData.verifyingOrgName
                                    : "-" }))),
                        assessmentViewData.hasOwnProperty("IsWillingToVerified") && (React.createElement(antd.Form.Item, { label: t("coBenifits:assesmentIsWillingToVerified"), className: "form-item", name: "IsWillingToVerified" },
                            React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                React.createElement("div", { className: "radio-container" },
                                    React.createElement(antd.Radio.Button, { className: "radio" }, assessmentViewData.IsWillingToVerified))))),
                        assessmentViewData.IsWillingToVerified ===
                            exports.RadioButtonStatus.YES && (React.createElement(antd.Form.Item, { label: t("coBenifits:verifyingDetailslbl"), name: "verifyingDetails", labelCol: { span: 24 }, wrapperCol: { span: 24 } },
                            React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.verifyingDetails
                                    ? assessmentViewData.verifyingDetails
                                    : "-", style: { width: 303 } }))))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Form, { name: "form2", labelCol: { span: 14 }, labelWrap: true, labelAlign: "left", wrapperCol: { span: 8 }, layout: "vertical", requiredMark: true, form: form2, className: "view-section" },
                    React.createElement(antd.Row, { className: "mg-bottom-1" },
                        React.createElement("label", { className: "co-sub-title-text" }, t("coBenifits:contactInformation"))),
                    React.createElement(antd.Row, { justify: "start", gutter: 16 },
                        React.createElement(antd.Col, { flex: "139px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentTitle"), name: "title" },
                                    React.createElement(antd.Select, { size: "large", style: {
                                            width: "139px",
                                            borderRadius: "4px",
                                        }, options: titleList }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentTitle"), name: "title" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.title
                                            ? assessmentViewData.title
                                            : "-", style: { width: 303 } }))))),
                        React.createElement(antd.Col, { flex: "303px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentFirstName"), name: "firstName" },
                                    React.createElement(antd.Input, { style: { width: 303 } }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentFirstName"), name: "firstName" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.firstName
                                            ? assessmentViewData.firstName
                                            : "-", style: { width: 303 } }))))),
                        React.createElement(antd.Col, { flex: "303px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentLastName"), name: "lastName" },
                                    React.createElement(antd.Input, { style: { width: 303 } }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentLastName"), name: "lastName" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.lastName
                                            ? assessmentViewData.lastName
                                            : "-", style: { width: 303 } })))))),
                    React.createElement(antd.Row, { justify: "start", gutter: 16 },
                        React.createElement(antd.Col, { flex: "462px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentOrganisation"), name: "organisation" },
                                    React.createElement(antd.Input, { style: { width: 462 } }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentOrganisation"), name: "organisation" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.organisation
                                            ? assessmentViewData.organisation
                                            : "-", style: { width: 462 } }))))),
                        React.createElement(antd.Col, { flex: "303px" },
                            React.createElement(React.Fragment, null,
                                React.createElement(antd.Skeleton, { loading: isCountryListLoading, active: true }, !viewOnly && countries.length > 0 && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentTelephone"), name: "telephone" },
                                    React.createElement(PhoneInput, { style: { width: 303 }, international: true, defaultCountry: "LK", countryCallingCodeEditable: false, onChange: function (v) { }, countries: countries })))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentTelephone"), name: "telephone" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.telephone
                                            ? assessmentViewData.telephone
                                            : "-", style: { width: 303 } })))))),
                    React.createElement(antd.Row, { justify: "start", gutter: 16 },
                        React.createElement(antd.Col, { flex: "303px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentEmail"), name: "email", rules: [
                                        {
                                            validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                var val, reg, matches;
                                                return __generator(this, function (_a) {
                                                    if (value) {
                                                        val = value.trim();
                                                        reg = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                                        matches = val.match(reg)
                                                            ? val.match(reg)
                                                            : [];
                                                        if (matches.length === 0) {
                                                            throw new Error("".concat(t("addUser:email"), " ").concat(t("addUser:isInvalid")));
                                                        }
                                                    }
                                                    return [2 /*return*/];
                                                });
                                            }); },
                                        },
                                    ] },
                                    React.createElement(antd.Input, { style: { width: 303 } }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentEmail"), name: "email" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.email
                                            ? assessmentViewData.email
                                            : "-", style: { width: 303 } }))))),
                        React.createElement(antd.Col, { flex: "462px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentAffiliationCDM"), name: "affiliationCDM" },
                                    React.createElement(antd.Input, { style: { width: 462 } }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentAffiliationCDM"), name: "affiliationCDM" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.affiliationCDM
                                            ? assessmentViewData.affiliationCDM
                                            : "-", style: { width: 462 } })))))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form, { name: "form3", labelCol: { span: 18 }, labelWrap: true, labelAlign: "left", wrapperCol: { span: 6 }, layout: "horizontal", requiredMark: true, form: form3, onValuesChange: function () { return validateForms(); } },
                        !viewOnly && (React.createElement("div", { className: "radio-content" },
                            React.createElement(antd.Form.Item, { label: t("coBenifits:assesmentIsThePersonListed"), className: "form-item", name: "isThePersonListed" },
                                React.createElement(antd.Radio.Group, { size: "middle", onChange: onIsThePersonListedChanged },
                                    React.createElement("div", { className: "radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.YES }, t("coBenifits:yes"))),
                                    React.createElement("div", { className: "radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NO }, t("coBenifits:no"))),
                                    React.createElement("div", { className: "radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NA }, t("coBenifits:n/a"))))),
                            isPersonListedDetailsVisible === true && (React.createElement(antd.Form.Item, { labelCol: { span: 24 }, wrapperCol: { span: 24 }, label: t("coBenifits:specify"), name: "personListedDetails", rules: [
                                    {
                                        required: true,
                                        message: "",
                                    },
                                ] },
                                React.createElement(antd.Input, { style: { width: 303 } }))))),
                        viewOnly && (React.createElement("div", { className: "radio-content view-section" },
                            assessmentViewData.hasOwnProperty("isThePersonListed") && (React.createElement(antd.Form.Item, { label: t("coBenifits:assesmentIsThePersonListed"), className: "form-item", name: "isThePersonListed" },
                                React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                    React.createElement("div", { className: "radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "radio" }, assessmentViewData.isThePersonListed))))),
                            assessmentViewData.isThePersonListed ===
                                exports.RadioButtonStatus.NO && (React.createElement(antd.Form.Item, { labelCol: { span: 24 }, wrapperCol: { span: 24 }, label: t("coBenifits:specify"), name: "personListedDetails" },
                                React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.personListedDetails
                                        ? assessmentViewData.personListedDetails
                                        : "-", style: { width: 303 } })))))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Form, { layout: "vertical", name: "form4", form: form4, className: "view-section" },
                    React.createElement(antd.Row, { className: "mg-bottom-1" },
                        React.createElement("label", { className: "co-sub-title-text" }, t("coBenifits:feasibilityReport"))),
                    React.createElement(antd.Row, { justify: "start", gutter: 16 },
                        React.createElement(antd.Col, { flex: "303px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentStudyName"), name: "studyName" },
                                    React.createElement(antd.Input, { style: { width: 303 } }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentStudyName"), name: "studyName" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.studyName
                                            ? assessmentViewData.studyName
                                            : "-", style: { width: 303 } }))))),
                        React.createElement(antd.Col, { flex: "303px" },
                            React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentFunder"), name: "funder" },
                                    React.createElement(antd.Input, { style: { width: 303 } }))),
                                viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentFunder"), name: "funder" },
                                    React.createElement(antd.Input, { disabled: true, defaultValue: assessmentViewData.funder
                                            ? assessmentViewData.funder
                                            : "-", style: { width: 303 } })))))),
                    React.createElement(antd.Row, null,
                        !viewOnly && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentDocuments"), name: "document", valuePropName: "fileList", getValueFromEvent: normFile, required: false, rules: [
                                {
                                    validator: function (rule, file) { return __awaiter(void 0, void 0, void 0, function () {
                                        var _a, _b;
                                        return __generator(this, function (_c) {
                                            if ((file === null || file === void 0 ? void 0 : file.length) > 0) {
                                                if (!isValidateFileType((_a = file[0]) === null || _a === void 0 ? void 0 : _a.type)) {
                                                    throw new Error("".concat(t("coBenifits:invalidFileFormat")));
                                                }
                                                else if (((_b = file[0]) === null || _b === void 0 ? void 0 : _b.size) > maximumFileSize) {
                                                    throw new Error("".concat(t("common:maxSizeVal")));
                                                }
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.Upload, { accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", beforeUpload: function (file) {
                                    return false;
                                }, className: "design-upload-section", name: "document", listType: "picture", multiple: false, maxCount: 1, onChange: onAssesmentDocument },
                                React.createElement(antd.Button, { className: "upload-doc", size: "large", icon: React.createElement(icons.UploadOutlined, null) }, "Upload")))),
                        viewOnly && assessmentViewData.document && (React.createElement(antd.Form.Item, { label: t("coBenifits:assessmentDocuments"), name: "assessmentDocuments" },
                            React.createElement("a", { href: assessmentViewData.document, target: "_blank", rel: "noopener noreferrer", download: true }, assessmentViewData.document))))))))));
};

var sdgGoalMap = {};
var SdgGoals = function (props) {
    var onFormSubmit = props.onFormSubmit, sdgGoalsViewData = props.sdgGoalsViewData, viewOnly = props.viewOnly, sdgGoalImages = props.sdgGoalImages;
    var goal1 = sdgGoalImages.goal1, goal2 = sdgGoalImages.goal2, goal3 = sdgGoalImages.goal3, goal4 = sdgGoalImages.goal4, goal5 = sdgGoalImages.goal5, goal6 = sdgGoalImages.goal6, goal7 = sdgGoalImages.goal7, goal8 = sdgGoalImages.goal8, goal9 = sdgGoalImages.goal9, goal10 = sdgGoalImages.goal10, goal11 = sdgGoalImages.goal11, goal12 = sdgGoalImages.goal12, goal13 = sdgGoalImages.goal13, goal14 = sdgGoalImages.goal14, goal15 = sdgGoalImages.goal15, goal16 = sdgGoalImages.goal16, goal17 = sdgGoalImages.goal17, goal1Selected = sdgGoalImages.goal1Selected, goal2Selected = sdgGoalImages.goal2Selected, goal3Selected = sdgGoalImages.goal3Selected, goal4Selected = sdgGoalImages.goal4Selected, goal5Selected = sdgGoalImages.goal5Selected, goal6Selected = sdgGoalImages.goal6Selected, goal7Selected = sdgGoalImages.goal7Selected, goal8Selected = sdgGoalImages.goal8Selected, goal9Selected = sdgGoalImages.goal9Selected, goal10Selected = sdgGoalImages.goal10Selected, goal11Selected = sdgGoalImages.goal11Selected, goal12Selected = sdgGoalImages.goal12Selected, goal13Selected = sdgGoalImages.goal13Selected, goal14Selected = sdgGoalImages.goal14Selected, goal15Selected = sdgGoalImages.goal15Selected, goal16Selected = sdgGoalImages.goal16Selected, goal17Selected = sdgGoalImages.goal17Selected;
    var formOne = antd.Form.useForm()[0];
    var _a = React.useState([
        {
            name: exports.SdgGoals.noPoverty,
            image: goal1,
            selected: false,
            activeImage: goal1Selected,
        },
        {
            name: exports.SdgGoals.zeroHunger,
            image: goal2,
            selected: false,
            activeImage: goal2Selected,
        },
        {
            name: exports.SdgGoals.gdHealth,
            image: goal3,
            selected: false,
            activeImage: goal3Selected,
        },
        {
            name: exports.SdgGoals.qualityEducation,
            image: goal4,
            selected: false,
            activeImage: goal4Selected,
        },
        {
            name: exports.SdgGoals.genderEq,
            image: goal5,
            selected: false,
            activeImage: goal5Selected,
        },
        {
            name: exports.SdgGoals.cleanWatr,
            image: goal6,
            selected: false,
            activeImage: goal6Selected,
        },
        {
            name: exports.SdgGoals.affEnergy,
            image: goal7,
            selected: false,
            activeImage: goal7Selected,
        },
        {
            name: exports.SdgGoals.decentWork,
            image: goal8,
            selected: false,
            activeImage: goal8Selected,
        },
        {
            name: exports.SdgGoals.industry,
            image: goal9,
            selected: false,
            activeImage: goal9Selected,
        },
        {
            name: exports.SdgGoals.reducedInEq,
            image: goal10,
            selected: false,
            activeImage: goal10Selected,
        },
        {
            name: exports.SdgGoals.sustainableCities,
            image: goal11,
            selected: false,
            activeImage: goal11Selected,
        },
        {
            name: exports.SdgGoals.responsibleConsumption,
            image: goal12,
            selected: false,
            activeImage: goal12Selected,
        },
        {
            name: exports.SdgGoals.climateAction,
            image: goal13,
            selected: false,
            activeImage: goal13Selected,
        },
        {
            name: exports.SdgGoals.lifeBelowWater,
            image: goal14,
            selected: false,
            activeImage: goal14Selected,
        },
        {
            name: exports.SdgGoals.lifeOnLand,
            image: goal15,
            selected: false,
            activeImage: goal15Selected,
        },
        {
            name: exports.SdgGoals.peace,
            image: goal16,
            selected: false,
            activeImage: goal16Selected,
        },
        {
            name: exports.SdgGoals.partnership,
            image: goal17,
            selected: false,
            activeImage: goal17Selected,
        },
    ]), sdgGoals = _a[0], setSdgGoals = _a[1];
    var handleImageSelect = function (imageId) {
        var g = sdgGoalMap[imageId];
        if (!g) {
            return;
        }
        g.selected = !g.selected;
        var u = __spreadArray([], sdgGoals, true);
        setSdgGoals(u);
    };
    React.useEffect(function () {
        for (var _i = 0, sdgGoals_1 = sdgGoals; _i < sdgGoals_1.length; _i++) {
            var g = sdgGoals_1[_i];
            sdgGoalMap[g.name] = g;
        }
    }, []);
    React.useEffect(function () {
        if (sdgGoalsViewData) {
            for (var _i = 0, sdgGoalsViewData_1 = sdgGoalsViewData; _i < sdgGoalsViewData_1.length; _i++) {
                var g = sdgGoalsViewData_1[_i];
                var sdg = sdgGoalMap[g];
                if (sdg) {
                    sdg.selected = true;
                }
                else {
                    console.log("AAA", g);
                }
            }
        }
        else {
            for (var _a = 0, sdgGoals_2 = sdgGoals; _a < sdgGoals_2.length; _a++) {
                var g = sdgGoals_2[_a];
                g.selected = false;
            }
        }
        console.log(sdgGoalMap);
        var updatedSdgGoals = Object.values(sdgGoalMap);
        setSdgGoals(updatedSdgGoals);
    }, [sdgGoalsViewData]);
    React.useEffect(function () {
        var saveData = [];
        for (var _i = 0, sdgGoals_3 = sdgGoals; _i < sdgGoals_3.length; _i++) {
            var g = sdgGoals_3[_i];
            if (g.selected) {
                saveData.push(g.name.toString());
            }
        }
        onFormSubmit(saveData);
    }, [sdgGoals]);
    return (React.createElement("div", { className: "co-benifits-tab-item" },
        React.createElement(antd.Form, { name: "sdg-goals-details", className: "benifits-details-sdg-goals", form: formOne },
            React.createElement(antd.Row, { gutter: [5, 16], className: "row" }, sdgGoals === null || sdgGoals === void 0 ? void 0 : sdgGoals.map(function (sdgGoal) { return (React.createElement(antd.Col, { sm: 12, md: 12, lg: 4, xl: 4, className: "col" },
                React.createElement("div", { className: sdgGoalsViewData ? "img-container-data" : "img-container" },
                    React.createElement(antd.Form.Item, { name: "images" },
                        !sdgGoal.selected && (React.createElement("img", { src: sdgGoal === null || sdgGoal === void 0 ? void 0 : sdgGoal.image, alt: "Image ".concat(sdgGoal === null || sdgGoal === void 0 ? void 0 : sdgGoal.name), onClick: function () {
                                return !viewOnly && handleImageSelect(sdgGoal === null || sdgGoal === void 0 ? void 0 : sdgGoal.name);
                            } })),
                        sdgGoal.selected && (React.createElement("img", { src: sdgGoal === null || sdgGoal === void 0 ? void 0 : sdgGoal.activeImage, alt: "Image ".concat(sdgGoal === null || sdgGoal === void 0 ? void 0 : sdgGoal.name), onClick: function () {
                                return !viewOnly && handleImageSelect(sdgGoal === null || sdgGoal === void 0 ? void 0 : sdgGoal.name);
                            } })))))); })))));
};

var Safeguards = function (props) {
    var onFormSubmit = props.onFormSubmit, safeGuardViewData = props.safeGuardViewData, viewOnly = props.viewOnly, translator = props.translator;
    var t = translator.t;
    var _a = React.useState(), safeguardDetails = _a[0], setSafeguardDetails = _a[1];
    var form = antd.Form.useForm()[0];
    var initialFormElementList = [
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:humanRights"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:isRespectHumanRights"),
                    name: "isRespectHumanRights",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:isProjectdiscriminate"),
                    name: "isProjectdiscriminate",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:genderEquality"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:genderEqualityQ1"),
                    name: "genderEqualityQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:genderEqualityQ2"),
                    name: "genderEqualityQ2",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:genderEqualityQ3"),
                    name: "genderEqualityQ3",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:genderEqualityQ4"),
                    name: "genderEqualityQ4",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:communityHealth"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:communityHealthQ1"),
                    name: "communityHealthQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:historicHeritage"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:historicHeritageQ1"),
                    name: "historicHeritageQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:forcedEviction"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:forcedEvictionQ1"),
                    name: "forcedEvictionQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:landTenure"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:landTenureQ1"),
                    name: "landTenureQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:landTenureQ2"),
                    name: "landTenureQ2",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:indegenousPeople"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:indegenousPeopleQ1"),
                    name: "indegenousPeopleQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:corruption"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:corruptionQ1"),
                    name: "corruptionQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:labourRights"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:labourRightsQ1"),
                    name: "labourRightsQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:labourRightsQ2"),
                    name: "labourRightsQ2",
                },
                {
                    type: exports.FormElementType.Label,
                    label: t("safeguards:labourRightsSubLabel"),
                    className: "mg-left-2",
                    items: [
                        {
                            type: exports.FormElementType.Radio,
                            label: t("safeguards:labourRightsSubQ1"),
                            name: "labourRightsSubQ1",
                            className: "mg-left-4",
                        },
                        {
                            type: exports.FormElementType.Radio,
                            label: t("safeguards:labourRightsSubQ2"),
                            name: "labourRightsSubQ2",
                            className: "mg-left-4",
                        },
                        {
                            type: exports.FormElementType.Radio,
                            label: t("safeguards:labourRightsSubQ3"),
                            name: "labourRightsSubQ3",
                            className: "mg-left-4",
                        },
                        {
                            type: exports.FormElementType.Radio,
                            label: t("safeguards:labourRightsSubQ4"),
                            name: "labourRightsSubQ4",
                            className: "mg-left-4",
                        },
                        {
                            type: exports.FormElementType.Radio,
                            label: t("safeguards:labourRightsSubQ5"),
                            name: "labourRightsSubQ5",
                            className: "mg-left-4",
                        },
                        {
                            type: exports.FormElementType.Radio,
                            label: t("safeguards:labourRightsSubQ6"),
                            name: "labourRightsSubQ6",
                            className: "mg-left-4",
                        },
                    ],
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:labourRightsQ3"),
                    name: "labourRightsQ3",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:labourRightsQ4"),
                    name: "labourRightsQ4",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:economicConsequences"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:economicConsequencesQ1"),
                    name: "economicConsequencesQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:emissions"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:emissionsQ1"),
                    name: "emissionsQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:energySupply"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:energySupplyQ1"),
                    name: "energySupplyQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:waterPattern"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:waterPatternQ1"),
                    name: "waterPatternQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:erosoin"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:erosoinQ1"),
                    name: "erosoinQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:erosoinQ2"),
                    name: "erosoinQ2",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:landscape"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:landscapeQ1"),
                    name: "landscapeQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:naturalDisaster"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:naturalDisasterQ1"),
                    name: "naturalDisasterQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:genetic"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:geneticQ1"),
                    name: "geneticQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:pollutants"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:pollutantsQ1"),
                    name: "pollutantsQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:hazardousWaste"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:hazardousWasteQ1"),
                    name: "hazardousWasteQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:pesticides"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:pesticidesQ1"),
                    name: "pesticidesQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:harvestForests"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:harvestForestsQ1"),
                    name: "harvestForestsQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:food"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:foodQ1"),
                    name: "foodQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:animalHusbandry"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:animalHusbandryQ1"),
                    name: "animalHusbandryQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:criticalHabitats"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:criticalHabitatsQ1"),
                    name: "criticalHabitatsQ1",
                },
            ],
        },
        {
            type: exports.FormElementType.Label,
            label: t("safeguards:endangeredSpecies"),
            items: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:endangeredSpeciesQ1"),
                    name: "endangeredSpeciesQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("safeguards:endangeredSpeciesQ2"),
                    name: "endangeredSpeciesQ2",
                },
            ],
        },
    ];
    var _b = React.useState(initialFormElementList), updatedFormElementList = _b[0], setUpdatedFormElementList = _b[1];
    React.useEffect(function () {
        onFormSubmit(safeguardDetails);
    }, [safeguardDetails]);
    var checkFormItemValueAvailable = function (valueitem) {
        if (valueitem && safeGuardViewData) {
            if (safeGuardViewData.hasOwnProperty(valueitem.name)) {
                return true;
            }
        }
        return false;
    };
    var checkFormSubHeaderVisible = function (labelItem) {
        var updatedLabelItem = labelItem;
        var isItemVisible = false;
        if (labelItem && labelItem.items) {
            labelItem.items.forEach(function (item) {
                if (item.type === exports.FormElementType.Radio) {
                    if (checkFormItemValueAvailable(item)) {
                        updatedLabelItem = __assign(__assign({}, labelItem), { isVisible: true });
                        isItemVisible = true;
                    }
                }
                else {
                    var updated = checkFormSubHeaderVisible(item);
                    if (updated.isVisible)
                        isItemVisible = true;
                    var objIndex = labelItem.items.findIndex(function (obj) { return obj.type === exports.FormElementType.Label; });
                    labelItem.items[objIndex] = updated;
                    updatedLabelItem = __assign({}, labelItem);
                }
            });
        }
        return __assign(__assign({}, updatedLabelItem), { isVisible: isItemVisible });
    };
    React.useEffect(function () {
        if (viewOnly && safeGuardViewData) {
            var updatedList = initialFormElementList.map(function (headerItem) {
                return checkFormSubHeaderVisible(headerItem);
            });
            setUpdatedFormElementList(updatedList);
        }
        else {
            if (safeGuardViewData) {
                setSafeguardDetails(safeGuardViewData);
                form.setFieldsValue(safeGuardViewData);
            }
        }
    }, [safeGuardViewData]);
    var onSafeguardValuesChanged = function (changedValues) {
        setSafeguardDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
    };
    return (React.createElement(React.Fragment, null,
        viewOnly && !safeGuardViewData && (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE })),
        ((viewOnly && safeGuardViewData) || !viewOnly) && (React.createElement("div", { className: "safeguard-tab-item" },
            React.createElement("div", { className: "undpSesp-section-wrapper" },
                React.createElement(antd.Row, { justify: "center", align: "middle", style: { width: "100%" } },
                    React.createElement(antd.Col, { span: 24, className: "unfcccSdTool-section-title" },
                        React.createElement("span", null,
                            React.createElement("a", { target: "_blank", href: "https://www4.unfccc.int/sites/sdcmicrosite/Pages/Create-a-report.aspx" }, t("safeguards:undpSespTitle")))),
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement("div", { className: "undpSesp-section-divider" })))),
            React.createElement(antd.Form, { onValuesChange: onSafeguardValuesChanged, name: "safeguardDetails", labelWrap: true, labelAlign: "left", labelCol: { md: 16, lg: 18, xl: 18 }, wrapperCol: { md: 8, lg: 6, xl: 6 }, layout: "horizontal", form: form }, updatedFormElementList.map(function (sectionItem) {
                return (React.createElement(React.Fragment, null,
                    (sectionItem.isVisible || !viewOnly) && (React.createElement("div", { style: { marginBottom: "15px" } },
                        React.createElement("label", { className: "co-sub-title-text" }, sectionItem.label))),
                    sectionItem.items.map(function (item) {
                        if (item.type === exports.FormElementType.Radio) {
                            return (React.createElement(React.Fragment, null,
                                !viewOnly && (React.createElement(antd.Form.Item, { label: item === null || item === void 0 ? void 0 : item.label, className: item.className
                                        ? item.className
                                        : "form-item mg-left-2", name: item === null || item === void 0 ? void 0 : item.name, rules: [
                                        {
                                            required: false,
                                        },
                                    ] },
                                    React.createElement(antd.Radio.Group, { size: "middle" },
                                        React.createElement("div", { className: "radio-container" },
                                            React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus2.YES }, t("safeguards:yes"))),
                                        React.createElement("div", { className: "radio-container" },
                                            React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus2.MAYBE }, t("safeguards:maybe"))),
                                        React.createElement("div", { className: "radio-container" },
                                            React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus2.NO }, t("safeguards:no")))))),
                                viewOnly &&
                                    safeGuardViewData.hasOwnProperty(item === null || item === void 0 ? void 0 : item.name) && (React.createElement("div", { className: "view-section" },
                                    React.createElement(antd.Form.Item, { label: item === null || item === void 0 ? void 0 : item.label, className: item.className
                                            ? item.className
                                            : "form-item mg-left-2", name: item === null || item === void 0 ? void 0 : item.name },
                                        React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                            React.createElement("div", { className: "radio-container" },
                                                React.createElement(antd.Radio.Button, { className: "radio" }, safeGuardViewData[item === null || item === void 0 ? void 0 : item.name]))))))));
                        }
                        else if (item.type === exports.FormElementType.Label) {
                            return (React.createElement(React.Fragment, null,
                                (item.isVisible || !viewOnly) && (React.createElement("div", { style: { marginBottom: "15px" } },
                                    React.createElement("label", { className: "co-sub-title-text mg-left-2" }, item.label))),
                                item.items.map(function (subItem) {
                                    return (React.createElement(React.Fragment, null,
                                        !viewOnly && (React.createElement(antd.Form.Item, { label: subItem === null || subItem === void 0 ? void 0 : subItem.label, className: subItem.className
                                                ? subItem.className
                                                : "form-item mg-left-2", name: subItem === null || subItem === void 0 ? void 0 : subItem.name, rules: [
                                                {
                                                    required: false,
                                                },
                                            ] },
                                            React.createElement(antd.Radio.Group, { size: "middle" },
                                                React.createElement("div", { className: "radio-container" },
                                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus2.YES }, t("safeguards:yes"))),
                                                React.createElement("div", { className: "radio-container" },
                                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus2.MAYBE }, t("safeguards:maybe"))),
                                                React.createElement("div", { className: "radio-container" },
                                                    React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus2.NO }, t("safeguards:no")))))),
                                        viewOnly &&
                                            safeGuardViewData.hasOwnProperty(subItem === null || subItem === void 0 ? void 0 : subItem.name) && (React.createElement("div", { className: "view-section" },
                                            React.createElement(antd.Form.Item, { label: subItem === null || subItem === void 0 ? void 0 : subItem.label, className: subItem.className
                                                    ? subItem.className
                                                    : "form-item mg-left-2", name: subItem === null || subItem === void 0 ? void 0 : subItem.name },
                                                React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                                    React.createElement("div", { className: "radio-container" },
                                                        React.createElement(antd.Radio.Button, { className: "radio" }, safeGuardViewData[subItem === null || subItem === void 0 ? void 0 : subItem.name]))))))));
                                })));
                        }
                    })));
            }))))));
};

var Environmental = function (props) {
    var onFormSubmit = props.onFormSubmit, environmentalViewData = props.environmentalViewData, viewOnly = props.viewOnly, translator = props.translator;
    var t = translator.t;
    var environmentalDetailsInitial = [
        {
            section: t("unfcccSdTool:air"),
            fields: [
                {
                    name: "airQ1",
                    label: t("unfcccSdTool:airQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "airQ2",
                    label: t("unfcccSdTool:airQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "airQ3",
                    label: t("unfcccSdTool:airQ3"),
                    hide: true,
                    required: true,
                },
                {
                    name: "airQ4",
                    label: t("unfcccSdTool:airQ4"),
                    hide: true,
                    required: true,
                },
                {
                    name: "airQ5",
                    label: t("unfcccSdTool:airQ5"),
                    hide: true,
                    required: true,
                },
                {
                    name: "airQ6",
                    label: t("unfcccSdTool:airQ6"),
                    hide: true,
                    required: true,
                },
                {
                    name: "airQ7",
                    label: t("unfcccSdTool:airQ7"),
                    hide: true,
                    required: true,
                },
                {
                    name: "airQ8",
                    label: t("unfcccSdTool:airQ8"),
                    hide: true,
                    required: true,
                },
                {
                    name: "airQ9",
                    label: t("unfcccSdTool:airQ9"),
                    hide: true,
                    required: true,
                },
            ],
        },
        {
            section: t("unfcccSdTool:land"),
            fields: [
                {
                    name: "landQ1",
                    label: t("unfcccSdTool:landQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "landQ2",
                    label: t("unfcccSdTool:landQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "landQ3",
                    label: t("unfcccSdTool:landQ3"),
                    hide: true,
                    required: true,
                },
                {
                    name: "landQ4",
                    label: t("unfcccSdTool:landQ4"),
                    hide: true,
                    required: true,
                },
                {
                    name: "landQ5",
                    label: t("unfcccSdTool:landQ5"),
                    hide: true,
                    required: true,
                },
                {
                    name: "landQ6",
                    label: t("unfcccSdTool:landQ6"),
                    hide: true,
                    required: true,
                },
                {
                    name: "landQ7",
                    label: t("unfcccSdTool:landQ7"),
                    hide: true,
                    required: true,
                },
                {
                    name: "landQ8",
                    label: t("unfcccSdTool:landQ8"),
                    hide: true,
                    required: true,
                },
            ],
        },
        {
            section: t("unfcccSdTool:water"),
            fields: [
                {
                    name: "waterQ1",
                    label: t("unfcccSdTool:waterQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "waterQ2",
                    label: t("unfcccSdTool:waterQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "waterQ3",
                    label: t("unfcccSdTool:waterQ3"),
                    hide: true,
                    required: true,
                },
                {
                    name: "waterQ4",
                    label: t("unfcccSdTool:waterQ4"),
                    hide: true,
                    required: true,
                },
                {
                    name: "waterQ5",
                    label: t("unfcccSdTool:waterQ5"),
                    hide: true,
                    required: true,
                },
                {
                    name: "waterQ6",
                    label: t("unfcccSdTool:waterQ6"),
                    hide: true,
                    required: true,
                },
                {
                    name: "waterQ7",
                    label: t("unfcccSdTool:waterQ7"),
                    hide: true,
                    required: true,
                },
            ],
        },
        {
            section: t("unfcccSdTool:naturalResource"),
            fields: [
                {
                    name: "naturalResourceQ1",
                    label: t("unfcccSdTool:naturalResourceQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "naturalResourceQ2",
                    label: t("unfcccSdTool:naturalResourceQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "naturalResourceQ3",
                    label: t("unfcccSdTool:naturalResourceQ3"),
                    hide: true,
                    required: true,
                },
                {
                    name: "naturalResourceQ4",
                    label: t("unfcccSdTool:naturalResourceQ4"),
                    hide: true,
                    required: true,
                },
                {
                    name: "naturalResourceQ5",
                    label: t("unfcccSdTool:naturalResourceQ5"),
                    hide: true,
                    required: true,
                },
                {
                    name: "naturalResourceQ6",
                    label: t("unfcccSdTool:naturalResourceQ6"),
                    hide: true,
                    required: true,
                },
            ],
        },
    ];
    var formOne = antd.Form.useForm()[0];
    var _a = React.useState(environmentalDetailsInitial), environmentalDetails = _a[0], setEnvironmentalDetails = _a[1];
    var _b = React.useState(); _b[0]; var setEnvironmentalUpdatedDetails = _b[1];
    var _c = React.useState(), environmentalFormDetails = _c[0], setEnvironmentalFormDetails = _c[1];
    var onFieldsChange = function (changedFields) {
        var _a, _b;
        var changedFieldName = (_a = changedFields[0]) === null || _a === void 0 ? void 0 : _a.name[0];
        var changedFieldValue = (_b = changedFields[0]) === null || _b === void 0 ? void 0 : _b.value;
        if (changedFieldName.includes("1")) {
            var sectionName_1 = changedFieldName.replace(/\d/g, "").replace("Q", "");
            var updatedEnvironmentalDetails = __spreadArray([], environmentalDetails, true);
            var sectionIndex = updatedEnvironmentalDetails.findIndex(function (section) { return section.section === t("unfcccSdTool:" + sectionName_1); });
            updatedEnvironmentalDetails[sectionIndex].fields.forEach(function (field) {
                if (field.name !== changedFieldName) {
                    field.hide = changedFieldValue !== exports.RadioButtonStatus.YES;
                }
            });
            setEnvironmentalDetails(updatedEnvironmentalDetails);
        }
    };
    React.useEffect(function () {
        onFormSubmit(environmentalFormDetails);
    }, [environmentalFormDetails]);
    var onEnvironmentalValuesChanged = function (changedValues) {
        setEnvironmentalFormDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
    };
    React.useEffect(function () {
        if (environmentalViewData && viewOnly === true) {
            var updatedEnvironmentalData = [
                {
                    section: t("unfcccSdTool:air"),
                    fields: [],
                },
                {
                    section: t("unfcccSdTool:land"),
                    fields: [],
                },
                {
                    section: t("unfcccSdTool:water"),
                    fields: [],
                },
                {
                    section: t("unfcccSdTool:naturalResource"),
                    fields: [],
                },
            ];
            var _loop_1 = function (key) {
                var section = "";
                if (String(key).includes("air")) {
                    section = t("unfcccSdTool:air");
                }
                else if (String(key).includes("land")) {
                    section = t("unfcccSdTool:land");
                }
                else if (String(key).includes("water")) {
                    section = t("unfcccSdTool:water");
                }
                else if (String(key).includes("naturalResource")) {
                    section = t("unfcccSdTool:naturalResource");
                }
                var environmentalItem = updatedEnvironmentalData.find(function (item) { return item.section === section; });
                if (environmentalItem) {
                    environmentalItem.fields.push({
                        name: key,
                        label: t("unfcccSdTool:" + key),
                        hide: false,
                        value: environmentalViewData[key],
                    });
                }
            };
            for (var key in environmentalViewData) {
                _loop_1(key);
            }
            var filteredEconomicData = updatedEnvironmentalData.filter(function (item) { return item.fields.length > 0; });
            setEnvironmentalUpdatedDetails(filteredEconomicData);
            setEnvironmentalDetails(filteredEconomicData);
            console.log(filteredEconomicData);
        }
    }, []);
    return (React.createElement("div", { className: "co-benifits-tab-item" },
        React.createElement(antd.Form, { name: "environmental-details", className: "benifits-details-environmental", labelCol: { md: 16, lg: 19, xl: 17 }, wrapperCol: { md: 8, lg: 5, xl: 7 }, layout: "horizontal", requiredMark: true, form: formOne, onFieldsChange: onFieldsChange, onValuesChange: onEnvironmentalValuesChanged },
            React.createElement("div", { className: environmentalViewData ? "section view-section" : "section" },
                React.createElement("div", { className: "unfccSdTool-section-wrapper" },
                    React.createElement(antd.Row, { justify: "center", align: "middle", style: { width: "100%" } },
                        React.createElement(antd.Col, { span: 24, className: "unfcccSdTool-section-title" },
                            React.createElement("span", null,
                                React.createElement("a", { target: "_blank", href: "https://www4.unfccc.int/sites/sdcmicrosite/Pages/Create-a-report.aspx" }, t("unfcccSdTool:unfcccSdToolTitle")))),
                        React.createElement(antd.Col, { span: 24 },
                            React.createElement("div", { className: "unfccSdTool-section-divider" })),
                        React.createElement(antd.Col, { span: 24, className: "unfcccSdTool-section-title" },
                            React.createElement("span", null, t("unfcccSdTool:environmental"))),
                        React.createElement(antd.Col, { span: 24 },
                            React.createElement("div", { className: "unfccSdTool-section-divider", style: { marginBottom: "20px" } })))),
                (environmentalDetails === null || environmentalDetails === void 0 ? void 0 : environmentalDetails.length) === 0 && (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE })), environmentalDetails === null || environmentalDetails === void 0 ? void 0 :
                environmentalDetails.map(function (environmentalDetail) {
                    var _a;
                    return (React.createElement(React.Fragment, null,
                        React.createElement("div", { className: "title" }, environmentalDetail === null || environmentalDetail === void 0 ? void 0 : environmentalDetail.section), (_a = environmentalDetail === null || environmentalDetail === void 0 ? void 0 : environmentalDetail.fields) === null || _a === void 0 ? void 0 :
                        _a.map(function (field, index) {
                            return !(field === null || field === void 0 ? void 0 : field.hide) && (React.createElement(antd.Form.Item, { label: field === null || field === void 0 ? void 0 : field.label, className: "form-item ".concat(index !== 0 ? "field-margin" : ""), name: field === null || field === void 0 ? void 0 : field.name, rules: [
                                    {
                                        required: field === null || field === void 0 ? void 0 : field.required,
                                        message: (field === null || field === void 0 ? void 0 : field.required) &&
                                            "".concat(t(field === null || field === void 0 ? void 0 : field.name), " ").concat(t("unfcccSdTool:isRequired")),
                                    },
                                ] },
                                React.createElement(antd.Radio.Group, { size: "middle", onChange: function () { }, disabled: environmentalViewData && true }, environmentalViewData ? (React.createElement(React.Fragment, null,
                                    (field === null || field === void 0 ? void 0 : field.value) === exports.RadioButtonStatus.YES && (React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.YES }, t("unfcccSdTool:yes")))),
                                    (field === null || field === void 0 ? void 0 : field.value) === exports.RadioButtonStatus.NO && (React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NO }, t("unfcccSdTool:no")))),
                                    (field === null || field === void 0 ? void 0 : field.value) === exports.RadioButtonStatus.NA && (React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NA }, t("unfcccSdTool:na")))))) : (React.createElement(React.Fragment, null,
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.YES }, t("unfcccSdTool:yes"))),
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NO }, t("unfcccSdTool:no"))),
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NA }, t("unfcccSdTool:na"))))))));
                        })));
                })))));
};

var Economic = function (props) {
    var onFormSubmit = props.onFormSubmit, economicViewData = props.economicViewData, viewOnly = props.viewOnly, translator = props.translator;
    var t = translator.t;
    var economicDetailsInitial = [
        {
            section: t("unfcccSdTool:growth"),
            fields: [
                {
                    name: "growthQ1",
                    label: t("unfcccSdTool:growthQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "growthQ2",
                    label: t("unfcccSdTool:growthQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "growthQ3",
                    label: t("unfcccSdTool:growthQ3"),
                    hide: true,
                    required: true,
                },
                {
                    name: "growthQ4",
                    label: t("unfcccSdTool:growthQ4"),
                    hide: true,
                    required: true,
                },
                {
                    name: "growthQ5",
                    label: t("unfcccSdTool:growthQ5"),
                    hide: true,
                    required: true,
                },
                {
                    name: "growthQ6",
                    label: t("unfcccSdTool:growthQ6"),
                    hide: true,
                    required: true,
                },
                {
                    name: "growthQ7",
                    label: t("unfcccSdTool:growthQ7"),
                    hide: true,
                    required: true,
                },
                {
                    name: "growthQ8",
                    label: t("unfcccSdTool:growthQ8"),
                    hide: true,
                    required: true,
                },
            ],
        },
        {
            section: t("unfcccSdTool:energy"),
            fields: [
                {
                    name: "energyQ1",
                    label: t("unfcccSdTool:energyQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "energyQ2",
                    label: t("unfcccSdTool:energyQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "energyQ3",
                    label: t("unfcccSdTool:energyQ3"),
                    hide: true,
                    required: true,
                },
                {
                    name: "energyQ4",
                    label: t("unfcccSdTool:energyQ4"),
                    hide: true,
                    required: true,
                },
                {
                    name: "energyQ5",
                    label: t("unfcccSdTool:energyQ5"),
                    hide: true,
                    required: true,
                },
            ],
        },
        {
            section: t("unfcccSdTool:techTransfer"),
            fields: [
                {
                    name: "techTransferQ1",
                    label: t("unfcccSdTool:techTransferQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "techTransferQ2",
                    label: t("unfcccSdTool:techTransferQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "techTransferQ3",
                    label: t("unfcccSdTool:techTransferQ3"),
                    hide: true,
                    required: true,
                },
                {
                    name: "techTransferQ4",
                    label: t("unfcccSdTool:techTransferQ4"),
                    hide: true,
                    required: true,
                },
                {
                    name: "techTransferQ5",
                    label: t("unfcccSdTool:techTransferQ5"),
                    hide: true,
                    required: true,
                },
                {
                    name: "techTransferQ6",
                    label: t("unfcccSdTool:techTransferQ6"),
                    hide: true,
                    required: true,
                },
            ],
        },
        {
            section: t("unfcccSdTool:balanceOfPayments"),
            fields: [
                {
                    name: "balanceOfPaymentsQ1",
                    label: t("unfcccSdTool:balanceOfPaymentsQ1"),
                    hide: false,
                    required: false,
                },
                {
                    name: "balanceOfPaymentsQ2",
                    label: t("unfcccSdTool:balanceOfPaymentsQ2"),
                    hide: true,
                    required: true,
                },
                {
                    name: "balanceOfPaymentsQ3",
                    label: t("unfcccSdTool:balanceOfPaymentsQ3"),
                    hide: true,
                    required: true,
                },
            ],
        },
        {
            section: t("unfcccSdTool:furtherInfo"),
            fields: [
                {
                    name: "furtherInfoQ1",
                    label: t("unfcccSdTool:furtherInfoQ1"),
                    hide: false,
                    required: false,
                },
            ],
        },
    ];
    var formOne = antd.Form.useForm()[0];
    var _a = React.useState(economicDetailsInitial), economicDetails = _a[0], setEconomicDetails = _a[1];
    var _b = React.useState(), economicFormDetails = _b[0], setEconomicFormDetails = _b[1];
    var onFieldsChange = function (changedFields) {
        var _a, _b;
        var changedFieldName = (_a = changedFields[0]) === null || _a === void 0 ? void 0 : _a.name[0];
        var changedFieldValue = (_b = changedFields[0]) === null || _b === void 0 ? void 0 : _b.value;
        if (changedFieldName.includes("1")) {
            var sectionName_1 = changedFieldName.replace(/\d/g, "").replace("Q", "");
            var updatedEconomicDetails = __spreadArray([], economicDetails, true);
            var sectionIndex = updatedEconomicDetails.findIndex(function (section) { return section.section === t("unfcccSdTool:" + sectionName_1); });
            updatedEconomicDetails[sectionIndex].fields.forEach(function (field) {
                if (field.name !== changedFieldName) {
                    field.hide = changedFieldValue !== exports.RadioButtonStatus.YES;
                }
            });
            setEconomicDetails(updatedEconomicDetails);
        }
    };
    React.useEffect(function () {
        onFormSubmit(economicFormDetails);
    }, [economicFormDetails]);
    var onEconomicValuesChanged = function (changedValues) {
        setEconomicFormDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
    };
    React.useEffect(function () {
        if (economicViewData && viewOnly === true) {
            var updatedEconomicData = [
                {
                    section: t("unfcccSdTool:growth"),
                    fields: [],
                },
                {
                    section: t("unfcccSdTool:energy"),
                    fields: [],
                },
                {
                    section: t("unfcccSdTool:techTransfer"),
                    fields: [],
                },
                {
                    section: t("unfcccSdTool:balanceOfPayments"),
                    fields: [],
                },
                {
                    section: t("unfcccSdTool:furtherInfo"),
                    fields: [],
                },
            ];
            var _loop_1 = function (key) {
                var section = "";
                if (String(key).includes("growth")) {
                    section = t("unfcccSdTool:growth");
                }
                else if (String(key).includes("energy")) {
                    section = t("unfcccSdTool:energy");
                }
                else if (String(key).includes("techTransfer")) {
                    section = t("unfcccSdTool:techTransfer");
                }
                else if (String(key).includes("balanceOfPayments")) {
                    section = t("unfcccSdTool:balanceOfPayments");
                }
                else if (String(key).includes("furtherInfo")) {
                    section = t("unfcccSdTool:furtherInfo");
                }
                var economicItem = updatedEconomicData.find(function (item) { return item.section === section; });
                if (economicItem) {
                    economicItem.fields.push({
                        name: key,
                        label: t("unfcccSdTool:" + key),
                        hide: false,
                        value: economicViewData[key],
                    });
                }
            };
            for (var key in economicViewData) {
                _loop_1(key);
            }
            var filteredEconomicData = updatedEconomicData.filter(function (item) { return item.fields.length > 0; });
            setEconomicDetails(filteredEconomicData);
            console.log(updatedEconomicData);
        }
    }, []);
    return (React.createElement("div", { className: "co-benifits-tab-item" },
        React.createElement(antd.Form, { name: "economic-details", className: "benifits-details-economic", labelCol: { md: 16, lg: 19, xl: 17 }, wrapperCol: { md: 8, lg: 5, xl: 7 }, layout: "horizontal", requiredMark: true, form: formOne, onFieldsChange: onFieldsChange, onValuesChange: onEconomicValuesChanged },
            React.createElement("div", { className: economicViewData ? "section view-section" : "section" },
                React.createElement("div", { className: "unfccSdTool-section-wrapper" },
                    React.createElement(antd.Row, { justify: "center", align: "middle", style: { width: '100%' } },
                        React.createElement(antd.Col, { span: 24 },
                            React.createElement("div", { className: "unfccSdTool-section-divider" })),
                        React.createElement(antd.Col, { span: 24, className: "unfcccSdTool-section-title" },
                            React.createElement("span", null, t("unfcccSdTool:economic"))))),
                (economicDetails === null || economicDetails === void 0 ? void 0 : economicDetails.length) === 0 && (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE })), economicDetails === null || economicDetails === void 0 ? void 0 :
                economicDetails.map(function (environmentalDetail) {
                    var _a;
                    return (React.createElement(React.Fragment, null,
                        React.createElement("div", { className: "title" }, environmentalDetail === null || environmentalDetail === void 0 ? void 0 : environmentalDetail.section), (_a = environmentalDetail === null || environmentalDetail === void 0 ? void 0 : environmentalDetail.fields) === null || _a === void 0 ? void 0 :
                        _a.map(function (field, index) {
                            return !(field === null || field === void 0 ? void 0 : field.hide) && (React.createElement(antd.Form.Item, { label: field === null || field === void 0 ? void 0 : field.label, className: "form-item ".concat(index !== 0 ? "field-margin" : ""), name: field === null || field === void 0 ? void 0 : field.name, rules: [
                                    {
                                        required: field === null || field === void 0 ? void 0 : field.required,
                                        message: (field === null || field === void 0 ? void 0 : field.required) &&
                                            "".concat(t(field === null || field === void 0 ? void 0 : field.name), " ").concat(t("coBenifits:isRequired")),
                                    },
                                ] },
                                React.createElement(antd.Radio.Group, { size: "middle", onChange: function () { }, disabled: economicViewData && true }, economicViewData ? (React.createElement(React.Fragment, null,
                                    (field === null || field === void 0 ? void 0 : field.value) === exports.RadioButtonStatus.YES && (React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.YES }, t("unfcccSdTool:yes")))),
                                    (field === null || field === void 0 ? void 0 : field.value) === exports.RadioButtonStatus.NO && (React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NO }, t("unfcccSdTool:no")))),
                                    (field === null || field === void 0 ? void 0 : field.value) === exports.RadioButtonStatus.NA && (React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NA }, t("unfcccSdTool:na")))))) : (React.createElement(React.Fragment, null,
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.YES }, t("unfcccSdTool:yes"))),
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NO }, t("unfcccSdTool:no"))),
                                    React.createElement("div", { className: "yes-no-radio-container" },
                                        React.createElement(antd.Radio.Button, { className: "yes-no-radio", value: exports.RadioButtonStatus.NA }, t("unfcccSdTool:na"))))))));
                        })));
                })))));
};

var Social = function (props) {
    var onFormSubmit = props.onFormSubmit, socialViewData = props.socialViewData, viewOnly = props.viewOnly, translator = props.translator;
    var t = translator.t;
    var form = antd.Form.useForm()[0];
    var _a = React.useState(0); _a[0]; var setRefreshCounter = _a[1];
    var _b = React.useState(), socialDetails = _b[0], setSocialDetails = _b[1];
    var _c = React.useState(true), isFormValid = _c[0], setIsFormValid = _c[1];
    var SocialElementDetails = [
        {
            title: t("unfcccSdTool:jobs"),
            label: t("unfcccSdTool:jobRelatedMainQ"),
            name: "jobRelatedMainQ",
            subItems: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:jobRelatedSubQ1"),
                    name: "jobRelatedSubQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:jobRelatedSubQ2"),
                    name: "jobRelatedSubQ2",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:jobRelatedSubQ3"),
                    name: "jobRelatedSubQ3",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:jobRelatedSubQ4"),
                    name: "jobRelatedSubQ4",
                },
                {
                    type: exports.FormElementType.Input,
                    label: t("unfcccSdTool:jobRelatedSubQ5"),
                    name: "jobRelatedSubQ5",
                },
                {
                    type: exports.FormElementType.Input,
                    label: t("unfcccSdTool:jobRelatedSubQ6"),
                    name: "jobRelatedSubQ6",
                },
                {
                    type: exports.FormElementType.Input,
                    label: t("unfcccSdTool:jobRelatedSubQ7"),
                    name: "jobRelatedSubQ7",
                },
            ],
        },
        {
            title: t("unfcccSdTool:health"),
            label: t("unfcccSdTool:healthRelatedMainQ"),
            name: "healthRelatedMainQ",
            subItems: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ1"),
                    name: "healthRelatedSubQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ2"),
                    name: "healthRelatedSubQ2",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ3"),
                    name: "healthRelatedSubQ3",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ4"),
                    name: "healthRelatedSubQ4",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ5"),
                    name: "healthRelatedSubQ5",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ6"),
                    name: "healthRelatedSubQ6",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ7"),
                    name: "healthRelatedSubQ7",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:healthRelatedSubQ8"),
                    name: "healthRelatedSubQ8",
                },
            ],
        },
        {
            title: t("unfcccSdTool:educational"),
            label: t("unfcccSdTool:educationRelatedMainQ"),
            name: "educationRelatedMainQ",
            subItems: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:educationRelatedSubQ1"),
                    name: "educationRelatedSubQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:educationRelatedSubQ2"),
                    name: "educationRelatedSubQ2",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:educationRelatedSubQ3"),
                    name: "educationRelatedSubQ3",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:educationRelatedSubQ4"),
                    name: "educationRelatedSubQ4",
                },
            ],
        },
        {
            title: t("unfcccSdTool:welfare"),
            label: t("unfcccSdTool:welfareRelatedMainQ"),
            name: "welfareRelatedMainQ",
            subItems: [
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ1"),
                    name: "welfareRelatedSubQ1",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ2"),
                    name: "welfareRelatedSubQ2",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ3"),
                    name: "welfareRelatedSubQ3",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ4"),
                    name: "welfareRelatedSubQ4",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ5"),
                    name: "welfareRelatedSubQ5",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ6"),
                    name: "welfareRelatedSubQ6",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ7"),
                    name: "welfareRelatedSubQ7",
                },
                {
                    type: exports.FormElementType.Radio,
                    label: t("unfcccSdTool:welfareRelatedSubQ8"),
                    name: "welfareRelatedSubQ8",
                },
            ],
        },
    ];
    React.useEffect(function () {
        if (socialViewData && !viewOnly) {
            setSocialDetails(socialViewData);
            form.setFieldsValue(socialViewData);
        }
    }, [socialViewData]);
    var validateForm = function () { return __awaiter(void 0, void 0, void 0, function () {
        var exception_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    form.submit();
                    return [4 /*yield*/, form.validateFields()];
                case 1:
                    _a.sent();
                    return [3 /*break*/, 3];
                case 2:
                    exception_1 = _a.sent();
                    if (exception_1.errorFields.length > 0) {
                        setIsFormValid(false);
                    }
                    else {
                        setIsFormValid(true);
                    }
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var onRadioStatusChanged = function () {
        setRefreshCounter(function (pre) { return pre + 1; });
        validateForm();
    };
    React.useEffect(function () {
        onFormSubmit(socialDetails, isFormValid);
    }, [socialDetails, isFormValid]);
    var onSocialValuesChanged = function (changedValues) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setSocialDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
            validateForm();
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        validateForm();
    });
    return (React.createElement("div", { className: "social-tab-item" },
        React.createElement("div", { className: "unfccSdTool-section-wrapper" },
            React.createElement(antd.Row, { justify: "center", align: "middle", style: { width: '100%' } },
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "unfccSdTool-section-divider" })),
                React.createElement(antd.Col, { span: 24, className: "unfcccSdTool-section-title" },
                    React.createElement("span", null, t("unfcccSdTool:social"))))),
        viewOnly && !socialViewData && (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE })),
        ((viewOnly && socialViewData) || !viewOnly) && (React.createElement(antd.Form, { name: "socialDetails", labelWrap: true, form: form, labelAlign: "left", labelCol: { md: 16, lg: 18, xl: 18 }, wrapperCol: { md: 8, lg: 6, xl: 6 }, layout: "horizontal", onValuesChange: onSocialValuesChanged }, SocialElementDetails.map(function (element) {
            return (React.createElement(React.Fragment, null,
                ((viewOnly && socialViewData.hasOwnProperty(element === null || element === void 0 ? void 0 : element.name)) ||
                    !viewOnly) && (React.createElement("div", { style: { marginBottom: "15px" } },
                    React.createElement("label", { className: "co-sub-title-text" }, element.title))),
                !viewOnly && (React.createElement(React.Fragment, null,
                    React.createElement(antd.Form.Item, { className: "mg-left-2", label: element.label, name: element.name },
                        React.createElement(antd.Radio.Group, { size: "middle", onChange: onRadioStatusChanged },
                            React.createElement("div", { className: "radio-container" },
                                React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.YES }, t("unfcccSdTool:yes"))),
                            React.createElement("div", { className: "radio-container" },
                                React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NO }, t("unfcccSdTool:no"))),
                            React.createElement("div", { className: "radio-container" },
                                React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NA }, t("unfcccSdTool:na"))))),
                    form.getFieldValue(element.name) ===
                        exports.RadioButtonStatus.YES &&
                        element.subItems.map(function (elementItem) {
                            if (elementItem.type === exports.FormElementType.Radio) {
                                return (React.createElement(antd.Form.Item, { label: elementItem.label, name: elementItem.name, className: "mg-left-4", rules: [
                                        {
                                            required: true,
                                            message: "",
                                        },
                                    ] },
                                    React.createElement(antd.Radio.Group, { size: "middle" },
                                        React.createElement("div", { className: "radio-container" },
                                            React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.YES }, t("unfcccSdTool:yes"))),
                                        React.createElement("div", { className: "radio-container" },
                                            React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NO }, t("unfcccSdTool:no"))),
                                        React.createElement("div", { className: "radio-container" },
                                            React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NA }, t("unfcccSdTool:na"))))));
                            }
                            else if (elementItem.type === exports.FormElementType.Input) {
                                return (React.createElement(antd.Form.Item, { className: "mg-left-4", labelCol: { span: 24 }, wrapperCol: { span: 24 }, label: elementItem.label, name: elementItem.name },
                                    React.createElement(antd.InputNumber, { style: { width: 303 } })));
                            }
                        }))),
                viewOnly && socialViewData && (React.createElement(React.Fragment, null,
                    socialViewData.hasOwnProperty(element === null || element === void 0 ? void 0 : element.name) && (React.createElement("div", { className: "view-section" },
                        React.createElement(antd.Form.Item, { className: "mg-left-2", label: element.label, name: element.name },
                            React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                React.createElement("div", { className: "radio-container-view" },
                                    React.createElement(antd.Radio.Button, { className: "radio" }, socialViewData[element.name])))))),
                    socialViewData[element.name] === exports.RadioButtonStatus.YES &&
                        element.subItems.map(function (elementItem) {
                            if (elementItem.type === exports.FormElementType.Radio) {
                                return (React.createElement(React.Fragment, null, socialViewData.hasOwnProperty(elementItem === null || elementItem === void 0 ? void 0 : elementItem.name) && (React.createElement("div", { className: "view-section" },
                                    React.createElement(antd.Form.Item, { label: elementItem.label, name: elementItem.name, className: "mg-left-4" },
                                        React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                            React.createElement("div", { className: "radio-container-view-child" },
                                                React.createElement(antd.Radio.Button, { className: "radio" }, socialViewData[elementItem.name]))))))));
                            }
                            else if (elementItem.type === exports.FormElementType.Input) {
                                return (React.createElement("div", { className: "view-section" },
                                    React.createElement(antd.Form.Item, { className: "mg-left-4", labelCol: { span: 24 }, wrapperCol: { span: 24 }, label: elementItem.label, name: elementItem.name },
                                        React.createElement(antd.Input, { disabled: true, style: { width: 303 }, defaultValue: socialViewData.hasOwnProperty(elementItem === null || elementItem === void 0 ? void 0 : elementItem.name)
                                                ? socialViewData[elementItem.name]
                                                : "-" }))));
                            }
                        }),
                    " "))));
        })))));
};

var SocialEnvironmentalRisk = function (props) {
    var onFormSubmit = props.onFormSubmit, SocialEnvironmentalRiskData = props.SocialEnvironmentalRiskData, viewOnly = props.viewOnly, translator = props.translator;
    var t = translator.t;
    var form = antd.Form.useForm()[0];
    var _a = React.useState(), socialEnvironmentalFormDetails = _a[0], setSocialEnvironmentalFormDetails = _a[1];
    var _b = React.useState([
        {
            title: t("socialEnvironmentalRisk:humanRightsSubHeader"),
            isTitleVisible: true,
            subItems: [
                {
                    title: t("socialEnvironmentalRisk:humanRights"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:humanRightsQ1"),
                            name: "humanRightsQ1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:humanRightsQ2"),
                            name: "humanRightsQ2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:humanRightsQ3"),
                            name: "humanRightsQ3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:humanRightsQ4"),
                            name: "humanRightsQ4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:humanRightsQ5"),
                            name: "humanRightsQ5",
                        },
                        {
                            label: t("socialEnvironmentalRisk:humanRightsQ6"),
                            name: "humanRightsQ6",
                        },
                        {
                            label: t("socialEnvironmentalRisk:humanRightsQ7"),
                            name: "humanRightsQ7",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:genderEqalityWomenEmpower"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:genderEqalityWomenEmpowerQ1"),
                            name: "genderEqalityWomenEmpowerQ1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:genderEqalityWomenEmpowerQ2"),
                            name: "genderEqalityWomenEmpowerQ2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:genderEqalityWomenEmpowerQ3"),
                            name: "genderEqalityWomenEmpowerQ3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:genderEqalityWomenEmpowerQ4"),
                            name: "genderEqalityWomenEmpowerQ4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:genderEqalityWomenEmpowerQ5"),
                            name: "genderEqalityWomenEmpowerQ5",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:accountability"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:accountabilityQ1"),
                            name: "accountabilityQ1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:accountabilityQ2"),
                            name: "AccountabilityQ2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:accountabilityQ3"),
                            name: "accountabilityQ3",
                        },
                    ],
                },
            ],
        },
        {
            title: t("socialEnvironmentalRisk:standardSubHeader"),
            isTitleVisible: true,
            subItems: [
                {
                    title: t("socialEnvironmentalRisk:standard1"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard1Q1"),
                            name: "standard1Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q2"),
                            name: "standard1Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q3"),
                            name: "standard1Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q4"),
                            name: "standard1Q4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q5"),
                            name: "standard1Q5",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q6"),
                            name: "standard1Q6",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q7"),
                            name: "standard1Q7",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q8"),
                            name: "standard1Q8",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q9"),
                            name: "standard1Q9",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q10"),
                            name: "standard1Q10",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q11"),
                            name: "standard1Q11",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q12"),
                            name: "standard1Q12",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q13"),
                            name: "standard1Q13",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard1Q14"),
                            name: "standard1Q14",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:standard2"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard2Q1"),
                            name: "standard2Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard2Q2"),
                            name: "standard2Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard2Q3"),
                            name: "standard2Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard2Q4"),
                            name: "standard2Q4",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:standard3"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard3Q1"),
                            name: "standard3Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard3Q2"),
                            name: "standard3Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard3Q3"),
                            name: "standard3Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard3Q4"),
                            name: "standard3Q4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard3Q5"),
                            name: "standard3Q5",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard3Q6"),
                            name: "standard3Q6",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard3Q7"),
                            name: "standard3Q7",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard3Q8"),
                            name: "standard3Q8",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:standard4"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard4Q1"),
                            name: "standard4Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard4Q2"),
                            name: "standard4Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard4Q3"),
                            name: "standard4Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard4Q4"),
                            name: "standard4Q4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard4Q5"),
                            name: "standard4Q5",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:standard5"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard5Q1"),
                            name: "standard5Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard5Q2"),
                            name: "standard5Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard5Q3"),
                            name: "standard5Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard5Q4"),
                            name: "standard5Q4",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:standard6"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard6Q1"),
                            name: "standard6Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q2"),
                            name: "standard6Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q3"),
                            name: "standard6Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q4"),
                            name: "standard6Q4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q5"),
                            name: "standard6Q5",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q6"),
                            name: "standard6Q6",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q7"),
                            name: "standard6Q7",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q8"),
                            name: "standard6Q8",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard6Q9"),
                            name: "standard6Q9",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:standard7"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard7Q1"),
                            name: "standard7Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard7Q2"),
                            name: "standard7Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard7Q3"),
                            name: "standard7Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard7Q4"),
                            name: "standard7Q4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard7Q5"),
                            name: "standard7Q5",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard7Q6"),
                            name: "standard7Q6",
                        },
                    ],
                },
                {
                    title: t("socialEnvironmentalRisk:standard8"),
                    isTitleVisible: true,
                    subItems: [
                        {
                            label: t("socialEnvironmentalRisk:standard8Q1"),
                            name: "standard8Q1",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard8Q2"),
                            name: "standard8Q2",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard8Q3"),
                            name: "standard8Q3",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard8Q4"),
                            name: "standard8Q4",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard8Q5"),
                            name: "standard8Q5",
                        },
                        {
                            label: t("socialEnvironmentalRisk:standard8Q6"),
                            name: "standard8Q6",
                        },
                    ],
                },
            ],
        },
    ]), socialEnvironmentalDetails = _b[0], setSocialEnvironmentalDetails = _b[1];
    React.useEffect(function () {
        onFormSubmit(socialEnvironmentalFormDetails);
    }, [socialEnvironmentalFormDetails]);
    React.useEffect(function () {
        if (SocialEnvironmentalRiskData && !viewOnly) {
            setSocialEnvironmentalFormDetails(SocialEnvironmentalRiskData);
            form.setFieldsValue(SocialEnvironmentalRiskData);
        }
        else if (SocialEnvironmentalRiskData && viewOnly) {
            checkHeaderAvailability();
        }
    }, [SocialEnvironmentalRiskData]);
    var checkHeaderAvailability = function () {
        socialEnvironmentalDetails.forEach(function (section) {
            section.isTitleVisible = false;
            section.subItems.forEach(function (subSection) {
                subSection.isTitleVisible = false;
                subSection.subItems.forEach(function (element) {
                    if (SocialEnvironmentalRiskData.hasOwnProperty(element === null || element === void 0 ? void 0 : element.name)) {
                        subSection.isTitleVisible = true;
                    }
                });
                if (subSection.isTitleVisible) {
                    section.isTitleVisible = true;
                }
            });
        });
        setSocialEnvironmentalDetails(socialEnvironmentalDetails);
    };
    var SocialEnvironmentalDetailsChanged = function (changedValues) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setSocialEnvironmentalFormDetails(function (pre) { return (__assign(__assign({}, pre), changedValues)); });
            return [2 /*return*/];
        });
    }); };
    return (React.createElement("div", { className: "social-environment-tab-item" },
        viewOnly && !SocialEnvironmentalRiskData && (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE })),
        ((viewOnly && SocialEnvironmentalRiskData) || !viewOnly) && (React.createElement(antd.Form, { name: "SocialEnvironmentalDetails", labelWrap: true, form: form, labelAlign: "left", labelCol: { md: 16, lg: 18, xl: 18 }, wrapperCol: { md: 8, lg: 6, xl: 6 }, layout: "horizontal", onValuesChange: SocialEnvironmentalDetailsChanged },
            !viewOnly &&
                socialEnvironmentalDetails.map(function (section) {
                    return (React.createElement(React.Fragment, null,
                        React.createElement("div", { className: "social-environment-risk-title-section" },
                            React.createElement(antd.Row, { justify: "center", align: "middle", style: { width: "100%" } },
                                React.createElement(antd.Col, { span: 24, className: "social-environment-risk-title" },
                                    React.createElement("span", null, section.title)))),
                        section.subItems.map(function (subSection) {
                            return (React.createElement(React.Fragment, null,
                                React.createElement("div", { style: { marginBottom: "15px" } },
                                    React.createElement("label", { className: "co-sub-title-text" }, subSection.title)),
                                subSection.subItems.map(function (element) {
                                    return (React.createElement(antd.Form.Item, { className: "mg-left-2 form-item", label: element.label, name: element.name },
                                        React.createElement(antd.Radio.Group, { size: "middle" },
                                            React.createElement("div", { className: "radio-container" },
                                                React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.YES }, t("socialEnvironmentalRisk:yes"))),
                                            React.createElement("div", { className: "radio-container" },
                                                React.createElement(antd.Radio.Button, { className: "radio", value: exports.RadioButtonStatus.NO }, t("socialEnvironmentalRisk:no"))))));
                                })));
                        })));
                }),
            viewOnly &&
                SocialEnvironmentalRiskData &&
                socialEnvironmentalDetails.map(function (section) {
                    return (React.createElement(React.Fragment, null,
                        section.isTitleVisible && (React.createElement("div", { className: "social-environment-risk-title-section" },
                            React.createElement(antd.Row, { justify: "center", align: "middle", style: { width: "100%" } },
                                React.createElement(antd.Col, { span: 24, className: "social-environment-risk-title" },
                                    React.createElement("span", null, section.title))))),
                        section.subItems.map(function (subSection) {
                            return (React.createElement(React.Fragment, null,
                                subSection.isTitleVisible && (React.createElement("div", { style: { marginBottom: "15px" } },
                                    React.createElement("label", { className: "co-sub-title-text" }, subSection.title))),
                                subSection.subItems.map(function (element) {
                                    return (React.createElement(React.Fragment, null, SocialEnvironmentalRiskData.hasOwnProperty(element === null || element === void 0 ? void 0 : element.name) && (React.createElement("div", { className: "view-section" },
                                        React.createElement(antd.Form.Item, { className: "mg-left-2 form-item", label: element.label, name: element.name },
                                            React.createElement(antd.Radio.Group, { size: "middle", disabled: true },
                                                React.createElement("div", { className: "radio-container" },
                                                    React.createElement(antd.Radio.Button, { className: "radio" }, SocialEnvironmentalRiskData[element.name]))))))));
                                })));
                        })));
                })))));
};

var CoBenifitsComponent = function (props) {
    var onClickedBackBtn = props.onClickedBackBtn, onFormSubmit = props.onFormSubmit, coBenefitsDetails = props.coBenefitsDetails, submitButtonText = props.submitButtonText, viewOnly = props.viewOnly, coBenifitsViewDetails = props.coBenifitsViewDetails, _a = props.loading, loading = _a === void 0 ? false : _a, sdgGoalImages = props.sdgGoalImages, translator = props.translator;
    var _b = React.useState(), coBenefitDetails = _b[0], setCoBenefitDetails = _b[1];
    var _c = React.useState(true), isSocialFormValid = _c[0], setIsSocialFormValid = _c[1];
    var _d = React.useState(true), isAssessmentFormValid = _d[0], setIsAssessmentFormValid = _d[1];
    var t = translator.t;
    var onSdgGoalsFormSubmit = function (sdgGoalsDetails) {
        setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { sdgGoals: sdgGoalsDetails })); });
    };
    var onGenderParityFormSubmit = function (genderParityDetails) {
        if (genderParityDetails) {
            var values = Object.values(genderParityDetails).filter(function (val) {
                return (val !== undefined &&
                    typeof val != "boolean" &&
                    val.trim().length === 0) ||
                    val === undefined;
            });
            var keys = Object.keys(genderParityDetails);
            if (keys.length === values.length) {
                setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { genderPariy: undefined })); });
            }
            else {
                setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { genderPariy: genderParityDetails })); });
            }
        }
    };
    var onEnvironmentalFormSubmit = function (environmentalsDetails) {
        setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { environmental: environmentalsDetails })); });
    };
    var onEconomicFormSubmit = function (economicDetails) {
        setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { economic: economicDetails })); });
    };
    var onAssessmentFormSubmit = function (coBenefitsAssessmentDetails, isFormValid) {
        if (coBenefitsAssessmentDetails) {
            var values = Object.values(coBenefitsAssessmentDetails).filter(function (val) {
                return (val !== undefined &&
                    typeof val != "boolean" &&
                    val.trim().length === 0) ||
                    val === undefined;
            });
            var keys = Object.keys(coBenefitsAssessmentDetails);
            if (keys.length === values.length) {
                setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { assessmentDetails: undefined })); });
            }
            else {
                setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { assessmentDetails: coBenefitsAssessmentDetails })); });
            }
            setIsAssessmentFormValid(isFormValid);
        }
    };
    var onSafeguardFormSubmit = function (safeguardDetails) {
        setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { safeguardDetails: safeguardDetails })); });
    };
    var onSocialFormSubmit = function (socialValueDetails, isFormValid) {
        setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { socialValueDetails: socialValueDetails })); });
        setIsSocialFormValid(isFormValid);
    };
    var onSocialEnvironmentalFormSubmit = function (socialEnvironmentDetails) {
        setCoBenefitDetails(function (pre) { return (__assign(__assign({}, pre), { socialEnvironmentDetails: socialEnvironmentDetails })); });
    };
    var tabItems = [
        {
            label: t("coBenifits:sdgGoals"),
            key: "1",
            children: (React.createElement(SdgGoals, { onFormSubmit: onSdgGoalsFormSubmit, sdgGoalsViewData: viewOnly
                    ? (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.sdgGoals)
                        ? coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.sdgGoals
                        : []
                    : coBenefitsDetails === null || coBenefitsDetails === void 0 ? void 0 : coBenefitsDetails.sdgGoals, viewOnly: viewOnly || false, sdgGoalImages: sdgGoalImages })),
        },
        {
            label: t("coBenifits:genderPart"),
            key: "2",
            children: (React.createElement(GenderParity, { onFormSubmit: onGenderParityFormSubmit, genderParityViewData: viewOnly && (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.genderPariy), viewOnly: viewOnly || false, translator: translator })),
        },
        {
            label: t("coBenifits:undpSesp"),
            key: "3",
            children: (React.createElement(Safeguards, { safeGuardViewData: (viewOnly && (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.safeguardDetails)) ||
                    (!viewOnly && (coBenefitsDetails === null || coBenefitsDetails === void 0 ? void 0 : coBenefitsDetails.safeguardDetails)), viewOnly: viewOnly || false, onFormSubmit: onSafeguardFormSubmit, translator: translator })),
        },
        {
            label: t("coBenifits:unfcccSdTool"),
            key: "4",
            children: (React.createElement(React.Fragment, null,
                React.createElement(Environmental, { onFormSubmit: onEnvironmentalFormSubmit, environmentalViewData: viewOnly
                        ? (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.environmental)
                            ? coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.environmental
                            : {}
                        : undefined, viewOnly: viewOnly || false, translator: translator }),
                React.createElement(Social, { onFormSubmit: onSocialFormSubmit, socialViewData: (viewOnly && (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.socialValueDetails)) ||
                        (!viewOnly && (coBenefitsDetails === null || coBenefitsDetails === void 0 ? void 0 : coBenefitsDetails.socialValueDetails)), viewOnly: viewOnly || false, translator: translator }),
                React.createElement(Economic, { onFormSubmit: onEconomicFormSubmit, economicViewData: viewOnly
                        ? (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.economic)
                            ? coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.economic
                            : {}
                        : undefined, viewOnly: viewOnly || false, translator: translator }))),
        },
        {
            label: t("coBenifits:assessment"),
            key: "7",
            children: (React.createElement(Assessment, { onFormSubmit: onAssessmentFormSubmit, assessmentViewData: (viewOnly && (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.assessmentDetails)) ||
                    (!viewOnly && (coBenefitsDetails === null || coBenefitsDetails === void 0 ? void 0 : coBenefitsDetails.assessmentDetails)), viewOnly: viewOnly || false, translator: translator })),
        },
        {
            label: t("coBenifits:socialEnvironmentalRisk"),
            key: "8",
            children: (React.createElement(SocialEnvironmentalRisk, { onFormSubmit: onSocialEnvironmentalFormSubmit, SocialEnvironmentalRiskData: (viewOnly && (coBenifitsViewDetails === null || coBenifitsViewDetails === void 0 ? void 0 : coBenifitsViewDetails.socialEnvironmentDetails)) ||
                    (!viewOnly && (coBenefitsDetails === null || coBenefitsDetails === void 0 ? void 0 : coBenefitsDetails.socialEnvironmentDetails)), viewOnly: viewOnly || false, translator: translator })),
        },
    ];
    var onCoBenefitSubmit = function () {
        var economicOverallValidation = true;
        var environmentalOverallValidation = true;
        var economicDetailsFromForm = coBenefitDetails === null || coBenefitDetails === void 0 ? void 0 : coBenefitDetails.economic;
        var environmentalDetailsFromForm = coBenefitDetails === null || coBenefitDetails === void 0 ? void 0 : coBenefitDetails.environmental;
        var economicSectionValidation = {
            growth: {
                validation: false,
                fields: 8,
                filled: 0,
                firstFieldValue: "N/A",
            },
            energy: {
                validation: false,
                fields: 5,
                filled: 0,
                firstFieldValue: "N/A",
            },
            techTransfer: {
                validation: false,
                fields: 6,
                filled: 0,
                firstFieldValue: "N/A",
            },
            balanceOfPayments: {
                validation: false,
                fields: 3,
                filled: 0,
                firstFieldValue: "N/A",
            },
            furtherInfo: {
                validation: false,
                fields: 1,
                filled: 0,
                firstFieldValue: "N/A",
            },
        };
        var environmentalSectionValidation = {
            air: { validation: false, fields: 9, filled: 0, firstFieldValue: "N/A" },
            land: { validation: false, fields: 8, filled: 0, firstFieldValue: "N/A" },
            water: {
                validation: false,
                fields: 7,
                filled: 0,
                firstFieldValue: "N/A",
            },
            naturalResource: {
                validation: false,
                fields: 6,
                filled: 0,
                firstFieldValue: "N/A",
            },
        };
        console.log(environmentalDetailsFromForm);
        for (var key in economicDetailsFromForm) {
            var sectionName = key.replace(/Q\d+/, "");
            var fieldValue = economicDetailsFromForm[key];
            if (economicSectionValidation.hasOwnProperty(sectionName)) {
                var section = economicSectionValidation[sectionName];
                section.filled += 1;
                if (fieldValue === exports.RadioButtonStatus.YES &&
                    key === "".concat(sectionName, "Q1")) {
                    section.firstFieldValue = exports.RadioButtonStatus.YES;
                }
                else if (fieldValue === exports.RadioButtonStatus.NO &&
                    key === "".concat(sectionName, "Q1")) {
                    section.firstFieldValue = exports.RadioButtonStatus.NO;
                }
                else if (fieldValue === exports.RadioButtonStatus.NA &&
                    key === "".concat(sectionName, "Q1")) {
                    section.firstFieldValue = exports.RadioButtonStatus.NA;
                }
            }
        }
        for (var section in economicSectionValidation) {
            if (economicSectionValidation[section].firstFieldValue ===
                exports.RadioButtonStatus.YES &&
                economicSectionValidation[section].fields !==
                    economicSectionValidation[section].filled) {
                economicOverallValidation = false;
            }
        }
        for (var key in environmentalDetailsFromForm) {
            var sectionName = key.replace(/Q\d+/, "");
            var fieldValue = environmentalDetailsFromForm[key];
            if (environmentalSectionValidation.hasOwnProperty(sectionName)) {
                var section = environmentalSectionValidation[sectionName];
                section.filled += 1;
                if (fieldValue === exports.RadioButtonStatus.YES &&
                    key === "".concat(sectionName, "Q1")) {
                    section.firstFieldValue = exports.RadioButtonStatus.YES;
                }
                else if (fieldValue === exports.RadioButtonStatus.NO &&
                    key === "".concat(sectionName, "Q1")) {
                    section.firstFieldValue = exports.RadioButtonStatus.NO;
                }
                else if (fieldValue === exports.RadioButtonStatus.NA &&
                    key === "".concat(sectionName, "Q1")) {
                    section.firstFieldValue = exports.RadioButtonStatus.NA;
                }
            }
        }
        for (var section in environmentalSectionValidation) {
            if (environmentalSectionValidation[section].firstFieldValue ===
                exports.RadioButtonStatus.YES &&
                environmentalSectionValidation[section].fields !==
                    environmentalSectionValidation[section].filled) {
                environmentalOverallValidation = false;
            }
        }
        if (environmentalOverallValidation !== true) {
            antd.message.open({
                type: "error",
                content: "Fill the required fields in Co-benefits UNFCCC SD Tool section",
                duration: 4,
                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
            });
            return;
        }
        if (!isSocialFormValid) {
            antd.message.open({
                type: "error",
                content: "Fill the required fields in Co-benefits UNFCCC SD Tool section",
                duration: 4,
                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
            });
            return;
        }
        if (economicOverallValidation !== true) {
            antd.message.open({
                type: "error",
                content: "Fill the required fields in Co-benefits UNFCCC SD Tool section",
                duration: 4,
                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
            });
            return;
        }
        if (!isAssessmentFormValid) {
            antd.message.open({
                type: "error",
                content: "Fill the required fields in Co-benefits Assessment section",
                duration: 4,
                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
            });
            return;
        }
        onFormSubmit(coBenefitDetails);
    };
    return (React.createElement("div", { className: "co-benifits-container" },
        React.createElement("div", null,
            React.createElement(antd.Tabs, { className: "benifits-tabs", defaultActiveKey: "1", centered: true, items: tabItems })),
        !viewOnly && (React.createElement("div", { className: "steps-actions" },
            React.createElement(antd.Row, null,
                React.createElement(antd.Button, { onClick: function () { return onClickedBackBtn(coBenefitDetails); } }, t("back", { ns: "coBenifits" })),
                React.createElement(antd.Button, { className: "mg-left-1", type: "primary", loading: loading, onClick: onCoBenefitSubmit }, submitButtonText
                    ? submitButtonText
                    : t("submit", { ns: "coBenifits" })))))));
};

var AddNdcActionComponent = function (props) {
    var useLocation = props.useLocation, onNavigateToProgrammeManagementView = props.onNavigateToProgrammeManagementView, onNavigateToProgrammeView = props.onNavigateToProgrammeView, sdgGoalImages = props.sdgGoalImages, translator = props.translator;
    translator.setDefaultNamespace("ndcAction");
    var t = translator.t;
    var _a = React.useState(1), current = _a[0], setCurrent = _a[1];
    var _b = React.useState(), programmeDetails = _b[0], setprogrammeDetails = _b[1];
    var _c = React.useState(), ndcActionDetails = _c[0], setNdcActionDetails = _c[1];
    var state = useLocation().state;
    var post = useConnection().post;
    var _d = React.useState(false), loading = _d[0], setLoading = _d[1];
    var maximumImageSize = process.env.REACT_APP_MAXIMUM_FILE_SIZE
        ? parseInt(process.env.REACT_APP_MAXIMUM_FILE_SIZE)
        : 5000000;
    React.useEffect(function () {
        if (!(state === null || state === void 0 ? void 0 : state.record)) {
            onNavigateToProgrammeManagementView();
        }
        else {
            setprogrammeDetails(state.record);
            setNdcActionDetails(undefined);
        }
    }, []);
    var isProjectReportsVisible = function () {
        return (programmeDetails === null || programmeDetails === void 0 ? void 0 : programmeDetails.currentStage) === exports.ProgrammeStageR.Authorised;
    };
    var saveNdcAction = function (ndcActionDetailsObj) { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    if (ndcActionDetailsObj.enablementReportData) {
                        delete ndcActionDetailsObj.enablementReportData;
                    }
                    return [4 /*yield*/, post("national/programme/addNDCAction", ndcActionDetailsObj)];
                case 2:
                    response = _a.sent();
                    if (response.status === 200 || response.status === 201) {
                        antd.message.open({
                            type: "success",
                            content: "".concat(t("ndcAction:ndcSuccessfullyCreated")),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        onNavigateToProgrammeView(programmeDetails);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: error_1 && error_1.message
                            ? error_1.message
                            : "".concat("ndcAction:ndcCreationFailed"),
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var onClickNext = function () {
        setCurrent(function (pre) { return pre + 1; });
    };
    var onClickBack = function () {
        setCurrent(function (pre) { return pre - 1; });
    };
    var onClickBackCoBenefits = function (savedCoBenefitsDetails) {
        var updatedNdcActionDetails = __assign(__assign({}, ndcActionDetails), { coBenefitsProperties: savedCoBenefitsDetails });
        setNdcActionDetails(updatedNdcActionDetails);
        onClickBack();
    };
    var onProjectReportSubmit = function (projectReportFormValues) { return __awaiter(void 0, void 0, void 0, function () {
        var updatedNdcActionDetails, logoBase64;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    updatedNdcActionDetails = __assign({}, ndcActionDetails);
                    if (!(projectReportFormValues.monitoringReport &&
                        projectReportFormValues.monitoringReport.length > 0)) return [3 /*break*/, 2];
                    return [4 /*yield*/, getBase64(projectReportFormValues.monitoringReport[0].originFileObj)];
                case 1:
                    logoBase64 = _a.sent();
                    updatedNdcActionDetails.monitoringReport = logoBase64;
                    _a.label = 2;
                case 2:
                    setNdcActionDetails(updatedNdcActionDetails);
                    saveNdcAction(updatedNdcActionDetails);
                    return [2 /*return*/];
            }
        });
    }); };
    var onNdcActionDetailsSubmit = function (ndcActionDetailsObj) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            ndcActionDetailsObj.programmeId = programmeDetails === null || programmeDetails === void 0 ? void 0 : programmeDetails.programmeId;
            setNdcActionDetails(function (pre) { return (__assign(__assign({}, pre), ndcActionDetailsObj)); });
            onClickNext();
            return [2 /*return*/];
        });
    }); };
    var onCoBenefitsSubmit = function (coBenefitsFormValues) { return __awaiter(void 0, void 0, void 0, function () {
        var updatedNdcActionDetails;
        return __generator(this, function (_a) {
            updatedNdcActionDetails = __assign(__assign({}, ndcActionDetails), { coBenefitsProperties: coBenefitsFormValues });
            setNdcActionDetails(updatedNdcActionDetails);
            if (isProjectReportsVisible()) {
                onClickNext();
            }
            else {
                saveNdcAction(updatedNdcActionDetails);
            }
            return [2 /*return*/];
        });
    }); };
    var normFile = function (e) {
        if (Array.isArray(e)) {
            return e;
        }
        return e === null || e === void 0 ? void 0 : e.fileList;
    };
    var stepItems = [
        {
            title: (React.createElement("div", { className: "step-title-container" },
                React.createElement("div", { className: "step-count" }, "01"),
                React.createElement("div", { className: "title" }, t("ndcAction:ndcActionDetailsTitle")),
                React.createElement("div", { className: "info-container" }))),
            description: (React.createElement("div", { className: current !== 1 ? "hide" : "" },
                React.createElement(NdcActionDetails, { isBackBtnVisible: false, onFormSubmit: onNdcActionDetailsSubmit, ndcActionDetails: ndcActionDetails, translator: translator, programmeDetails: programmeDetails }))),
        },
        {
            title: (React.createElement("div", { className: "step-title-container" },
                React.createElement("div", { className: "step-count" }, "02"),
                React.createElement("div", { className: "title" }, t("ndcAction:coBenefitsTitle")))),
            description: (React.createElement("div", { className: current !== 2 ? "hide" : "" },
                React.createElement(CoBenifitsComponent, { onClickedBackBtn: onClickBackCoBenefits, coBenefitsDetails: ndcActionDetails ? ndcActionDetails.coBenefitsProperties : {}, onFormSubmit: onCoBenefitsSubmit, submitButtonText: isProjectReportsVisible()
                        ? t("ndcAction:next")
                        : t("ndcAction:submit"), loading: loading, sdgGoalImages: sdgGoalImages, translator: translator }))),
        },
    ];
    if (isProjectReportsVisible()) {
        stepItems.push({
            title: (React.createElement("div", { className: "step-title-container" },
                React.createElement("div", { className: "step-count" }, "03"),
                React.createElement("div", { className: "title" }, t("ndcAction:projectReportsTitle")))),
            description: (React.createElement("div", { className: current !== 3 ? "hide" : "" },
                React.createElement(antd.Form, { name: "projectReports", layout: "vertical", requiredMark: true, onFinish: onProjectReportSubmit },
                    React.createElement(antd.Form.Item, { label: t("ndcAction:monitoringReport"), name: "monitoringReport", valuePropName: "fileList", getValueFromEvent: normFile, required: false, rules: [
                            {
                                validator: function (rule, file) { return __awaiter(void 0, void 0, void 0, function () {
                                    var _a, _b;
                                    return __generator(this, function (_c) {
                                        if ((file === null || file === void 0 ? void 0 : file.length) > 0) {
                                            if (!isValidateFileType((_a = file[0]) === null || _a === void 0 ? void 0 : _a.type)) {
                                                throw new Error("".concat(t("ndcAction:invalidFileFormat")));
                                            }
                                            else if (((_b = file[0]) === null || _b === void 0 ? void 0 : _b.size) > maximumImageSize) {
                                                // default size format of files would be in bytes -> 1MB = 1000000bytes
                                                throw new Error("".concat(t("common:maxSizeVal")));
                                            }
                                        }
                                        return [2 /*return*/];
                                    });
                                }); },
                            },
                        ] },
                        React.createElement(antd.Upload, { beforeUpload: function (file) {
                                return false;
                            }, className: "design-upload-section", name: "monitoringReport", listType: "picture", multiple: false, maxCount: 1 },
                            React.createElement(antd.Button, { className: "upload-doc", size: "large", icon: React.createElement(icons.UploadOutlined, null) }, "Upload"))),
                    React.createElement("div", { className: "steps-actions" },
                        React.createElement(antd.Row, null,
                            React.createElement(antd.Button, { onClick: onClickBack }, t("ndcAction:back")),
                            React.createElement(antd.Button, { className: "mg-left-1", htmlType: "submit", type: "primary", loading: loading }, t("ndcAction:submit"))))))),
        });
    }
    return (React.createElement("div", { className: "add-ndc-main-container" },
        React.createElement("div", { className: "title-container" },
            React.createElement("div", { className: "main" }, t("ndcAction:addNdcTitle"))),
        React.createElement("div", { className: "adding-section" },
            React.createElement("div", { className: "form-section" },
                React.createElement(antd.Steps, { progressDot: true, direction: "vertical", current: current, items: stepItems })))));
};

var css_248z$g = ".ndc-details-view .card-container {\n  margin-bottom: 16px;\n  width: 100%;\n  border-radius: 10px; }\n  .ndc-details-view .card-container .co-benifits-view .title {\n    color: rgba(58, 53, 65, 0.8);\n    font-weight: 600;\n    margin-left: 0.5rem; }\n  .ndc-details-view .card-container .action-btns {\n    margin-top: 25px;\n    margin-bottom: -15px;\n    justify-content: end; }\n\n.ndc-details-view .fix-height {\n  height: 350px; }\n\n.title-icon {\n  padding-right: 10px; }\n\n.title-text {\n  color: rgba(58, 53, 65, 0.8);\n  font-weight: 600; }\n\n.title {\n  margin-bottom: 5px; }\n\n.ndc-action-report-body {\n  display: flex;\n  flex-direction: column;\n  width: 100%; }\n  .ndc-action-report-body .report-details {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    margin: 5px 25px;\n    font-size: 0.8rem; }\n    .ndc-action-report-body .report-details .report-type {\n      display: flex;\n      flex-direction: row;\n      width: 60%; }\n      .ndc-action-report-body .report-details .report-type .name-time-container {\n        display: flex;\n        flex-direction: column;\n        width: 70%;\n        margin-bottom: 0.5rem; }\n      .ndc-action-report-body .report-details .report-type .name {\n        font-weight: 500;\n        color: rgba(58, 53, 65, 0.6); }\n      .ndc-action-report-body .report-details .report-type .time {\n        color: rgba(58, 53, 65, 0.5);\n        width: max-content; }\n      .ndc-action-report-body .report-details .report-type .icon {\n        display: flex;\n        align-items: center;\n        width: 30%;\n        color: rgba(58, 53, 65, 0.6); }\n      .ndc-action-report-body .report-details .report-type .empty {\n        font-weight: 500;\n        color: rgba(58, 53, 65, 0.6); }\n    .ndc-action-report-body .report-details .ant-row {\n      margin: 0px 30px auto; }\n    .ndc-action-report-body .report-details .report-link {\n      display: flex;\n      flex-direction: row;\n      width: 40%; }\n      .ndc-action-report-body .report-details .report-link .version {\n        font-weight: 600;\n        color: #cacaca; }\n      .ndc-action-report-body .report-details .report-link .link {\n        margin-left: 1rem; }\n";
styleInject(css_248z$g);

var css_248z$f = ".info-view .title-icon {\n  padding-right: 10px; }\n\n.info-view .title-text {\n  color: rgba(58, 53, 65, 0.8);\n  font-weight: 600; }\n\n.info-view .title {\n  margin-bottom: 5px; }\n\n.info-view .field-key {\n  color: rgba(58, 53, 65, 0.6);\n  font-weight: 500;\n  text-overflow: ellipsis;\n  overflow: hidden; }\n\n.info-view .field-value {\n  color: rgba(58, 53, 65, 0.6);\n  text-overflow: ellipsis;\n  overflow: hidden; }\n  .info-view .field-value .row {\n    display: flex;\n    width: 40%;\n    align-items: center;\n    justify-content: space-between; }\n    .info-view .field-value .row .key {\n      display: flex;\n      width: 50%;\n      align-items: center;\n      justify-content: flex-start; }\n    .info-view .field-value .row .data {\n      display: flex;\n      width: 50%;\n      align-items: center;\n      justify-content: flex-start; }\n\n.info-view .field {\n  margin: 15px 25px;\n  font-size: 0.8rem; }\n";
styleInject(css_248z$f);

var InfoView = function (props) {
    var title = props.title, data = props.data, icon = props.icon, hiddenColumns = props.hiddenColumns;
    return (React.createElement("div", { className: "info-view" },
        React.createElement("div", { className: "title" },
            React.createElement("span", { className: "title-icon" }, icon),
            React.createElement("span", { className: "title-text" }, title)),
        React.createElement("div", null, Object.keys(data).map(function (k) {
            var _a;
            if (hiddenColumns.indexOf(k) < 0) {
                return (React.createElement(antd.Row, { className: "field", key: k },
                    React.createElement(antd.Col, { span: 12, className: "field-key" }, k),
                    React.createElement(antd.Col, { span: 12, className: "field-value" }, k.includes("GHG Emissions") ? (((_a = Object.values(data[k])) === null || _a === void 0 ? void 0 : _a.length) > 0 ? (Object.entries(data[k]).map(function (_a) {
                        var key = _a[0]; _a[1];
                        return (React.createElement("div", { className: "row" },
                            React.createElement("div", { className: "key" }, key),
                            React.createElement("div", { className: "data" }, data[k][key])));
                    })) : (React.createElement("div", null, "-"))) : (React.createElement("span", null, data[k] instanceof luxon.DateTime
                        ? data[k].toFormat(dateFormat)
                        : data[k] === "" || !data[k] || data[k] === "NaN"
                            ? "-"
                            : data[k])))));
            }
            else {
                return null;
            }
        }))));
};
InfoView.defaultProps = {
    hiddenColumns: [],
};

var linkDocVisible = function (docStatus) {
    var visible = false;
    if (docStatus === exports.DocumentStatus.PENDING ||
        docStatus === exports.DocumentStatus.ACCEPTED ||
        docStatus === exports.DocumentStatus.REJECTED) {
        visible = true;
    }
    return visible;
};
var uploadDocUserPermission = function (userInfoState, docType, programmeOwnerId, ministryLevelPermission) {
    var permission = false;
    if (docType === exports.DocType.DESIGN_DOCUMENT) {
        if (((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
            ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY && ministryLevelPermission)) &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            permission = true;
        }
        else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            if (programmeOwnerId.includes(String(userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId))) {
                permission = true;
            }
        }
    }
    else if (docType === exports.DocType.METHODOLOGY_DOCUMENT || docType === exports.DocType.MONITORING_REPORT || docType === exports.DocType.ENVIRONMENTAL_IMPACT_ASSESSMENT) {
        if (((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER ||
            ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY && ministryLevelPermission)) &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            permission = true;
        }
        else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            if (programmeOwnerId.includes(String(userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId))) {
                permission = true;
            }
        }
    }
    else if (docType === exports.DocType.VERIFICATION_REPORT) {
        if (((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER ||
            ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY && ministryLevelPermission)) &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            permission = true;
        }
    }
    return permission;
};

var NdcActionViewComponent = function (props) {
    var _a;
    var _b, _c;
    var useLocation = props.useLocation, onNavigateToNdcManagementView = props.onNavigateToNdcManagementView, translator = props.translator, sdgGoalImages = props.sdgGoalImages, Chart = props.Chart;
    translator.setDefaultNamespace("ndcAction");
    var t = translator.t;
    var userInfoState = useUserContext().userInfoState;
    var post = useConnection().post;
    var state = useLocation().state;
    var _d = React.useState({}); _d[0]; var setNdcActionReportDetails = _d[1];
    var _e = React.useState(false), isLoading = _e[0], setIsLoading = _e[1];
    var _f = React.useState(), monitoringReportData = _f[0], setMonitoringReportData = _f[1];
    var _g = React.useState(""), monitoringReportversion = _g[0], setMonitoringReportversion = _g[1];
    var _h = React.useState(), verificationReportData = _h[0], setVerificationReportData = _h[1];
    var _j = React.useState(""), verificationReportVersion = _j[0], setVerificationReportversion = _j[1];
    var _k = React.useState(), ndcActionDetails = _k[0], setNdcActionDetails = _k[1];
    var _l = React.useState(); _l[0]; var setCoBenifitsComponentnDetails = _l[1];
    var _m = React.useState(0), emissionsReductionExpected = _m[0], setEmissionsReductionExpected = _m[1];
    var _o = React.useState(0), emissionsReductionAchieved = _o[0], setEmissionsReductionAchieved = _o[1];
    var _p = React.useState([]), programmeOwnerId = _p[0], setProgrammeOwnerId = _p[1];
    var _q = React.useState(true), canUploadMonitorReport = _q[0]; _q[1];
    var _r = React.useState(false), monitoringReportAccepted = _r[0], setMonitoringReportAccepted = _r[1];
    var getProgrammeById = function (programmeId) { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    setIsLoading(true);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/programme/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "programmeId",
                                    operation: "=",
                                    value: programmeId,
                                },
                            ],
                        })];
                case 2:
                    response = _c.sent();
                    if (((_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.length) > 0) {
                        setProgrammeOwnerId((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.companyId);
                        /* if (response?.data[0]?.currentStage === ProgrammeStageR.Authorised) {
                          setCanUploadMonitorReport(true);
                        }*/
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _c.sent();
                    console.log("Error in getting programme by id", error_1);
                    return [3 /*break*/, 5];
                case 4:
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getProjectReportActions = function (reportData, reportVersion) {
        return (React.createElement(antd.Row, null,
            React.createElement("div", { className: "icon" },
                (reportData === null || reportData === void 0 ? void 0 : reportData.status) === exports.DocumentStatus.ACCEPTED && (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380" } })),
                (reportData === null || reportData === void 0 ? void 0 : reportData.status) === exports.DocumentStatus.REJECTED && (React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70" } }))),
            React.createElement("div", { className: "link mg-left-1" }, (reportData === null || reportData === void 0 ? void 0 : reportData.url) && linkDocVisible(reportData === null || reportData === void 0 ? void 0 : reportData.status) && (React.createElement("a", { href: reportData === null || reportData === void 0 ? void 0 : reportData.url, target: "_blank", rel: "noopener noreferrer", download: true },
                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
            (reportData === null || reportData === void 0 ? void 0 : reportData.txTime) && (React.createElement("div", { className: "time" },
                moment(parseInt(reportData === null || reportData === void 0 ? void 0 : reportData.txTime)).format("DD MMMM YYYY @ HH:mm"),
                " ~ " + reportVersion))));
    };
    var getProjectReports = function () { return __awaiter(void 0, void 0, void 0, function () {
        var reportDetails, response, exception_1;
        var _a;
        var _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    setIsLoading(true);
                    reportDetails = (_a = {},
                        _a[t("ndcAction:viewMoniteringReport")] = (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                ? t("programme:notAuthToUploadDoc")
                                : uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId)
                                    ? !canUploadMonitorReport && t("programme:programmeNotAuth")
                                    : t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, null))),
                        _a[t("ndcAction:viewVerificationReport")] = (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                ? t("programme:notAuthToUploadDoc")
                                : uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId)
                                    ? !monitoringReportAccepted &&
                                        t("programme:monitoringRepNotApproved")
                                    : t("programme:notAuthToUploadDoc"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, null))),
                        _a);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/programme/queryDocs", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "actionId",
                                    operation: "=",
                                    value: ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.id,
                                },
                            ],
                        })];
                case 2:
                    response = _c.sent();
                    if (((_b = response === null || response === void 0 ? void 0 : response.data) === null || _b === void 0 ? void 0 : _b.length) > 0) {
                        response.data.map(function (item) {
                            var _a, _b;
                            if ((_a = item === null || item === void 0 ? void 0 : item.url) === null || _a === void 0 ? void 0 : _a.includes("MONITORING_REPORT")) {
                                if ((item === null || item === void 0 ? void 0 : item.status) === exports.DocumentStatus.ACCEPTED) {
                                    setMonitoringReportAccepted(true);
                                }
                                var versionfull = (item === null || item === void 0 ? void 0 : item.url).split("_")[(item === null || item === void 0 ? void 0 : item.url).split("_").length - 1];
                                var version = versionfull ? versionfull.split(".")[0] : "1";
                                var moniteringVersion = version.startsWith("V") ? version : "V1";
                                reportDetails[t("ndcAction:viewMoniteringReport")] =
                                    getProjectReportActions(item, moniteringVersion);
                                setMonitoringReportData(item);
                                setMonitoringReportversion(moniteringVersion);
                            }
                            else if ((_b = item === null || item === void 0 ? void 0 : item.url) === null || _b === void 0 ? void 0 : _b.includes("VERIFICATION_REPORT")) {
                                var versionfull = (item === null || item === void 0 ? void 0 : item.url).split("_")[(item === null || item === void 0 ? void 0 : item.url).split("_").length - 1];
                                var version = versionfull ? versionfull.split(".")[0] : "1";
                                var verificationVersion = version.startsWith("V")
                                    ? version
                                    : "V1";
                                reportDetails[t("ndcAction:viewVerificationReport")] =
                                    getProjectReportActions(item, verificationVersion);
                                setVerificationReportData(item);
                                setVerificationReportversion(verificationVersion);
                            }
                        });
                    }
                    return [3 /*break*/, 5];
                case 3:
                    exception_1 = _c.sent();
                    antd.message.open({
                        type: "error",
                        content: exception_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setNdcActionReportDetails(reportDetails);
                    setIsLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.id) {
            getProjectReports();
        }
    }, [ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.id, programmeOwnerId]);
    React.useEffect(function () {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        if (!state) {
            onNavigateToNdcManagementView();
        }
        else {
            if (!state.record && state.id) ;
            else if (state.record) {
                getProgrammeById((_a = state === null || state === void 0 ? void 0 : state.record) === null || _a === void 0 ? void 0 : _a.programmeId);
                setNdcActionDetails(state.record);
                setCoBenifitsComponentnDetails((_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.coBenefitsProperties);
                setEmissionsReductionExpected(((_c = state.record) === null || _c === void 0 ? void 0 : _c.emissionReductionExpected) !== null ||
                    ((_d = state.record) === null || _d === void 0 ? void 0 : _d.emissionReductionExpected) !== undefined
                    ? Number((_e = state.record) === null || _e === void 0 ? void 0 : _e.emissionReductionExpected)
                    : 0);
                setEmissionsReductionAchieved(((_f = state.record) === null || _f === void 0 ? void 0 : _f.emissionReductionAchieved) !== null ||
                    ((_g = state.record) === null || _g === void 0 ? void 0 : _g.emissionReductionAchieved) !== undefined
                    ? Number((_h = state.record) === null || _h === void 0 ? void 0 : _h.emissionReductionAchieved)
                    : 0);
            }
        }
    }, []);
    var getNdcActionNames = function (action) {
        switch (action) {
            case exports.NdcActionTypes.Adaptation:
                return t("ndcAction:adaptation");
            case exports.NdcActionTypes.Mitigation:
                return t("ndcAction:mitigation");
            case exports.NdcActionTypes.CrossCutting:
                return t("ndcAction:crossCutting");
            case exports.NdcActionTypes.Enablement:
                return t("ndcAction:enablement");
            default:
                return "";
        }
    };
    var ndcActionBasicDetails = (_a = {},
        _a[t("ndcAction:viewProgramme")] = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.programmeName,
        _a[t("ndcAction:viewNdcAction")] = getNdcActionNames(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action),
        _a[t("ndcAction:viewCurrentStatus")] = (React.createElement(antd.Tag, { className: "clickable", color: getNdcStatusTagType(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.status) }, addSpaces(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.status))),
        _a);
    var getNdcActionMitigationDetails = function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var mitigationDetails = {};
        mitigationTypeList === null || mitigationTypeList === void 0 ? void 0 : mitigationTypeList.map(function (type) {
            if ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation) === type.value) {
                mitigationDetails[t("ndcAction:viewMitigationType")] = type.label;
            }
        });
        mitigationSubTypeList === null || mitigationSubTypeList === void 0 ? void 0 : mitigationSubTypeList.map(function (type) {
            if ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) === type.value) {
                mitigationDetails[t("ndcAction:viewMitigationSubType")] = type.label;
            }
        });
        if ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation) === exports.MitigationTypes.AGRICULTURE &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) === exports.MitigationSubTypes.RICE_CROPS &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.agricultureProperties)) {
            mitigationDetails[t("ndcAction:viewMitigationLandArea")] =
                addCommSep((_a = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.agricultureProperties) === null || _a === void 0 ? void 0 : _a.landArea) +
                    ((_b = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.agricultureProperties) === null || _b === void 0 ? void 0 : _b.landAreaUnit);
        }
        if ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation) === exports.MitigationTypes.AGRICULTURE &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) ===
                exports.MitigationSubTypes.SOIL_ENRICHMENT_BIOCHAR &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties)) {
            mitigationDetails[t("ndcAction:viewMitigationWeight")] =
                addCommSep((_c = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties) === null || _c === void 0 ? void 0 : _c.weight) + "t";
        }
        if ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation) === exports.MitigationTypes.SOLAR &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) ===
                exports.MitigationSubTypes.SOLAR_PHOTOVOLTAICS_PV &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.solarProperties)) {
            mitigationDetails[t("ndcAction:viewMitigationEnergyGeneration")] =
                addCommSep((_d = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.solarProperties) === null || _d === void 0 ? void 0 : _d.energyGeneration) +
                    ((_e = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.solarProperties) === null || _e === void 0 ? void 0 : _e.energyGenerationUnit);
            mitigationDetails[t("ndcAction:viewMitigationConsumerGroup")] =
                (_f = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.solarProperties) === null || _f === void 0 ? void 0 : _f.consumerGroup;
        }
        if ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation) === exports.MitigationTypes.SOLAR &&
            ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) ===
                exports.MitigationSubTypes.SOLAR_WATER_PUMPING_OFF_GRID ||
                (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) ===
                    exports.MitigationSubTypes.SOLAR_WATER_PUMPING_ON_GRID) &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties)) {
            mitigationDetails[t("ndcAction:viewMitigationEnergyGeneration")] =
                addCommSep((_g = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties) === null || _g === void 0 ? void 0 : _g.energyGeneration) + ((_h = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties) === null || _h === void 0 ? void 0 : _h.energyGenerationUnit);
        }
        if ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.typeOfMitigation) === exports.MitigationTypes.EE_HOUSEHOLDS &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.subTypeOfMitigation) ===
                exports.MitigationSubTypes.STOVES_HOUSES_IN_NAMIBIA &&
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties)) {
            mitigationDetails[t("ndcAction:viewMitigationNoOfDays")] =
                (_j = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties) === null || _j === void 0 ? void 0 : _j.numberOfDays;
            mitigationDetails[t("ndcAction:viewMitigationNoOfPeople")] =
                (_k = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.creditCalculationProperties) === null || _k === void 0 ? void 0 : _k.numberOfPeopleInHousehold;
        }
        if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.ndcFinancing) {
            mitigationDetails[t("ndcAction:viewMitigationUserEstimatedCredits")] =
                addCommSep(ndcActionDetails.ndcFinancing.userEstimatedCredits);
            mitigationDetails[t("ndcAction:viewMitigationSysEstimatedCredits")] =
                addCommSep(ndcActionDetails.ndcFinancing.systemEstimatedCredits);
        }
        mitigationDetails[t("ndcAction:viewMethodology")] =
            ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.methodology;
        return mitigationDetails;
    };
    var getNdcActionAdaptationDetails = function () {
        var _a, _b, _c, _d;
        var adaptationDetails = {};
        if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) {
            adaptationDetails[t("ndcAction:viewAdaptationImplementingAgency")] =
                ndcActionDetails.adaptationProperties.implementingAgency;
            adaptationDetails[t("ndcAction:viewAdaptationNationalPlanObjectives")] =
                ndcActionDetails.adaptationProperties.nationalPlanObjectives;
            adaptationDetails[t("ndcAction:viewAdaptationNationalPlanCoverage")] =
                ndcActionDetails.adaptationProperties.nationalPlanCoverage;
            adaptationDetails[t("ndcAction:viewIncludedInNAP")] = ((_a = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) === null || _a === void 0 ? void 0 : _a.includedInNAP)
                ? "Yes"
                : ((_b = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) === null || _b === void 0 ? void 0 : _b.includedInNAP) === false
                    ? "No"
                    : "-";
            adaptationDetails[t("ndcAction:viewGhgEmissionsAvoided")] =
                ((_c = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) === null || _c === void 0 ? void 0 : _c.ghgEmissionsAvoided)
                    ? ndcActionDetails.adaptationProperties.ghgEmissionsAvoided
                    : {};
            adaptationDetails[t("ndcAction:viewGhgEmissionsReduced")] =
                ((_d = ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.adaptationProperties) === null || _d === void 0 ? void 0 : _d.ghgEmissionsReduced)
                    ? ndcActionDetails.adaptationProperties.ghgEmissionsReduced
                    : {};
        }
        return adaptationDetails;
    };
    var getEnablementProperties = function () {
        var _a, _b, _c, _d, _e, _f, _g;
        var details = {};
        if (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.enablementProperties) {
            details[t("ndcAction:title")] =
                (_a = ndcActionDetails.enablementProperties) === null || _a === void 0 ? void 0 : _a.title;
            details[t("ndcAction:type")] = ((_b = ndcActionDetails.enablementProperties) === null || _b === void 0 ? void 0 : _b.type)
                ? (_c = ndcActionDetails.enablementProperties) === null || _c === void 0 ? void 0 : _c.type.join(", ")
                : "-";
            if ((_d = ndcActionDetails.enablementProperties) === null || _d === void 0 ? void 0 : _d.report) {
                details[t("ndcAction:report")] = ((_e = ndcActionDetails.enablementProperties) === null || _e === void 0 ? void 0 : _e.report) && (React.createElement("a", { href: (_f = ndcActionDetails.enablementProperties) === null || _f === void 0 ? void 0 : _f.report, target: "_blank", rel: "noopener noreferrer", download: true }, (_g = ndcActionDetails.enablementProperties) === null || _g === void 0 ? void 0 : _g.report));
            }
        }
        return details;
    };
    var formatString = function (langTag, vargs) {
        var str = t(langTag);
        var parts = str.split("{}");
        var insertAt = 1;
        for (var _i = 0, vargs_1 = vargs; _i < vargs_1.length; _i++) {
            var arg = vargs_1[_i];
            parts.splice(insertAt, 0, arg);
            insertAt += 2;
        }
        return parts.join("");
    };
    return (React.createElement("div", { className: "ndc-details-view content-container" },
        React.createElement("div", { className: "title-bar" },
            React.createElement("div", null,
                React.createElement("div", { className: "body-title" },
                    t("ndcAction:NdcDetailsViewTitle"),
                    " ",
                    getNdcActionNames(ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action)))),
        React.createElement("div", { className: "content-body" },
            React.createElement(antd.Row, { gutter: 16 },
                (emissionsReductionAchieved !== 0 ||
                    emissionsReductionExpected !== 0) && (React.createElement(antd.Col, { lg: 8, md: 24 },
                    React.createElement(antd.Card, { className: "card-container fix-height" },
                        React.createElement("div", { className: "info-view" },
                            React.createElement("div", { className: "title" },
                                React.createElement("span", { className: "title-text" }, formatString("ndcAction:NdcCreditChartTitle", []))),
                            React.createElement("div", { className: "map-content" },
                                React.createElement(Chart, { id: "creditChart", options: {
                                        labels: ["Achieved", "Pending"],
                                        legend: {
                                            position: "bottom",
                                        },
                                        colors: ["#b3b3ff", "#e0e0eb"],
                                        tooltip: {
                                            fillSeriesColor: false,
                                            enabled: true,
                                            y: {
                                                formatter: function (value) {
                                                    return addCommSepRound$1(value);
                                                },
                                            },
                                        },
                                        states: {
                                            normal: {
                                                filter: {
                                                    type: "none",
                                                    value: 0,
                                                },
                                            },
                                            hover: {
                                                filter: {
                                                    type: "none",
                                                    value: 0,
                                                },
                                            },
                                            active: {
                                                allowMultipleDataPointsSelection: true,
                                                filter: {
                                                    type: "darken",
                                                    value: 0.7,
                                                },
                                            },
                                        },
                                        stroke: {
                                            colors: ["#00"],
                                        },
                                        plotOptions: {
                                            pie: {
                                                expandOnClick: false,
                                                donut: {
                                                    size: "75%",
                                                    labels: {
                                                        show: true,
                                                        total: {
                                                            showAlways: true,
                                                            show: true,
                                                            label: "Expected",
                                                            formatter: function () {
                                                                return "" + addCommSep(emissionsReductionExpected);
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                        dataLabels: {
                                            enabled: false,
                                        },
                                        responsive: [
                                            {
                                                breakpoint: 480,
                                                options: {
                                                    chart: {
                                                        width: "15vw",
                                                    },
                                                    legend: {
                                                        position: "bottom",
                                                    },
                                                },
                                            },
                                        ],
                                    }, series: [
                                        emissionsReductionAchieved,
                                        emissionsReductionExpected - emissionsReductionAchieved,
                                    ], type: "donut", fontFamily: "inter", height: "290px" })))))),
                React.createElement(antd.Col, { lg: 8, md: 24 },
                    React.createElement(antd.Card, { className: "card-container fix-height" },
                        React.createElement("div", null,
                            React.createElement(InfoView, { data: ndcActionBasicDetails, title: t("ndcAction:viewGeneralTitle"), icon: React.createElement(Icon__namespace.Lightbulb, null) })))),
                React.createElement(antd.Col, { lg: 8, md: 24 },
                    React.createElement(antd.Skeleton, { loading: isLoading, active: true },
                        React.createElement(antd.Card, { className: "card-container fix-height" },
                            React.createElement("div", { className: "title" },
                                React.createElement("span", { className: "title-icon" }, React.createElement(Icon__namespace.FileEarmarkText, null)),
                                React.createElement("span", { className: "title-text" }, t("ndcAction:viewReportsTitle"))),
                            React.createElement("div", { className: "ndc-action-report-body" },
                                React.createElement("div", { className: "report-details" },
                                    React.createElement("div", { className: "report-type" },
                                        React.createElement("div", { className: "name-time-container" },
                                            React.createElement("div", { className: canUploadMonitorReport && monitoringReportAccepted
                                                    ? "name"
                                                    : "empty" }, t("programme:monitoringReport")),
                                            (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.txTime) && (React.createElement("div", { className: "time" },
                                                moment(parseInt(monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.txTime)).format("DD MMMM YYYY @ HH:mm"),
                                                " ~ " + monitoringReportversion)))),
                                    React.createElement(antd.Row, null,
                                        React.createElement("div", { className: "icon" }, !(monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.url) && (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                                ? t("programme:notAuthToUploadDoc")
                                                : uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId)
                                                    ? !canUploadMonitorReport &&
                                                        t("programme:programmeNotAuth")
                                                    : t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                                            React.createElement(icons.FileAddOutlined, null)))),
                                        (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.url) && (React.createElement(React.Fragment, null,
                                            React.createElement("div", { className: "icon" },
                                                (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.status) ===
                                                    exports.DocumentStatus.ACCEPTED && (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380" } })),
                                                (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.status) ===
                                                    exports.DocumentStatus.REJECTED && (React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70" } }))),
                                            React.createElement("div", { className: "link mg-left-1" }, (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.url) &&
                                                linkDocVisible(monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.status) && (React.createElement("a", { href: monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.url, target: "_blank", rel: "noopener noreferrer", download: true },
                                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))))))),
                                React.createElement("div", { className: "report-details" },
                                    React.createElement("div", { className: "report-type" },
                                        React.createElement("div", { className: "name-time-container" },
                                            React.createElement("div", { className: canUploadMonitorReport && monitoringReportAccepted
                                                    ? "name"
                                                    : "empty" }, t("programme:verificationReport")),
                                            (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.txTime) && (React.createElement("div", { className: "time" },
                                                moment(parseInt(verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.txTime)).format("DD MMMM YYYY @ HH:mm"),
                                                " ~ " + verificationReportVersion)))),
                                    React.createElement(antd.Row, null,
                                        React.createElement("div", { className: "icon" }, !(verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.url) && (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                                ? t("programme:notAuthToUploadDoc")
                                                : uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId)
                                                    ? !monitoringReportAccepted &&
                                                        t("programme:monitoringRepNotApproved")
                                                    : t("programme:notAuthToUploadDoc"), overlayClassName: "custom-tooltip" },
                                            React.createElement(icons.FileAddOutlined, null)))),
                                        (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.url) && (React.createElement(React.Fragment, null,
                                            React.createElement("div", { className: "icon" },
                                                (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.status) ===
                                                    exports.DocumentStatus.ACCEPTED && (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380" } })),
                                                (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.status) ===
                                                    exports.DocumentStatus.REJECTED && (React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70" } }))),
                                            React.createElement("div", { className: "link mg-left-1" }, (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.url) &&
                                                linkDocVisible(verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.status) && (React.createElement("a", { href: verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.url, target: "_blank", rel: "noopener noreferrer", download: true },
                                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } }))))))))))))),
            ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action) === exports.NdcActionTypes.Mitigation ||
                (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action) === exports.NdcActionTypes.CrossCutting) && (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: 24, className: "gutter-row" },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement("div", null,
                            React.createElement(InfoView, { data: getNdcActionMitigationDetails(), title: t("ndcAction:viewMitigationTitle") })))))),
            ((ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action) === exports.NdcActionTypes.Adaptation ||
                (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action) === exports.NdcActionTypes.CrossCutting) && (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: 24 },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement("div", null,
                            React.createElement(InfoView, { data: getNdcActionAdaptationDetails(), title: t("ndcAction:viewAdaptationTitle") })))))),
            (ndcActionDetails === null || ndcActionDetails === void 0 ? void 0 : ndcActionDetails.action) === exports.NdcActionTypes.Enablement && (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: 24 },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement("div", null,
                            React.createElement(InfoView, { data: getEnablementProperties(), title: t("ndcAction:enablement") })))))),
            ((_b = state === null || state === void 0 ? void 0 : state.record) === null || _b === void 0 ? void 0 : _b.coBenefitsProperties) && (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: 24 },
                    React.createElement(antd.Card, { className: "card-container" },
                        React.createElement("div", { className: "co-benifits-view" },
                            React.createElement("div", { className: "title" }, t("ndcAction:coBenefitsSubTitle")),
                            React.createElement(CoBenifitsComponent, { viewOnly: true, coBenifitsViewDetails: (_c = state === null || state === void 0 ? void 0 : state.record) === null || _c === void 0 ? void 0 : _c.coBenefitsProperties, sdgGoalImages: sdgGoalImages, translator: translator })))))))));
};

var css_248z$e = ".credit-transfer-management .certify-list {\n  width: 110px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap; }\n  .credit-transfer-management .certify-list .profile-icon {\n    margin-bottom: 4px; }\n\n.credit-transfer-management .table-actions-section {\n  margin-bottom: 0px; }\n  .credit-transfer-management .table-actions-section input {\n    font-family: \"Inter\";\n    font-size: 0.8rem; }\n\n.credit-transfer-management .all-check {\n  margin-right: 10px; }\n  .credit-transfer-management .all-check .ant-checkbox-inner::after {\n    background-color: rgba(58, 53, 65, 0.5); }\n  .credit-transfer-management .all-check .ant-checkbox-checked .ant-checkbox-inner::after {\n    background-color: transparent; }\n  .credit-transfer-management .all-check .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: rgba(58, 53, 65, 0.5);\n    border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Retired'] + .ant-checkbox-inner {\n  background-color: rgba(58, 53, 65, 0.4);\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='AwaitingAuthorization'] + .ant-checkbox-inner {\n  background-color: rgba(237, 77, 71, 0.6);\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Rejected'] + .ant-checkbox-inner {\n  background-color: rgba(58, 53, 65, 0.4);\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Issued'] + .ant-checkbox-inner {\n  background-color: #008f39;\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Transferred'] + .ant-checkbox-inner {\n  background-color: rgba(118, 195, 39, 0.6);\n  border: none; }\n\n.credit-transfer-modal-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 2rem 0 0 0;\n  width: 100%; }\n  .credit-transfer-modal-container .icon-credit {\n    margin-bottom: 15px; }\n  .credit-transfer-modal-container .credit-transfer-details {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    margin-bottom: 10px; }\n    .credit-transfer-modal-container .credit-transfer-details .content-credit-transfer {\n      font-family: 'Inter' !important;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 0.9rem;\n      line-height: 1.3rem;\n      padding: 0 1rem 0 1rem;\n      text-align: center;\n      color: rgba(58, 53, 65, 0.8) !important; }\n    .credit-transfer-modal-container .credit-transfer-details .sub-content-credit-transfer {\n      font-family: 'Inter';\n      font-style: normal;\n      font-weight: 600;\n      font-size: 0.8rem;\n      line-height: 1.375rem;\n      text-align: center;\n      color: rgba(58, 53, 65, 0.5); }\n  .credit-transfer-modal-container .remarks-credit-transfer {\n    flex-direction: row;\n    width: 100%;\n    padding: 0.5rem 1rem 0 1rem; }\n    .credit-transfer-modal-container .remarks-credit-transfer .modal-form .ant-form-item-explain-error {\n      display: flex;\n      flex-direction: row; }\n    .credit-transfer-modal-container .remarks-credit-transfer .modal-form .ant-form {\n      width: 100%; }\n      .credit-transfer-modal-container .remarks-credit-transfer .modal-form .ant-form .ant-form-item-label > label {\n        font-size: 0.8rem; }\n    .credit-transfer-modal-container .remarks-credit-transfer .modal-form .modal-credit-transfer-btns {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      margin-top: 1rem; }\n      .credit-transfer-modal-container .remarks-credit-transfer .modal-form .modal-credit-transfer-btns .center {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between; }\n      .credit-transfer-modal-container .remarks-credit-transfer .modal-form .modal-credit-transfer-btns .width-60 {\n        width: 60%; }\n\n.common-table-class .ant-table .ant-table-thead .ant-table-cell {\n  font-size: 0.75rem;\n  font-weight: 600; }\n";
styleInject(css_248z$e);

var css_248z$d = ".credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Rejected'] + .ant-checkbox-inner {\n  background-color: rgba(237, 77, 71, 0.6);\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Cancelled'] + .ant-checkbox-inner {\n  background-color: rgba(58, 53, 65, 0.4);\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Accepted'] + .ant-checkbox-inner {\n  background-color: #008f39;\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Pending'] + .ant-checkbox-inner {\n  background-color: rgba(118, 195, 39, 0.6);\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='Recognised'] + .ant-checkbox-inner {\n  background-color: #976ed7;\n  border: none; }\n\n.credit-transfer-management .ant-checkbox-checked .ant-checkbox-input[value='NotRecognised'] + .ant-checkbox-inner {\n  background-color: #ffa070;\n  border: none; }\n\n.credit-transfer-management .ministry-level-filter-checkbox {\n  margin-left: 0px !important; }\n\n.credit-transfer-management .transfer-freeze-icon {\n  float: right; }\n  .credit-transfer-management .transfer-freeze-icon .pause-circle {\n    color: rgba(255, 77, 79, 0.8); }\n  .credit-transfer-management .transfer-freeze-icon .play-circle {\n    color: rgba(118, 195, 39, 0.6); }\n";
styleInject(css_248z$d);

function n(){return (n=Object.assign?Object.assign.bind():function(a){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(a[e]=t[e]);}return a}).apply(this,arguments)}function t(a,n){if(null==a)return {};var t,e,r={},s=Object.keys(a);for(e=0;e<s.length;e++)n.indexOf(t=s[e])>=0||(r[t]=a[t]);return r}var e={ac:!0,ad:!0,ae:!0,af:!0,afar:!0,ag:!0,ai:!0,al:!0,am:!0,ao:!0,aq:!0,ar:!0,as:!0,at:!0,au:!0,"au-aboriginal":!0,"au-act":!0,"au-nsw":!0,"au-nt":!0,"au-qld":!0,"au-tas":!0,"au-vic":!0,"au-wa":!0,aw:!0,ax:!0,az:!0,ba:!0,bb:!0,bd:!0,be:!0,bf:!0,bg:!0,bh:!0,bi:!0,bj:!0,bl:!0,bm:!0,bn:!0,bo:!0,"bq-bo":!0,"bq-sa":!0,"bq-se":!0,bq:!0,br:!0,bs:!0,bt:!0,bv:!0,bw:!0,by:!0,bz:!0,"ca-bc":!0,ca:!0,cc:!0,cd:!0,cf:!0,cg:!0,"ch-gr":!0,ch:!0,ci:!0,ck:!0,cl:!0,cm:!0,"cn-xj":!0,cn:!0,co:!0,cp:!0,cq:!0,cr:!0,cu:!0,cv:!0,cw:!0,cx:!0,cy:!0,cz:!0,de:!0,dg:!0,dj:!0,dk:!0,dm:!0,do:!0,dz:!0,ea:!0,earth:!0,east_african_federation:!0,easter_island:!0,"ec-w":!0,ec:!0,ee:!0,eg:!0,eh:!0,er:!0,"es-ar":!0,"es-ce":!0,"es-cn":!0,"es-ct":!0,"es-ga":!0,"es-ib":!0,"es-ml":!0,"es-pv":!0,"es-variant":!0,es:!0,"et-or":!0,"et-ti":!0,et:!0,eu:!0,european_union:!0,ewe:!0,fi:!0,fj:!0,fk:!0,fm:!0,fo:!0,"fr-20r":!0,"fr-bre":!0,"fr-cp":!0,fr:!0,fx:!0,ga:!0,"gb-con":!0,"gb-eng":!0,"gb-nir":!0,"gb-ork":!0,"gb-sct":!0,"gb-wls":!0,gb:!0,gd:!0,"ge-ab":!0,ge:!0,gf:!0,gg:!0,gh:!0,gi:!0,gl:!0,gm:!0,gn:!0,gp:!0,gq:!0,gr:!0,gs:!0,gt:!0,gu:!0,guarani:!0,gw:!0,gy:!0,hausa:!0,hk:!0,hm:!0,hmong:!0,hn:!0,hr:!0,ht:!0,hu:!0,ic:!0,id:!0,"id-jb":!0,"id-jt":!0,ie:!0,il:!0,im:!0,"in-as":!0,"in-gj":!0,"in-ka":!0,"in-or":!0,"in-tn":!0,in:!0,io:!0,iq:!0,ir:!0,is:!0,"it-23":!0,"it-82":!0,"it-88":!0,it:!0,je:!0,jm:!0,jo:!0,jp:!0,kanuri:!0,ke:!0,kg:!0,kh:!0,ki:!0,kikuyu:!0,km:!0,kn:!0,kongo:!0,kp:!0,kr:!0,kurdistan:!0,kw:!0,ky:!0,kz:!0,la:!0,lb:!0,lc:!0,li:!0,lk:!0,lr:!0,ls:!0,lt:!0,lu:!0,lv:!0,ly:!0,ma:!0,malayali:!0,manipur:!0,maori:!0,mc:!0,md:!0,me:!0,mf:!0,mg:!0,mh:!0,mizoram:!0,mk:!0,ml:!0,mm:!0,mn:!0,mo:!0,mp:!0,mq:!0,mr:!0,ms:!0,mt:!0,mu:!0,mv:!0,mw:!0,mx:!0,my:!0,mz:!0,na:!0,nato:!0,nc:!0,ne:!0,nf:!0,ng:!0,ni:!0,"nl-fr":!0,nl:!0,no:!0,northern_cyprus:!0,np:!0,nr:!0,nu:!0,nz:!0,occitania:!0,olympics:!0,om:!0,otomi:!0,pa:!0,pe:!0,pf:!0,pg:!0,ph:!0,"pk-jk":!0,"pk-sd":!0,pk:!0,pl:!0,pm:!0,pn:!0,pr:!0,ps:!0,"pt-20":!0,"pt-30":!0,pt:!0,pw:!0,py:!0,qa:!0,quechua:!0,re:!0,ro:!0,rs:!0,ru:!0,"ru-ba":!0,"ru-ce":!0,"ru-cu":!0,"ru-da":!0,"ru-ko":!0,"ru-ta":!0,"ru-ud":!0,rw:!0,sa:!0,sami:!0,sb:!0,sc:!0,sd:!0,se:!0,sg:!0,"sh-ac":!0,"sh-hl":!0,"sh-ta":!0,sh:!0,si:!0,sj:!0,sk:!0,sl:!0,sm:!0,sn:!0,so:!0,somaliland:!0,south_ossetia:!0,soviet_union:!0,sr:!0,ss:!0,st:!0,su:!0,sv:!0,sx:!0,sy:!0,sz:!0,ta:!0,tc:!0,td:!0,tf:!0,tg:!0,th:!0,tibet:!0,tj:!0,tk:!0,tl:!0,tm:!0,tn:!0,to:!0,torres_strait_islands:!0,tr:!0,transnistria:!0,tt:!0,tv:!0,tw:!0,tz:!0,ua:!0,ug:!0,uk:!0,um:!0,un:!0,united_nations:!0,"us-hi":!0,us:!0,uy:!0,uz:!0,va:!0,vc:!0,ve:!0,vg:!0,vi:!0,vn:!0,vu:!0,wf:!0,wiphala:!0,ws:!0,xk:!0,xx:!0,ye:!0,yorubaland:!0,yt:!0,za:!0,zm:!0,zw:!0},s=["countryCode","cdnUrl"],c=function(a,t,e,r){return void 0===r&&(r=""),n({},e,{title:e.title||a,height:e.height||100,src:""+(t||"https://hatscripts.github.io/circle-flags/flags/")+r+a+".svg"})},u=function(r){var i=r.countryCode,u=r.cdnUrl,o=t(r,s);return React.createElement("img",n({"data-testid":"circle-country-flag"},c(function(a){return e[a]?a:"xx"}(i).toLowerCase(),u,o)))};

var TransferActionModel = function (props) {
    var transfer = props.transfer, onFinish = props.onFinish, onCancel = props.onCancel, actionBtnText = props.actionBtnText; props.subText; var openModal = props.openModal, title = props.title, icon = props.icon, type = props.type, remarkRequired = props.remarkRequired, translator = props.translator;
    var t = translator.t;
    var _a = React.useState(undefined), popupError = _a[0], setPopupError = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState(false), checked = _c[0], setChecked = _c[1];
    var companyList = !transfer.isRetirement
        ? [
            {
                value: transfer.toCompanyId,
                label: transfer.receiver[0].name,
            },
        ]
        : [
            {
                value: transfer.fromCompanyId,
                label: transfer.sender[0].name,
            },
        ];
    return (React.createElement(antd.Modal, { title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" }, icon),
            React.createElement("div", null, title)), className: "popup-" + type, open: openModal, width: Math.min(430, window.innerWidth), centered: true, footer: null, onCancel: onCancel, destroyOnClose: true },
        React.createElement("div", { className: "transfer-form" },
            React.createElement(antd.Form, { name: "transfer_init_popup", layout: "vertical", initialValues: {
                    toCompanyId: !transfer.isRetirement
                        ? transfer.toCompanyId
                        : transfer.fromCompanyId,
                    programmeName: transfer.programmeTitle,
                    serialNo: transfer.serialNo,
                    creditAmount: transfer.creditAmount,
                    company: transfer.toCompanyMeta
                        ? transfer.toCompanyMeta.name
                        : null,
                    country: transfer.toCompanyMeta
                        ? transfer.toCompanyMeta.country
                        : null,
                    countryName: transfer.toCompanyMeta
                        ? transfer.toCompanyMeta.countryName
                        : null,
                }, onChange: function () { return setPopupError(undefined); }, onFinish: function (d) { return __awaiter(void 0, void 0, void 0, function () {
                    var res;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                setLoading(true);
                                if (d.comment) {
                                    d.comment = d.comment.trim();
                                }
                                return [4 /*yield*/, onFinish(transfer.requestId, d.comment)];
                            case 1:
                                res = _a.sent();
                                setPopupError(res);
                                setLoading(false);
                                return [2 /*return*/];
                        }
                    });
                }); } },
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:from"), name: "toCompanyId" },
                            React.createElement(antd.Select, { showSearch: true, disabled: true, placeholder: t("view:searchCompany"), showArrow: true, filterOption: false, options: companyList })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:programme"), name: "programmeName" },
                            React.createElement(antd.Input, { disabled: true })))),
                !transfer.isRetirement && (React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:serialNoField"), name: "serialNo" },
                            React.createElement(antd.Input, { disabled: true }))))),
                transfer.toCompanyMeta && transfer.toCompanyMeta.country && (React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("creditTransfer:country"), name: "countryName" },
                            React.createElement(antd.Input, { disabled: true }))))),
                transfer.toCompanyMeta && transfer.toCompanyMeta.name && (React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("creditTransfer:company"), name: "company" },
                            React.createElement(antd.Input, { disabled: true }))))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 18, md: 20 },
                        React.createElement("div", { className: "label" }, "".concat(t("view:transferApproveTotal"), " (").concat(creditUnit, ")"))),
                    React.createElement(antd.Col, { lg: 6, md: 4 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(transfer.creditAmount), disabled: true })))),
                transfer.retirementType === exports.RetireType.CROSS_BORDER && (React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 18, md: 20 },
                        React.createElement("div", { className: "label" }, "".concat(t("view:govInternationalAcc")))),
                    React.createElement(antd.Col, { lg: 6, md: 4 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: transfer.creditAmount
                                    ? addCommSep(transfer.creditAmount -
                                        Number(((transfer.omgePercentage *
                                            transfer.creditAmount) /
                                            100).toFixed(2)))
                                    : "-", disabled: true }))))),
                transfer.retirementType === exports.RetireType.CROSS_BORDER && (React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 18, md: 20, style: { display: "flex" } },
                        React.createElement("div", { className: "label" }, "".concat(t("view:omgeAcc"))),
                        React.createElement("div", { className: "info-container" },
                            React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "topLeft", trigger: "hover", title: t("view:omgeDesc"), overlayClassName: "custom-tooltip" },
                                React.createElement(Icon.InfoCircle, { color: "#000000", size: 15 })))),
                    React.createElement(antd.Col, { lg: 6, md: 4 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: transfer.creditAmount
                                    ? addCommSep(Number(((transfer.omgePercentage *
                                        transfer.creditAmount) /
                                        100).toFixed(2)))
                                    : "-", disabled: true }))))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: "Remarks", name: "comment", rules: [
                                {
                                    required: remarkRequired,
                                    message: "Required field",
                                },
                                function (_a) {
                                    _a.getFieldValue;
                                    return ({
                                        validator: function (rule, v) {
                                            if (remarkRequired &&
                                                v !== undefined &&
                                                v !== "" &&
                                                v.trim() === "") {
                                                // eslint-disable-next-line prefer-promise-reject-errors
                                                return Promise.reject("Required field");
                                            }
                                            return Promise.resolve();
                                        },
                                    });
                                },
                            ] },
                            React.createElement(antd.Input.TextArea, { placeholder: "" })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "text-left", valuePropName: "checked", label: "", name: "confirm" },
                            React.createElement(antd.Checkbox, { className: "label", onChange: function (v) { return setChecked(v.target.checked); } }, t("view:confirmClosure"))))),
                popupError ? (React.createElement(antd.Alert, { className: "error", message: popupError, type: "error", showIcon: true })) : (""),
                React.createElement(antd.Form.Item, { className: "footer" },
                    React.createElement(antd.Button, { htmlType: "button", onClick: onCancel }, t("view:cancel")),
                    React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading, disabled: !checked }, actionBtnText))))));
};

var CreditTransferComponent = function (props) {
    var translator = props.translator, onNavigateToProgrammeView = props.onNavigateToProgrammeView;
    var userInfoState = useUserContext().userInfoState;
    var t = translator.t;
    var statusOptions = Object.keys(exports.CreditTransferStage).map(function (k, index) { return ({
        label: addSpaces(Object.values(exports.CreditTransferStage)[index]),
        value: k,
    }); });
    var _a = React.useState(statusOptions.map(function (e) { return e.value; })), selectedStatus = _a[0], setSelectedStatus = _a[1];
    var _b = React.useState(false), indeterminate = _b[0], setIndeterminate = _b[1];
    var _c = React.useState(true), checkAll = _c[0], setCheckAll = _c[1];
    var _d = useConnection(), post = _d.post; _d.get;
    var _e = React.useState(), totalProgramme = _e[0], setTotalProgramme = _e[1];
    var _f = React.useState(), dataFilter = _f[0], setDataFilter = _f[1];
    var _g = React.useState(false), loading = _g[0], setLoading = _g[1];
    var _h = React.useState([]), tableData = _h[0], setTableData = _h[1];
    var _j = React.useState(1), currentPage = _j[0], setCurrentPage = _j[1];
    var _k = React.useState(10), pageSize = _k[0], setPageSize = _k[1];
    var _l = React.useState(), search = _l[0], setSearch = _l[1];
    var _m = React.useState(), searchText = _m[0], setSearchText = _m[1];
    var _o = React.useState(), statusFilter = _o[0], setStatusFilter = _o[1];
    var _p = React.useState(), sortOrder = _p[0], setSortOrder = _p[1];
    var _q = React.useState(), sortField = _q[0], setSortField = _q[1];
    var _r = React.useState(false), modalVisible = _r[0], setModalVisible = _r[1];
    var _s = React.useState(), selectedReq = _s[0], setSelectedReq = _s[1];
    var _t = React.useState(), popupInfo = _t[0], setPopupInfo = _t[1];
    var _u = React.useState(); _u[0]; _u[1];
    var _v = React.useState(0); _v[0]; _v[1];
    var _w = React.useState(); _w[0]; _w[1];
    var _x = React.useState(0); _x[0]; _x[1];
    var _y = useSettingsContext(), isTransferFrozen = _y.isTransferFrozen, setTransferFrozen = _y.setTransferFrozen;
    var _z = React.useState([]), ministrySectoralScope = _z[0], setMinistrySectoralScope = _z[1];
    var _0 = React.useState(false), ministryLevelFilter = _0[0], setMinistryLevelFilter = _0[1];
    var _1 = React.useState(), dataQuery = _1[0], setDataQuery = _1[1];
    var onStatusQuery = function (checkedValues) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            console.log(checkedValues);
            if (checkedValues !== selectedStatus) {
                setSelectedStatus(checkedValues);
            }
            if (checkedValues.length === 0) {
                setTableData([]);
                setTotalProgramme(0);
                return [2 /*return*/];
            }
            setStatusFilter({
                key: "status",
                operation: "in",
                value: checkedValues,
            });
            return [2 /*return*/];
        });
    }); };
    antd.Form.useForm()[0];
    var Search = antd.Input.Search;
    var ministryLevelPermission = function (sectoralScope) {
        return ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly &&
            ministrySectoralScope.includes(sectoralScope));
    };
    var onCheckAllChange = function (e) {
        var nw = e.target.checked ? statusOptions.map(function (el) { return el.value; }) : [];
        setSelectedStatus(nw);
        setIndeterminate(false);
        setCheckAll(e.target.checked);
        onStatusQuery(nw);
    };
    var getAllTransfers = function () { return __awaiter(void 0, void 0, void 0, function () {
        var filter, interFilterOr, sort, filterBy, response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    filter = [];
                    if (statusFilter) {
                        filter.push(statusFilter);
                    }
                    if (search && search !== "") {
                        interFilterOr = [
                            {
                                key: "programmeTitle",
                                operation: "like",
                                value: "%".concat(search, "%"),
                            },
                        ];
                        if (!isNaN(Number(search))) {
                            interFilterOr.push({
                                key: "requestId",
                                operation: "=",
                                value: "".concat(search),
                            });
                        }
                        filter.push({
                            value: {
                                page: currentPage,
                                size: pageSize,
                                filterOr: interFilterOr,
                            },
                        });
                    }
                    if (sortOrder && sortField) {
                        sort = {
                            key: sortField === "programmeCertifierId"
                                ? "programmeCertifierId[1]"
                                : sortField,
                            order: sortOrder,
                            nullFirst: false,
                        };
                    }
                    else {
                        sort = {
                            key: "requestId",
                            order: "DESC",
                        };
                    }
                    if (ministryLevelFilter) {
                        filterBy = {
                            key: "ministryLevel",
                            value: ministrySectoralScope,
                        };
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/transferQuery", {
                            page: currentPage,
                            size: pageSize,
                            filterAnd: filter,
                            filterOr: dataFilter,
                            sort: sort,
                            filterBy: filterBy,
                        })];
                case 2:
                    response = _a.sent();
                    console.log(response);
                    setTableData(response.data);
                    setTotalProgramme(response.response.data.total);
                    setDataQuery({
                        filterAnd: filter,
                        filterOr: dataFilter,
                        sort: sort,
                        filterBy: filterBy,
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting programme transfers", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var downloadTransferData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, url, a, error_2;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setLoading(true);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/transfers/download", {
                            filterAnd: dataQuery.filterAnd,
                            filterOr: ((_a = dataQuery.filterOr) === null || _a === void 0 ? void 0 : _a.length) > 0 ? dataQuery.filterOr : undefined,
                            sort: dataQuery.sort,
                            filterBy: dataQuery.filterBy,
                        })];
                case 2:
                    response = _b.sent();
                    if (response && response.data) {
                        url = response.data.url;
                        a = document.createElement('a');
                        a.href = url;
                        a.download = response.data.csvFile; // Specify the filename for the downloaded file
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a); // Clean up the created <a> element
                        window.URL.revokeObjectURL(url);
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_2 = _b.sent();
                    console.log("Error in exporting transfers", error_2);
                    antd.message.open({
                        type: "error",
                        content: error_2.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var getUserDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_3;
        var _a, _b, _c, _d, _e, _f;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    setLoading(true);
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/user/query", {
                            page: 1,
                            size: 10,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.id,
                                },
                            ],
                        })];
                case 2:
                    response = _g.sent();
                    if (response && response.data) {
                        if (((_a = response === null || response === void 0 ? void 0 : response.data[0]) === null || _a === void 0 ? void 0 : _a.companyRole) === exports.CompanyRole.MINISTRY &&
                            ((_b = response === null || response === void 0 ? void 0 : response.data[0]) === null || _b === void 0 ? void 0 : _b.company) &&
                            ((_d = (_c = response === null || response === void 0 ? void 0 : response.data[0]) === null || _c === void 0 ? void 0 : _c.company) === null || _d === void 0 ? void 0 : _d.sectoralScope)) {
                            setMinistrySectoralScope((_f = (_e = response === null || response === void 0 ? void 0 : response.data[0]) === null || _e === void 0 ? void 0 : _e.company) === null || _f === void 0 ? void 0 : _f.sectoralScope);
                        }
                    }
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_3 = _g.sent();
                    console.log("Error in getting users", error_3);
                    setLoading(false);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        if (currentPage !== 1) {
            setCurrentPage(1);
        }
        else {
            getAllTransfers();
        }
    }, [statusFilter, dataFilter]);
    React.useEffect(function () {
        getAllTransfers();
    }, [currentPage, pageSize, sortField, sortOrder, search, ministryLevelFilter]);
    React.useEffect(function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            getUserDetails();
        }
    }, []);
    var handleRequestOk = function (reqId, remarks, endpoint, successText, isRetire) { return __awaiter(void 0, void 0, void 0, function () {
        var response, successMsg, error_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/" + endpoint, {
                            requestId: reqId,
                            comment: remarks,
                        })];
                case 2:
                    response = _a.sent();
                    successMsg = response.message;
                    if (isRetire) {
                        successMsg = t("creditTransfer:internationalTransferReqCancelled");
                    }
                    console.log(response);
                    antd.message.open({
                        type: "success",
                        content: successText ? successText : successMsg,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setLoading(false);
                    getAllTransfers();
                    setModalVisible(false);
                    return [3 /*break*/, 4];
                case 3:
                    error_4 = _a.sent();
                    console.log("Error in Cancelling transfer request", error_4);
                    setLoading(false);
                    return [2 /*return*/, error_4.message];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    var showModalOnAction = function (record, info) {
        setSelectedReq(record);
        setModalVisible(true);
        setPopupInfo(info);
    };
    var actionMenu = function (record) {
        var isRetire = false;
        if (record.isRetirement === true) {
            isRetire = true;
        }
        if (record.status === "Pending" &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
            return (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId) === record.initiatorCompanyId ? (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("creditTransfer:cancel"),
                        icon: React.createElement(Icon__namespace.ExclamationOctagon, null),
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:cancelTitle"),
                                icon: React.createElement(Icon__namespace.ExclamationOctagon, null),
                                actionBtnText: t("creditTransfer:proceed"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "transferCancel", undefined, isRetire);
                                },
                                type: "danger",
                                remarkRequired: true,
                            });
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon color-error" }, item.icon),
                    React.createElement("span", null, item.text))); } })) : !record.isRetirement &&
                record.fromCompanyId === (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId) ? (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("creditTransfer:accept"),
                        icon: React.createElement(Icon__namespace.ClipboardCheck, null),
                        style: "color-primary",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:acceptCreditTransferTitle"),
                                icon: React.createElement(Icon__namespace.ClipboardCheck, null),
                                actionBtnText: t("creditTransfer:proceed"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "transferApprove", "".concat(t("creditTransfer:transferReqApproved")));
                                },
                                type: "primary",
                                remarkRequired: false,
                            });
                        },
                    },
                    {
                        text: t("creditTransfer:reject"),
                        icon: React.createElement(Icon__namespace.XOctagon, null),
                        style: "color-error",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:rejectTitle"),
                                icon: React.createElement(Icon__namespace.XOctagon, null),
                                actionBtnText: t("creditTransfer:reject"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "transferReject");
                                },
                                type: "danger",
                                remarkRequired: true,
                            });
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon ".concat(item.style) }, item.icon),
                    React.createElement("span", null, item.text))); } })) : record.isRetirement &&
                ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
                    ministryLevelPermission(record.programmeSectoralScope)) ? (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("creditTransfer:recognise"),
                        icon: React.createElement(Icon__namespace.Save, null),
                        style: "color-primary",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:recogniseTitle"),
                                icon: React.createElement(Icon__namespace.Save, null),
                                actionBtnText: t("creditTransfer:recognise"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "transferApprove", "".concat(t("creditTransfer:internationalTranferReqAccepted")));
                                },
                                type: "primary",
                                remarkRequired: false,
                            });
                        },
                    },
                    {
                        text: t("creditTransfer:notrecognise"),
                        icon: React.createElement(Icon__namespace.XOctagon, null),
                        style: "color-error",
                        click: function () {
                            showModalOnAction(record, {
                                title: t("creditTransfer:notRecogniseTitle"),
                                icon: React.createElement(Icon__namespace.XOctagon, null),
                                actionBtnText: t("creditTransfer:notrecognise"),
                                okAction: function (requestId, comment) {
                                    return handleRequestOk(requestId, comment, "transferReject", "".concat(t("creditTransfer:internationalTransferReqRejected")));
                                },
                                type: "danger",
                                remarkRequired: true,
                            });
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon ".concat(item.style) }, item.icon),
                    React.createElement("span", null, item.text))); } })) : null;
        }
    };
    var columns = [
        {
            title: t("creditTransfer:requestID"),
            dataIndex: "requestId",
            key: "requestId",
            sorter: true,
        },
        {
            title: t("creditTransfer:date"),
            key: "txTime",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, luxon.DateTime.fromMillis(parseInt(itemObj.txTime)).toFormat("dd LLLL yyyy")));
            },
        },
        {
            title: t("creditTransfer:pName"),
            dataIndex: "programmeTitle",
            key: "programmeTitle",
            sorter: true,
            align: "left",
            render: function (item) {
                return React.createElement("span", { className: "clickable" }, item);
            },
            onCell: function (record, rowIndex) {
                return {
                    onClick: function (ev) {
                        onNavigateToProgrammeView(record.programmeId);
                    },
                };
            },
        },
        {
            title: t("creditTransfer:sector"),
            dataIndex: "programmeSector",
            key: "programmeSector",
            sorter: true,
            align: "left",
        },
        {
            title: t("creditTransfer:certifier"),
            dataIndex: "programmeCertifierId",
            key: "programmeCertifierId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                if (item === null) {
                    return;
                }
                var cMap = {};
                for (var _i = 0, _a = itemObj.certifier; _i < _a.length; _i++) {
                    var c = _a[_i];
                    cMap[c.companyId] = c;
                }
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.programmeCertifierId &&
                    itemObj.programmeCertifierId.map(function (id, i) {
                        var v = cMap[id];
                        if (!v) {
                            return;
                        }
                        return (React.createElement(antd.Tooltip, { title: v.name, color: TooltipColor, key: TooltipColor },
                            React.createElement("div", null,
                                React.createElement(ProfileIcon, { icon: v.logo, bg: "rgba(128, 255, 0, 0.12)", name: v.name }))));
                    })));
            },
        },
        {
            title: t("creditTransfer:initiator"),
            key: "initiatorCompanyId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.requester &&
                    itemObj.requester.map(function (v, i) {
                        return (React.createElement(antd.Tooltip, { title: v.name, color: TooltipColor, key: TooltipColor },
                            React.createElement("div", null,
                                React.createElement(ProfileIcon, { icon: v.logo, bg: getCompanyBgColor(v.companyRole), name: v.name }))));
                    })));
            },
        },
        {
            title: t("creditTransfer:cSender"),
            key: "fromCompanyId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.sender &&
                    itemObj.sender.map(function (v, i) {
                        return (React.createElement(antd.Tooltip, { title: v.name, color: TooltipColor, key: TooltipColor },
                            React.createElement("div", null,
                                React.createElement(ProfileIcon, { icon: v.logo, bg: getCompanyBgColor(v.companyRole), name: v.name }))));
                    })));
            },
        },
        {
            title: t("creditTransfer:cReceiver"),
            dataIndex: "toCompanyId",
            key: "toCompanyId",
            sorter: true,
            align: "left",
            render: function (item, itemObj) {
                return (React.createElement("div", { style: { display: "flex", alignItems: "center" } }, itemObj.receiver &&
                    itemObj.receiver.map(function (v, i) {
                        return !itemObj.isRetirement ? (React.createElement(antd.Tooltip, { title: v.name, color: TooltipColor, key: TooltipColor },
                            React.createElement("div", null,
                                React.createElement(ProfileIcon, { icon: v.logo, bg: getCompanyBgColor(v.companyRole), name: v.name })))) : itemObj.retirementType === "0" ? (React.createElement(antd.Tooltip, { title: t("creditTransfer:iaccount") +
                                "".concat(itemObj.toCompanyMeta &&
                                    itemObj.toCompanyMeta.countryName
                                    ? " - " + itemObj.toCompanyMeta.countryName
                                    : ""), color: TooltipColor, key: TooltipColor }, itemObj.toCompanyMeta && itemObj.toCompanyMeta.country && (React.createElement(u, { className: "profile-icon flag-ret-icon", countryCode: itemObj.toCompanyMeta.country.toLowerCase() })))) : (React.createElement(antd.Tooltip, { title: t("creditTransfer:laccount"), color: TooltipColor, key: TooltipColor },
                            React.createElement("div", { className: "ret-icon profile-icon" },
                                React.createElement(Icon__namespace.Save, null))));
                    })));
            },
        },
        {
            title: t("creditTransfer:cRequested") + " (".concat(creditUnit, ")"),
            dataIndex: "creditAmount",
            key: "creditAmount",
            sorter: true,
            align: "right",
            render: function (item) {
                return React.createElement("span", { className: "clickable" }, addCommSepRound$1(item));
            },
        },
        {
            title: t("programme:status"),
            key: "status",
            sorter: true,
            align: "center",
            render: function (item, Obj) {
                return (React.createElement(antd.Tooltip, { title: Obj.serialNo, color: TooltipColor, key: TooltipColor },
                    React.createElement(antd.Tag, { className: "clickable", color: getTransferStageTagType(Obj.status) }, addSpaces(getStageTransferEnumVal(Obj.status)))));
            },
        },
        {
            align: "right",
            render: function (_, record) {
                var menu = actionMenu(record);
                return menu && !isTransferFrozen ? (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                    React.createElement(icons.EllipsisOutlined, { rotate: 90, style: { fontWeight: 600, fontSize: "1rem", cursor: "pointer" } }))) : (React.createElement("span", null));
            },
            // render: () => {
            //   return (
            //     <div className="clickable">
            //       <MoreOutlined style={{ fontSize: '20px' }} />
            //     </div>
            //   );
            // },
        },
    ];
    var onSearch = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setSearch(searchText);
            return [2 /*return*/];
        });
    }); };
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    var handleTableChange = function (pag, sorter) {
        console.log(pag, sorter);
        setSortOrder(sorter.order === "ascend"
            ? "ASC"
            : sorter.order === "descend"
                ? "DESC"
                : undefined);
        setSortField(sorter.columnKey);
        // setCurrentPage(1);
    };
    var onFreezeTransfer = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, post("national/Settings/update", {
                        id: exports.ConfigurationSettingsType.isTransferFrozen,
                        settingValue: "".concat(!isTransferFrozen),
                    })];
                case 1:
                    response = _a.sent();
                    if (response) {
                        setTransferFrozen(!isTransferFrozen);
                    }
                    return [2 /*return*/];
            }
        });
    }); };
    return (React.createElement("div", { className: "credit-transfer-management content-container" },
        React.createElement("div", { className: "title-bar title-bar-transfer" },
            React.createElement(antd.Row, { justify: "space-between", align: "middle" },
                React.createElement(antd.Col, { span: 20 },
                    React.createElement("div", { className: "body-title" }, t("creditTransfer:viewCreditsTransfers"))),
                React.createElement(antd.Col, { span: 4 }, (((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.Admin) ||
                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.Root) && (React.createElement("div", { className: "transfer-freeze-icon", onClick: onFreezeTransfer }, isTransferFrozen ? (React.createElement(Icon.PlayCircle, { className: "play-circle", size: 35 })) : (React.createElement(Icon.PauseCircle, { className: "pause-circle", size: 35 }))))))),
        React.createElement("div", { className: "content-card" },
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: { span: 16 }, md: { span: 16 } },
                    React.createElement("div", { className: "action-bar" },
                        React.createElement(antd.Checkbox, { className: "all-check", indeterminate: indeterminate, onChange: onCheckAllChange, checked: checkAll, defaultChecked: true }, "All"),
                        React.createElement(antd.Checkbox.Group, { options: statusOptions, defaultValue: statusOptions.map(function (e) { return e.value; }), value: selectedStatus, onChange: onStatusQuery }))),
                React.createElement(antd.Col, { lg: { span: 8 }, md: { span: 8 } },
                    React.createElement("div", { className: "filter-section" },
                        React.createElement("div", { className: "search-filter" },
                            React.createElement(antd.Checkbox, { className: "label", onChange: function (v) {
                                    return setDataFilter(v.target.checked
                                        ? [
                                            {
                                                key: "initiatorCompanyId",
                                                operation: "=",
                                                value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                                            },
                                            {
                                                key: "fromCompanyId",
                                                operation: "=",
                                                value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                                            },
                                            {
                                                key: "toCompanyId",
                                                operation: "=",
                                                value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                                            },
                                            {
                                                key: "programmeCertifierId",
                                                operation: "ANY",
                                                value: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyId,
                                            },
                                        ]
                                        : undefined);
                                } }, t("view:seeMine")),
                            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY && (React.createElement(antd.Checkbox, { className: "label ministry-level-filter-checkbox", onChange: function (v) {
                                    if (v.target.checked) {
                                        setMinistryLevelFilter(true);
                                    }
                                    else {
                                        setMinistryLevelFilter(false);
                                    }
                                } }, t("view:ministryLevel")))),
                        React.createElement("div", { className: "search-bar" },
                            React.createElement(Search, { onPressEnter: onSearch, placeholder: "Search", allowClear: true, onChange: function (e) {
                                    return e.target.value === ""
                                        ? setSearch(e.target.value)
                                        : setSearchText(e.target.value);
                                }, onSearch: setSearch, style: { width: 265 } })),
                        React.createElement("div", { className: "download-data-btn" },
                            React.createElement("a", { onClick: downloadTransferData },
                                React.createElement(icons.DownloadOutlined, { style: {
                                        color: "rgba(58, 53, 65, 0.3)",
                                        fontSize: "20px",
                                    } })))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement("div", { className: "programmeManagement-table-container" },
                        React.createElement(antd.Table, { dataSource: tableData, columns: columns, className: "common-table-class", loading: loading, pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: totalProgramme,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, onChange: function (val, filter, sorter) {
                                return handleTableChange(val, sorter);
                            }, locale: {
                                emptyText: (React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: tableData.length === 0
                                        ? t("creditTransfer:noTransfer")
                                        : null })),
                            } }))))),
        popupInfo && selectedReq && (React.createElement(TransferActionModel, { transfer: selectedReq, onCancel: function () {
                setModalVisible(false);
                setSelectedReq(undefined);
            }, actionBtnText: popupInfo.actionBtnText, onFinish: popupInfo === null || popupInfo === void 0 ? void 0 : popupInfo.okAction, subText: "", openModal: modalVisible, icon: popupInfo.icon, title: popupInfo.title, type: popupInfo.type, remarkRequired: popupInfo.remarkRequired, translator: translator }))));
};

var css_248z$c = ".mapboxgl-popup-content {\n  background-color: #ffffff !important;\n  color: rgba(58, 53, 65, 0.8) !important; }\n\n.unit {\n  display: flex;\n  font-family: \"Inter\";\n  font-size: 1.15rem;\n  font-weight: 500;\n  color: rgba(58, 53, 65, 0.5); }\n\n.card-icons {\n  color: #008f39; }\n\n.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip {\n  border-top-color: #ffffff !important; }\n\n.mapboxgl-popup-close-button,\n.mapboxgl-popup-close-button:hover {\n  display: none; }\n\n.total-container {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray; }\n\n.margin-top-6 {\n  margin-top: 7.5rem; }\n\n.margin-top-2 {\n  margin-top: 2rem; }\n\n.margin-top-1 {\n  margin-top: 1rem; }\n\n.ant-btn.mrvdefault {\n  border-radius: 5px 0px 0px 5px !important; }\n\n.ant-btn.mrvdefault-right {\n  border-radius: 0px 5px 5px 0px !important; }\n\n.ant-btn.mrvprimary {\n  border-radius: 0px 0px 0px 0px !important; }\n\n.cards-title {\n  font-family: \"Inter\";\n  align-items: flex-start;\n  justify-content: flex-start;\n  font-style: normal;\n  font-weight: 600;\n  height: 50px;\n  font-size: 1.15rem;\n  margin-top: 1rem;\n  color: rgba(58, 53, 65, 0.8); }\n\n.dashboard-main-container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  padding: 0 2rem 0 2rem; }\n  .dashboard-main-container .header-and-title {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    padding: 0 15px 0 15px;\n    font-family: \"Inter-Regular\";\n    font-size: 1.4rem;\n    font-weight: 600; }\n  .dashboard-main-container .stastics-cards-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: center; }\n    .dashboard-main-container .stastics-cards-container .stastic-card-row {\n      width: 100%; }\n      .dashboard-main-container .stastics-cards-container .stastic-card-row .stastic-card-col {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center; }\n  .dashboard-main-container .filter-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 2rem;\n    padding: 0 1.2rem 0 1.2rem; }\n    .dashboard-main-container .filter-container .radio-selection .ant-radio-button-wrapper {\n      height: 35px !important;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      color: rgba(58, 53, 65, 0.5); }\n    .dashboard-main-container .filter-container .radio-selection .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n)::before {\n      background-color: transparent !important; }\n    .dashboard-main-container .filter-container .radio-selection .overall {\n      border-radius: 5px 0 0 5px !important; }\n    .dashboard-main-container .filter-container .radio-selection .mine {\n      border-radius: 0 5px 5px 0 !important; }\n  .dashboard-main-container .center {\n    align-items: center;\n    justify-content: center; }\n  .dashboard-main-container .height-pie-rem {\n    height: 26.2rem; }\n    .dashboard-main-container .height-pie-rem .apexcharts-legend {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between !important;\n      inset: auto 0px 0px 5px !important; }\n    .dashboard-main-container .height-pie-rem .apexcharts-legend-series {\n      display: flex !important;\n      width: 42%; }\n  .dashboard-main-container .height-bar-rem {\n    height: 29rem; }\n  .dashboard-main-container .height-map-rem {\n    height: 510px; }\n  .dashboard-main-container .stastics-and-charts-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    margin-top: 2rem;\n    margin-bottom: 2rem; }\n    .dashboard-main-container .stastics-and-charts-container .stastic-card-row {\n      width: 100%; }\n      .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card {\n        display: flex;\n        flex-direction: column;\n        background-color: #ffffff;\n        border-radius: 10px;\n        padding: 0 1rem 0.7rem 1rem;\n        width: 100%; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .margin-top-2 {\n          width: 100%;\n          margin-top: 2rem; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .title-section {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-start;\n          justify-content: space-between;\n          width: 100%;\n          padding: 1rem 1rem 0 1rem;\n          flex-wrap: wrap; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .title-section .title {\n            font-family: \"Inter\";\n            font-style: normal;\n            font-weight: 600;\n            width: 90%;\n            font-size: 1.15rem;\n            color: rgba(58, 53, 65, 0.8); }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .title-section .info-container {\n            display: flex;\n            flex-direction: row;\n            width: 10%;\n            height: 30px;\n            align-items: center;\n            justify-content: flex-end; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .mrv-total-programme-details {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n          height: 150px;\n          margin-top: 1rem; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .mrv-total-programme-details .details {\n            display: flex;\n            flex-direction: column;\n            width: 70%;\n            padding: 0 1rem 0 0.8rem; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .mrv-total-programme-details .details .detail {\n              font-family: \"Inter\";\n              font-style: normal;\n              font-weight: 400;\n              font-size: 0.875rem;\n              line-height: 1.375rem;\n              padding-left: 0.125rem;\n              color: rgba(58, 53, 65, 0.8);\n              margin-bottom: 0.5rem; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .mrv-total-programme-details .details .value {\n              font-family: \"Inter\";\n              font-style: normal;\n              font-weight: 600;\n              font-size: 1.6rem;\n              line-height: 22px;\n              padding-left: 0.125rem;\n              padding: 0;\n              color: #008f39; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .mrv-total-programme-details .icon {\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n            width: 30%; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .mrv-total-programme-details .icon img {\n              height: 80px; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details {\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n          justify-content: flex-start;\n          height: 100px;\n          width: 100%;\n          margin-top: 1rem;\n          margin-bottom: 0.5rem;\n          padding: 0 0.5rem 0 0.5rem; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details,\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            justify-content: space-between;\n            width: 100%; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon,\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon {\n              display: flex;\n              flex-direction: row;\n              width: 20%; }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .icon-container,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .icon-container {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: center;\n                border-radius: 50px;\n                width: 2.813rem;\n                height: 2.813rem; }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .reject,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .reject {\n                background-color: rgba(255, 166, 166, 0.4); }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .transfer,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .transfer {\n                background-color: rgba(254, 241, 173, 0.5); }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .pending,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .pending {\n                background-color: rgba(164, 162, 168, 0.5); }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .authorized,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .authorized {\n                background-color: rgba(185, 226, 244, 0.4); }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details,\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details {\n              display: flex;\n              flex-direction: column;\n              width: 80%;\n              height: 3.438rem; }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details .label-and-value,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details .label-and-value {\n                display: flex;\n                flex-direction: row;\n                align-items: flex-start;\n                justify-content: space-between; }\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details .label-and-value .label,\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details .label-and-value .label {\n                  font-family: \"Inter\";\n                  font-style: normal;\n                  font-weight: 400;\n                  font-size: 0.875rem;\n                  color: rgba(58, 53, 65, 0.5); }\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details .label-and-value .value,\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details .label-and-value .value {\n                  font-family: \"Inter\";\n                  font-style: normal;\n                  font-weight: 400;\n                  height: 30px;\n                  font-size: 1.5rem;\n                  margin-top: -8px;\n                  color: rgba(58, 53, 65, 0.8); }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .stage-legends {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          margin-top: 1rem; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .updated-on {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-end;\n          justify-content: flex-start;\n          padding: 0 1rem 0 0.8rem;\n          height: 50px; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .updated-on .updated-moment-container {\n            display: flex;\n            flex-direction: row;\n            font-size: 0.75rem;\n            border-radius: 3.125rem;\n            padding: 0.05rem 0.8rem 0.05rem 0.8rem;\n            color: #008f39;\n            background-color: rgba(222, 205, 254, 0.4); }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n          padding: 0 1rem 0 1rem; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top .pie-charts-title {\n            display: flex;\n            flex-direction: row;\n            font-family: \"Inter\";\n            align-items: flex-start;\n            justify-content: flex-start;\n            font-style: normal;\n            font-weight: 600;\n            height: 50px;\n            font-size: 1.15rem;\n            margin-top: 1rem;\n            color: rgba(58, 53, 65, 0.8); }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top .pie-charts-title .unit {\n              display: flex;\n              margin: 0 0 0 0.5rem;\n              font-family: \"Inter\";\n              font-size: 1.15rem;\n              font-weight: 500;\n              color: rgba(58, 53, 65, 0.5); }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top .info-container {\n            display: flex;\n            flex-direction: row;\n            align-items: center; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-section {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 100%; }\n  .dashboard-main-container .stastics-and-pie-card:hover {\n    box-shadow: rgba(0, 5, 18, 0.2) 0px 8px 24px; }\n  .dashboard-main-container .stastics-charts-container-total-programmes {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 60px 10px 25px 15px; }\n    .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .dashboard-main-container .stastics-charts-container-certified-programmes {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 5px 10px 25px 15px; }\n    .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .dashboard-main-container .stastics-pie-charts-container {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 5px 10px 25px 15px; }\n    .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .dashboard-main-container .maps-container {\n    display: flex;\n    flex-direction: row;\n    border-radius: 10px;\n    margin: 25px 20px 25px 15px;\n    height: auto; }\n    .dashboard-main-container .maps-container .maps-container-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .maps-container .maps-container-row .maps-container-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n";
styleInject(css_248z$c);

var MrvPieChartsStatComponent = function (props) {
    var id = props.id, title = props.title, options = props.options, series = props.series, lastUpdate = props.lastUpdate, loading = props.loading, toolTipText = props.toolTipText, Chart = props.Chart;
    return (React.createElement("div", { className: "stastics-and-pie-card height-pie-rem" }, loading ? (React.createElement("div", { className: "margin-top-2" },
        React.createElement(antd.Skeleton, { active: true }),
        React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "pie-charts-top" },
            React.createElement("div", { className: "pie-charts-title" },
                title,
                [
                    exports.StatsCardsTypes.CREDITS,
                    exports.StatsCardsTypes.CERTIFIED_CREDITS,
                ].includes(title) && React.createElement("div", { className: "unit" }, "(ITMOs)")),
            React.createElement("div", { className: "info-container" },
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
        React.createElement("div", { className: "pie-charts-section" },
            React.createElement(Chart, { id: id, options: options, series: series, type: "donut", height: "320px" })),
        React.createElement("div", { className: "updated-on margin-top-2" }, lastUpdate !== "0" && (React.createElement("div", { className: "updated-moment-container" }, lastUpdate)))))));
};

var getChartOptions = function (labels, colors) {
    return {
        states: {
            normal: {
                filter: {
                    type: "none",
                    value: 0,
                },
            },
            hover: {
                filter: {
                    type: "none",
                    value: 0,
                },
            },
            active: {
                allowMultipleDataPointsSelection: true,
                filter: {
                    type: "darken",
                    value: 0.7,
                },
            },
        },
        chart: {
            type: "donut",
        },
        dataLabels: {
            enabled: false,
        },
        colors: colors,
        labels: labels,
        plotOptions: {
            pie: {
                expandOnClick: false,
                donut: {
                    labels: {
                        show: true,
                        total: {
                            showAlways: true,
                            show: true,
                            label: "Total",
                            formatter: function (w) {
                                return addCommSepRound$1(w.globals.seriesTotals.reduce(function (a, b) {
                                    return a + b;
                                }, 0));
                            },
                        },
                        value: {
                            formatter: function (value) {
                                return addCommSepRound$1(value);
                            },
                        },
                    },
                },
            },
        },
        legend: {
            show: true,
            showForSingleSeries: false,
            showForNullSeries: true,
            showForZeroSeries: true,
            position: "bottom",
            horizontalAlign: "center",
            floating: false,
            fontSize: "14px",
            fontFamily: "Inter",
            fontWeight: 400,
            formatter: undefined,
            inverseOrder: false,
            width: undefined,
            height: undefined,
            tooltipHoverFormatter: undefined,
            customLegendItems: [],
            offsetX: 0,
            offsetY: 5,
            labels: {
                colors: "#000000d9",
                useSeriesColors: false,
            },
            markers: {
                width: 12,
                height: 12,
                strokeWidth: 0,
                strokeColor: "#fff",
                fillColors: colors,
                radius: 12,
                customHTML: undefined,
                onClick: undefined,
                offsetX: 0,
                offsetY: 0,
            },
            itemMargin: {
                horizontal: 10,
                vertical: 3,
            },
            onItemClick: {
                toggleDataSeries: true,
            },
            onItemHover: {
                highlightDataSeries: true,
            },
        },
        responsive: [
            {
                breakpoint: 480,
                options: {
                    chart: {
                        width: 200,
                    },
                    legend: {
                        position: "bottom",
                    },
                },
            },
        ],
        tooltip: {
            enabled: true,
            y: {
                formatter: function (value) {
                    return addCommSepRound$1(value);
                },
            },
        },
    };
};

var ListWidgetComponent = function (props) {
    var title = props.title, total = props.total, data = props.data, icon = props.icon, totalText = props.totalText, updatedDate = props.updatedDate, loading = props.loading, toolTipText = props.toolTipText, subTitle = props.subTitle;
    React.useEffect(function () { });
    return (React.createElement("div", { className: "stastics-and-pie-card height-pie-rem" }, loading ? (React.createElement("div", { className: "margin-top-2" },
        React.createElement(antd.Skeleton, { active: true }),
        React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "title-section" },
            React.createElement("div", { className: "title" }, title),
            React.createElement("div", { className: "info-container" },
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText, overlayClassName: "custom-tooltip" },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 }))),
            subTitle && React.createElement("div", { className: "unit" }, subTitle)),
        React.createElement("div", { className: "mrv-total-programme-details" },
            React.createElement("div", { className: "details" },
                React.createElement("div", { className: "detail" }, totalText),
                React.createElement("div", { className: "value" }, addCommSepRound$1(total))),
            React.createElement("div", { className: "icon" }, icon)),
        React.createElement("div", { className: "total-programme-extra-details" }, data.map(function (item, index) { return (React.createElement("div", { className: "transfered-details margin-top-1" },
            React.createElement("div", { className: "icon" },
                React.createElement("div", { className: "icon-container", style: { backgroundColor: item.startColor } }, item.icon)),
            React.createElement("div", { className: "details" },
                React.createElement("div", { className: "label-and-value" },
                    React.createElement("div", { className: "label" }, item.label),
                    React.createElement("div", { className: "value" }, addCommSepRound$1(item.value))),
                React.createElement("div", { className: "stastic-bar" },
                    React.createElement(antd.Progress, { showInfo: false, percent: (item.value / total) * 100, status: "active", strokeColor: { from: item.startColor, to: item.endColor } }))))); })),
        React.createElement("div", { className: "updated-on margin-top-6" }, updatedDate !== "0" && (React.createElement("div", { className: "updated-moment-container" }, updatedDate)))))));
};

var css_248z$b = ".map-box-container .mapboxgl-popup-content {\n  background-color: #ffffff !important;\n  color: rgba(58, 53, 65, 0.8) !important; }\n\n.map-box-container .mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip {\n  border-top-color: #ffffff !important; }\n\n.map-box-container .mapboxgl-popup-close-button,\n.map-box-container .mapboxgl-popup-close-button:hover {\n  display: none; }\n";
styleInject(css_248z$b);

var MapboxComponent = function (props) {
    var mapContainerRef = React.useRef(null);
    var center = props.center, markers = props.markers, mapSource = props.mapSource, onClick = props.onClick, showPopupOnClick = props.showPopupOnClick, onMouseMove = props.onMouseMove, layer = props.layer, height = props.height, style = props.style, zoom = props.zoom, onRender = props.onRender, accessToken = props.accessToken;
    mapboxgl.accessToken = accessToken;
    React.useEffect(function () {
        if (!mapContainerRef || !mapContainerRef.current || center.length !== 2) {
            return;
        }
        var map = new mapboxgl.Map({
            container: mapContainerRef.current || '',
            style: style,
            center: !Number.isNaN(center[0]) && !Number.isNaN(center[1])
                ? [center[0], center[1]]
                : [9.082, 8.6753],
            zoom: zoom,
            maxZoom: 17,
        });
        map.on('load', function () {
            var currentMarkes = {};
            if (mapSource) {
                map.addSource(mapSource.key, mapSource.data);
            }
            if (onClick) {
                map.on('click', function (e) {
                    var popupContent = onClick(map, e);
                    if (showPopupOnClick && popupContent) {
                        new mapboxgl.Popup()
                            .setLngLat(map.unproject(e.point))
                            .setHTML(popupContent)
                            .addTo(map);
                    }
                });
            }
            if (onMouseMove) {
                map.on('mousemove', function (e) {
                    onMouseMove(map, e);
                });
            }
            if (layer) {
                map.addLayer(layer);
            }
            if (onRender) {
                map.on('render', function () {
                    var markersList = onRender(map);
                    if (markersList) {
                        markersList.forEach(function (marker) {
                            if (!currentMarkes[marker.id]) {
                                var createdMarker = new mapboxgl.Marker({
                                    color: marker.color,
                                    element: marker.element ? marker.element : undefined,
                                })
                                    .setLngLat([marker.location[0], marker.location[1]])
                                    .addTo(map);
                                currentMarkes[marker.id] = createdMarker;
                            }
                        });
                        var _loop_1 = function (id) {
                            if (!(markersList === null || markersList === void 0 ? void 0 : markersList.some(function (marker) { var _a; return ((_a = marker.id) === null || _a === void 0 ? void 0 : _a.toString()) === id; }))) {
                                currentMarkes[id].remove();
                                delete currentMarkes[id];
                            }
                        };
                        for (var id in currentMarkes) {
                            _loop_1(id);
                        }
                    }
                });
            }
        });
        if (markers) {
            markers.forEach(function (marker) {
                new mapboxgl.Marker({
                    color: marker.color,
                    element: marker.element ? marker.element : undefined,
                })
                    .setLngLat([marker.location[0], marker.location[1]])
                    .addTo(map);
            });
        }
    });
    return (React.createElement("div", { className: "map-box-container", style: { width: '100%', height: "".concat(height, "px") }, ref: mapContainerRef }));
};

var MapComponent = function (props) {
    var mapType = props.mapType;
    return React.createElement("div", null, mapType === exports.MapTypes.Mapbox ? MapboxComponent(props) : "");
};

var css_248z$a = ".legend-item-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  font-weight: 400;\n  margin-left: 0.75rem; }\n  .legend-item-container .text {\n    margin-left: 0.2rem; }\n";
styleInject(css_248z$a);

var LegendItem = function (props) {
    var text = props.text, color = props.color;
    return (React.createElement("div", { className: "legend-item-container" },
        React.createElement(Icon.CircleFill, { color: color, size: 12 }),
        React.createElement("div", { className: "text" }, text)));
};

var MapStatsComponent = function (props) {
    var title = props.title, lastUpdate = props.lastUpdate, loading = props.loading, toolTipText = props.toolTipText, mapType = props.mapType, mapCenter = props.mapCenter, mapZoom = props.mapZoom, dataSource = props.dataSource, mapLayer = props.mapLayer, renderCB = props.renderCB, style = props.style, labels = props.labels, colors = props.colors;
    var accessToken = process.env.REACT_APP_MAPBOXGL_ACCESS_TOKEN
        ? process.env.REACT_APP_MAPBOXGL_ACCESS_TOKEN
        : "";
    return (React.createElement("div", { className: "stastics-and-pie-card height-map-rem" },
        React.createElement("div", { className: "pie-charts-top" },
            React.createElement("div", { className: "pie-charts-title" }, title),
            React.createElement("div", { className: "info-container" },
                React.createElement("div", { className: "info-container" },
                    React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText, overlayClassName: "custom-tooltip" },
                        React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 }))))),
        loading ? (React.createElement("div", { className: "margin-top-2" },
            React.createElement(antd.Skeleton, { active: true }),
            React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
            React.createElement("div", { className: "map-content" },
                React.createElement(MapComponent, { mapType: mapType, center: mapCenter, zoom: mapZoom, mapSource: dataSource, layer: mapLayer, height: 360, style: style, onRender: renderCB, accessToken: accessToken })),
            React.createElement("div", { className: "stage-legends" }, labels.map(function (item, index) {
                return React.createElement(LegendItem, { text: item, color: colors[index] });
            })),
            React.createElement("div", { className: "updated-on margin-top-1" },
                React.createElement("div", { className: "updated-moment-container" }, lastUpdate !== "0" && lastUpdate))))));
};

var RangePicker$2 = antd.DatePicker.RangePicker;
var MrvDashboardComponent = function (props) {
    var Link = props.Link, Chart = props.Chart, t = props.t, ButtonGroup = props.ButtonGroup, _a = props.isMultipleDashboardsVisible, isMultipleDashboardsVisible = _a === void 0 ? false : _a;
    var _b = useConnection(); _b.get; var post = _b.post; _b.delete; var statServerUrl = _b.statServerUrl;
    var _c = React.useState({}), data = _c[0], setData = _c[1];
    var _e = React.useState(false), loading = _e[0], setLoading = _e[1];
    var userInfoState = useUserContext().userInfoState;
    var _f = React.useState(Date.parse(String(moment().endOf("day")))), endTime = _f[0], setEndTime = _f[1];
    var _g = React.useState(Date.parse(String(moment().subtract("13", "days").startOf("day")))), startTime = _g[0], setStartTime = _g[1];
    var mapType = process.env.REACT_APP_MAP_TYPE
        ? process.env.REACT_APP_MAP_TYPE
        : "None";
    var colors = [
        "#C6A7FE",
        "#7FEABF",
        "#CDCDCD",
        "#FF8183",
        "#B7A4FE",
        "#008f39",
        "#FFB480",
        "#666699",
        "#009999",
        "#c2c2d6",
        "#ddddbb",
        "#ff9900",
    ];
    var colorsStatus = ["#0dcc59", "#CDCDCD", "#FF8183", "#B7A4FE", "#B7A4FE"];
    var TTSuffix = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER ? "My" : "";
    var genPayload = function () {
        var stats = [];
        for (var item in exports.MrvStatsCardsTypes) {
            stats.push({
                type: item,
                statFilter: {
                    startTime: startTime !== 0 ? startTime : undefined,
                    endTime: endTime !== 0 ? endTime : undefined,
                    onlyMine: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER,
                },
            });
        }
        return {
            system: exports.SystemNames.CARBON_TRANSPARENCY,
            stats: stats,
        };
    };
    var ndActionDataParse = function (statData, labelField, valueField) {
        var parsed = [0, 0, 0, 0];
        for (var _i = 0, _a = statData.data; _i < _a.length; _i++) {
            var d = _a[_i];
            if (d.action === "mitigation") {
                parsed[0] = parseFloat(d.count);
            }
            else if (d.action === "adaptation") {
                parsed[1] = parseFloat(d.count);
            }
            else if (d.action === "enablement") {
                parsed[3] = parseFloat(d.count);
            }
            else if (d.action === "crosscutting") {
                parsed[2] = parseFloat(d.count);
            }
        }
        return [parsed, ["Mitigation", "Adaptation", "Crosscutting", "Enablement"]];
    };
    var dataParser = function (statData, labelField, valueField) {
        var parsed = [];
        var label = [];
        for (var _i = 0, _a = statData.data; _i < _a.length; _i++) {
            var d = _a[_i];
            parsed.push(parseFloat(d[valueField]));
            label.push(d[labelField]);
        }
        console.log("Data", parsed, label);
        return [parsed, label];
    };
    var emissionParser = function (statData, labelField, valueField) {
        var parsed = [];
        if (!statData.data || statData.data.length <= 0) {
            return [t("emissionExpected"), 0, []];
        }
        var d = statData.data[0];
        parsed.push({
            value: parseFloat(d.totemissionreductionachieved),
            label: t("emissionEAchieved"),
            icon: (React.createElement(Icon.HandThumbsUp, { style: {
                    color: "#5DC380",
                    fontSize: "25px",
                } })),
            startColor: "#EDF8F0",
            endColor: "#5DC380",
        });
        console.log("Data", parsed);
        return [
            t("emissionExpected"),
            parseFloat(d.totemissionreductionexpected),
            parsed,
        ];
    };
    var countS = ["all", [">=", ["get", "count"], 0]];
    var mapDataParse = function (statData, labelField, valueField) {
        var _a, _b, _c, _e;
        var pending = ["all", ["==", ["get", "stage"], "AwaitingAuthorization"]];
        var authorised = ["all", ["==", ["get", "stage"], "Authorised"]];
        var rejected = ["all", ["==", ["get", "stage"], "Rejected"]];
        var approved = ["all", ["==", ["get", "stage"], "Approved"]];
        var center = ((_b = (_a = statData === null || statData === void 0 ? void 0 : statData.features[0]) === null || _a === void 0 ? void 0 : _a.geometry) === null || _b === void 0 ? void 0 : _b.coordinates)
            ? (_e = (_c = statData === null || statData === void 0 ? void 0 : statData.features[0]) === null || _c === void 0 ? void 0 : _c.geometry) === null || _e === void 0 ? void 0 : _e.coordinates
            : [7.4924165, 5.5324032];
        var mapSource = {
            key: "programmeLocations",
            data: {
                type: "geojson",
                data: statData,
                cluster: true,
                clusterRadius: 40,
                clusterProperties: {
                    // keep separate counts for each programmeStage category in a cluster
                    count: ["+", ["case", countS, ["get", "count"], 0]],
                    pending: ["+", ["case", pending, ["get", "count"], 0]],
                    authorised: ["+", ["case", authorised, ["get", "count"], 0]],
                    rejected: ["+", ["case", rejected, ["get", "count"], 0]],
                    approved: ["+", ["case", approved, ["get", "count"], 0]],
                },
            },
        };
        var layer = {
            id: "programmes_circle",
            type: "circle",
            source: "programmeLocations",
            filter: ["!=", "cluster", true],
            paint: {
                "circle-color": [
                    "case",
                    pending,
                    colorsStatus[0],
                    authorised,
                    colorsStatus[1],
                    colorsStatus[2],
                ],
                "circle-opacity": 1,
                "circle-radius": 10,
            },
        };
        return [
            mapSource,
            layer,
            center,
            ["Authorised", "Rejected", "Pending", "Approved"],
        ];
    };
    var mapDataParseInvestment = function (statData, labelField, valueField) {
        var _a, _b, _c, _e;
        var publictype = ["all", ["==", ["get", "type"], "Public"]];
        var privatetype = ["all", ["==", ["get", "type"], "Private"]];
        var unknownType = ["all", ["==", ["get", "type"], "Unknown"]];
        var center = ((_b = (_a = statData === null || statData === void 0 ? void 0 : statData.features[0]) === null || _a === void 0 ? void 0 : _a.geometry) === null || _b === void 0 ? void 0 : _b.coordinates)
            ? (_e = (_c = statData === null || statData === void 0 ? void 0 : statData.features[0]) === null || _c === void 0 ? void 0 : _c.geometry) === null || _e === void 0 ? void 0 : _e.coordinates
            : [7.4924165, 5.5324032];
        var mapSource = {
            key: "investmentLocations",
            data: {
                type: "geojson",
                data: statData,
                cluster: true,
                clusterRadius: 40,
                clusterProperties: {
                    // keep separate counts for each programmeStage category in a cluster
                    count: ["+", ["case", countS, ["get", "count"], 0]],
                    public: ["+", ["case", publictype, ["get", "count"], 0]],
                    private: ["+", ["case", privatetype, ["get", "count"], 0]],
                    unknown: ["+", ["case", unknownType, ["get", "count"], 0]],
                },
            },
        };
        var layer = {
            id: "programmes_circle",
            type: "circle",
            source: "investmentLocations",
            filter: ["!=", "cluster", true],
            paint: {
                "circle-color": [
                    "case",
                    publictype,
                    colorsStatus[0],
                    privatetype,
                    colorsStatus[2],
                    colorsStatus[1],
                ],
                "circle-opacity": 1,
                "circle-radius": 10,
            },
        };
        return [mapSource, layer, center, ["Public", "Private", "Unknown"]];
    };
    var donutSegment = function (start, end, r, r0, color) {
        if (end - start === 1)
            end -= 0.00001;
        var a0 = 2 * Math.PI * (start - 0.25);
        var a1 = 2 * Math.PI * (end - 0.25);
        var x0 = Math.cos(a0), y0 = Math.sin(a0);
        var x1 = Math.cos(a1), y1 = Math.sin(a1);
        var largeArc = end - start > 0.5 ? 1 : 0;
        // draw an SVG path
        return "<path d=\"M ".concat(r + r0 * x0, " ").concat(r + r0 * y0, " L ").concat(r + r * x0, " ").concat(r + r * y0, " A ").concat(r, " ").concat(r, " 0 ").concat(largeArc, " 1 ").concat(r + r * x1, " ").concat(r + r * y1, " L ").concat(r + r0 * x1, " ").concat(r + r0 * y1, " A ").concat(r0, " ").concat(r0, " 0 ").concat(largeArc, " 0 ").concat(r + r0 * x0, " ").concat(r + r0 * y0, "\" fill=\"").concat(color, "\" />");
    };
    // code for creating an SVG donut chart from feature properties
    var createDonutChart = function (properties) {
        console.log("properties of donut creator --- > ", properties);
        var offsetsStage = [];
        var counts = [];
        var programmeStageCounts = [];
        if (properties.count) {
            counts = [properties.count];
        }
        if (properties.cluster_id) {
            programmeStageCounts = [
                properties.authorised,
                properties.rejected,
                properties.pending,
                properties.approved,
            ];
        }
        else {
            if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "AwaitingAuthorization") {
                programmeStageCounts = [0, 0, properties.count, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "Authorised") {
                programmeStageCounts = [properties.count, 0, 0, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "Rejected") {
                programmeStageCounts = [0, properties.count, 0, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "Approved") {
                programmeStageCounts = [0, 0, 0, properties.count];
            }
        }
        var total = 0;
        for (var _i = 0, counts_1 = counts; _i < counts_1.length; _i++) {
            var count = counts_1[_i];
            total += count;
        }
        var totalStage = 0;
        for (var _a = 0, programmeStageCounts_1 = programmeStageCounts; _a < programmeStageCounts_1.length; _a++) {
            var count = programmeStageCounts_1[_a];
            offsetsStage.push(totalStage);
            totalStage += count;
        }
        var fontSize = total >= 1000 ? 22 : total >= 500 ? 20 : total >= 100 ? 18 : 16;
        var r = total >= 1000 ? 52 : total >= 500 ? 36 : total >= 100 ? 30 : 18;
        var r0 = Math.round(r * 0.6);
        var w = r * 2;
        var html = "<div>\n      <svg width=\"".concat(w, "\" height=\"").concat(w, "\" viewbox=\"0 0 ").concat(w, " ").concat(w, "\" text-anchor=\"middle\" style=\"font: ").concat(fontSize, "px sans-serif; display: block\">");
        for (var i = 0; i < (programmeStageCounts === null || programmeStageCounts === void 0 ? void 0 : programmeStageCounts.length); i++) {
            if (programmeStageCounts[i] !== 0) {
                html += donutSegment(offsetsStage[i] === 0 ? 0 : offsetsStage[i] / totalStage, (offsetsStage[i] + programmeStageCounts[i]) / totalStage, r, r0, colorsStatus[i]);
            }
        }
        html += "<circle cx=\"".concat(r, "\" cy=\"").concat(r, "\" r=\"").concat(r0, "\" fill=\"white\" />\n      <text dominant-baseline=\"central\" transform=\"translate(").concat(r, ", ").concat(r, ")\">\n      ").concat(total, "\n      </text>\n      </svg>\n      </div>");
        var el = document.createElement("div");
        el.innerHTML = html;
        return el.firstChild;
    };
    var createDonutChartInvestment = function (properties) {
        console.log("properties of donut creator --- > ", properties);
        var offsetsStage = [];
        var counts = [];
        var typeCounts = [];
        if (properties.count) {
            counts = [properties.count];
        }
        if (properties.cluster_id) {
            typeCounts = [properties.public, properties.private, properties.unknown];
        }
        else {
            if ((properties === null || properties === void 0 ? void 0 : properties.type) === "Public") {
                typeCounts = [properties.count, 0, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.type) === "Private") {
                typeCounts = [0, properties.count, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.type) === "Unknown") {
                typeCounts = [0, 0, properties.count];
            }
        }
        var total = 0;
        for (var _i = 0, counts_2 = counts; _i < counts_2.length; _i++) {
            var count = counts_2[_i];
            total += count;
        }
        var totalStage = 0;
        for (var _a = 0, typeCounts_1 = typeCounts; _a < typeCounts_1.length; _a++) {
            var count = typeCounts_1[_a];
            offsetsStage.push(totalStage);
            totalStage += count;
        }
        var fontSize = total >= 1000 ? 22 : total >= 500 ? 20 : total >= 100 ? 18 : 16;
        var r = total >= 1000 ? 52 : total >= 500 ? 36 : total >= 100 ? 30 : 18;
        var r0 = Math.round(r * 0.6);
        var w = r * 2;
        var html = "<div>\n      <svg width=\"".concat(w, "\" height=\"").concat(w, "\" viewbox=\"0 0 ").concat(w, " ").concat(w, "\" text-anchor=\"middle\" style=\"font: ").concat(fontSize, "px sans-serif; display: block\">");
        for (var i = 0; i < (typeCounts === null || typeCounts === void 0 ? void 0 : typeCounts.length); i++) {
            if (typeCounts[i] !== 0) {
                html += donutSegment(offsetsStage[i] === 0 ? 0 : offsetsStage[i] / totalStage, (offsetsStage[i] + typeCounts[i]) / totalStage, r, r0, colorsStatus[i]);
            }
        }
        html += "<circle cx=\"".concat(r, "\" cy=\"").concat(r, "\" r=\"").concat(r0, "\" fill=\"white\" />\n      <text dominant-baseline=\"central\" transform=\"translate(").concat(r, ", ").concat(r, ")\">\n      ").concat(total, "\n      </text>\n      </svg>\n      </div>");
        var el = document.createElement("div");
        el.innerHTML = html;
        return el.firstChild;
    };
    var supportedWidgetList = {
        AGG_NDC_ACTION_BY_TYPE: {
            widgetType: exports.WidgetType.PIE,
            aggType: exports.MrvStatsCardsTypes.AGG_NDC_ACTION_BY_TYPE,
            configs: {
                title: t("ndcType"),
                tooltip: t("ndcTypeTT" + TTSuffix),
                colors: colors,
            },
            callbacks: {
                parseData: ndActionDataParse,
            },
        },
        TOTAL_EMISSIONS: {
            widgetType: exports.WidgetType.LIST,
            aggType: exports.MrvStatsCardsTypes.TOTAL_EMISSIONS,
            configs: {
                title: t("titleEmission"),
                tooltip: t("titleEmissionTT" + TTSuffix),
                subTitle: "(tCO2e)",
                icon: React.createElement(Icon.Clipboard2Pulse, { color: "#5DC380", size: 80 }),
            },
            callbacks: {
                parseData: emissionParser,
            },
        },
        AGG_NDC_ACTION_BY_SECTOR: {
            widgetType: exports.WidgetType.PIE,
            aggType: exports.MrvStatsCardsTypes.AGG_NDC_ACTION_BY_SECTOR,
            configs: {
                title: t("ndcSector"),
                tooltip: t("ndcSectorTT" + TTSuffix),
                colors: colors,
                dataLabelField: "sector",
                dataValField: "count",
            },
            callbacks: {
                parseData: dataParser,
            },
        },
        AGG_INVESTMENT_BY_TYPE: {
            widgetType: exports.WidgetType.PIE,
            aggType: exports.MrvStatsCardsTypes.AGG_INVESTMENT_BY_TYPE,
            configs: {
                title: t("totalInvestment"),
                subTitle: "($)",
                tooltip: t("totalInvestmentTT" + TTSuffix),
                colors: colors,
                dataLabelField: "type",
                dataValField: "amount",
            },
            callbacks: {
                parseData: dataParser,
            },
        },
        AGG_PROGRAMME_BY_SECTOR: {
            widgetType: exports.WidgetType.PIE,
            aggType: exports.MrvStatsCardsTypes.AGG_PROGRAMME_BY_SECTOR,
            configs: {
                title: t("creditsSector"),
                subTitle: "(ITMOs)",
                tooltip: t("creditsSectorTT" + TTSuffix),
                colors: colors,
                dataLabelField: "sector",
                dataValField: "totalestcredit",
            },
            callbacks: {
                parseData: dataParser,
            },
        },
        PROGRAMME_LOCATION: {
            widgetType: exports.WidgetType.MAP,
            aggType: exports.MrvStatsCardsTypes.PROGRAMME_LOCATION,
            configs: {
                title: t("programmeLocation"),
                tooltip: t("programmeLocationTT" + TTSuffix),
                colors: colorsStatus,
                dataLabelField: "sector",
                dataValField: "totalestcredit",
                style: "mapbox://styles/mapbox/light-v11",
                renderCB: function (map) {
                    if (!map.isSourceLoaded("programmeLocations"))
                        return;
                    var currentMarkers = [];
                    var features = map.querySourceFeatures("programmeLocations");
                    // for every cluster on the screen, create an HTML marker for it (if we didn't yet),
                    // and add it to the map if it's not there already
                    for (var _i = 0, features_1 = features; _i < features_1.length; _i++) {
                        var feature = features_1[_i];
                        var coords = feature.geometry.coordinates;
                        var properties = feature.properties;
                        var id = properties.cluster_id
                            ? properties.cluster_id
                            : Number(properties.id);
                        var el = createDonutChart(properties);
                        var marker = {
                            id: id,
                            element: el,
                            location: coords,
                        };
                        currentMarkers.push(marker);
                    }
                    return currentMarkers;
                },
                mapType: mapType,
            },
            callbacks: {
                parseData: mapDataParse,
            },
        },
        INVESTMENT_LOCATION: {
            widgetType: exports.WidgetType.MAP,
            aggType: exports.MrvStatsCardsTypes.INVESTMENT_LOCATION,
            configs: {
                title: t("investLocations"),
                tooltip: t("investLocationsTT" + TTSuffix),
                colors: colorsStatus,
                dataLabelField: "sector",
                dataValField: "totalestcredit",
                style: "mapbox://styles/mapbox/light-v11",
                renderCB: function (map) {
                    if (!map.isSourceLoaded("investmentLocations"))
                        return;
                    var currentMarkers = [];
                    var features = map.querySourceFeatures("investmentLocations");
                    // for every cluster on the screen, create an HTML marker for it (if we didn't yet),
                    // and add it to the map if it's not there already
                    for (var _i = 0, features_2 = features; _i < features_2.length; _i++) {
                        var feature = features_2[_i];
                        var coords = feature.geometry.coordinates;
                        var properties = feature.properties;
                        var id = properties.cluster_id
                            ? properties.cluster_id
                            : Number(properties.id);
                        var el = createDonutChartInvestment(properties);
                        var marker = {
                            id: id,
                            element: el,
                            location: coords,
                        };
                        currentMarkers.push(marker);
                    }
                    return currentMarkers;
                },
                mapType: mapType,
            },
            callbacks: {
                parseData: mapDataParseInvestment,
            },
        },
    };
    var layout = [
        [
            exports.MrvStatsCardsTypes.AGG_NDC_ACTION_BY_TYPE,
            exports.MrvStatsCardsTypes.TOTAL_EMISSIONS,
        ],
        [
            exports.MrvStatsCardsTypes.AGG_NDC_ACTION_BY_SECTOR,
            exports.MrvStatsCardsTypes.AGG_PROGRAMME_BY_SECTOR,
            exports.MrvStatsCardsTypes.AGG_INVESTMENT_BY_TYPE,
        ],
        [
            exports.MrvStatsCardsTypes.PROGRAMME_LOCATION,
            exports.MrvStatsCardsTypes.INVESTMENT_LOCATION,
        ],
    ];
    var getData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, newd, key, obj, config, dx, error_1;
        var _a, _b, _c;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    setLoading(true);
                    _e.label = 1;
                case 1:
                    _e.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("stats/programme/agg", genPayload(), undefined, statServerUrl)];
                case 2:
                    response = _e.sent();
                    console.log("Response", response);
                    newd = {};
                    for (key in (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.stats) {
                        if ((_b = response === null || response === void 0 ? void 0 : response.data) === null || _b === void 0 ? void 0 : _b.stats.hasOwnProperty(key)) {
                            obj = (_c = response === null || response === void 0 ? void 0 : response.data) === null || _c === void 0 ? void 0 : _c.stats[key];
                            config = supportedWidgetList[key];
                            if (config) {
                                dx = config.callbacks.parseData(obj, config.configs.dataLabelField, config.configs.dataValField);
                                newd[key] = {
                                    data: dx,
                                    time: !obj.last || obj.last === "0" || obj.last === 0
                                        ? "0"
                                        : moment(parseInt(obj.last)).fromNow(),
                                };
                            }
                        }
                    }
                    setData(newd);
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _e.sent();
                    console.log("Error in getting users", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getWidgetJSX = function (objname) {
        var obj = supportedWidgetList[objname];
        if (!obj) {
            return React.createElement(React.Fragment, null);
        }
        var d = data[obj.aggType];
        if (!d) {
            return React.createElement(React.Fragment, null);
        }
        if (obj.widgetType === exports.WidgetType.PIE) {
            return (React.createElement(antd.Col, { xxl: 8, xl: 8, md: 12, className: "stastic-card-col pie" },
                React.createElement(MrvPieChartsStatComponent, { id: obj.aggType, title: obj.configs.title, options: getChartOptions(d.data[1], obj.configs.colors), series: d.data[0], lastUpdate: d.time, loading: loading, toolTipText: obj.configs.tooltip, Chart: Chart })));
        }
        if (obj.widgetType === exports.WidgetType.LIST) {
            return (React.createElement(antd.Col, { xxl: 8, xl: 8, md: 8, className: "stastic-card-col" },
                React.createElement(ListWidgetComponent, { data: d.data[2], icon: obj.configs.icon, total: d.data[1], totalText: d.data[0], updatedDate: d.time, loading: loading, toolTipText: obj.configs.tooltip, title: obj.configs.title, subTitle: obj.configs.subTitle })));
        }
        else if (obj.widgetType === exports.WidgetType.MAP && mapType !== exports.MapTypes.None) {
            return (React.createElement(antd.Col, { xxl: 12, xl: 12, md: 12, className: "stastic-card-col" },
                React.createElement(MapStatsComponent, { id: obj.aggType, title: obj.configs.title, lastUpdate: d.time, loading: loading, toolTipText: obj.configs.tooltip, mapType: obj.configs.mapType, mapCenter: d.data[2], mapZoom: 4, dataSource: d.data[0], mapLayer: d.data[1], renderCB: obj.configs.renderCB, style: obj.configs.style, labels: d.data[3], colors: obj.configs.colors })));
        }
        else {
            return React.createElement("div", null);
        }
    };
    var onChangeRange = function (dateMoment, dateString) { return __awaiter(void 0, void 0, void 0, function () {
        var _a, _b;
        return __generator(this, function (_c) {
            try {
                if (!dateMoment) {
                    setStartTime(0);
                    setEndTime(0);
                }
                if (dateMoment !== null && dateMoment[1] !== null) {
                    setStartTime(Date.parse(String(moment((_a = dateMoment[0]) === null || _a === void 0 ? void 0 : _a._d).startOf("day"))));
                    setEndTime(Date.parse(String(moment((_b = dateMoment[1]) === null || _b === void 0 ? void 0 : _b._d).endOf("day"))));
                }
                else {
                    setStartTime(0);
                    setEndTime(0);
                }
            }
            catch (e) {
                setStartTime(0);
                setEndTime(0);
            }
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        getData();
    }, []);
    React.useEffect(function () {
        getData();
    }, [startTime, endTime]);
    return (React.createElement("div", { className: "dashboard-main-container" },
        isMultipleDashboardsVisible && (React.createElement("div", { className: "systemchange-container", style: { marginLeft: "20px" } },
            React.createElement(ButtonGroup, { "aria-label": "outlined button group" },
                React.createElement(Link, { to: "/dashboard" },
                    React.createElement(antd.Button, { className: "mrvdefault" }, "Carbon Registry")),
                React.createElement(antd.Button, { type: "primary", className: "mrvprimary" }, "Transparency System"),
                React.createElement(Link, { to: "/dashboard/ghg" },
                    React.createElement(antd.Button, { className: "mrvdefault-right" }, "GHG Inventory"))))),
        React.createElement("div", { className: "filter-container" },
            React.createElement("div", { className: "date-filter" },
                React.createElement(RangePicker$2, { ranges: {
                        Today: [moment(), moment()],
                        "Last 7 days": [moment().subtract("6", "days"), moment()],
                        "Last 14 days": [moment().subtract("13", "days"), moment()],
                    }, defaultValue: [moment().subtract("13", "days"), moment()], showTime: true, allowClear: true, format: "DD:MM:YYYY", onChange: onChangeRange }))),
        loading ? (React.createElement("div", { className: "stastics-and-charts-container center" },
            React.createElement(antd.Skeleton, null))) : (layout.map(function (row, i) { return (React.createElement("div", { className: "stastics-and-charts-container center" },
            React.createElement(antd.Row, { gutter: [40, 40], className: "stastic-card-row" }, row.map(function (item, j) { return getWidgetJSX(item); })))); }))));
};

var css_248z$9 = ".mapboxgl-popup-content {\n  background-color: #ffffff !important;\n  color: rgba(58, 53, 65, 0.8) !important; }\n\n.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip {\n  border-top-color: #ffffff !important; }\n\n.mapboxgl-popup-close-button,\n.mapboxgl-popup-close-button:hover {\n  display: none; }\n\n.total-container {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray; }\n\n.annual-report {\n  display: flex;\n  margin-top: 30px;\n  margin-left: 22px; }\n\n.ant-btn.annual-report-downloadbutton {\n  border-radius: 0px 5px 5px 0px !important; }\n\n.ant-btn.annual-report-dropdownbutton {\n  margin-left: 20px;\n  border-radius: 5px 0px 0px 0px !important; }\n\n.margin-top-6 {\n  margin-top: 7.5rem; }\n\n.margin-top-2 {\n  margin-top: 2rem; }\n\n.margin-top-1 {\n  margin-top: 1rem; }\n\n.ant-btn.rgprimary {\n  border-radius: 5px 0px 0px 5px !important; }\n\n.ant-btn.rgdefault {\n  border-radius: 0px 5px 5px 0px !important; }\n\n.ant-btn.mid-default-btn {\n  border-radius: 0px 0px 0px 0px !important; }\n\n.cards-title {\n  font-family: \"Inter\";\n  align-items: flex-start;\n  justify-content: flex-start;\n  font-style: normal;\n  font-weight: 600;\n  height: 50px;\n  font-size: 1.15rem;\n  margin-top: 1rem;\n  color: rgba(58, 53, 65, 0.8); }\n\n.dashboard-main-container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  padding: 0 2rem 0 2rem; }\n  .dashboard-main-container .header-and-title {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    padding: 0 15px 0 15px;\n    font-family: \"Inter-Regular\";\n    font-size: 1.4rem;\n    font-weight: 600; }\n  .dashboard-main-container .stastics-cards-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: center; }\n    .dashboard-main-container .stastics-cards-container .stastic-card-row {\n      width: 100%; }\n      .dashboard-main-container .stastics-cards-container .stastic-card-row .stastic-card-col {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center; }\n  .dashboard-main-container .filter-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 2rem;\n    padding: 0 1.2rem 0 1.2rem; }\n    .dashboard-main-container .filter-container .radio-selection .ant-radio-button-wrapper {\n      height: 35px !important;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      color: rgba(58, 53, 65, 0.5); }\n    .dashboard-main-container .filter-container .radio-selection .ant-radio-button-wrapper-checked:not(\n    .ant-radio-button-wrapper-disabled\n)::before {\n      background-color: transparent !important; }\n    .dashboard-main-container .filter-container .radio-selection .overall {\n      border-radius: 5px 0 0 5px !important; }\n    .dashboard-main-container .filter-container .radio-selection .mine {\n      border-radius: 0 5px 5px 0 !important; }\n  .dashboard-main-container .center {\n    align-items: center;\n    justify-content: center; }\n  .dashboard-main-container .height-pie-rem {\n    height: 26.2rem; }\n    .dashboard-main-container .height-pie-rem .apexcharts-legend {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between !important; }\n    .dashboard-main-container .height-pie-rem .apexcharts-legend-series {\n      display: flex !important;\n      width: 42%; }\n  .dashboard-main-container .height-bar-rem {\n    height: 29rem; }\n  .dashboard-main-container .height-map-rem {\n    height: 510px; }\n  .dashboard-main-container .stastics-and-charts-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    margin-top: 2rem;\n    margin-bottom: 2rem; }\n    .dashboard-main-container .stastics-and-charts-container .stastic-card-row {\n      width: 100%; }\n      .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card {\n        display: flex;\n        flex-direction: column;\n        background-color: #ffffff;\n        border-radius: 10px;\n        padding: 0 1rem 0.7rem 1rem;\n        width: 100%; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .margin-top-2 {\n          width: 100%;\n          margin-top: 2rem; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .title-section {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-end;\n          justify-content: space-between;\n          width: 100%;\n          padding: 1rem 1rem 0 1rem; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .title-section .title {\n            font-family: \"Inter\";\n            font-style: normal;\n            font-weight: 600;\n            width: 90%;\n            font-size: 1.15rem;\n            color: rgba(58, 53, 65, 0.8); }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .title-section .info-container {\n            display: flex;\n            flex-direction: row;\n            width: 10%;\n            height: 30px;\n            align-items: center;\n            justify-content: flex-end; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-details {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n          height: 150px;\n          margin-top: -0.5rem; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-details .details {\n            display: flex;\n            flex-direction: column;\n            width: 70%;\n            padding: 0 1rem 0 0.8rem; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-details .details .detail {\n              font-family: \"Inter\";\n              font-style: normal;\n              font-weight: 400;\n              font-size: 0.875rem;\n              line-height: 1.375rem;\n              padding-left: 0.125rem;\n              color: rgba(58, 53, 65, 0.8);\n              margin-bottom: 0.5rem; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-details .details .value {\n              font-family: \"Inter\";\n              font-style: normal;\n              font-weight: 600;\n              font-size: 1.6rem;\n              line-height: 22px;\n              padding-left: 0.125rem;\n              padding: 0;\n              color: #008f39; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-details .icon {\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n            width: 30%; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-details .icon img {\n              height: 80px; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details {\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n          justify-content: flex-start;\n          height: 100px;\n          width: 100%;\n          margin-top: -1rem;\n          margin-bottom: 0.5rem;\n          padding: 0 0.5rem 0 0.5rem; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details,\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            justify-content: space-between;\n            width: 100%; }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon,\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon {\n              display: flex;\n              flex-direction: row;\n              width: 20%; }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .icon-container,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .icon-container {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: center;\n                border-radius: 50px;\n                width: 2.813rem;\n                height: 2.813rem; }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .reject,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .reject {\n                background-color: rgba(255, 166, 166, 0.4); }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .transfer,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .transfer {\n                background-color: rgba(254, 241, 173, 0.5); }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .pending,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .pending {\n                background-color: rgba(164, 162, 168, 0.5); }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .icon .authorized,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .icon .authorized {\n                background-color: rgba(185, 226, 244, 0.4); }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details,\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details {\n              display: flex;\n              flex-direction: column;\n              width: 80%;\n              height: 3.438rem; }\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details .label-and-value,\n              .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details .label-and-value {\n                display: flex;\n                flex-direction: row;\n                align-items: flex-start;\n                justify-content: space-between; }\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details .label-and-value .label,\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details .label-and-value .label {\n                  font-family: \"Inter\";\n                  font-style: normal;\n                  font-weight: 400;\n                  font-size: 0.875rem;\n                  color: rgba(58, 53, 65, 0.5); }\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .rejected-details .details .label-and-value .value,\n                .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .total-programme-extra-details .transfered-details .details .label-and-value .value {\n                  font-family: \"Inter\";\n                  font-style: normal;\n                  font-weight: 400;\n                  height: 30px;\n                  font-size: 1.5rem;\n                  margin-top: -8px;\n                  color: rgba(58, 53, 65, 0.8); }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .stage-legends {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          margin-top: 1rem; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .updated-on {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-end;\n          justify-content: flex-start;\n          padding: 0 1rem 0 0.8rem;\n          height: 50px; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .updated-on .updated-moment-container {\n            display: flex;\n            flex-direction: row;\n            font-size: 0.75rem;\n            border-radius: 3.125rem;\n            padding: 0.05rem 0.8rem 0.05rem 0.8rem;\n            color: #008f39;\n            background-color: rgba(185, 226, 244, 0.4); }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n          padding: 0 1rem 0 1rem; }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top .pie-charts-title {\n            display: flex;\n            flex-direction: row;\n            font-family: \"Inter\";\n            align-items: flex-start;\n            justify-content: flex-start;\n            font-style: normal;\n            font-weight: 600;\n            height: 50px;\n            font-size: 1.15rem;\n            margin-top: 1rem;\n            color: rgba(58, 53, 65, 0.8); }\n            .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top .pie-charts-title .unit {\n              display: flex;\n              margin: 0 0 0 0.5rem;\n              font-family: \"Inter\";\n              font-size: 1.15rem;\n              font-weight: 500;\n              color: rgba(58, 53, 65, 0.5); }\n          .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-top .info-container {\n            display: flex;\n            flex-direction: row;\n            align-items: center; }\n        .dashboard-main-container .stastics-and-charts-container .stastic-card-row .stastic-card-col .stastics-and-pie-card .pie-charts-section {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 100%; }\n  .dashboard-main-container .stastics-and-pie-card:hover {\n    box-shadow: rgba(0, 5, 18, 0.2) 0px 8px 24px; }\n  .dashboard-main-container .stastics-charts-container-total-programmes {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 60px 10px 25px 15px; }\n    .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .dashboard-main-container .stastics-charts-container-certified-programmes {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 5px 10px 25px 15px; }\n    .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .dashboard-main-container .stastics-pie-charts-container {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 5px 10px 25px 15px; }\n    .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .dashboard-main-container .maps-container {\n    display: flex;\n    flex-direction: row;\n    border-radius: 10px;\n    margin: 25px 20px 25px 15px;\n    height: auto; }\n    .dashboard-main-container .maps-container .maps-container-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .dashboard-main-container .maps-container .maps-container-row .maps-container-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n";
styleInject(css_248z$9);

var getTotalProgrammesInitialValues = function () {
    var totalProgrammmesStatusInitialValues = [];
    var statusArray = Object.values(exports.ProgrammeStageLegend);
    statusArray === null || statusArray === void 0 ? void 0 : statusArray.map(function (sector) {
        totalProgrammmesStatusInitialValues.push({
            name: sector,
            data: [],
        });
    });
    return totalProgrammmesStatusInitialValues;
};
var getTotalProgrammesSectorInitialValues = function () {
    var totalProgrammmesSectorInitialValues = [];
    var sectorsArray = Object.values(exports.Sector);
    sectorsArray === null || sectorsArray === void 0 ? void 0 : sectorsArray.map(function (sector) {
        totalProgrammmesSectorInitialValues.push({
            name: sector,
            data: [],
        });
    });
    return totalProgrammmesSectorInitialValues;
};
var totalCreditsSeriesInitialValues = [
    {
        name: "Authorised",
        data: [],
    },
    {
        name: "Issued",
        data: [],
    },
    {
        name: "Transferred",
        data: [],
    },
    {
        name: "Retired",
        data: [],
    },
];
var totalCertifiedCreditsSeriesInitialValues = [
    {
        name: "Certified",
        data: [],
    },
    {
        name: "Uncertified",
        data: [],
    },
    {
        name: "Revoked",
        data: [],
    },
];

var totalProgrammesOptions = {
    states: {
        normal: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        hover: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        active: {
            allowMultipleDataPointsSelection: true,
            filter: {
                type: "darken",
                value: 0.7,
            },
        },
    },
    dataLabels: {
        enabled: false,
    },
    chart: {
        type: "bar",
        height: 400,
        stacked: true,
        stackType: "normal",
    },
    responsive: [
        {
            breakpoint: 480,
            options: {
                legend: {
                    position: "bottom",
                    offsetX: -10,
                    offsetY: 0,
                },
            },
        },
    ],
    xaxis: {
        categories: [],
    },
    yaxis: {
        show: true,
        title: {
            text: "",
            rotate: -90,
            offsetX: 0,
            offsetY: 0,
            style: {
                color: "#263238",
                fontSize: "12px",
                fontFamily: "Inter-Regular",
                fontWeight: 500,
                cssClass: "apexcharts-yaxis-title",
            },
        },
        labels: {
            formatter: function (value) {
                return addCommSepRound$1(value);
            },
        },
    },
    fill: {
        opacity: 1,
        colors: ["#4FB8E7", "#FF8183", "#D8D8D8"],
    },
    title: {
        text: "",
        align: "left",
        margin: 10,
        offsetX: 0,
        offsetY: 0,
        floating: false,
        style: {
            fontSize: "16px",
            fontWeight: "bold",
            fontFamily: "Inter",
            color: "#263238",
        },
    },
    legend: {
        show: true,
        showForSingleSeries: false,
        showForNullSeries: false,
        showForZeroSeries: false,
        position: "bottom",
        horizontalAlign: "center",
        floating: false,
        fontSize: "14px",
        fontFamily: "Inter",
        fontWeight: 400,
        formatter: undefined,
        inverseOrder: false,
        width: undefined,
        height: undefined,
        tooltipHoverFormatter: undefined,
        customLegendItems: [],
        offsetX: 0,
        offsetY: 5,
        labels: {
            colors: "#000000d9",
            useSeriesColors: false,
        },
        markers: {
            width: 12,
            height: 12,
            strokeWidth: 0,
            strokeColor: "#fff",
            fillColors: ["#4FB8E7", "#FF8183", "#D8D8D8"],
            radius: 12,
            customHTML: undefined,
            onClick: undefined,
            offsetX: 0,
            offsetY: 0,
        },
        itemMargin: {
            horizontal: 5,
            vertical: 0,
        },
        onItemClick: {
            toggleDataSeries: true,
        },
        onItemHover: {
            highlightDataSeries: true,
        },
    },
};
var totalProgrammesOptionsSub = {
    states: {
        normal: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        hover: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        active: {
            allowMultipleDataPointsSelection: true,
            filter: {
                type: "darken",
                value: 0.7,
            },
        },
    },
    dataLabels: {
        enabled: false,
    },
    chart: {
        type: "bar",
        height: 400,
        stacked: true,
        stackType: "normal",
    },
    responsive: [
        {
            breakpoint: 480,
            options: {
                legend: {
                    position: "bottom",
                    offsetX: -10,
                    offsetY: 0,
                },
            },
        },
    ],
    xaxis: {
        categories: [],
        labels: {
            rotatealways: true,
        },
    },
    yaxis: {
        show: true,
        title: {
            text: "",
            rotate: -90,
            offsetX: 0,
            offsetY: 0,
            style: {
                color: "#263238",
                fontSize: "12px",
                fontFamily: "Inter",
                fontWeight: 500,
                cssClass: "apexcharts-yaxis-title",
            },
        },
        labels: {
            formatter: function (value) {
                return addCommSepRound$1(value);
            },
        },
    },
    fill: {
        opacity: 1,
        colors: [
            "#008f39",
            "#FF8183",
            "#7FEABF",
            "#FFB480",
            "#666699",
            "#009999",
            "#c2c2d6",
            "#ddddbb",
            "#ff9900",
            "#D8D8D8",
        ],
    },
    title: {
        text: "",
        align: "left",
        margin: 10,
        offsetX: 0,
        offsetY: 0,
        floating: false,
        style: {
            fontSize: "16px",
            fontWeight: "bold",
            fontFamily: "Inter",
            color: "#263238",
        },
    },
    legend: {
        show: true,
        showForSingleSeries: false,
        showForNullSeries: false,
        showForZeroSeries: false,
        position: "bottom",
        horizontalAlign: "center",
        floating: false,
        fontSize: "14px",
        fontFamily: "Inter",
        fontWeight: 400,
        formatter: undefined,
        inverseOrder: false,
        width: undefined,
        height: undefined,
        tooltipHoverFormatter: undefined,
        customLegendItems: [],
        offsetX: 0,
        offsetY: 5,
        labels: {
            colors: "#000000d9",
            useSeriesColors: false,
        },
        markers: {
            width: 12,
            height: 12,
            strokeWidth: 0,
            strokeColor: "#fff",
            fillColors: [
                "#008f39",
                "#FF8183",
                "#7FEABF",
                "#FFB480",
                "#666699",
                "#009999",
                "#c2c2d6",
                "#ddddbb",
                "#ff9900",
                "#D8D8D8",
            ],
            radius: 12,
            customHTML: undefined,
            onClick: undefined,
            offsetX: 0,
            offsetY: 0,
        },
        itemMargin: {
            horizontal: 5,
            vertical: 0,
        },
        onItemClick: {
            toggleDataSeries: true,
        },
        onItemHover: {
            highlightDataSeries: true,
        },
    },
};
var totalCreditsOptions = {
    states: {
        normal: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        hover: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        active: {
            allowMultipleDataPointsSelection: true,
            filter: {
                type: "darken",
                value: 0.7,
            },
        },
    },
    dataLabels: {
        enabled: false,
    },
    chart: {
        type: "bar",
        height: 400,
        stacked: true,
        stackType: "normal",
    },
    responsive: [
        {
            breakpoint: 480,
            options: {
                legend: {
                    position: "bottom",
                    offsetX: -10,
                    offsetY: 0,
                },
            },
        },
    ],
    xaxis: {
        categories: [],
    },
    yaxis: {
        show: true,
        title: {
            text: "",
            rotate: -90,
            offsetX: 0,
            offsetY: 0,
            style: {
                color: "#263238",
                fontSize: "12px",
                fontFamily: "Inter-Regular",
                fontWeight: 500,
                cssClass: "apexcharts-yaxis-title",
            },
        },
        labels: {
            formatter: function (value) {
                return addCommSepRound$1(value);
            },
        },
    },
    fill: {
        opacity: 1,
        colors: ["#4FB8E7", "#7FEABF", "#D8D8D8", "#FF8183", "#B7A4FE"],
    },
    title: {
        text: "",
        align: "left",
        margin: 10,
        offsetX: 0,
        offsetY: 0,
        floating: false,
        style: {
            fontSize: "16px",
            fontWeight: "bold",
            fontFamily: "Inter",
            color: "#263238",
        },
    },
    legend: {
        show: true,
        showForSingleSeries: false,
        showForNullSeries: false,
        showForZeroSeries: false,
        position: "bottom",
        horizontalAlign: "center",
        floating: false,
        fontSize: "14px",
        fontFamily: "Inter",
        fontWeight: 400,
        formatter: undefined,
        inverseOrder: false,
        width: undefined,
        height: undefined,
        tooltipHoverFormatter: undefined,
        customLegendItems: [],
        offsetX: 0,
        offsetY: 5,
        labels: {
            colors: "#000000d9",
            useSeriesColors: false,
        },
        markers: {
            width: 12,
            height: 12,
            strokeWidth: 0,
            strokeColor: "#fff",
            fillColors: ["#4FB8E7", "#7FEABF", "#D8D8D8", "#FF8183", "#B7A4FE"],
            radius: 12,
            customHTML: undefined,
            onClick: undefined,
            offsetX: 0,
            offsetY: 0,
        },
        itemMargin: {
            horizontal: 5,
            vertical: 0,
        },
        onItemClick: {
            toggleDataSeries: true,
        },
        onItemHover: {
            highlightDataSeries: true,
        },
    },
};
var totalCreditsCertifiedOptions = {
    states: {
        normal: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        hover: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        active: {
            allowMultipleDataPointsSelection: true,
            filter: {
                type: "darken",
                value: 0.7,
            },
        },
    },
    dataLabels: {
        enabled: false,
    },
    chart: {
        type: "bar",
        height: 400,
        stacked: true,
        stackType: "normal",
    },
    responsive: [
        {
            breakpoint: 480,
            options: {
                legend: {
                    position: "bottom",
                    offsetX: -10,
                    offsetY: 0,
                },
            },
        },
    ],
    xaxis: {
        categories: [],
    },
    yaxis: {
        show: true,
        title: {
            text: "",
            rotate: -90,
            offsetX: 0,
            offsetY: 0,
            style: {
                color: "#263238",
                fontSize: "12px",
                fontFamily: "Inter-Regular",
                fontWeight: 500,
                cssClass: "apexcharts-yaxis-title",
            },
        },
        labels: {
            formatter: function (value) {
                return addCommSepRound$1(value);
            },
        },
    },
    fill: {
        opacity: 1,
        colors: ["#0dcc59", "#FF8183", "#CDCDCD"],
    },
    title: {
        text: "",
        align: "left",
        margin: 10,
        offsetX: 0,
        offsetY: 0,
        floating: false,
        style: {
            fontSize: "16px",
            fontWeight: "bold",
            fontFamily: "Inter",
            color: "#263238",
        },
    },
    legend: {
        show: true,
        showForSingleSeries: false,
        showForNullSeries: false,
        showForZeroSeries: false,
        position: "bottom",
        horizontalAlign: "center",
        floating: false,
        fontSize: "14px",
        fontFamily: "Inter",
        fontWeight: 400,
        formatter: undefined,
        inverseOrder: false,
        width: undefined,
        height: undefined,
        tooltipHoverFormatter: undefined,
        customLegendItems: [],
        offsetX: 0,
        offsetY: 5,
        labels: {
            colors: "#000000d9",
            useSeriesColors: false,
        },
        markers: {
            width: 12,
            height: 12,
            strokeWidth: 0,
            strokeColor: "#fff",
            fillColors: ["#0dcc59", "#FF8183", "#CDCDCD"],
            radius: 12,
            customHTML: undefined,
            onClick: undefined,
            offsetX: 0,
            offsetY: 0,
        },
        itemMargin: {
            horizontal: 5,
            vertical: 0,
        },
        onItemClick: {
            toggleDataSeries: true,
        },
        onItemHover: {
            highlightDataSeries: true,
        },
    },
};
var optionDonutPieA = {
    states: {
        normal: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        hover: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        active: {
            allowMultipleDataPointsSelection: true,
            filter: {
                type: "darken",
                value: 0.7,
            },
        },
    },
    chart: {
        type: "donut",
    },
    dataLabels: {
        enabled: false,
    },
    colors: ["#0dcc59", "#7FEABF", "#CDCDCD", "#FF8183", "#B7A4FE"],
    labels: ["Authorised", "Issued", "Transferred", "Retired", "Frozen"],
    plotOptions: {
        pie: {
            expandOnClick: false,
            donut: {
                labels: {
                    show: true,
                    total: {
                        showAlways: true,
                        show: true,
                        label: "Total",
                        formatter: function () { },
                    },
                },
            },
        },
    },
    legend: {
        show: true,
        showForSingleSeries: false,
        showForNullSeries: true,
        showForZeroSeries: true,
        position: "bottom",
        horizontalAlign: "center",
        floating: false,
        fontSize: "14px",
        fontFamily: "Inter",
        fontWeight: 400,
        formatter: undefined,
        inverseOrder: false,
        width: undefined,
        height: undefined,
        tooltipHoverFormatter: undefined,
        customLegendItems: [],
        offsetX: 0,
        offsetY: 5,
        labels: {
            colors: "#000000d9",
            useSeriesColors: false,
        },
        markers: {
            width: 12,
            height: 12,
            strokeWidth: 0,
            strokeColor: "#fff",
            fillColors: ["#0dcc59", "#7FEABF", "#CDCDCD", "#FF8183", "#B7A4FE"],
            radius: 12,
            customHTML: undefined,
            onClick: undefined,
            offsetX: 0,
            offsetY: 0,
        },
        itemMargin: {
            horizontal: 10,
            vertical: 3,
        },
        onItemClick: {
            toggleDataSeries: true,
        },
        onItemHover: {
            highlightDataSeries: true,
        },
    },
    responsive: [
        {
            breakpoint: 480,
            options: {
                chart: {
                    width: 200,
                },
                legend: {
                    position: "bottom",
                },
            },
        },
    ],
};
var optionDonutPieB = {
    states: {
        normal: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        hover: {
            filter: {
                type: "none",
                value: 0,
            },
        },
        active: {
            allowMultipleDataPointsSelection: true,
            filter: {
                type: "darken",
                value: 0.7,
            },
        },
    },
    chart: {
        type: "donut",
    },
    dataLabels: {
        enabled: false,
    },
    colors: ["#0dcc59", "#FF8183", "#CDCDCD"],
    labels: ["Certified", "Uncertified", "Revoked"],
    plotOptions: {
        pie: {
            expandOnClick: false,
            donut: {
                labels: {
                    show: true,
                    total: {
                        showAlways: true,
                        show: true,
                        label: "Total",
                        formatter: function () { },
                    },
                },
            },
        },
    },
    legend: {
        show: true,
        showForSingleSeries: false,
        showForNullSeries: true,
        showForZeroSeries: true,
        position: "bottom",
        horizontalAlign: "center",
        floating: false,
        fontSize: "14px",
        fontFamily: "Inter",
        fontWeight: 400,
        formatter: undefined,
        inverseOrder: false,
        width: undefined,
        height: undefined,
        tooltipHoverFormatter: undefined,
        customLegendItems: [],
        offsetX: 0,
        offsetY: 5,
        labels: {
            colors: "#000000d9",
            useSeriesColors: false,
        },
        markers: {
            width: 12,
            height: 12,
            strokeWidth: 0,
            strokeColor: "#fff",
            fillColors: ["#0dcc59", "#FF8183", "#CDCDCD"],
            radius: 12,
            customHTML: undefined,
            onClick: undefined,
            offsetX: 0,
            offsetY: 0,
        },
        itemMargin: {
            horizontal: 10,
            vertical: 3,
        },
        onItemClick: {
            toggleDataSeries: true,
        },
        onItemHover: {
            highlightDataSeries: true,
        },
    },
    responsive: [
        {
            breakpoint: 480,
            options: {
                chart: {
                    width: 200,
                },
                legend: {
                    position: "bottom",
                },
            },
        },
    ],
};

var css_248z$8 = ".stastic-card-main-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 11.2rem;\n  background-color: white;\n  border-radius: 0.625rem;\n  padding: 1rem 1.875rem 0 1.875rem; }\n  .stastic-card-main-container .title-section {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n    height: 3.3rem; }\n    .stastic-card-main-container .title-section .title {\n      display: flex;\n      flex-direction: row;\n      align-items: flex-start;\n      justify-content: flex-start;\n      font-family: 'Inter';\n      font-size: 1.15rem;\n      font-weight: 600;\n      width: 95%;\n      color: rgba(58, 53, 65, 0.8); }\n    .stastic-card-main-container .title-section .info-container {\n      display: flex;\n      flex-direction: row;\n      width: 5%;\n      align-items: center;\n      justify-content: flex-end; }\n  .stastic-card-main-container .values-section {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: flex-start;\n    justify-content: space-between;\n    height: 5rem; }\n    .stastic-card-main-container .values-section .values-and-unit {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      justify-content: flex-start;\n      width: 60%; }\n      .stastic-card-main-container .values-section .values-and-unit .value {\n        font-family: 'Inter';\n        font-size: 2rem;\n        font-weight: 600;\n        width: 100%;\n        color: #008f39;\n        padding: 0; }\n      .stastic-card-main-container .values-section .values-and-unit .unit {\n        margin-bottom: -0.6rem;\n        margin-left: 0.2rem;\n        margin-top: -0.66rem;\n        font-family: 'Inter';\n        font-size: 0.875rem;\n        font-weight: 500;\n        width: 100%;\n        color: rgba(58, 53, 65, 0.5); }\n    .stastic-card-main-container .values-section .icon-section {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n      width: 40%;\n      justify-content: flex-start; }\n      .stastic-card-main-container .values-section .icon-section img {\n        height: 80px; }\n    .stastic-card-main-container .values-section .updated-on-null {\n      display: flex;\n      flex-direction: row;\n      font-size: 0.813rem;\n      border-radius: 3.125rem;\n      padding: 0 0.5rem 0 0.5rem;\n      margin-top: 1rem;\n      color: transparent;\n      background-color: transparent; }\n  .stastic-card-main-container .updated-on {\n    display: flex;\n    flex-direction: row;\n    font-size: 0.75rem;\n    border-radius: 3.125rem;\n    padding: 0.05rem 0.8rem 0.05rem 0.8rem;\n    width: max-content;\n    color: #008f39;\n    background-color: rgba(185, 226, 244, 0.4); }\n\n.stastic-card-main-container:hover {\n  box-shadow: rgba(0, 5, 18, 0.2) 0px 8px 24px; }\n";
styleInject(css_248z$8);

var StasticCard = function (props) {
    var value = props.value, title = props.title, updatedDate = props.updatedDate, icon = props.icon, loading = props.loading; props.companyRole; var tooltip = props.tooltip, t = props.t;
    return (React.createElement("div", { className: "stastic-card-main-container" }, loading ? (React.createElement(antd.Skeleton, { active: true })) : (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "title-section" },
            React.createElement("div", { className: "title" }, t(title)),
            React.createElement("div", { className: "info-container" },
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: tooltip },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
        React.createElement("div", { className: "values-section" },
            React.createElement("div", { className: "values-and-unit" },
                title.includes("credit") && React.createElement("div", { className: "unit" }, "ITMOs"),
                React.createElement("div", { className: "value" }, title.includes("credit")
                    ? value === 0 || String(value) === "NaN"
                        ? 0
                        : addCommSep(value)
                    : value)),
            React.createElement("div", { className: "icon-section" }, icon)),
        updatedDate !== '0' && React.createElement("div", { className: "updated-on" }, updatedDate)))));
};

var ProgrammeRejectAndTransferComponent = function (props) {
    var totalPrgrammes = props.totalPrgrammes, pending = props.pending, rejected = props.rejected, authorized = props.authorized, updatedDate = props.updatedDate, loading = props.loading, toolTipText = props.toolTipText, t = props.t;
    React.useEffect(function () {
        console.log({ pending: pending, totalPrgrammes: totalPrgrammes });
    });
    return (React.createElement("div", { className: "stastics-and-pie-card height-pie-rem" }, loading ? (React.createElement("div", { className: "margin-top-2" },
        React.createElement(antd.Skeleton, { active: true }),
        React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "title-section" },
            React.createElement("div", { className: "title" }, t("programmes")),
            React.createElement("div", { className: "info-container" },
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
        React.createElement("div", { className: "total-programme-details" },
            React.createElement("div", { className: "details" },
                React.createElement("div", { className: "detail" }, "Total"),
                React.createElement("div", { className: "value" }, totalPrgrammes)),
            React.createElement("div", { className: "icon" },
                React.createElement(Icon.Clipboard2Pulse, { color: "#008f39", size: 80 }))),
        React.createElement("div", { className: "total-programme-extra-details" },
            React.createElement("div", { className: "rejected-details margin-top-1" },
                React.createElement("div", { className: "icon" },
                    React.createElement("div", { className: "icon-container authorized" },
                        React.createElement(Icon.HandThumbsUp, { color: "#008f39", size: 25 }))),
                React.createElement("div", { className: "details" },
                    React.createElement("div", { className: "label-and-value" },
                        React.createElement("div", { className: "label" }, "Authorised"),
                        React.createElement("div", { className: "value" }, authorized)),
                    React.createElement("div", { className: "stastic-bar" },
                        React.createElement(antd.Progress, { showInfo: false, percent: (authorized / totalPrgrammes) * 100, status: "active", strokeColor: { from: "#B9E2F4", to: "#0dcc59" } })))),
            React.createElement("div", { className: "transfered-details margin-top-1" },
                React.createElement("div", { className: "icon" },
                    React.createElement("div", { className: "icon-container reject" },
                        React.createElement(Icon.XCircle, { style: {
                                color: "#FF4D4F",
                                fontSize: "25px",
                            } }))),
                React.createElement("div", { className: "details" },
                    React.createElement("div", { className: "label-and-value" },
                        React.createElement("div", { className: "label" }, "Rejected"),
                        React.createElement("div", { className: "value" }, rejected)),
                    React.createElement("div", { className: "stastic-bar" },
                        React.createElement(antd.Progress, { showInfo: false, percent: (rejected / totalPrgrammes) * 100, status: "active", strokeColor: { from: "#FFA6A6", to: "#FF8183" } })))),
            React.createElement("div", { className: "transfered-details margin-top-1" },
                React.createElement("div", { className: "icon" },
                    React.createElement("div", { className: "icon-container pending" },
                        React.createElement(Icon.ClockHistory, { color: "#6c6c6c", size: 25 }))),
                React.createElement("div", { className: "details" },
                    React.createElement("div", { className: "label-and-value" },
                        React.createElement("div", { className: "label" }, "Pending"),
                        React.createElement("div", { className: "value" }, pending)),
                    React.createElement("div", { className: "stastic-bar" },
                        React.createElement(antd.Progress, { showInfo: false, percent: (pending / totalPrgrammes) * 100, status: "active", strokeColor: { from: "#F0F0F0", to: "#D8D8D8" } }))))),
        React.createElement("div", { className: "updated-on margin-top-6" }, updatedDate !== "0" && (React.createElement("div", { className: "updated-moment-container" }, updatedDate)))))));
};

var RegistryPieChartsStatComponent = function (props) {
    var id = props.id, title = props.title, options = props.options, series = props.series, lastUpdate = props.lastUpdate, loading = props.loading, toolTipText = props.toolTipText, Chart = props.Chart;
    return (React.createElement("div", { className: "stastics-and-pie-card height-pie-rem" }, loading ? (React.createElement("div", { className: "margin-top-2" },
        React.createElement(antd.Skeleton, { active: true }),
        React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "pie-charts-top" },
            React.createElement("div", { className: "pie-charts-title" },
                title,
                [
                    exports.StatsCardsTypes.CREDITS,
                    exports.StatsCardsTypes.CERTIFIED_CREDITS,
                ].includes(title) && React.createElement("div", { className: "unit" }, "(ITMOs)")),
            React.createElement("div", { className: "info-container" },
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
        React.createElement("div", { className: "pie-charts-section" },
            React.createElement(Chart, { id: id, options: options, series: series, type: "donut", height: "320px" })),
        React.createElement("div", { className: "updated-on margin-top-2" }, lastUpdate !== "0" && (React.createElement("div", { className: "updated-moment-container" }, lastUpdate)))))));
};

var RegistryBarChartsStatComponent = function (props) {
    var id = props.id, title = props.title, options = props.options, series = props.series, lastUpdate = props.lastUpdate, loading = props.loading, toolTipText = props.toolTipText, Chart = props.Chart;
    return (React.createElement("div", { className: "stastics-and-pie-card height-bar-rem" },
        React.createElement("div", { className: "pie-charts-top" },
            React.createElement("div", { className: "pie-charts-title" }, title),
            React.createElement("div", { className: "info-container" },
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
        loading ? (React.createElement("div", { className: "margin-top-2" },
            React.createElement(antd.Skeleton, { active: true }),
            React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
            React.createElement("div", { className: "pie-charts-section" },
                React.createElement(Chart, { id: id, options: options, series: series, type: "bar", height: "350px", width: "490px" })),
            React.createElement("div", { className: "updated-on" }, lastUpdate !== "0" && (React.createElement("div", { className: "updated-moment-container" }, lastUpdate)))))));
};

var RangePicker$1 = antd.DatePicker.RangePicker;
var RegistryDashboardComponent = function (props) {
    var Chart = props.Chart, t = props.t; props.ButtonGroup; props.Link; props.isMultipleDashboardsVisible;
    var _b = useConnection(); _b.get; var post = _b.post; _b.delete; var statServerUrl = _b.statServerUrl;
    var userInfoState = useUserContext().userInfoState;
    var _c = React.useState(false), loadingWithoutTimeRange = _c[0], setLoadingWithoutTimeRange = _c[1];
    var _e = React.useState(false), loading = _e[0], setLoading = _e[1];
    var _f = React.useState(false), loadingCharts = _f[0], setLoadingCharts = _f[1];
    var _g = React.useState(0), totalProjects = _g[0], setTotalProjects = _g[1];
    var _h = React.useState(0), pendingProjectsWithoutTimeRange = _h[0], setPendingProjectsWithoutTimeRange = _h[1];
    var _j = React.useState(0), pendingProjects = _j[0], setPendingProjects = _j[1];
    var _k = React.useState(0), rejectedProjects = _k[0], setRejectedProjects = _k[1];
    var _l = React.useState(0), authorisedProjects = _l[0], setAuthorisedProjects = _l[1];
    var _m = React.useState(0); _m[0]; var setCreditBalance = _m[1];
    var _o = React.useState(0), creditBalanceWithoutTimeRange = _o[0], setCreditBalanceWithoutTimeRange = _o[1];
    var _p = React.useState(0), creditCertiedBalanceWithoutTimeRange = _p[0], setCreditCertifiedBalanceWithoutTimeRange = _p[1];
    var _q = React.useState([
        1, 1, 0, 0,
    ]), creditsPieSeries = _q[0], setCreditPieSeries = _q[1];
    var _r = React.useState([1, 1, 0]), creditsCertifiedPieSeries = _r[0], setCreditCertifiedPieSeries = _r[1];
    var _s = React.useState(0), creditsPieChartTotal = _s[0], setCreditsPieChartTotal = _s[1];
    var _t = React.useState(0), certifiedCreditsPieChartTotal = _t[0], setCertifiedCreditsPieChartTotal = _t[1];
    var _u = React.useState(Date.parse(String(moment().subtract("13", "days").startOf("day")))), startTime = _u[0], setStartTime = _u[1];
    var _v = React.useState(Date.parse(String(moment().endOf("day")))), endTime = _v[0], setEndTime = _v[1];
    var _w = React.useState("overall"), categoryType = _w[0], setCategoryType = _w[1];
    // states for totalProgrammes chart
    var _x = React.useState(getTotalProgrammesInitialValues()), totalProgrammesSeries = _x[0], setTotalProgrammesSeries = _x[1];
    var _y = React.useState([]), totalProgrammesOptionsLabels = _y[0], setTotalProgrammesOptionsLabels = _y[1];
    // states for totalProgrammes sub sector chart
    var _z = React.useState(getTotalProgrammesSectorInitialValues()), totalProgrammesSectorSeries = _z[0], setTotalProgrammesSectorSeries = _z[1];
    var _0 = React.useState([]), totalProgrammesSectorOptionsLabels = _0[0], setTotalProgrammesSectorOptionsLabels = _0[1];
    // states for totalCredits chart
    var _1 = React.useState(totalCreditsSeriesInitialValues), totalCreditsSeries = _1[0], setTotalCreditsSeries = _1[1];
    var _2 = React.useState([]), totalCreditsOptionsLabels = _2[0], setTotalCreditsOptionsLabels = _2[1];
    // states for totalCreditsCertified chart
    var _3 = React.useState(totalCertifiedCreditsSeriesInitialValues), totalCertifiedCreditsSeries = _3[0], setTotalCertifiedCreditsSeries = _3[1];
    var _4 = React.useState([]), totalCertifiedCreditsOptionsLabels = _4[0], setTotalCertifiedCreditsOptionsLabels = _4[1];
    // locations of programmes
    var _5 = React.useState(), programmeLocations = _5[0], setProgrammeLocations = _5[1];
    var _6 = React.useState(), programmeTransferLocations = _6[0], setProgrammeTransferLocations = _6[1];
    //certifier view states
    var _7 = React.useState(0), programmesCertifed = _7[0], setProgrammesCertifed = _7[1];
    var _8 = React.useState(0), programmesUnCertifed = _8[0], setProgrammesUnCertifed = _8[1];
    //programmeDeveloper
    var _9 = React.useState(0), transferRequestSent = _9[0], setTransferRequestSent = _9[1];
    var _10 = React.useState(0), transferRequestReceived = _10[0], setTransferRequestReceived = _10[1];
    //last time updates
    var _11 = React.useState(0), lastUpdateProgrammesStatsEpoch = _11[0], setLastUpdateProgrammesStatsEpoch = _11[1];
    var _12 = React.useState("0"), lastUpdateProgrammesStats = _12[0], setLastUpdateProgrammesStats = _12[1];
    var _13 = React.useState(0), lastUpdatePendingTransferSentEpoch = _13[0], setLastUpdatePendingTransferSentEpoch = _13[1];
    var _14 = React.useState("0"), lastUpdatePendingTransferSent = _14[0], setLastUpdatePendingTransferSent = _14[1];
    var _15 = React.useState(0), lastUpdateCreditBalanceEpoch = _15[0], setLastUpdateCreditBalanceEpoch = _15[1];
    var _16 = React.useState("0"), lastUpdateCreditBalance = _16[0], setLastUpdateCreditBalance = _16[1];
    var _17 = React.useState(0), lastUpdatePendingTransferReceivedEpoch = _17[0], setLastUpdatePendingTransferReceivedEpoch = _17[1];
    var _18 = React.useState("0"), lastUpdatePendingTransferReceived = _18[0], setLastUpdatePendingTransferReceived = _18[1];
    var _19 = React.useState(0), lastUpdateProgrammesCertifiableEpoch = _19[0], setLastUpdateProgrammesCertifiableEpoch = _19[1];
    var _20 = React.useState("0"), lastUpdateProgrammesCertifiable = _20[0], setLastUpdateProgrammesCertifiable = _20[1];
    var _21 = React.useState(0), lastUpdateCertifiedCreditsStatsEpoch = _21[0], setLastUpdateCertifiedCreditsStatsEpoch = _21[1];
    var _22 = React.useState("0"), lastUpdateCertifiedCreditsStats = _22[0], setLastUpdateCertifiedCreditsStats = _22[1];
    var _23 = React.useState(0), lastUpdateProgrammesCertifiedEpoch = _23[0], setLastUpdateProgrammesCertifiedEpoch = _23[1];
    var _24 = React.useState("0"), lastUpdateProgrammesCertified = _24[0], setLastUpdateProgrammesCertified = _24[1];
    var _25 = React.useState(0), lastUpdateProgrammesStatsCEpoch = _25[0], setLastUpdateProgrammesStatsCEpoch = _25[1];
    var _26 = React.useState("0"), lastUpdateProgrammesStatsC = _26[0], setLastUpdateProgrammesStatsC = _26[1];
    var _27 = React.useState(0), lastUpdateProgrammesCreditsStatsEpoch = _27[0], setLastUpdateProgrammesCreditsStatsEpoch = _27[1];
    var _28 = React.useState("0"), lastUpdateProgrammesCreditsStats = _28[0], setLastUpdateProgrammesCreditsStats = _28[1];
    var _29 = React.useState(0), lastUpdateProgrammesSectorStatsCEpoch = _29[0], setLastUpdateProgrammesSectorStatsCEpoch = _29[1];
    var _30 = React.useState("0"), lastUpdateProgrammesSectorStatsC = _30[0], setLastUpdateProgrammesSectorStatsC = _30[1];
    var _31 = React.useState(0), lastUpdateTotalCreditsEpoch = _31[0], setLastUpdateTotalCreditsEpoch = _31[1];
    var _32 = React.useState("0"), lastUpdateTotalCredits = _32[0], setLastUpdateTotalCredits = _32[1];
    var _33 = React.useState(0), lastUpdateTotalCreditsCertifiedEpoch = _33[0], setLastUpdateTotalCreditsCertifiedEpoch = _33[1];
    var _34 = React.useState("0"), lastUpdateTotalCreditsCertified = _34[0], setLastUpdateTotalCreditsCertified = _34[1];
    var _35 = React.useState(0), lastUpdateTransferLocationsEpoch = _35[0], setLastUpdateTransferLocationsEpoch = _35[1];
    var _36 = React.useState("0"), lastUpdateTransferLocations = _36[0], setLastUpdateTransferLocations = _36[1];
    var _37 = React.useState(), transferLocationsMapSource = _37[0], setTransferLocationsMapSource = _37[1];
    var _38 = React.useState(), txLocationMapData = _38[0], setTxLocationMapData = _38[1];
    var _39 = React.useState(), transferLocationsMapLayer = _39[0], setTransferLocationsMapLayer = _39[1];
    var _40 = React.useState([]), programmeLocationsMapCenter = _40[0], setProgrammeLocationsMapCenter = _40[1];
    var _41 = React.useState(), programmeLocationsMapSource = _41[0], setProgrammeLocationsMapSource = _41[1];
    var _42 = React.useState(), programmeLocationsMapLayer = _42[0], setProgrammeLocationsMapLayer = _42[1];
    var _43 = React.useState([]), fileList = _43[0], setFileList = _43[1];
    var _44 = React.useState("-"), selectedFile = _44[0], setSelectedFile = _44[1];
    var _45 = React.useState(""), selectedurl = _45[0], setSelectedurl = _45[1];
    var mapType = process.env.REACT_APP_MAP_TYPE
        ? process.env.REACT_APP_MAP_TYPE
        : "None";
    var accessToken = process.env.REACT_APP_MAPBOXGL_ACCESS_TOKEN
        ? process.env.REACT_APP_MAPBOXGL_ACCESS_TOKEN
        : "";
    var getAllProgrammeAnalyticsStatsParamsWithoutTimeRange = function () {
        return {
            system: exports.SystemNames.CARBON_REGISTRY,
            stats: [
                {
                    type: "AGG_PROGRAMME_BY_STATUS",
                },
                {
                    type: "PENDING_TRANSFER_INIT",
                },
                {
                    type: "MY_CREDIT",
                },
                {
                    type: "PENDING_TRANSFER_RECV",
                },
                {
                    type: "UNCERTIFIED_BY_ME",
                },
                {
                    type: "CERTIFIED_BY_ME",
                },
            ],
        };
    };
    var getAllProgrammeAnalyticsStatsParams = function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER) {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "MY_AGG_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "MY_AGG_AUTH_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "MY_CERTIFIED_REVOKED_PROGRAMMES",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
        else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === "Certifier" &&
            categoryType === "mine") {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "CERTIFIED_BY_ME_BY_STATE",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "AUTH_CERTIFIED_BY_ME_BY_STATE",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "CERTIFIED_REVOKED_BY_ME",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
        else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === "Certifier" &&
            categoryType === "overall") {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "AGG_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "AGG_AUTH_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "CERTIFIED_REVOKED_PROGRAMMES",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
        else {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "AGG_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "AGG_AUTH_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "CERTIFIED_REVOKED_PROGRAMMES",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
    };
    var getAllChartsParams = function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER) {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "MY_AGG_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "MY_AGG_PROGRAMME_BY_SECTOR",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "MY_CERTIFIED_REVOKED_PROGRAMMES",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "MY_TRANSFER_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "MY_PROGRAMME_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
        else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === "Certifier" &&
            categoryType === "mine") {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "CERTIFIED_BY_ME_BY_STATE",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "CERTIFIED_BY_ME_BY_SECTOR",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "CERTIFIED_REVOKED_BY_ME",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "MY_TRANSFER_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "MY_PROGRAMME_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
        else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === "Certifier" &&
            categoryType === "overall") {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "AGG_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "AGG_PROGRAMME_BY_SECTOR",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "CERTIFIED_REVOKED_PROGRAMMES",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "ALL_TRANSFER_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "ALL_PROGRAMME_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
        else {
            return {
                system: exports.SystemNames.CARBON_REGISTRY,
                stats: [
                    {
                        type: "AGG_PROGRAMME_BY_STATUS",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "AGG_PROGRAMME_BY_SECTOR",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "CERTIFIED_REVOKED_PROGRAMMES",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                            timeGroup: true,
                        },
                    },
                    {
                        type: "ALL_TRANSFER_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                    {
                        type: "ALL_PROGRAMME_LOCATION",
                        statFilter: {
                            startTime: startTime !== 0 ? startTime : undefined,
                            endTime: endTime !== 0 ? endTime : undefined,
                        },
                    },
                ],
            };
        }
    };
    var onChangeRange = function (dateMoment, dateString) { return __awaiter(void 0, void 0, void 0, function () {
        var _a, _b;
        return __generator(this, function (_c) {
            try {
                if (!dateMoment) {
                    setStartTime(0);
                    setEndTime(0);
                }
                if (dateMoment !== null && dateMoment[1] !== null) {
                    setStartTime(Date.parse(String(moment((_a = dateMoment[0]) === null || _a === void 0 ? void 0 : _a._d).startOf("day"))));
                    setEndTime(Date.parse(String(moment((_b = dateMoment[1]) === null || _b === void 0 ? void 0 : _b._d).endOf("day"))));
                }
                else {
                    setStartTime(0);
                    setEndTime(0);
                }
            }
            catch (e) {
                setStartTime(0);
                setEndTime(0);
            }
            return [2 /*return*/];
        });
    }); };
    var firstLower = function (lower) {
        return (lower && lower[0].toLowerCase() + lower.slice(1)) || lower;
    };
    var getAllProgrammesAggChartStats = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, programmesAggByStatus_1, programmesAggBySector_1, totalCreditsCertifiedStats, programmeLocationsStats, transferLocationsStats, timeLabelDataStatus, formattedTimeLabelDataStatus, timeLabelDataSector, formattedTimeLabelDataSector, timeLabelCertifiedCreditsStats, formattedTimeLabelCertifiedCreditsStats, statusArray, totalProgrammesValues_1, totalCreditsValues, progarmmesSectorSeriesData_1, sectorsArray, totalCertifiedCreditsSeriesValues, error_1;
        var _a, _b, _c, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126, _127, _128, _129, _130, _131, _132, _133, _134, _135, _136, _137, _138, _139, _140, _141, _142, _143, _144, _145, _146, _147, _148, _149, _150, _151, _152, _153, _154, _155, _156, _157, _158, _159, _160, _161, _162, _163, _164, _165, _166, _167, _168, _169, _170, _171, _172, _173, _174, _175, _176, _177, _178, _179, _180, _181, _182, _183, _184, _185, _186, _187, _188, _189, _190, _191, _192, _193, _194, _195, _196, _197, _198, _199, _200, _201, _202, _203, _204, _205, _206, _207, _208, _209, _210, _211, _212, _213, _214, _215, _216, _217, _218, _219, _220, _221, _222, _223, _224, _225, _226, _227, _228, _229, _230, _231, _232, _233, _234, _235, _236, _237, _238, _239, _240, _241, _242, _243, _244, _245, _246, _247, _248, _249, _250, _251, _252;
        return __generator(this, function (_253) {
            switch (_253.label) {
                case 0:
                    setLoadingCharts(true);
                    _253.label = 1;
                case 1:
                    _253.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("stats/programme/agg", getAllChartsParams(), undefined, statServerUrl)];
                case 2:
                    response = _253.sent();
                    totalCreditsCertifiedStats = void 0;
                    programmeLocationsStats = void 0;
                    transferLocationsStats = void 0;
                    if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER) {
                        if (((_e = (_c = (_b = (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.stats) === null || _b === void 0 ? void 0 : _b.MY_AGG_PROGRAMME_BY_STATUS) === null || _c === void 0 ? void 0 : _c.all) === null || _e === void 0 ? void 0 : _e.creditUpdateTime) &&
                            String((_j = (_h = (_g = (_f = response === null || response === void 0 ? void 0 : response.data) === null || _f === void 0 ? void 0 : _f.stats) === null || _g === void 0 ? void 0 : _g.MY_AGG_PROGRAMME_BY_STATUS) === null || _h === void 0 ? void 0 : _h.all) === null || _j === void 0 ? void 0 : _j.creditUpdateTime) !== "0") {
                            setLastUpdateTotalCreditsEpoch(parseInt((_o = (_m = (_l = (_k = response === null || response === void 0 ? void 0 : response.data) === null || _k === void 0 ? void 0 : _k.stats) === null || _l === void 0 ? void 0 : _l.MY_AGG_PROGRAMME_BY_STATUS) === null || _m === void 0 ? void 0 : _m.all) === null || _o === void 0 ? void 0 : _o.creditUpdateTime));
                            setLastUpdateTotalCredits(moment(parseInt((_s = (_r = (_q = (_p = response === null || response === void 0 ? void 0 : response.data) === null || _p === void 0 ? void 0 : _p.stats) === null || _q === void 0 ? void 0 : _q.MY_AGG_PROGRAMME_BY_STATUS) === null || _r === void 0 ? void 0 : _r.all) === null || _s === void 0 ? void 0 : _s.creditUpdateTime)).fromNow());
                        }
                        programmesAggByStatus_1 =
                            (_v = (_u = (_t = response === null || response === void 0 ? void 0 : response.data) === null || _t === void 0 ? void 0 : _t.stats) === null || _u === void 0 ? void 0 : _u.MY_AGG_PROGRAMME_BY_STATUS) === null || _v === void 0 ? void 0 : _v.data;
                        if (((_z = (_y = (_x = (_w = response === null || response === void 0 ? void 0 : response.data) === null || _w === void 0 ? void 0 : _w.stats) === null || _x === void 0 ? void 0 : _x.MY_AGG_PROGRAMME_BY_SECTOR) === null || _y === void 0 ? void 0 : _y.all) === null || _z === void 0 ? void 0 : _z.createdTime) &&
                            String((_3 = (_2 = (_1 = (_0 = response === null || response === void 0 ? void 0 : response.data) === null || _0 === void 0 ? void 0 : _0.stats) === null || _1 === void 0 ? void 0 : _1.MY_AGG_PROGRAMME_BY_SECTOR) === null || _2 === void 0 ? void 0 : _2.all) === null || _3 === void 0 ? void 0 : _3.createdTime) !== "0") {
                            setLastUpdateProgrammesSectorStatsCEpoch(parseInt((_7 = (_6 = (_5 = (_4 = response === null || response === void 0 ? void 0 : response.data) === null || _4 === void 0 ? void 0 : _4.stats) === null || _5 === void 0 ? void 0 : _5.MY_AGG_PROGRAMME_BY_SECTOR) === null || _6 === void 0 ? void 0 : _6.all) === null || _7 === void 0 ? void 0 : _7.createdTime));
                            setLastUpdateProgrammesSectorStatsC(moment(parseInt((_11 = (_10 = (_9 = (_8 = response === null || response === void 0 ? void 0 : response.data) === null || _8 === void 0 ? void 0 : _8.stats) === null || _9 === void 0 ? void 0 : _9.MY_AGG_PROGRAMME_BY_SECTOR) === null || _10 === void 0 ? void 0 : _10.all) === null || _11 === void 0 ? void 0 : _11.createdTime)).fromNow());
                        }
                        programmesAggBySector_1 =
                            (_14 = (_13 = (_12 = response === null || response === void 0 ? void 0 : response.data) === null || _12 === void 0 ? void 0 : _12.stats) === null || _13 === void 0 ? void 0 : _13.MY_AGG_PROGRAMME_BY_SECTOR) === null || _14 === void 0 ? void 0 : _14.data;
                        if (((_17 = (_16 = (_15 = response === null || response === void 0 ? void 0 : response.data) === null || _15 === void 0 ? void 0 : _15.stats) === null || _16 === void 0 ? void 0 : _16.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _17 === void 0 ? void 0 : _17.last) &&
                            String((_20 = (_19 = (_18 = response === null || response === void 0 ? void 0 : response.data) === null || _18 === void 0 ? void 0 : _18.stats) === null || _19 === void 0 ? void 0 : _19.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _20 === void 0 ? void 0 : _20.last) !== "0") {
                            setLastUpdateTotalCreditsCertifiedEpoch(parseInt((_23 = (_22 = (_21 = response === null || response === void 0 ? void 0 : response.data) === null || _21 === void 0 ? void 0 : _21.stats) === null || _22 === void 0 ? void 0 : _22.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _23 === void 0 ? void 0 : _23.last));
                            setLastUpdateTotalCreditsCertified(moment(parseInt((_26 = (_25 = (_24 = response === null || response === void 0 ? void 0 : response.data) === null || _24 === void 0 ? void 0 : _24.stats) === null || _25 === void 0 ? void 0 : _25.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _26 === void 0 ? void 0 : _26.last)).fromNow());
                        }
                        totalCreditsCertifiedStats =
                            (_29 = (_28 = (_27 = response === null || response === void 0 ? void 0 : response.data) === null || _27 === void 0 ? void 0 : _27.stats) === null || _28 === void 0 ? void 0 : _28.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _29 === void 0 ? void 0 : _29.data;
                        if (((_32 = (_31 = (_30 = response === null || response === void 0 ? void 0 : response.data) === null || _30 === void 0 ? void 0 : _30.stats) === null || _31 === void 0 ? void 0 : _31.MY_TRANSFER_LOCATION) === null || _32 === void 0 ? void 0 : _32.last) &&
                            String((_35 = (_34 = (_33 = response === null || response === void 0 ? void 0 : response.data) === null || _33 === void 0 ? void 0 : _33.stats) === null || _34 === void 0 ? void 0 : _34.MY_TRANSFER_LOCATION) === null || _35 === void 0 ? void 0 : _35.last) !== "0") {
                            setLastUpdateTransferLocationsEpoch(parseInt((_38 = (_37 = (_36 = response === null || response === void 0 ? void 0 : response.data) === null || _36 === void 0 ? void 0 : _36.stats) === null || _37 === void 0 ? void 0 : _37.MY_TRANSFER_LOCATION) === null || _38 === void 0 ? void 0 : _38.last));
                            setLastUpdateTransferLocations(moment(parseInt((_41 = (_40 = (_39 = response === null || response === void 0 ? void 0 : response.data) === null || _39 === void 0 ? void 0 : _39.stats) === null || _40 === void 0 ? void 0 : _40.MY_TRANSFER_LOCATION) === null || _41 === void 0 ? void 0 : _41.last)).fromNow());
                        }
                        transferLocationsStats =
                            (_44 = (_43 = (_42 = response === null || response === void 0 ? void 0 : response.data) === null || _42 === void 0 ? void 0 : _42.stats) === null || _43 === void 0 ? void 0 : _43.MY_TRANSFER_LOCATION) === null || _44 === void 0 ? void 0 : _44.data;
                        programmeLocationsStats = (_46 = (_45 = response === null || response === void 0 ? void 0 : response.data) === null || _45 === void 0 ? void 0 : _45.stats) === null || _46 === void 0 ? void 0 : _46.MY_PROGRAMME_LOCATION;
                    }
                    else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER &&
                        categoryType === "mine") {
                        if (((_49 = (_48 = (_47 = response === null || response === void 0 ? void 0 : response.data) === null || _47 === void 0 ? void 0 : _47.stats) === null || _48 === void 0 ? void 0 : _48.CERTIFIED_BY_ME_BY_STATE) === null || _49 === void 0 ? void 0 : _49.last) &&
                            String((_52 = (_51 = (_50 = response === null || response === void 0 ? void 0 : response.data) === null || _50 === void 0 ? void 0 : _50.stats) === null || _51 === void 0 ? void 0 : _51.CERTIFIED_BY_ME_BY_STATE) === null || _52 === void 0 ? void 0 : _52.last) !== "0") {
                            setLastUpdateTotalCreditsEpoch(parseInt((_55 = (_54 = (_53 = response === null || response === void 0 ? void 0 : response.data) === null || _53 === void 0 ? void 0 : _53.stats) === null || _54 === void 0 ? void 0 : _54.CERTIFIED_BY_ME_BY_STATE) === null || _55 === void 0 ? void 0 : _55.last));
                            setLastUpdateTotalCredits(moment(parseInt((_58 = (_57 = (_56 = response === null || response === void 0 ? void 0 : response.data) === null || _56 === void 0 ? void 0 : _56.stats) === null || _57 === void 0 ? void 0 : _57.CERTIFIED_BY_ME_BY_STATE) === null || _58 === void 0 ? void 0 : _58.last)).fromNow());
                        }
                        else {
                            setLastUpdateTotalCredits("0");
                            setLastUpdateTotalCreditsEpoch(0);
                        }
                        programmesAggByStatus_1 =
                            (_61 = (_60 = (_59 = response === null || response === void 0 ? void 0 : response.data) === null || _59 === void 0 ? void 0 : _59.stats) === null || _60 === void 0 ? void 0 : _60.CERTIFIED_BY_ME_BY_STATE) === null || _61 === void 0 ? void 0 : _61.data;
                        if (((_65 = (_64 = (_63 = (_62 = response === null || response === void 0 ? void 0 : response.data) === null || _62 === void 0 ? void 0 : _62.stats) === null || _63 === void 0 ? void 0 : _63.CERTIFIED_BY_ME_BY_SECTOR) === null || _64 === void 0 ? void 0 : _64.all) === null || _65 === void 0 ? void 0 : _65.certifiedTime) &&
                            String((_69 = (_68 = (_67 = (_66 = response === null || response === void 0 ? void 0 : response.data) === null || _66 === void 0 ? void 0 : _66.stats) === null || _67 === void 0 ? void 0 : _67.CERTIFIED_BY_ME_BY_SECTOR) === null || _68 === void 0 ? void 0 : _68.all) === null || _69 === void 0 ? void 0 : _69.certifiedTime) !== "0") {
                            setLastUpdateProgrammesSectorStatsCEpoch(parseInt((_73 = (_72 = (_71 = (_70 = response === null || response === void 0 ? void 0 : response.data) === null || _70 === void 0 ? void 0 : _70.stats) === null || _71 === void 0 ? void 0 : _71.CERTIFIED_BY_ME_BY_SECTOR) === null || _72 === void 0 ? void 0 : _72.all) === null || _73 === void 0 ? void 0 : _73.certifiedTime));
                            setLastUpdateProgrammesSectorStatsC(moment(parseInt((_77 = (_76 = (_75 = (_74 = response === null || response === void 0 ? void 0 : response.data) === null || _74 === void 0 ? void 0 : _74.stats) === null || _75 === void 0 ? void 0 : _75.CERTIFIED_BY_ME_BY_SECTOR) === null || _76 === void 0 ? void 0 : _76.all) === null || _77 === void 0 ? void 0 : _77.certifiedTime)).fromNow());
                        }
                        else {
                            setLastUpdateProgrammesSectorStatsCEpoch(0);
                            setLastUpdateProgrammesSectorStatsC("0");
                        }
                        programmesAggBySector_1 =
                            (_80 = (_79 = (_78 = response === null || response === void 0 ? void 0 : response.data) === null || _78 === void 0 ? void 0 : _78.stats) === null || _79 === void 0 ? void 0 : _79.CERTIFIED_BY_ME_BY_SECTOR) === null || _80 === void 0 ? void 0 : _80.data;
                        if (((_83 = (_82 = (_81 = response === null || response === void 0 ? void 0 : response.data) === null || _81 === void 0 ? void 0 : _81.stats) === null || _82 === void 0 ? void 0 : _82.CERTIFIED_REVOKED_BY_ME) === null || _83 === void 0 ? void 0 : _83.last) &&
                            String((_86 = (_85 = (_84 = response === null || response === void 0 ? void 0 : response.data) === null || _84 === void 0 ? void 0 : _84.stats) === null || _85 === void 0 ? void 0 : _85.CERTIFIED_REVOKED_BY_ME) === null || _86 === void 0 ? void 0 : _86.last) !== "0") {
                            setLastUpdateTotalCreditsCertifiedEpoch(parseInt((_89 = (_88 = (_87 = response === null || response === void 0 ? void 0 : response.data) === null || _87 === void 0 ? void 0 : _87.stats) === null || _88 === void 0 ? void 0 : _88.CERTIFIED_REVOKED_BY_ME) === null || _89 === void 0 ? void 0 : _89.last));
                            setLastUpdateTotalCreditsCertified(moment(parseInt((_92 = (_91 = (_90 = response === null || response === void 0 ? void 0 : response.data) === null || _90 === void 0 ? void 0 : _90.stats) === null || _91 === void 0 ? void 0 : _91.CERTIFIED_REVOKED_BY_ME) === null || _92 === void 0 ? void 0 : _92.last)).fromNow());
                        }
                        else {
                            setLastUpdateTotalCreditsCertifiedEpoch(0);
                            setLastUpdateTotalCreditsCertified("0");
                        }
                        totalCreditsCertifiedStats =
                            (_95 = (_94 = (_93 = response === null || response === void 0 ? void 0 : response.data) === null || _93 === void 0 ? void 0 : _93.stats) === null || _94 === void 0 ? void 0 : _94.CERTIFIED_REVOKED_BY_ME) === null || _95 === void 0 ? void 0 : _95.data;
                        if (((_98 = (_97 = (_96 = response === null || response === void 0 ? void 0 : response.data) === null || _96 === void 0 ? void 0 : _96.stats) === null || _97 === void 0 ? void 0 : _97.MY_TRANSFER_LOCATION) === null || _98 === void 0 ? void 0 : _98.last) &&
                            String((_101 = (_100 = (_99 = response === null || response === void 0 ? void 0 : response.data) === null || _99 === void 0 ? void 0 : _99.stats) === null || _100 === void 0 ? void 0 : _100.MY_TRANSFER_LOCATION) === null || _101 === void 0 ? void 0 : _101.last) !== "0") {
                            setLastUpdateTransferLocationsEpoch(parseInt((_104 = (_103 = (_102 = response === null || response === void 0 ? void 0 : response.data) === null || _102 === void 0 ? void 0 : _102.stats) === null || _103 === void 0 ? void 0 : _103.MY_TRANSFER_LOCATION) === null || _104 === void 0 ? void 0 : _104.last));
                            setLastUpdateTransferLocations(moment(parseInt((_107 = (_106 = (_105 = response === null || response === void 0 ? void 0 : response.data) === null || _105 === void 0 ? void 0 : _105.stats) === null || _106 === void 0 ? void 0 : _106.MY_TRANSFER_LOCATION) === null || _107 === void 0 ? void 0 : _107.last)).fromNow());
                        }
                        else {
                            setLastUpdateTransferLocationsEpoch(0);
                            setLastUpdateTransferLocations("0");
                        }
                        transferLocationsStats =
                            (_110 = (_109 = (_108 = response === null || response === void 0 ? void 0 : response.data) === null || _108 === void 0 ? void 0 : _108.stats) === null || _109 === void 0 ? void 0 : _109.MY_TRANSFER_LOCATION) === null || _110 === void 0 ? void 0 : _110.data;
                        programmeLocationsStats = (_112 = (_111 = response === null || response === void 0 ? void 0 : response.data) === null || _111 === void 0 ? void 0 : _111.stats) === null || _112 === void 0 ? void 0 : _112.MY_PROGRAMME_LOCATION;
                    }
                    else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER &&
                        categoryType === "overall") {
                        if (((_116 = (_115 = (_114 = (_113 = response === null || response === void 0 ? void 0 : response.data) === null || _113 === void 0 ? void 0 : _113.stats) === null || _114 === void 0 ? void 0 : _114.AGG_PROGRAMME_BY_STATUS) === null || _115 === void 0 ? void 0 : _115.all) === null || _116 === void 0 ? void 0 : _116.creditUpdateTime) &&
                            String((_120 = (_119 = (_118 = (_117 = response === null || response === void 0 ? void 0 : response.data) === null || _117 === void 0 ? void 0 : _117.stats) === null || _118 === void 0 ? void 0 : _118.AGG_PROGRAMME_BY_STATUS) === null || _119 === void 0 ? void 0 : _119.all) === null || _120 === void 0 ? void 0 : _120.creditUpdateTime) !== "0") {
                            setLastUpdateTotalCreditsEpoch(parseInt((_124 = (_123 = (_122 = (_121 = response === null || response === void 0 ? void 0 : response.data) === null || _121 === void 0 ? void 0 : _121.stats) === null || _122 === void 0 ? void 0 : _122.AGG_PROGRAMME_BY_STATUS) === null || _123 === void 0 ? void 0 : _123.all) === null || _124 === void 0 ? void 0 : _124.creditUpdateTime));
                            setLastUpdateTotalCredits(moment(parseInt((_128 = (_127 = (_126 = (_125 = response === null || response === void 0 ? void 0 : response.data) === null || _125 === void 0 ? void 0 : _125.stats) === null || _126 === void 0 ? void 0 : _126.AGG_PROGRAMME_BY_STATUS) === null || _127 === void 0 ? void 0 : _127.all) === null || _128 === void 0 ? void 0 : _128.creditUpdateTime)).fromNow());
                        }
                        programmesAggByStatus_1 =
                            (_131 = (_130 = (_129 = response === null || response === void 0 ? void 0 : response.data) === null || _129 === void 0 ? void 0 : _129.stats) === null || _130 === void 0 ? void 0 : _130.AGG_PROGRAMME_BY_STATUS) === null || _131 === void 0 ? void 0 : _131.data;
                        if (((_135 = (_134 = (_133 = (_132 = response === null || response === void 0 ? void 0 : response.data) === null || _132 === void 0 ? void 0 : _132.stats) === null || _133 === void 0 ? void 0 : _133.AGG_PROGRAMME_BY_SECTOR) === null || _134 === void 0 ? void 0 : _134.all) === null || _135 === void 0 ? void 0 : _135.createdTime) &&
                            String((_139 = (_138 = (_137 = (_136 = response === null || response === void 0 ? void 0 : response.data) === null || _136 === void 0 ? void 0 : _136.stats) === null || _137 === void 0 ? void 0 : _137.AGG_PROGRAMME_BY_SECTOR) === null || _138 === void 0 ? void 0 : _138.all) === null || _139 === void 0 ? void 0 : _139.createdTime) !== "0") {
                            setLastUpdateProgrammesSectorStatsCEpoch(parseInt((_143 = (_142 = (_141 = (_140 = response === null || response === void 0 ? void 0 : response.data) === null || _140 === void 0 ? void 0 : _140.stats) === null || _141 === void 0 ? void 0 : _141.AGG_PROGRAMME_BY_SECTOR) === null || _142 === void 0 ? void 0 : _142.all) === null || _143 === void 0 ? void 0 : _143.createdTime));
                            setLastUpdateProgrammesSectorStatsC(moment(parseInt((_147 = (_146 = (_145 = (_144 = response === null || response === void 0 ? void 0 : response.data) === null || _144 === void 0 ? void 0 : _144.stats) === null || _145 === void 0 ? void 0 : _145.AGG_PROGRAMME_BY_SECTOR) === null || _146 === void 0 ? void 0 : _146.all) === null || _147 === void 0 ? void 0 : _147.createdTime)).fromNow());
                        }
                        programmesAggBySector_1 =
                            (_150 = (_149 = (_148 = response === null || response === void 0 ? void 0 : response.data) === null || _148 === void 0 ? void 0 : _148.stats) === null || _149 === void 0 ? void 0 : _149.AGG_PROGRAMME_BY_SECTOR) === null || _150 === void 0 ? void 0 : _150.data;
                        if (((_153 = (_152 = (_151 = response === null || response === void 0 ? void 0 : response.data) === null || _151 === void 0 ? void 0 : _151.stats) === null || _152 === void 0 ? void 0 : _152.CERTIFIED_REVOKED_PROGRAMMES) === null || _153 === void 0 ? void 0 : _153.last) &&
                            String((_156 = (_155 = (_154 = response === null || response === void 0 ? void 0 : response.data) === null || _154 === void 0 ? void 0 : _154.stats) === null || _155 === void 0 ? void 0 : _155.CERTIFIED_REVOKED_PROGRAMMES) === null || _156 === void 0 ? void 0 : _156.last) !==
                                "0") {
                            setLastUpdateTotalCreditsCertifiedEpoch(parseInt((_159 = (_158 = (_157 = response === null || response === void 0 ? void 0 : response.data) === null || _157 === void 0 ? void 0 : _157.stats) === null || _158 === void 0 ? void 0 : _158.CERTIFIED_REVOKED_PROGRAMMES) === null || _159 === void 0 ? void 0 : _159.last));
                            setLastUpdateTotalCreditsCertified(moment(parseInt((_162 = (_161 = (_160 = response === null || response === void 0 ? void 0 : response.data) === null || _160 === void 0 ? void 0 : _160.stats) === null || _161 === void 0 ? void 0 : _161.CERTIFIED_REVOKED_PROGRAMMES) === null || _162 === void 0 ? void 0 : _162.last)).fromNow());
                        }
                        totalCreditsCertifiedStats =
                            (_165 = (_164 = (_163 = response === null || response === void 0 ? void 0 : response.data) === null || _163 === void 0 ? void 0 : _163.stats) === null || _164 === void 0 ? void 0 : _164.CERTIFIED_REVOKED_PROGRAMMES) === null || _165 === void 0 ? void 0 : _165.data;
                        if (((_168 = (_167 = (_166 = response === null || response === void 0 ? void 0 : response.data) === null || _166 === void 0 ? void 0 : _166.stats) === null || _167 === void 0 ? void 0 : _167.ALL_TRANSFER_LOCATION) === null || _168 === void 0 ? void 0 : _168.last) &&
                            String((_171 = (_170 = (_169 = response === null || response === void 0 ? void 0 : response.data) === null || _169 === void 0 ? void 0 : _169.stats) === null || _170 === void 0 ? void 0 : _170.ALL_TRANSFER_LOCATION) === null || _171 === void 0 ? void 0 : _171.last) !== "0") {
                            setLastUpdateTransferLocationsEpoch(parseInt((_174 = (_173 = (_172 = response === null || response === void 0 ? void 0 : response.data) === null || _172 === void 0 ? void 0 : _172.stats) === null || _173 === void 0 ? void 0 : _173.ALL_TRANSFER_LOCATION) === null || _174 === void 0 ? void 0 : _174.last));
                            setLastUpdateTransferLocations(moment(parseInt((_177 = (_176 = (_175 = response === null || response === void 0 ? void 0 : response.data) === null || _175 === void 0 ? void 0 : _175.stats) === null || _176 === void 0 ? void 0 : _176.ALL_TRANSFER_LOCATION) === null || _177 === void 0 ? void 0 : _177.last)).fromNow());
                        }
                        transferLocationsStats =
                            (_180 = (_179 = (_178 = response === null || response === void 0 ? void 0 : response.data) === null || _178 === void 0 ? void 0 : _178.stats) === null || _179 === void 0 ? void 0 : _179.ALL_TRANSFER_LOCATION) === null || _180 === void 0 ? void 0 : _180.data;
                        programmeLocationsStats = (_182 = (_181 = response === null || response === void 0 ? void 0 : response.data) === null || _181 === void 0 ? void 0 : _181.stats) === null || _182 === void 0 ? void 0 : _182.ALL_PROGRAMME_LOCATION;
                    }
                    else {
                        if (((_186 = (_185 = (_184 = (_183 = response === null || response === void 0 ? void 0 : response.data) === null || _183 === void 0 ? void 0 : _183.stats) === null || _184 === void 0 ? void 0 : _184.AGG_PROGRAMME_BY_STATUS) === null || _185 === void 0 ? void 0 : _185.all) === null || _186 === void 0 ? void 0 : _186.creditUpdateTime) &&
                            String((_190 = (_189 = (_188 = (_187 = response === null || response === void 0 ? void 0 : response.data) === null || _187 === void 0 ? void 0 : _187.stats) === null || _188 === void 0 ? void 0 : _188.AGG_PROGRAMME_BY_STATUS) === null || _189 === void 0 ? void 0 : _189.all) === null || _190 === void 0 ? void 0 : _190.creditUpdateTime) !== "0") {
                            setLastUpdateTotalCreditsEpoch(parseInt((_194 = (_193 = (_192 = (_191 = response === null || response === void 0 ? void 0 : response.data) === null || _191 === void 0 ? void 0 : _191.stats) === null || _192 === void 0 ? void 0 : _192.AGG_PROGRAMME_BY_STATUS) === null || _193 === void 0 ? void 0 : _193.all) === null || _194 === void 0 ? void 0 : _194.creditUpdateTime));
                            setLastUpdateTotalCredits(moment(parseInt((_198 = (_197 = (_196 = (_195 = response === null || response === void 0 ? void 0 : response.data) === null || _195 === void 0 ? void 0 : _195.stats) === null || _196 === void 0 ? void 0 : _196.AGG_PROGRAMME_BY_STATUS) === null || _197 === void 0 ? void 0 : _197.all) === null || _198 === void 0 ? void 0 : _198.creditUpdateTime)).fromNow());
                        }
                        programmesAggByStatus_1 =
                            (_201 = (_200 = (_199 = response === null || response === void 0 ? void 0 : response.data) === null || _199 === void 0 ? void 0 : _199.stats) === null || _200 === void 0 ? void 0 : _200.AGG_PROGRAMME_BY_STATUS) === null || _201 === void 0 ? void 0 : _201.data;
                        if (((_205 = (_204 = (_203 = (_202 = response === null || response === void 0 ? void 0 : response.data) === null || _202 === void 0 ? void 0 : _202.stats) === null || _203 === void 0 ? void 0 : _203.AGG_PROGRAMME_BY_SECTOR) === null || _204 === void 0 ? void 0 : _204.all) === null || _205 === void 0 ? void 0 : _205.createdTime) &&
                            String((_209 = (_208 = (_207 = (_206 = response === null || response === void 0 ? void 0 : response.data) === null || _206 === void 0 ? void 0 : _206.stats) === null || _207 === void 0 ? void 0 : _207.AGG_PROGRAMME_BY_SECTOR) === null || _208 === void 0 ? void 0 : _208.all) === null || _209 === void 0 ? void 0 : _209.createdTime) !== "0") {
                            setLastUpdateProgrammesSectorStatsCEpoch(parseInt((_213 = (_212 = (_211 = (_210 = response === null || response === void 0 ? void 0 : response.data) === null || _210 === void 0 ? void 0 : _210.stats) === null || _211 === void 0 ? void 0 : _211.AGG_PROGRAMME_BY_SECTOR) === null || _212 === void 0 ? void 0 : _212.all) === null || _213 === void 0 ? void 0 : _213.createdTime));
                            setLastUpdateProgrammesSectorStatsC(moment(parseInt((_217 = (_216 = (_215 = (_214 = response === null || response === void 0 ? void 0 : response.data) === null || _214 === void 0 ? void 0 : _214.stats) === null || _215 === void 0 ? void 0 : _215.AGG_PROGRAMME_BY_SECTOR) === null || _216 === void 0 ? void 0 : _216.all) === null || _217 === void 0 ? void 0 : _217.createdTime)).fromNow());
                        }
                        programmesAggBySector_1 =
                            (_220 = (_219 = (_218 = response === null || response === void 0 ? void 0 : response.data) === null || _218 === void 0 ? void 0 : _218.stats) === null || _219 === void 0 ? void 0 : _219.AGG_PROGRAMME_BY_SECTOR) === null || _220 === void 0 ? void 0 : _220.data;
                        if (((_223 = (_222 = (_221 = response === null || response === void 0 ? void 0 : response.data) === null || _221 === void 0 ? void 0 : _221.stats) === null || _222 === void 0 ? void 0 : _222.CERTIFIED_REVOKED_PROGRAMMES) === null || _223 === void 0 ? void 0 : _223.last) &&
                            String((_226 = (_225 = (_224 = response === null || response === void 0 ? void 0 : response.data) === null || _224 === void 0 ? void 0 : _224.stats) === null || _225 === void 0 ? void 0 : _225.CERTIFIED_REVOKED_PROGRAMMES) === null || _226 === void 0 ? void 0 : _226.last) !==
                                "0") {
                            setLastUpdateTotalCreditsCertifiedEpoch(parseInt((_229 = (_228 = (_227 = response === null || response === void 0 ? void 0 : response.data) === null || _227 === void 0 ? void 0 : _227.stats) === null || _228 === void 0 ? void 0 : _228.CERTIFIED_REVOKED_PROGRAMMES) === null || _229 === void 0 ? void 0 : _229.last));
                            setLastUpdateTotalCreditsCertified(moment(parseInt((_232 = (_231 = (_230 = response === null || response === void 0 ? void 0 : response.data) === null || _230 === void 0 ? void 0 : _230.stats) === null || _231 === void 0 ? void 0 : _231.CERTIFIED_REVOKED_PROGRAMMES) === null || _232 === void 0 ? void 0 : _232.last)).fromNow());
                        }
                        totalCreditsCertifiedStats =
                            (_235 = (_234 = (_233 = response === null || response === void 0 ? void 0 : response.data) === null || _233 === void 0 ? void 0 : _233.stats) === null || _234 === void 0 ? void 0 : _234.CERTIFIED_REVOKED_PROGRAMMES) === null || _235 === void 0 ? void 0 : _235.data;
                        if (((_238 = (_237 = (_236 = response === null || response === void 0 ? void 0 : response.data) === null || _236 === void 0 ? void 0 : _236.stats) === null || _237 === void 0 ? void 0 : _237.ALL_TRANSFER_LOCATION) === null || _238 === void 0 ? void 0 : _238.last) &&
                            String((_241 = (_240 = (_239 = response === null || response === void 0 ? void 0 : response.data) === null || _239 === void 0 ? void 0 : _239.stats) === null || _240 === void 0 ? void 0 : _240.ALL_TRANSFER_LOCATION) === null || _241 === void 0 ? void 0 : _241.last) !== "0") {
                            setLastUpdateTransferLocationsEpoch(parseInt((_244 = (_243 = (_242 = response === null || response === void 0 ? void 0 : response.data) === null || _242 === void 0 ? void 0 : _242.stats) === null || _243 === void 0 ? void 0 : _243.ALL_TRANSFER_LOCATION) === null || _244 === void 0 ? void 0 : _244.last));
                            setLastUpdateTransferLocations(moment(parseInt((_247 = (_246 = (_245 = response === null || response === void 0 ? void 0 : response.data) === null || _245 === void 0 ? void 0 : _245.stats) === null || _246 === void 0 ? void 0 : _246.ALL_TRANSFER_LOCATION) === null || _247 === void 0 ? void 0 : _247.last)).fromNow());
                        }
                        transferLocationsStats =
                            (_250 = (_249 = (_248 = response === null || response === void 0 ? void 0 : response.data) === null || _248 === void 0 ? void 0 : _248.stats) === null || _249 === void 0 ? void 0 : _249.ALL_TRANSFER_LOCATION) === null || _250 === void 0 ? void 0 : _250.data;
                        programmeLocationsStats = (_252 = (_251 = response === null || response === void 0 ? void 0 : response.data) === null || _251 === void 0 ? void 0 : _251.stats) === null || _252 === void 0 ? void 0 : _252.ALL_PROGRAMME_LOCATION;
                    }
                    timeLabelDataStatus = [];
                    formattedTimeLabelDataStatus = [];
                    timeLabelDataSector = [];
                    formattedTimeLabelDataSector = [];
                    timeLabelCertifiedCreditsStats = [];
                    formattedTimeLabelCertifiedCreditsStats = [];
                    if (programmesAggByStatus_1) {
                        timeLabelDataStatus = programmesAggByStatus_1 === null || programmesAggByStatus_1 === void 0 ? void 0 : programmesAggByStatus_1.timeLabel;
                        formattedTimeLabelDataStatus = timeLabelDataStatus === null || timeLabelDataStatus === void 0 ? void 0 : timeLabelDataStatus.map(function (item) {
                            return moment(new Date(item.substr(0, 16))).format("DD-MM-YYYY");
                        });
                        setTotalProgrammesOptionsLabels(formattedTimeLabelDataStatus);
                        setTotalCreditsOptionsLabels(formattedTimeLabelDataStatus);
                        statusArray = Object.values(exports.ProgrammeStageLegend);
                        totalProgrammesValues_1 = [];
                        statusArray === null || statusArray === void 0 ? void 0 : statusArray.map(function (status) {
                            totalProgrammesValues_1.push({
                                name: status === "AwaitingAuthorization" ? "Pending" : status,
                                data: programmesAggByStatus_1[firstLower(status)],
                            });
                        });
                        setTotalProgrammesSeries(totalProgrammesValues_1);
                        totalProgrammesOptions.xaxis.categories = formattedTimeLabelDataStatus;
                        totalCreditsValues = [
                            {
                                name: "Authorised",
                                data: programmesAggByStatus_1 === null || programmesAggByStatus_1 === void 0 ? void 0 : programmesAggByStatus_1.authorisedCredits,
                            },
                            {
                                name: "Issued",
                                data: programmesAggByStatus_1 === null || programmesAggByStatus_1 === void 0 ? void 0 : programmesAggByStatus_1.issuedCredits,
                            },
                            {
                                name: "Transferred",
                                data: programmesAggByStatus_1 === null || programmesAggByStatus_1 === void 0 ? void 0 : programmesAggByStatus_1.transferredCredits,
                            },
                            {
                                name: "Retired",
                                data: programmesAggByStatus_1 === null || programmesAggByStatus_1 === void 0 ? void 0 : programmesAggByStatus_1.retiredCredits,
                            },
                            {
                                name: "Frozen",
                                data: programmesAggByStatus_1 === null || programmesAggByStatus_1 === void 0 ? void 0 : programmesAggByStatus_1.frozenCredits,
                            },
                        ];
                        setTotalCreditsSeries(totalCreditsValues);
                        totalCreditsOptions.xaxis.categories = formattedTimeLabelDataStatus;
                    }
                    if (programmesAggBySector_1) {
                        timeLabelDataSector = programmesAggByStatus_1 === null || programmesAggByStatus_1 === void 0 ? void 0 : programmesAggByStatus_1.timeLabel;
                        formattedTimeLabelDataSector = timeLabelDataSector === null || timeLabelDataSector === void 0 ? void 0 : timeLabelDataSector.map(function (item) {
                            return moment(new Date(item.substr(0, 16))).format("DD-MM-YYYY");
                        });
                        setTotalProgrammesSectorOptionsLabels(formattedTimeLabelDataSector);
                        progarmmesSectorSeriesData_1 = [];
                        sectorsArray = Object.values(exports.Sector);
                        sectorsArray === null || sectorsArray === void 0 ? void 0 : sectorsArray.map(function (sector) {
                            if (programmesAggBySector_1[firstLower(sector)] !== undefined) {
                                progarmmesSectorSeriesData_1.push({
                                    name: sector,
                                    data: programmesAggBySector_1[firstLower(sector)],
                                });
                            }
                        });
                        setTotalProgrammesSectorSeries(progarmmesSectorSeriesData_1);
                        totalProgrammesOptionsSub.xaxis.categories =
                            formattedTimeLabelDataSector;
                    }
                    if (totalCreditsCertifiedStats) {
                        timeLabelCertifiedCreditsStats = totalCreditsCertifiedStats === null || totalCreditsCertifiedStats === void 0 ? void 0 : totalCreditsCertifiedStats.timeLabel;
                        formattedTimeLabelCertifiedCreditsStats =
                            timeLabelCertifiedCreditsStats === null || timeLabelCertifiedCreditsStats === void 0 ? void 0 : timeLabelCertifiedCreditsStats.map(function (item) {
                                return moment(new Date(item.substr(0, 16))).format("DD-MM-YYYY");
                            });
                        totalCertifiedCreditsSeriesValues = [
                            {
                                name: "Certified",
                                data: totalCreditsCertifiedStats === null || totalCreditsCertifiedStats === void 0 ? void 0 : totalCreditsCertifiedStats.certifiedSum,
                            },
                            {
                                name: "Uncertified",
                                data: totalCreditsCertifiedStats === null || totalCreditsCertifiedStats === void 0 ? void 0 : totalCreditsCertifiedStats.uncertifiedSum,
                            },
                            {
                                name: "Revoked",
                                data: totalCreditsCertifiedStats === null || totalCreditsCertifiedStats === void 0 ? void 0 : totalCreditsCertifiedStats.revokedSum,
                            },
                        ];
                        setTotalCertifiedCreditsSeries(totalCertifiedCreditsSeriesValues);
                        setTotalCertifiedCreditsOptionsLabels(formattedTimeLabelCertifiedCreditsStats);
                        totalCreditsCertifiedOptions.xaxis.categories =
                            formattedTimeLabelCertifiedCreditsStats;
                    }
                    if (transferLocationsStats) {
                        setProgrammeTransferLocations(transferLocationsStats);
                    }
                    if (programmeLocationsStats) {
                        setProgrammeLocations(programmeLocationsStats);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _253.sent();
                    console.log("Error in getting users", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingCharts(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getAllProgrammeAnalyticsStatsWithoutTimeRange = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, programmeByStatusAggregationResponse, pendingTransferInitAggregationResponse, pendingTransferReceivedAggregationResponse, myCreditAggregationResponse, certifiedByMeAggregationResponse, unCertifiedByMeAggregationResponse, error_2;
        var _a, _b, _c, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76;
        return __generator(this, function (_77) {
            switch (_77.label) {
                case 0:
                    setLoadingWithoutTimeRange(true);
                    _77.label = 1;
                case 1:
                    _77.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("stats/programme/agg", getAllProgrammeAnalyticsStatsParamsWithoutTimeRange(), undefined, statServerUrl)];
                case 2:
                    response = _77.sent();
                    programmeByStatusAggregationResponse = (_c = (_b = (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.stats) === null || _b === void 0 ? void 0 : _b.AGG_PROGRAMME_BY_STATUS) === null || _c === void 0 ? void 0 : _c.data;
                    pendingTransferInitAggregationResponse = (_g = (_f = (_e = response === null || response === void 0 ? void 0 : response.data) === null || _e === void 0 ? void 0 : _e.stats) === null || _f === void 0 ? void 0 : _f.PENDING_TRANSFER_INIT) === null || _g === void 0 ? void 0 : _g.data;
                    pendingTransferReceivedAggregationResponse = (_k = (_j = (_h = response === null || response === void 0 ? void 0 : response.data) === null || _h === void 0 ? void 0 : _h.stats) === null || _j === void 0 ? void 0 : _j.PENDING_TRANSFER_RECV) === null || _k === void 0 ? void 0 : _k.data;
                    myCreditAggregationResponse = (_o = (_m = (_l = response === null || response === void 0 ? void 0 : response.data) === null || _l === void 0 ? void 0 : _l.stats) === null || _m === void 0 ? void 0 : _m.MY_CREDIT) === null || _o === void 0 ? void 0 : _o.data;
                    certifiedByMeAggregationResponse = (_r = (_q = (_p = response === null || response === void 0 ? void 0 : response.data) === null || _p === void 0 ? void 0 : _p.stats) === null || _q === void 0 ? void 0 : _q.CERTIFIED_BY_ME) === null || _r === void 0 ? void 0 : _r.data[0];
                    unCertifiedByMeAggregationResponse = (_u = (_t = (_s = response === null || response === void 0 ? void 0 : response.data) === null || _s === void 0 ? void 0 : _s.stats) === null || _t === void 0 ? void 0 : _t.UNCERTIFIED_BY_ME) === null || _u === void 0 ? void 0 : _u.data;
                    programmeByStatusAggregationResponse === null || programmeByStatusAggregationResponse === void 0 ? void 0 : programmeByStatusAggregationResponse.map(function (responseItem, index) {
                        if ((responseItem === null || responseItem === void 0 ? void 0 : responseItem.currentStage) === "AwaitingAuthorization") {
                            setPendingProjectsWithoutTimeRange(parseInt(responseItem === null || responseItem === void 0 ? void 0 : responseItem.count));
                        }
                    });
                    if (pendingTransferInitAggregationResponse) {
                        setTransferRequestSent(parseInt((_v = pendingTransferInitAggregationResponse[0]) === null || _v === void 0 ? void 0 : _v.count));
                    }
                    if (myCreditAggregationResponse) {
                        setCreditBalanceWithoutTimeRange(myCreditAggregationResponse === null || myCreditAggregationResponse === void 0 ? void 0 : myCreditAggregationResponse.primary);
                    }
                    if (pendingTransferReceivedAggregationResponse) {
                        setTransferRequestReceived(parseInt((_w = pendingTransferReceivedAggregationResponse[0]) === null || _w === void 0 ? void 0 : _w.count));
                    }
                    if (certifiedByMeAggregationResponse) {
                        setProgrammesCertifed(parseInt(certifiedByMeAggregationResponse === null || certifiedByMeAggregationResponse === void 0 ? void 0 : certifiedByMeAggregationResponse.count));
                        setCreditCertifiedBalanceWithoutTimeRange((certifiedByMeAggregationResponse === null || certifiedByMeAggregationResponse === void 0 ? void 0 : certifiedByMeAggregationResponse.certifiedSum) === null
                            ? 0
                            : parseFloat(certifiedByMeAggregationResponse === null || certifiedByMeAggregationResponse === void 0 ? void 0 : certifiedByMeAggregationResponse.sum));
                    }
                    if (unCertifiedByMeAggregationResponse) {
                        setProgrammesUnCertifed(parseInt(unCertifiedByMeAggregationResponse === null || unCertifiedByMeAggregationResponse === void 0 ? void 0 : unCertifiedByMeAggregationResponse.uncertifiedCount));
                    }
                    if (((_0 = (_z = (_y = (_x = response === null || response === void 0 ? void 0 : response.data) === null || _x === void 0 ? void 0 : _x.stats) === null || _y === void 0 ? void 0 : _y.AGG_PROGRAMME_BY_STATUS) === null || _z === void 0 ? void 0 : _z.all) === null || _0 === void 0 ? void 0 : _0.statusUpdateTime) &&
                        String((_4 = (_3 = (_2 = (_1 = response === null || response === void 0 ? void 0 : response.data) === null || _1 === void 0 ? void 0 : _1.stats) === null || _2 === void 0 ? void 0 : _2.AGG_PROGRAMME_BY_STATUS) === null || _3 === void 0 ? void 0 : _3.all) === null || _4 === void 0 ? void 0 : _4.statusUpdateTime) !== "0") {
                        setLastUpdateProgrammesStatsEpoch(parseInt((_8 = (_7 = (_6 = (_5 = response === null || response === void 0 ? void 0 : response.data) === null || _5 === void 0 ? void 0 : _5.stats) === null || _6 === void 0 ? void 0 : _6.AGG_PROGRAMME_BY_STATUS) === null || _7 === void 0 ? void 0 : _7.all) === null || _8 === void 0 ? void 0 : _8.statusUpdateTime));
                        setLastUpdateProgrammesStats(moment(parseInt((_12 = (_11 = (_10 = (_9 = response === null || response === void 0 ? void 0 : response.data) === null || _9 === void 0 ? void 0 : _9.stats) === null || _10 === void 0 ? void 0 : _10.AGG_PROGRAMME_BY_STATUS) === null || _11 === void 0 ? void 0 : _11.all) === null || _12 === void 0 ? void 0 : _12.statusUpdateTime)).fromNow());
                    }
                    if (((_16 = (_15 = (_14 = (_13 = response === null || response === void 0 ? void 0 : response.data) === null || _13 === void 0 ? void 0 : _13.stats) === null || _14 === void 0 ? void 0 : _14.PENDING_TRANSFER_INIT) === null || _15 === void 0 ? void 0 : _15.all) === null || _16 === void 0 ? void 0 : _16.txTime) &&
                        String((_20 = (_19 = (_18 = (_17 = response === null || response === void 0 ? void 0 : response.data) === null || _17 === void 0 ? void 0 : _17.stats) === null || _18 === void 0 ? void 0 : _18.PENDING_TRANSFER_INIT) === null || _19 === void 0 ? void 0 : _19.all) === null || _20 === void 0 ? void 0 : _20.txTime) !==
                            "0") {
                        setLastUpdatePendingTransferSentEpoch(parseInt((_24 = (_23 = (_22 = (_21 = response === null || response === void 0 ? void 0 : response.data) === null || _21 === void 0 ? void 0 : _21.stats) === null || _22 === void 0 ? void 0 : _22.PENDING_TRANSFER_INIT) === null || _23 === void 0 ? void 0 : _23.all) === null || _24 === void 0 ? void 0 : _24.txTime));
                        setLastUpdatePendingTransferSent(moment(parseInt((_28 = (_27 = (_26 = (_25 = response === null || response === void 0 ? void 0 : response.data) === null || _25 === void 0 ? void 0 : _25.stats) === null || _26 === void 0 ? void 0 : _26.PENDING_TRANSFER_INIT) === null || _27 === void 0 ? void 0 : _27.all) === null || _28 === void 0 ? void 0 : _28.txTime)).fromNow());
                    }
                    if (((_31 = (_30 = (_29 = response === null || response === void 0 ? void 0 : response.data) === null || _29 === void 0 ? void 0 : _29.stats) === null || _30 === void 0 ? void 0 : _30.MY_CREDIT) === null || _31 === void 0 ? void 0 : _31.last) &&
                        String((_34 = (_33 = (_32 = response === null || response === void 0 ? void 0 : response.data) === null || _32 === void 0 ? void 0 : _32.stats) === null || _33 === void 0 ? void 0 : _33.MY_CREDIT) === null || _34 === void 0 ? void 0 : _34.last) !== "0") {
                        setLastUpdateCreditBalanceEpoch(parseInt((_37 = (_36 = (_35 = response === null || response === void 0 ? void 0 : response.data) === null || _35 === void 0 ? void 0 : _35.stats) === null || _36 === void 0 ? void 0 : _36.MY_CREDIT) === null || _37 === void 0 ? void 0 : _37.last));
                        setLastUpdateCreditBalance(moment(parseInt((_40 = (_39 = (_38 = response === null || response === void 0 ? void 0 : response.data) === null || _38 === void 0 ? void 0 : _38.stats) === null || _39 === void 0 ? void 0 : _39.MY_CREDIT) === null || _40 === void 0 ? void 0 : _40.last)).fromNow());
                    }
                    if (((_43 = (_42 = (_41 = response === null || response === void 0 ? void 0 : response.data) === null || _41 === void 0 ? void 0 : _41.stats) === null || _42 === void 0 ? void 0 : _42.UNCERTIFIED_BY_ME) === null || _43 === void 0 ? void 0 : _43.last) &&
                        String((_46 = (_45 = (_44 = response === null || response === void 0 ? void 0 : response.data) === null || _44 === void 0 ? void 0 : _44.stats) === null || _45 === void 0 ? void 0 : _45.UNCERTIFIED_BY_ME) === null || _46 === void 0 ? void 0 : _46.last) !== "0") {
                        setLastUpdateProgrammesCertifiableEpoch(parseInt((_49 = (_48 = (_47 = response === null || response === void 0 ? void 0 : response.data) === null || _47 === void 0 ? void 0 : _47.stats) === null || _48 === void 0 ? void 0 : _48.UNCERTIFIED_BY_ME) === null || _49 === void 0 ? void 0 : _49.last));
                        setLastUpdateProgrammesCertifiable(moment(parseInt((_52 = (_51 = (_50 = response === null || response === void 0 ? void 0 : response.data) === null || _50 === void 0 ? void 0 : _50.stats) === null || _51 === void 0 ? void 0 : _51.UNCERTIFIED_BY_ME) === null || _52 === void 0 ? void 0 : _52.last)).fromNow());
                    }
                    if (((_55 = (_54 = (_53 = response === null || response === void 0 ? void 0 : response.data) === null || _53 === void 0 ? void 0 : _53.stats) === null || _54 === void 0 ? void 0 : _54.CERTIFIED_BY_ME) === null || _55 === void 0 ? void 0 : _55.last) &&
                        String((_58 = (_57 = (_56 = response === null || response === void 0 ? void 0 : response.data) === null || _56 === void 0 ? void 0 : _56.stats) === null || _57 === void 0 ? void 0 : _57.CERTIFIED_BY_ME) === null || _58 === void 0 ? void 0 : _58.last) !== "0") {
                        setLastUpdateProgrammesCertifiedEpoch(parseInt((_61 = (_60 = (_59 = response === null || response === void 0 ? void 0 : response.data) === null || _59 === void 0 ? void 0 : _59.stats) === null || _60 === void 0 ? void 0 : _60.CERTIFIED_BY_ME) === null || _61 === void 0 ? void 0 : _61.last));
                        setLastUpdateProgrammesCertified(moment(parseInt((_64 = (_63 = (_62 = response === null || response === void 0 ? void 0 : response.data) === null || _62 === void 0 ? void 0 : _62.stats) === null || _63 === void 0 ? void 0 : _63.CERTIFIED_BY_ME) === null || _64 === void 0 ? void 0 : _64.last)).fromNow());
                    }
                    if (((_67 = (_66 = (_65 = response === null || response === void 0 ? void 0 : response.data) === null || _65 === void 0 ? void 0 : _65.stats) === null || _66 === void 0 ? void 0 : _66.PENDING_TRANSFER_RECV) === null || _67 === void 0 ? void 0 : _67.last) &&
                        String((_70 = (_69 = (_68 = response === null || response === void 0 ? void 0 : response.data) === null || _68 === void 0 ? void 0 : _68.stats) === null || _69 === void 0 ? void 0 : _69.PENDING_TRANSFER_RECV) === null || _70 === void 0 ? void 0 : _70.last) !== "0") {
                        setLastUpdatePendingTransferReceivedEpoch(parseInt((_73 = (_72 = (_71 = response === null || response === void 0 ? void 0 : response.data) === null || _71 === void 0 ? void 0 : _71.stats) === null || _72 === void 0 ? void 0 : _72.PENDING_TRANSFER_RECV) === null || _73 === void 0 ? void 0 : _73.last));
                        setLastUpdatePendingTransferReceived(moment(parseInt((_76 = (_75 = (_74 = response === null || response === void 0 ? void 0 : response.data) === null || _74 === void 0 ? void 0 : _74.stats) === null || _75 === void 0 ? void 0 : _75.PENDING_TRANSFER_RECV) === null || _76 === void 0 ? void 0 : _76.last)).fromNow());
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_2 = _77.sent();
                    console.log("Error in getting users", error_2);
                    antd.message.open({
                        type: "error",
                        content: error_2.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingWithoutTimeRange(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getAllProgrammeAnalyticsStats = function () { return __awaiter(void 0, void 0, void 0, function () {
        var pieSeriesCreditsData, pieSeriesCreditsCerifiedData, response, programmeByStatusAggregationResponse_1, programmeByStatusAuthAggregationResponse, certifiedRevokedAggregationResponse, totalProgrammes_1, totalEstCredits_1, totalIssuedCredits_1, totalRetiredCredits_1, totalBalancecredit_1, totalTxCredits_1, totalFrozenCredits_1, totalCertifiedCredit, totalUnCertifiedredit, totalRevokedCredits, pendingProgrammesC_1, authorisedProgrammesC_1, rejectedProgrammesC_1, creditAuthorized, creditIssued, totalCreditsCertified_1, error_3;
        var _a, _b, _c, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126, _127, _128, _129, _130, _131, _132, _133, _134, _135, _136, _137, _138, _139, _140, _141, _142, _143, _144, _145, _146, _147, _148, _149, _150, _151, _152, _153, _154, _155, _156, _157, _158, _159, _160, _161, _162, _163, _164, _165, _166, _167, _168, _169, _170, _171, _172, _173, _174, _175, _176, _177, _178, _179, _180, _181, _182, _183, _184, _185, _186, _187;
        return __generator(this, function (_188) {
            switch (_188.label) {
                case 0:
                    setLoading(true);
                    pieSeriesCreditsData = [];
                    pieSeriesCreditsCerifiedData = [];
                    _188.label = 1;
                case 1:
                    _188.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("stats/programme/agg", getAllProgrammeAnalyticsStatsParams(), undefined, statServerUrl)];
                case 2:
                    response = _188.sent();
                    programmeByStatusAuthAggregationResponse = void 0;
                    certifiedRevokedAggregationResponse = void 0;
                    if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER) {
                        if (((_e = (_c = (_b = (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.stats) === null || _b === void 0 ? void 0 : _b.MY_AGG_PROGRAMME_BY_STATUS) === null || _c === void 0 ? void 0 : _c.all) === null || _e === void 0 ? void 0 : _e.statusUpdateTime) &&
                            String((_j = (_h = (_g = (_f = response === null || response === void 0 ? void 0 : response.data) === null || _f === void 0 ? void 0 : _f.stats) === null || _g === void 0 ? void 0 : _g.MY_AGG_PROGRAMME_BY_STATUS) === null || _h === void 0 ? void 0 : _h.all) === null || _j === void 0 ? void 0 : _j.statusUpdateTime) !== "0") {
                            setLastUpdateProgrammesStatsCEpoch(parseInt((_o = (_m = (_l = (_k = response === null || response === void 0 ? void 0 : response.data) === null || _k === void 0 ? void 0 : _k.stats) === null || _l === void 0 ? void 0 : _l.MY_AGG_PROGRAMME_BY_STATUS) === null || _m === void 0 ? void 0 : _m.all) === null || _o === void 0 ? void 0 : _o.statusUpdateTime));
                            setLastUpdateProgrammesStatsC(moment(parseInt((_s = (_r = (_q = (_p = response === null || response === void 0 ? void 0 : response.data) === null || _p === void 0 ? void 0 : _p.stats) === null || _q === void 0 ? void 0 : _q.MY_AGG_PROGRAMME_BY_STATUS) === null || _r === void 0 ? void 0 : _r.all) === null || _s === void 0 ? void 0 : _s.statusUpdateTime)).fromNow());
                        }
                        programmeByStatusAggregationResponse_1 =
                            (_v = (_u = (_t = response === null || response === void 0 ? void 0 : response.data) === null || _t === void 0 ? void 0 : _t.stats) === null || _u === void 0 ? void 0 : _u.MY_AGG_PROGRAMME_BY_STATUS) === null || _v === void 0 ? void 0 : _v.data;
                        if (((_z = (_y = (_x = (_w = response === null || response === void 0 ? void 0 : response.data) === null || _w === void 0 ? void 0 : _w.stats) === null || _x === void 0 ? void 0 : _x.MY_AGG_AUTH_PROGRAMME_BY_STATUS) === null || _y === void 0 ? void 0 : _y.all) === null || _z === void 0 ? void 0 : _z.creditUpdateTime) &&
                            String((_3 = (_2 = (_1 = (_0 = response === null || response === void 0 ? void 0 : response.data) === null || _0 === void 0 ? void 0 : _0.stats) === null || _1 === void 0 ? void 0 : _1.MY_AGG_AUTH_PROGRAMME_BY_STATUS) === null || _2 === void 0 ? void 0 : _2.all) === null || _3 === void 0 ? void 0 : _3.creditUpdateTime) !== "0") {
                            setLastUpdateProgrammesCreditsStatsEpoch(parseInt((_7 = (_6 = (_5 = (_4 = response === null || response === void 0 ? void 0 : response.data) === null || _4 === void 0 ? void 0 : _4.stats) === null || _5 === void 0 ? void 0 : _5.MY_AGG_AUTH_PROGRAMME_BY_STATUS) === null || _6 === void 0 ? void 0 : _6.all) === null || _7 === void 0 ? void 0 : _7.creditUpdateTime));
                            setLastUpdateProgrammesCreditsStats(moment(parseInt((_11 = (_10 = (_9 = (_8 = response === null || response === void 0 ? void 0 : response.data) === null || _8 === void 0 ? void 0 : _8.stats) === null || _9 === void 0 ? void 0 : _9.MY_AGG_AUTH_PROGRAMME_BY_STATUS) === null || _10 === void 0 ? void 0 : _10.all) === null || _11 === void 0 ? void 0 : _11.creditUpdateTime)).fromNow());
                        }
                        programmeByStatusAuthAggregationResponse =
                            (_14 = (_13 = (_12 = response === null || response === void 0 ? void 0 : response.data) === null || _12 === void 0 ? void 0 : _12.stats) === null || _13 === void 0 ? void 0 : _13.MY_AGG_AUTH_PROGRAMME_BY_STATUS) === null || _14 === void 0 ? void 0 : _14.data;
                        if (((_17 = (_16 = (_15 = response === null || response === void 0 ? void 0 : response.data) === null || _15 === void 0 ? void 0 : _15.stats) === null || _16 === void 0 ? void 0 : _16.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _17 === void 0 ? void 0 : _17.last) &&
                            String((_20 = (_19 = (_18 = response === null || response === void 0 ? void 0 : response.data) === null || _18 === void 0 ? void 0 : _18.stats) === null || _19 === void 0 ? void 0 : _19.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _20 === void 0 ? void 0 : _20.last) !== "0") {
                            setLastUpdateCertifiedCreditsStatsEpoch(parseInt((_23 = (_22 = (_21 = response === null || response === void 0 ? void 0 : response.data) === null || _21 === void 0 ? void 0 : _21.stats) === null || _22 === void 0 ? void 0 : _22.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _23 === void 0 ? void 0 : _23.last));
                            setLastUpdateCertifiedCreditsStats(moment(parseInt((_26 = (_25 = (_24 = response === null || response === void 0 ? void 0 : response.data) === null || _24 === void 0 ? void 0 : _24.stats) === null || _25 === void 0 ? void 0 : _25.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _26 === void 0 ? void 0 : _26.last)).fromNow());
                        }
                        certifiedRevokedAggregationResponse =
                            (_29 = (_28 = (_27 = response === null || response === void 0 ? void 0 : response.data) === null || _27 === void 0 ? void 0 : _27.stats) === null || _28 === void 0 ? void 0 : _28.MY_CERTIFIED_REVOKED_PROGRAMMES) === null || _29 === void 0 ? void 0 : _29.data;
                    }
                    else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER &&
                        categoryType === "mine") {
                        if (((_33 = (_32 = (_31 = (_30 = response === null || response === void 0 ? void 0 : response.data) === null || _30 === void 0 ? void 0 : _30.stats) === null || _31 === void 0 ? void 0 : _31.CERTIFIED_BY_ME_BY_STATE) === null || _32 === void 0 ? void 0 : _32.all) === null || _33 === void 0 ? void 0 : _33.certifiedTime) &&
                            String((_37 = (_36 = (_35 = (_34 = response === null || response === void 0 ? void 0 : response.data) === null || _34 === void 0 ? void 0 : _34.stats) === null || _35 === void 0 ? void 0 : _35.CERTIFIED_BY_ME_BY_STATE) === null || _36 === void 0 ? void 0 : _36.all) === null || _37 === void 0 ? void 0 : _37.certifiedTime) !== "0") {
                            setLastUpdateProgrammesStatsCEpoch(parseInt((_41 = (_40 = (_39 = (_38 = response === null || response === void 0 ? void 0 : response.data) === null || _38 === void 0 ? void 0 : _38.stats) === null || _39 === void 0 ? void 0 : _39.CERTIFIED_BY_ME_BY_STATE) === null || _40 === void 0 ? void 0 : _40.all) === null || _41 === void 0 ? void 0 : _41.certifiedTime));
                            setLastUpdateProgrammesStatsC(moment(parseInt((_45 = (_44 = (_43 = (_42 = response === null || response === void 0 ? void 0 : response.data) === null || _42 === void 0 ? void 0 : _42.stats) === null || _43 === void 0 ? void 0 : _43.CERTIFIED_BY_ME_BY_STATE) === null || _44 === void 0 ? void 0 : _44.all) === null || _45 === void 0 ? void 0 : _45.certifiedTime)).fromNow());
                        }
                        else {
                            setLastUpdateProgrammesStatsCEpoch(0);
                            setLastUpdateProgrammesStatsC("0");
                        }
                        programmeByStatusAggregationResponse_1 =
                            (_48 = (_47 = (_46 = response === null || response === void 0 ? void 0 : response.data) === null || _46 === void 0 ? void 0 : _46.stats) === null || _47 === void 0 ? void 0 : _47.CERTIFIED_BY_ME_BY_STATE) === null || _48 === void 0 ? void 0 : _48.data;
                        if (((_51 = (_50 = (_49 = response === null || response === void 0 ? void 0 : response.data) === null || _49 === void 0 ? void 0 : _49.stats) === null || _50 === void 0 ? void 0 : _50.AUTH_CERTIFIED_BY_ME_BY_STATE) === null || _51 === void 0 ? void 0 : _51.last) &&
                            String((_54 = (_53 = (_52 = response === null || response === void 0 ? void 0 : response.data) === null || _52 === void 0 ? void 0 : _52.stats) === null || _53 === void 0 ? void 0 : _53.AUTH_CERTIFIED_BY_ME_BY_STATE) === null || _54 === void 0 ? void 0 : _54.last) !==
                                "0") {
                            setLastUpdateProgrammesCreditsStatsEpoch(parseInt((_57 = (_56 = (_55 = response === null || response === void 0 ? void 0 : response.data) === null || _55 === void 0 ? void 0 : _55.stats) === null || _56 === void 0 ? void 0 : _56.AUTH_CERTIFIED_BY_ME_BY_STATE) === null || _57 === void 0 ? void 0 : _57.last));
                            setLastUpdateProgrammesCreditsStats(moment(parseInt((_60 = (_59 = (_58 = response === null || response === void 0 ? void 0 : response.data) === null || _58 === void 0 ? void 0 : _58.stats) === null || _59 === void 0 ? void 0 : _59.AUTH_CERTIFIED_BY_ME_BY_STATE) === null || _60 === void 0 ? void 0 : _60.last)).fromNow());
                        }
                        else {
                            setLastUpdateProgrammesCreditsStatsEpoch(0);
                            setLastUpdateProgrammesCreditsStats("0");
                        }
                        programmeByStatusAuthAggregationResponse =
                            (_63 = (_62 = (_61 = response === null || response === void 0 ? void 0 : response.data) === null || _61 === void 0 ? void 0 : _61.stats) === null || _62 === void 0 ? void 0 : _62.AUTH_CERTIFIED_BY_ME_BY_STATE) === null || _63 === void 0 ? void 0 : _63.data;
                        if (((_66 = (_65 = (_64 = response === null || response === void 0 ? void 0 : response.data) === null || _64 === void 0 ? void 0 : _64.stats) === null || _65 === void 0 ? void 0 : _65.CERTIFIED_REVOKED_BY_ME) === null || _66 === void 0 ? void 0 : _66.last) &&
                            String((_69 = (_68 = (_67 = response === null || response === void 0 ? void 0 : response.data) === null || _67 === void 0 ? void 0 : _67.stats) === null || _68 === void 0 ? void 0 : _68.CERTIFIED_REVOKED_BY_ME) === null || _69 === void 0 ? void 0 : _69.last) !== "0") {
                            setLastUpdateCertifiedCreditsStatsEpoch(parseInt((_72 = (_71 = (_70 = response === null || response === void 0 ? void 0 : response.data) === null || _70 === void 0 ? void 0 : _70.stats) === null || _71 === void 0 ? void 0 : _71.CERTIFIED_REVOKED_BY_ME) === null || _72 === void 0 ? void 0 : _72.last));
                            setLastUpdateCertifiedCreditsStats(moment(parseInt((_75 = (_74 = (_73 = response === null || response === void 0 ? void 0 : response.data) === null || _73 === void 0 ? void 0 : _73.stats) === null || _74 === void 0 ? void 0 : _74.CERTIFIED_REVOKED_BY_ME) === null || _75 === void 0 ? void 0 : _75.last)).fromNow());
                        }
                        else {
                            setLastUpdateCertifiedCreditsStatsEpoch(0);
                            setLastUpdateCertifiedCreditsStats("0");
                        }
                        certifiedRevokedAggregationResponse =
                            (_78 = (_77 = (_76 = response === null || response === void 0 ? void 0 : response.data) === null || _76 === void 0 ? void 0 : _76.stats) === null || _77 === void 0 ? void 0 : _77.CERTIFIED_REVOKED_BY_ME) === null || _78 === void 0 ? void 0 : _78.data;
                    }
                    else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER &&
                        categoryType === "overall") {
                        if (((_82 = (_81 = (_80 = (_79 = response === null || response === void 0 ? void 0 : response.data) === null || _79 === void 0 ? void 0 : _79.stats) === null || _80 === void 0 ? void 0 : _80.AGG_PROGRAMME_BY_STATUS) === null || _81 === void 0 ? void 0 : _81.all) === null || _82 === void 0 ? void 0 : _82.statusUpdateTime) &&
                            String((_86 = (_85 = (_84 = (_83 = response === null || response === void 0 ? void 0 : response.data) === null || _83 === void 0 ? void 0 : _83.stats) === null || _84 === void 0 ? void 0 : _84.AGG_PROGRAMME_BY_STATUS) === null || _85 === void 0 ? void 0 : _85.all) === null || _86 === void 0 ? void 0 : _86.statusUpdateTime) !== "0") {
                            setLastUpdateProgrammesStatsCEpoch(parseInt((_90 = (_89 = (_88 = (_87 = response === null || response === void 0 ? void 0 : response.data) === null || _87 === void 0 ? void 0 : _87.stats) === null || _88 === void 0 ? void 0 : _88.AGG_PROGRAMME_BY_STATUS) === null || _89 === void 0 ? void 0 : _89.all) === null || _90 === void 0 ? void 0 : _90.statusUpdateTime));
                            setLastUpdateProgrammesStatsC(moment(parseInt((_94 = (_93 = (_92 = (_91 = response === null || response === void 0 ? void 0 : response.data) === null || _91 === void 0 ? void 0 : _91.stats) === null || _92 === void 0 ? void 0 : _92.AGG_PROGRAMME_BY_STATUS) === null || _93 === void 0 ? void 0 : _93.all) === null || _94 === void 0 ? void 0 : _94.statusUpdateTime)).fromNow());
                        }
                        programmeByStatusAggregationResponse_1 =
                            (_97 = (_96 = (_95 = response === null || response === void 0 ? void 0 : response.data) === null || _95 === void 0 ? void 0 : _95.stats) === null || _96 === void 0 ? void 0 : _96.AGG_PROGRAMME_BY_STATUS) === null || _97 === void 0 ? void 0 : _97.data;
                        if (((_101 = (_100 = (_99 = (_98 = response === null || response === void 0 ? void 0 : response.data) === null || _98 === void 0 ? void 0 : _98.stats) === null || _99 === void 0 ? void 0 : _99.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _100 === void 0 ? void 0 : _100.all) === null || _101 === void 0 ? void 0 : _101.creditUpdateTime) &&
                            String((_105 = (_104 = (_103 = (_102 = response === null || response === void 0 ? void 0 : response.data) === null || _102 === void 0 ? void 0 : _102.stats) === null || _103 === void 0 ? void 0 : _103.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _104 === void 0 ? void 0 : _104.all) === null || _105 === void 0 ? void 0 : _105.creditUpdateTime) !== "0") {
                            setLastUpdateProgrammesCreditsStatsEpoch(parseInt((_109 = (_108 = (_107 = (_106 = response === null || response === void 0 ? void 0 : response.data) === null || _106 === void 0 ? void 0 : _106.stats) === null || _107 === void 0 ? void 0 : _107.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _108 === void 0 ? void 0 : _108.all) === null || _109 === void 0 ? void 0 : _109.creditUpdateTime));
                            setLastUpdateProgrammesCreditsStats(moment(parseInt((_113 = (_112 = (_111 = (_110 = response === null || response === void 0 ? void 0 : response.data) === null || _110 === void 0 ? void 0 : _110.stats) === null || _111 === void 0 ? void 0 : _111.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _112 === void 0 ? void 0 : _112.all) === null || _113 === void 0 ? void 0 : _113.creditUpdateTime)).fromNow());
                        }
                        programmeByStatusAuthAggregationResponse =
                            (_116 = (_115 = (_114 = response === null || response === void 0 ? void 0 : response.data) === null || _114 === void 0 ? void 0 : _114.stats) === null || _115 === void 0 ? void 0 : _115.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _116 === void 0 ? void 0 : _116.data;
                        if (((_119 = (_118 = (_117 = response === null || response === void 0 ? void 0 : response.data) === null || _117 === void 0 ? void 0 : _117.stats) === null || _118 === void 0 ? void 0 : _118.CERTIFIED_REVOKED_PROGRAMMES) === null || _119 === void 0 ? void 0 : _119.last) &&
                            String((_122 = (_121 = (_120 = response === null || response === void 0 ? void 0 : response.data) === null || _120 === void 0 ? void 0 : _120.stats) === null || _121 === void 0 ? void 0 : _121.CERTIFIED_REVOKED_PROGRAMMES) === null || _122 === void 0 ? void 0 : _122.last) !==
                                "0") {
                            setLastUpdateCertifiedCreditsStatsEpoch(parseInt((_125 = (_124 = (_123 = response === null || response === void 0 ? void 0 : response.data) === null || _123 === void 0 ? void 0 : _123.stats) === null || _124 === void 0 ? void 0 : _124.CERTIFIED_REVOKED_PROGRAMMES) === null || _125 === void 0 ? void 0 : _125.last));
                            setLastUpdateCertifiedCreditsStats(moment(parseInt((_128 = (_127 = (_126 = response === null || response === void 0 ? void 0 : response.data) === null || _126 === void 0 ? void 0 : _126.stats) === null || _127 === void 0 ? void 0 : _127.CERTIFIED_REVOKED_PROGRAMMES) === null || _128 === void 0 ? void 0 : _128.last)).fromNow());
                        }
                        certifiedRevokedAggregationResponse =
                            (_131 = (_130 = (_129 = response === null || response === void 0 ? void 0 : response.data) === null || _129 === void 0 ? void 0 : _129.stats) === null || _130 === void 0 ? void 0 : _130.CERTIFIED_REVOKED_PROGRAMMES) === null || _131 === void 0 ? void 0 : _131.data;
                    }
                    else {
                        if (((_135 = (_134 = (_133 = (_132 = response === null || response === void 0 ? void 0 : response.data) === null || _132 === void 0 ? void 0 : _132.stats) === null || _133 === void 0 ? void 0 : _133.AGG_PROGRAMME_BY_STATUS) === null || _134 === void 0 ? void 0 : _134.all) === null || _135 === void 0 ? void 0 : _135.statusUpdateTime) &&
                            String((_139 = (_138 = (_137 = (_136 = response === null || response === void 0 ? void 0 : response.data) === null || _136 === void 0 ? void 0 : _136.stats) === null || _137 === void 0 ? void 0 : _137.AGG_PROGRAMME_BY_STATUS) === null || _138 === void 0 ? void 0 : _138.all) === null || _139 === void 0 ? void 0 : _139.statusUpdateTime) !== "0") {
                            setLastUpdateProgrammesStatsCEpoch(parseInt((_143 = (_142 = (_141 = (_140 = response === null || response === void 0 ? void 0 : response.data) === null || _140 === void 0 ? void 0 : _140.stats) === null || _141 === void 0 ? void 0 : _141.AGG_PROGRAMME_BY_STATUS) === null || _142 === void 0 ? void 0 : _142.all) === null || _143 === void 0 ? void 0 : _143.statusUpdateTime));
                            setLastUpdateProgrammesStatsC(moment(parseInt((_147 = (_146 = (_145 = (_144 = response === null || response === void 0 ? void 0 : response.data) === null || _144 === void 0 ? void 0 : _144.stats) === null || _145 === void 0 ? void 0 : _145.AGG_PROGRAMME_BY_STATUS) === null || _146 === void 0 ? void 0 : _146.all) === null || _147 === void 0 ? void 0 : _147.statusUpdateTime)).fromNow());
                        }
                        programmeByStatusAggregationResponse_1 =
                            (_150 = (_149 = (_148 = response === null || response === void 0 ? void 0 : response.data) === null || _148 === void 0 ? void 0 : _148.stats) === null || _149 === void 0 ? void 0 : _149.AGG_PROGRAMME_BY_STATUS) === null || _150 === void 0 ? void 0 : _150.data;
                        if (((_154 = (_153 = (_152 = (_151 = response === null || response === void 0 ? void 0 : response.data) === null || _151 === void 0 ? void 0 : _151.stats) === null || _152 === void 0 ? void 0 : _152.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _153 === void 0 ? void 0 : _153.all) === null || _154 === void 0 ? void 0 : _154.creditUpdateTime) &&
                            String((_158 = (_157 = (_156 = (_155 = response === null || response === void 0 ? void 0 : response.data) === null || _155 === void 0 ? void 0 : _155.stats) === null || _156 === void 0 ? void 0 : _156.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _157 === void 0 ? void 0 : _157.all) === null || _158 === void 0 ? void 0 : _158.creditUpdateTime) !== "0") {
                            setLastUpdateProgrammesCreditsStatsEpoch(parseInt((_162 = (_161 = (_160 = (_159 = response === null || response === void 0 ? void 0 : response.data) === null || _159 === void 0 ? void 0 : _159.stats) === null || _160 === void 0 ? void 0 : _160.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _161 === void 0 ? void 0 : _161.all) === null || _162 === void 0 ? void 0 : _162.creditUpdateTime));
                            setLastUpdateProgrammesCreditsStats(moment(parseInt((_166 = (_165 = (_164 = (_163 = response === null || response === void 0 ? void 0 : response.data) === null || _163 === void 0 ? void 0 : _163.stats) === null || _164 === void 0 ? void 0 : _164.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _165 === void 0 ? void 0 : _165.all) === null || _166 === void 0 ? void 0 : _166.creditUpdateTime)).fromNow());
                        }
                        programmeByStatusAuthAggregationResponse =
                            (_169 = (_168 = (_167 = response === null || response === void 0 ? void 0 : response.data) === null || _167 === void 0 ? void 0 : _167.stats) === null || _168 === void 0 ? void 0 : _168.AGG_AUTH_PROGRAMME_BY_STATUS) === null || _169 === void 0 ? void 0 : _169.data;
                        if (((_172 = (_171 = (_170 = response === null || response === void 0 ? void 0 : response.data) === null || _170 === void 0 ? void 0 : _170.stats) === null || _171 === void 0 ? void 0 : _171.CERTIFIED_REVOKED_PROGRAMMES) === null || _172 === void 0 ? void 0 : _172.last) &&
                            String((_175 = (_174 = (_173 = response === null || response === void 0 ? void 0 : response.data) === null || _173 === void 0 ? void 0 : _173.stats) === null || _174 === void 0 ? void 0 : _174.CERTIFIED_REVOKED_PROGRAMMES) === null || _175 === void 0 ? void 0 : _175.last) !==
                                "0") {
                            setLastUpdateCertifiedCreditsStatsEpoch(parseInt((_178 = (_177 = (_176 = response === null || response === void 0 ? void 0 : response.data) === null || _176 === void 0 ? void 0 : _176.stats) === null || _177 === void 0 ? void 0 : _177.CERTIFIED_REVOKED_PROGRAMMES) === null || _178 === void 0 ? void 0 : _178.last));
                            setLastUpdateCertifiedCreditsStats(moment(parseInt((_181 = (_180 = (_179 = response === null || response === void 0 ? void 0 : response.data) === null || _179 === void 0 ? void 0 : _179.stats) === null || _180 === void 0 ? void 0 : _180.CERTIFIED_REVOKED_PROGRAMMES) === null || _181 === void 0 ? void 0 : _181.last)).fromNow());
                        }
                        certifiedRevokedAggregationResponse =
                            (_184 = (_183 = (_182 = response === null || response === void 0 ? void 0 : response.data) === null || _182 === void 0 ? void 0 : _182.stats) === null || _183 === void 0 ? void 0 : _183.CERTIFIED_REVOKED_PROGRAMMES) === null || _184 === void 0 ? void 0 : _184.data;
                    }
                    totalProgrammes_1 = 0;
                    totalEstCredits_1 = 0;
                    totalIssuedCredits_1 = 0;
                    totalRetiredCredits_1 = 0;
                    totalBalancecredit_1 = 0;
                    totalTxCredits_1 = 0;
                    totalFrozenCredits_1 = 0;
                    totalCertifiedCredit = 0;
                    totalUnCertifiedredit = 0;
                    totalRevokedCredits = 0;
                    pendingProgrammesC_1 = 0;
                    authorisedProgrammesC_1 = 0;
                    rejectedProgrammesC_1 = 0;
                    Object.values(exports.ProgrammeStageLegend);
                    if ((programmeByStatusAggregationResponse_1 === null || programmeByStatusAggregationResponse_1 === void 0 ? void 0 : programmeByStatusAggregationResponse_1.length) > 0) {
                        programmeByStatusAggregationResponse_1 === null || programmeByStatusAggregationResponse_1 === void 0 ? void 0 : programmeByStatusAggregationResponse_1.map(function (responseItem, index) {
                            console.log("mine --> check -- > ", programmeByStatusAggregationResponse_1);
                            if (exports.ProgrammeStageR.AwaitingAuthorization ===
                                getStageEnumVal(responseItem === null || responseItem === void 0 ? void 0 : responseItem.currentStage)) {
                                totalProgrammes_1 = totalProgrammes_1 + parseInt(responseItem === null || responseItem === void 0 ? void 0 : responseItem.count);
                                pendingProgrammesC_1 = parseInt(responseItem === null || responseItem === void 0 ? void 0 : responseItem.count);
                            }
                            if ([exports.ProgrammeStageR.Rejected].includes(responseItem === null || responseItem === void 0 ? void 0 : responseItem.currentStage)) {
                                totalProgrammes_1 = totalProgrammes_1 + parseInt(responseItem === null || responseItem === void 0 ? void 0 : responseItem.count);
                                rejectedProgrammesC_1 = parseInt(responseItem === null || responseItem === void 0 ? void 0 : responseItem.count);
                            }
                            if ([exports.ProgrammeStageR.Authorised].includes(responseItem === null || responseItem === void 0 ? void 0 : responseItem.currentStage)) {
                                totalProgrammes_1 = totalProgrammes_1 + parseInt(responseItem === null || responseItem === void 0 ? void 0 : responseItem.count);
                                authorisedProgrammesC_1 = parseInt(responseItem === null || responseItem === void 0 ? void 0 : responseItem.count);
                            }
                        });
                        setTotalProjects(totalProgrammes_1);
                        setPendingProjects(pendingProgrammesC_1);
                        setAuthorisedProjects(authorisedProgrammesC_1);
                        setRejectedProjects(rejectedProgrammesC_1);
                    }
                    else {
                        setPendingProjects(0);
                        setAuthorisedProjects(0);
                        setRejectedProjects(0);
                        setTotalProjects(0);
                    }
                    if ((programmeByStatusAuthAggregationResponse === null || programmeByStatusAuthAggregationResponse === void 0 ? void 0 : programmeByStatusAuthAggregationResponse.length) > 0) {
                        programmeByStatusAuthAggregationResponse === null || programmeByStatusAuthAggregationResponse === void 0 ? void 0 : programmeByStatusAuthAggregationResponse.map(function (responseItem) {
                            totalEstCredits_1 =
                                totalEstCredits_1 + parseFloat(responseItem === null || responseItem === void 0 ? void 0 : responseItem.totalestcredit);
                            totalIssuedCredits_1 =
                                totalIssuedCredits_1 + parseFloat(responseItem === null || responseItem === void 0 ? void 0 : responseItem.totalissuedcredit);
                            totalRetiredCredits_1 =
                                totalRetiredCredits_1 + parseFloat(responseItem === null || responseItem === void 0 ? void 0 : responseItem.totalretiredcredit);
                            totalBalancecredit_1 =
                                totalBalancecredit_1 + parseFloat(responseItem === null || responseItem === void 0 ? void 0 : responseItem.totalbalancecredit);
                            totalTxCredits_1 =
                                totalTxCredits_1 + parseFloat(responseItem === null || responseItem === void 0 ? void 0 : responseItem.totaltxcredit);
                            totalFrozenCredits_1 =
                                totalFrozenCredits_1 + parseFloat(responseItem === null || responseItem === void 0 ? void 0 : responseItem.totalfreezecredit);
                        });
                    }
                    if (certifiedRevokedAggregationResponse) {
                        totalCertifiedCredit = parseFloat(certifiedRevokedAggregationResponse === null || certifiedRevokedAggregationResponse === void 0 ? void 0 : certifiedRevokedAggregationResponse.certifiedSum);
                        totalUnCertifiedredit = parseFloat(certifiedRevokedAggregationResponse === null || certifiedRevokedAggregationResponse === void 0 ? void 0 : certifiedRevokedAggregationResponse.uncertifiedSum);
                        totalRevokedCredits = parseFloat(certifiedRevokedAggregationResponse === null || certifiedRevokedAggregationResponse === void 0 ? void 0 : certifiedRevokedAggregationResponse.revokedSum);
                    }
                    setCreditBalance(parseFloat((_187 = (_186 = (_185 = response === null || response === void 0 ? void 0 : response.data) === null || _185 === void 0 ? void 0 : _185.stats) === null || _186 === void 0 ? void 0 : _186.CREDIT_STATS_BALANCE) === null || _187 === void 0 ? void 0 : _187.sum));
                    creditAuthorized = totalEstCredits_1 - totalIssuedCredits_1;
                    creditIssued = totalIssuedCredits_1 -
                        totalTxCredits_1 -
                        totalRetiredCredits_1 -
                        totalFrozenCredits_1;
                    pieSeriesCreditsData.push(addRoundNumber(creditAuthorized));
                    pieSeriesCreditsData.push(addRoundNumber(creditIssued));
                    pieSeriesCreditsData.push(addRoundNumber(totalTxCredits_1));
                    pieSeriesCreditsData.push(addRoundNumber(totalRetiredCredits_1));
                    pieSeriesCreditsData.push(addRoundNumber(totalFrozenCredits_1));
                    pieSeriesCreditsCerifiedData.push(addRoundNumber(totalCertifiedCredit));
                    pieSeriesCreditsCerifiedData.push(addRoundNumber(totalUnCertifiedredit));
                    pieSeriesCreditsCerifiedData.push(addRoundNumber(totalRevokedCredits));
                    totalCreditsCertified_1 = addRoundNumber(totalCertifiedCredit + totalUnCertifiedredit + totalRevokedCredits);
                    setCreditsPieChartTotal(String(addCommSep(totalEstCredits_1)) !== "NaN"
                        ? addCommSep(totalEstCredits_1)
                        : 0);
                    setCertifiedCreditsPieChartTotal(addCommSep(totalCreditsCertified_1));
                    "<p>" +
                        "ITMOs" +
                        "</p><p>" +
                        addCommSep(totalCreditsCertified_1) +
                        "</p>";
                    optionDonutPieA.plotOptions.pie.donut.labels.total.formatter = function () {
                        return "" + String(addCommSep(totalEstCredits_1)) !== "NaN"
                            ? addCommSep(totalEstCredits_1)
                            : 0;
                    };
                    optionDonutPieB.plotOptions.pie.donut.labels.total.formatter = function () {
                        return "" + addCommSep(totalCreditsCertified_1);
                    };
                    setCreditPieSeries(pieSeriesCreditsData);
                    setCreditCertifiedPieSeries(pieSeriesCreditsCerifiedData);
                    return [3 /*break*/, 5];
                case 3:
                    error_3 = _188.sent();
                    console.log("Error in getting users", error_3);
                    antd.message.open({
                        type: "error",
                        content: error_3.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        getAllProgrammeAnalyticsStatsWithoutTimeRange();
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER) {
            setCategoryType("mine");
        }
    }, []);
    React.useEffect(function () {
        getAllProgrammeAnalyticsStats();
        getAllProgrammesAggChartStats();
    }, [startTime, endTime, categoryType]);
    React.useEffect(function () {
        ApexCharts.exec("total-programmes-sector", "updateSeries", {
            data: totalProgrammesSectorSeries,
        });
        ApexCharts.exec("total-programmes-sector", "updateOptions", {
            xaxis: {
                categories: totalProgrammesSectorOptionsLabels,
            },
        });
    }, [
        totalProgrammesSectorSeries,
        categoryType,
        totalProgrammesSectorOptionsLabels,
    ]);
    React.useEffect(function () {
        ApexCharts.exec("total-programmes", "updateSeries", {
            data: totalProgrammesSeries,
        });
        ApexCharts.exec("total-programmes", "updateOptions", {
            xaxis: {
                categories: totalProgrammesOptionsLabels,
            },
        });
    }, [totalProgrammesSeries, categoryType, totalProgrammesOptionsLabels]);
    React.useEffect(function () {
        ApexCharts.exec("total-credits", "updateSeries", {
            data: totalCreditsSeries,
        });
        ApexCharts.exec("total-credits", "updateOptions", {
            xaxis: {
                categories: totalCreditsOptionsLabels,
            },
        });
    }, [totalCreditsSeries, categoryType, totalCreditsOptionsLabels]);
    React.useEffect(function () {
        ApexCharts.exec("total-credits-certified", "updateSeries", {
            data: totalCertifiedCreditsSeries,
        });
        ApexCharts.exec("total-credits-certified", "updateOptions", {
            xaxis: {
                categories: totalCertifiedCreditsOptionsLabels,
            },
        });
    }, [
        totalCertifiedCreditsSeries,
        categoryType,
        totalCertifiedCreditsOptionsLabels,
    ]);
    React.useEffect(function () {
        ApexCharts.exec("credits", "updateSeries", {
            series: creditsPieSeries,
        });
        ApexCharts.exec("credits", "updateOptions", {
            plotOptions: {
                pie: {
                    labels: {
                        total: {
                            formatter: function () { return creditsPieChartTotal; },
                        },
                    },
                },
            },
        });
    }, [creditsPieSeries, categoryType, creditsPieChartTotal]);
    React.useEffect(function () {
        ApexCharts.exec("certified-credits", "updateSeries", {
            series: creditsCertifiedPieSeries,
        });
        ApexCharts.exec("credits", "updateOptions", {
            plotOptions: {
                pie: {
                    labels: {
                        total: {
                            formatter: function () { return certifiedCreditsPieChartTotal; },
                        },
                    },
                },
            },
        });
    }, [creditsCertifiedPieSeries, categoryType, certifiedCreditsPieChartTotal]);
    React.useEffect(function () {
        var timer = setInterval(function () {
            if (lastUpdateProgrammesStatsEpoch !== 0) {
                setLastUpdateProgrammesStats(moment(lastUpdateProgrammesStatsEpoch).fromNow());
            }
            if (lastUpdateProgrammesStatsCEpoch !== 0) {
                setLastUpdateProgrammesStatsC(moment(lastUpdateProgrammesStatsCEpoch).fromNow());
            }
            if (lastUpdatePendingTransferSentEpoch !== 0) {
                setLastUpdatePendingTransferSent(moment(lastUpdatePendingTransferSentEpoch).fromNow());
            }
            if (lastUpdateCreditBalanceEpoch !== 0) {
                setLastUpdateCreditBalance(moment(lastUpdateCreditBalanceEpoch).fromNow());
            }
            if (lastUpdatePendingTransferReceivedEpoch !== 0) {
                setLastUpdatePendingTransferReceived(moment(lastUpdatePendingTransferReceivedEpoch).fromNow());
            }
            if (lastUpdateProgrammesCertifiableEpoch !== 0) {
                setLastUpdateProgrammesCertifiable(moment(lastUpdateProgrammesCertifiableEpoch).fromNow());
            }
            if (lastUpdateProgrammesCertifiedEpoch !== 0) {
                setLastUpdateProgrammesCertified(moment(lastUpdateProgrammesCertifiedEpoch).fromNow());
            }
            if (lastUpdateCertifiedCreditsStatsEpoch !== 0) {
                setLastUpdateCertifiedCreditsStats(moment(lastUpdateCertifiedCreditsStatsEpoch).fromNow());
            }
            if (lastUpdateProgrammesCreditsStatsEpoch !== 0) {
                setLastUpdateProgrammesCreditsStats(moment(lastUpdateProgrammesCreditsStatsEpoch).fromNow());
            }
            if (lastUpdateProgrammesSectorStatsCEpoch !== 0) {
                setLastUpdateProgrammesSectorStatsC(moment(lastUpdateProgrammesSectorStatsCEpoch).fromNow());
            }
            if (lastUpdateTotalCreditsEpoch !== 0) {
                setLastUpdateTotalCredits(moment(lastUpdateTotalCreditsEpoch).fromNow());
            }
            if (lastUpdateTotalCreditsCertifiedEpoch !== 0) {
                setLastUpdateTotalCreditsCertified(moment(lastUpdateTotalCreditsCertifiedEpoch).fromNow());
            }
            if (lastUpdateTransferLocationsEpoch !== 0) {
                setLastUpdateTransferLocations(moment(lastUpdateTransferLocationsEpoch).fromNow());
            }
        }, 60 * 1000);
        return function () {
            clearInterval(timer);
        };
    }, [
        lastUpdateProgrammesStatsEpoch,
        lastUpdateProgrammesStatsCEpoch,
        lastUpdatePendingTransferSentEpoch,
        lastUpdateCreditBalanceEpoch,
        lastUpdatePendingTransferReceivedEpoch,
        lastUpdateProgrammesCertifiableEpoch,
        lastUpdateProgrammesCertifiedEpoch,
        lastUpdateProgrammesCreditsStatsEpoch,
        lastUpdateCertifiedCreditsStatsEpoch,
        lastUpdateProgrammesSectorStatsCEpoch,
        lastUpdateTotalCreditsEpoch,
        lastUpdateTotalCreditsCertifiedEpoch,
        lastUpdateTransferLocationsEpoch,
    ]);
    var countS = ["all", [">=", ["get", "count"], 0]];
    var pending = ["all", ["==", ["get", "stage"], "AwaitingAuthorization"]];
    var authorised = ["all", ["==", ["get", "stage"], "Authorised"]];
    var rejected = ["all", ["==", ["get", "stage"], "Rejected"]];
    var news = ["all", ["==", ["get", "stage"], "Approved"]];
    var colors = ["#0dcc59", "#CDCDCD", "#FF8183", "#B7A4FE"];
    var donutSegment = function (start, end, r, r0, color) {
        if (end - start === 1)
            end -= 0.00001;
        var a0 = 2 * Math.PI * (start - 0.25);
        var a1 = 2 * Math.PI * (end - 0.25);
        var x0 = Math.cos(a0), y0 = Math.sin(a0);
        var x1 = Math.cos(a1), y1 = Math.sin(a1);
        var largeArc = end - start > 0.5 ? 1 : 0;
        // draw an SVG path
        return "<path d=\"M ".concat(r + r0 * x0, " ").concat(r + r0 * y0, " L ").concat(r + r * x0, " ").concat(r + r * y0, " A ").concat(r, " ").concat(r, " 0 ").concat(largeArc, " 1 ").concat(r + r * x1, " ").concat(r + r * y1, " L ").concat(r + r0 * x1, " ").concat(r + r0 * y1, " A ").concat(r0, " ").concat(r0, " 0 ").concat(largeArc, " 0 ").concat(r + r0 * x0, " ").concat(r + r0 * y0, "\" fill=\"").concat(color, "\" />");
    };
    // code for creating an SVG donut chart from feature properties
    var createDonutChart = function (properties) {
        console.log("properties of donut creator --- > ", properties);
        var offsetsStage = [];
        var counts = [];
        var programmeStageCounts = [];
        if (properties.count) {
            counts = [properties.count];
        }
        if (properties.cluster_id) {
            programmeStageCounts = [
                properties.authorised,
                properties.rejected,
                properties.pending,
                properties.new,
            ];
        }
        else {
            if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "AwaitingAuthorization") {
                programmeStageCounts = [0, 0, properties.count, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "Authorised") {
                programmeStageCounts = [properties.count, 0, 0, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "Rejected") {
                programmeStageCounts = [0, properties.count, 0, 0];
            }
            else if ((properties === null || properties === void 0 ? void 0 : properties.stage) === "New") {
                programmeStageCounts = [0, 0, 0, properties.count];
            }
        }
        var total = 0;
        for (var _i = 0, counts_1 = counts; _i < counts_1.length; _i++) {
            var count = counts_1[_i];
            total += count;
        }
        var totalStage = 0;
        for (var _a = 0, programmeStageCounts_1 = programmeStageCounts; _a < programmeStageCounts_1.length; _a++) {
            var count = programmeStageCounts_1[_a];
            offsetsStage.push(totalStage);
            totalStage += count;
        }
        var fontSize = total >= 1000 ? 22 : total >= 500 ? 20 : total >= 100 ? 18 : 16;
        var r = total >= 1000 ? 52 : total >= 500 ? 36 : total >= 100 ? 30 : 18;
        var r0 = Math.round(r * 0.6);
        var w = r * 2;
        var html = "<div>\n<svg width=\"".concat(w, "\" height=\"").concat(w, "\" viewbox=\"0 0 ").concat(w, " ").concat(w, "\" text-anchor=\"middle\" style=\"font: ").concat(fontSize, "px sans-serif; display: block\">");
        for (var i = 0; i < (programmeStageCounts === null || programmeStageCounts === void 0 ? void 0 : programmeStageCounts.length); i++) {
            if (programmeStageCounts[i] !== 0) {
                html += donutSegment(offsetsStage[i] === 0 ? 0 : offsetsStage[i] / totalStage, (offsetsStage[i] + programmeStageCounts[i]) / totalStage, r, r0, colors[i]);
            }
        }
        html += "<circle cx=\"".concat(r, "\" cy=\"").concat(r, "\" r=\"").concat(r0, "\" fill=\"white\" />\n<text dominant-baseline=\"central\" transform=\"translate(").concat(r, ", ").concat(r, ")\">\n").concat(total, "\n</text>\n</svg>\n</div>");
        var el = document.createElement("div");
        el.innerHTML = html;
        return el.firstChild;
    };
    React.useEffect(function () {
        setTimeout(function () {
            var mapSource = {
                key: "countries",
                data: {
                    type: "vector",
                    url: "mapbox://mapbox.country-boundaries-v1",
                },
            };
            setTransferLocationsMapSource(mapSource);
            // Build a GL match expression that defines the color for every vector tile feature
            // Use the ISO 3166-1 alpha 3 code as the lookup key for the country shape
            var matchExpression = ["match", ["get", "iso_3166_1"]];
            var txLocationMap = {};
            if (programmeTransferLocations) {
                var transferLocations = __spreadArray([], programmeTransferLocations, true);
                // Calculate color values for each country based on 'hdi' value
                for (var _i = 0, transferLocations_1 = transferLocations; _i < transferLocations_1.length; _i++) {
                    var row = transferLocations_1[_i];
                    // Convert the range of data values to a suitable color
                    // const blue = row.ratio * 255;
                    var color = row.count < 2
                        ? "#4da6ff"
                        : row.count < 10
                            ? "#0080ff"
                            : row.count < 50
                                ? "#0059b3"
                                : row.count < 100
                                    ? "#003366"
                                    : "#000d1a";
                    matchExpression.push(row.country, color);
                    txLocationMap[row.country] = row.count;
                }
            }
            setTxLocationMapData(txLocationMap);
            matchExpression.push("rgba(0, 0, 0, 0)");
            setTransferLocationsMapLayer({
                id: "countries-join",
                type: "fill",
                source: "countries",
                "source-layer": "country_boundaries",
                paint: {
                    "fill-color": matchExpression,
                },
            });
        }, 1000);
    }, [programmeTransferLocations]);
    React.useEffect(function () {
        setTimeout(function () {
            var _a, _b, _c, _e;
            setProgrammeLocationsMapCenter((programmeLocations === null || programmeLocations === void 0 ? void 0 : programmeLocations.features) &&
                ((_b = (_a = programmeLocations === null || programmeLocations === void 0 ? void 0 : programmeLocations.features[0]) === null || _a === void 0 ? void 0 : _a.geometry) === null || _b === void 0 ? void 0 : _b.coordinates)
                ? (_e = (_c = programmeLocations === null || programmeLocations === void 0 ? void 0 : programmeLocations.features[0]) === null || _c === void 0 ? void 0 : _c.geometry) === null || _e === void 0 ? void 0 : _e.coordinates
                : [7.4924165, 5.5324032]);
            var mapSource = {
                key: "programmeLocations",
                data: {
                    type: "geojson",
                    data: programmeLocations,
                    cluster: true,
                    clusterRadius: 40,
                    clusterProperties: {
                        // keep separate counts for each programmeStage category in a cluster
                        count: ["+", ["case", countS, ["get", "count"], 0]],
                        pending: ["+", ["case", pending, ["get", "count"], 0]],
                        authorised: ["+", ["case", authorised, ["get", "count"], 0]],
                        rejected: ["+", ["case", rejected, ["get", "count"], 0]],
                        new: ["+", ["case", news, ["get", "count"], 0]],
                    },
                },
            };
            setProgrammeLocationsMapSource(mapSource);
            setProgrammeLocationsMapLayer({
                id: "programmes_circle",
                type: "circle",
                source: "programmeLocations",
                filter: ["!=", "cluster", true],
                paint: {
                    "circle-color": [
                        "case",
                        pending,
                        colors[0],
                        authorised,
                        colors[1],
                        colors[2],
                    ],
                    "circle-opacity": 1,
                    "circle-radius": 10,
                },
            });
        }, 1000);
    }, [programmeLocations]);
    var onChangeCategory = function (event) {
        var _a;
        setCategoryType((_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.value);
    };
    var transferLocationsMapOnClick = function (map, e) {
        var _a, _b, _c;
        if (!map)
            return;
        var features = map.queryRenderedFeatures(e.point, {
            layers: ["countries-join"],
        });
        if (!features.length) {
            return;
        }
        var feature = features[0];
        if (!txLocationMapData[(_a = feature.properties) === null || _a === void 0 ? void 0 : _a.iso_3166_1]) {
            return;
        }
        return "".concat((_b = feature.properties) === null || _b === void 0 ? void 0 : _b.name_en, " : ").concat(txLocationMapData[(_c = feature.properties) === null || _c === void 0 ? void 0 : _c.iso_3166_1]);
    };
    // Use the same approach as above to indicate that the symbols are clickable
    // by changing the cursor style to 'pointer'.
    var transferLocationsMapOnMouseMove = function (map, e) {
        var _a;
        if (!map)
            return;
        var features = map.queryRenderedFeatures(e.point, {
            layers: ["countries-join"],
        });
        map.getCanvas().style.cursor =
            features.length > 0 &&
                txLocationMapData[(_a = features[0].properties) === null || _a === void 0 ? void 0 : _a.iso_3166_1]
                ? "pointer"
                : "";
    };
    var programmeLocationsMapOnRender = function (map) {
        if (!map.isSourceLoaded("programmeLocations"))
            return;
        var currentMarkers = [];
        var features = map.querySourceFeatures("programmeLocations");
        // for every cluster on the screen, create an HTML marker for it (if we didn't yet),
        // and add it to the map if it's not there already
        for (var _i = 0, features_1 = features; _i < features_1.length; _i++) {
            var feature = features_1[_i];
            var coords = feature.geometry.coordinates;
            var properties = feature.properties;
            var id = properties.cluster_id
                ? properties.cluster_id
                : Number(properties.id);
            var el = createDonutChart(properties);
            var marker = {
                id: id,
                element: el,
                location: coords,
            };
            currentMarkers.push(marker);
        }
        return currentMarkers;
    };
    var fetchProgrammeIds = function () { return __awaiter(void 0, void 0, void 0, function () {
        var responses, data, initlist, i, newreports, error_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 3, , 4]);
                    return [4 /*yield*/, post("national/programme/queryDocs", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "type",
                                    operation: "=",
                                    value: "6",
                                },
                            ],
                        })];
                case 1:
                    responses = _a.sent();
                    return [4 /*yield*/, responses.data];
                case 2:
                    data = _a.sent();
                    if (data && data.length > 0) {
                        initlist = [];
                        for (i = 0; i < data.length; i++) {
                            newreports = {
                                label: data[i].programmeId.slice(2),
                                key: data[i].url,
                            };
                            initlist.push(newreports);
                        }
                        setFileList(initlist);
                    }
                    return [3 /*break*/, 4];
                case 3:
                    error_4 = _a.sent();
                    console.error("Error fetching AnnualReports:", error_4);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.PROGRAMME_DEVELOPER) {
            fetchProgrammeIds();
        }
    }, []);
    var fileListFlat = fileList.flat();
    var items = fileListFlat.map(function (item) { return ({
        label: item.label,
        key: item.key,
    }); });
    var handleMenuClick = function (e) {
        setSelectedurl(String(e.key));
        var parts = String(e.key).split("/");
        var fileName = parts[parts.length - 1];
        var fileNameWithoutExtension = fileName.replace(".pdf", "");
        var lastFourElements = fileNameWithoutExtension.slice(-4);
        setSelectedFile(lastFourElements);
    };
    React.useEffect(function () {
    }, [selectedurl, selectedFile]);
    var menuProps = {
        items: items,
        onClick: handleMenuClick,
    };
    return (React.createElement("div", { className: "dashboard-main-container" },
        React.createElement("div", { className: "stastics-cards-container", style: { marginTop: "50px" } },
            React.createElement(antd.Row, { gutter: [40, 40], className: "stastic-card-row" },
                React.createElement(antd.Col, { xxl: 8, xl: 8, md: 12, className: "stastic-card-col" },
                    React.createElement(StasticCard, { value: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? pendingProjectsWithoutTimeRange
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? transferRequestReceived
                                : programmesUnCertifed, title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "programmesPending"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "trasnferReqReceived"
                                : "programmesUnCertified", updatedDate: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? lastUpdateProgrammesStats
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? lastUpdatePendingTransferReceived
                                : lastUpdateProgrammesCertifiable, icon: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ? (React.createElement(Icon.ClockHistory, { color: "#008f39", size: 80 })) : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                            exports.CompanyRole.PROGRAMME_DEVELOPER ? (React.createElement(Icon.BoxArrowInRight, { color: "#008f39", size: 80 })) : (React.createElement(Icon.ShieldX, { color: "#008f39", size: 80 })), loading: loadingWithoutTimeRange, companyRole: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole, tooltip: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTprogrammespendingGoverment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTTransferReqRecProgrammeDev"
                                : "tTProgrammesUnCertiCertifier"), t: t })),
                React.createElement(antd.Col, { xxl: 8, xl: 8, md: 12, className: "stastic-card-col" },
                    React.createElement(StasticCard, { value: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? transferRequestSent
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? transferRequestSent
                                : programmesCertifed, title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "trasnferReqInit"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "trasnferReqInit"
                                : "programmesCertified", updatedDate: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? lastUpdatePendingTransferSent
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? lastUpdatePendingTransferSent
                                : lastUpdateProgrammesCertified, icon: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ? (React.createElement(Icon.BoxArrowRight, { color: "#008f39", size: 80 })) : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                            exports.CompanyRole.PROGRAMME_DEVELOPER ? (React.createElement(Icon.BoxArrowRight, { color: "#008f39", size: 80 })) : (React.createElement(Icon.ShieldCheck, { color: "#008f39", size: 80 })), loading: loadingWithoutTimeRange, companyRole: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole, tooltip: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTTransferReqSentGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTTransferReqInitProgrammeDev"
                                : "tTProgrammesCertiCertifier"), t: t })),
                React.createElement(antd.Col, { xxl: 8, xl: 8, md: 12, className: "stastic-card-col" },
                    React.createElement(StasticCard, { value: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? creditBalanceWithoutTimeRange
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? creditBalanceWithoutTimeRange
                                : creditCertiedBalanceWithoutTimeRange, title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "creditBal"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "creditBal"
                                : "creditCertified", updatedDate: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? lastUpdateCreditBalance
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? lastUpdateCreditBalance
                                : lastUpdateProgrammesCertified, icon: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ? (React.createElement(Icon.Gem, { color: "#008f39", size: 80 })) : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                            exports.CompanyRole.PROGRAMME_DEVELOPER ? (React.createElement(Icon.Gem, { color: "#008f39", size: 80 })) : (React.createElement(Icon.ShieldExclamation, { color: "#008f39", size: 80 })), loading: loadingWithoutTimeRange, companyRole: userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole, tooltip: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTCreditBalanceGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTCreditBalanceProgrammeDev"
                                : "tTCreditCertifiedCertifier"), t: t })))),
        ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER ||
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) &&
            fileList.length > 0 && (React.createElement("div", { className: "annual-report" },
            React.createElement("div", null, "Annual Statistics Report"),
            React.createElement(antd.Dropdown, { menu: menuProps },
                React.createElement(antd.Button, { className: "annual-report-dropdownbutton" },
                    React.createElement(antd.Space, null,
                        selectedFile,
                        React.createElement(icons.CaretDownOutlined, null)))),
            selectedurl.trim().length === 0 && (React.createElement(antd.Button, { className: "annual-report-downloadbutton" },
                React.createElement(antd.Space, null,
                    React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
            selectedurl.trim().length > 0 && (React.createElement("a", { href: selectedurl, target: "_blank", rel: "noopener noreferrer", download: true },
                React.createElement(antd.Button, { className: "annual-report-downloadbutton" },
                    React.createElement(antd.Space, null,
                        React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } }))))))),
        React.createElement("div", { className: "filter-container" },
            React.createElement("div", { className: "date-filter" },
                React.createElement(RangePicker$1, { ranges: {
                        Today: [moment(), moment()],
                        "Last 7 days": [moment().subtract("6", "days"), moment()],
                        "Last 14 days": [moment().subtract("13", "days"), moment()],
                    }, defaultValue: [moment().subtract("13", "days"), moment()], showTime: true, allowClear: true, format: "DD:MM:YYYY", onChange: onChangeRange })),
            React.createElement("div", { className: "radio-selection" }, (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER && (React.createElement(antd.Radio.Group, { value: categoryType, onChange: onChangeCategory },
                React.createElement(antd.Radio.Button, { className: "overall", value: "overall" }, "OVERALL"),
                React.createElement(antd.Radio.Button, { className: "mine", value: "mine" }, "MINE"))))),
        React.createElement("div", { className: "stastics-and-charts-container center" },
            React.createElement(antd.Row, { gutter: [40, 40], className: "stastic-card-row" },
                React.createElement(antd.Col, { xxl: 8, xl: 8, md: 12, className: "stastic-card-col" },
                    React.createElement(ProgrammeRejectAndTransferComponent, { totalPrgrammes: totalProjects, pending: pendingProjects, rejected: rejectedProjects, authorized: authorisedProjects, updatedDate: lastUpdateProgrammesStatsC, loading: loading, toolTipText: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTProgrammesGoverment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTProgrammesProgrammeDev"
                                : categoryType === "mine"
                                    ? "tTProgrammesCertifierMine"
                                    : "tTProgrammesCertifierOverall"), t: t })),
                React.createElement(antd.Col, { xxl: 8, xl: 8, md: 12, className: "stastic-card-col pie" },
                    React.createElement(RegistryPieChartsStatComponent, { id: "credits", title: t("credits"), options: optionDonutPieA, series: creditsPieSeries, lastUpdate: lastUpdateProgrammesCreditsStats, loading: loading, toolTipText: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTCreditsGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTCreditsProgrammeDev"
                                : categoryType === "mine"
                                    ? "tTCreditsCertifierMine"
                                    : "tTCreditsCertifierOverall"), Chart: Chart })),
                React.createElement(antd.Col, { xxl: 8, xl: 8, md: 12, className: "stastic-card-col" },
                    React.createElement(RegistryPieChartsStatComponent, { id: "certified-credits", title: t("certifiedCredits"), options: optionDonutPieB, series: creditsCertifiedPieSeries, lastUpdate: lastUpdateCertifiedCreditsStats, loading: loading, toolTipText: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTCertifiedCreditsGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTCertifiedCreditsProgrammeDev"
                                : categoryType === "mine"
                                    ? "tTCertifiedCreditsCertifierMine"
                                    : "tTCertifiedCreditsCertifierOverall"), Chart: Chart })))),
        React.createElement("div", { className: "stastics-and-charts-container center" },
            React.createElement(antd.Row, { gutter: [40, 40], className: "stastic-card-row" },
                React.createElement(antd.Col, { xxl: 12, xl: 12, md: 12, className: "stastic-card-col" },
                    React.createElement(RegistryBarChartsStatComponent, { id: "total-programmes", title: t("totalProgrammes"), options: totalProgrammesOptions, series: totalProgrammesSeries, lastUpdate: lastUpdateProgrammesStatsC, loading: loadingCharts, toolTipText: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTTotalProgrammesGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTTotalProgrammesProgrammeDev"
                                : categoryType === "mine"
                                    ? "tTTotalProgrammesCertifierMine"
                                    : "tTTotalProgrammesCertifierOverall"), Chart: Chart })),
                React.createElement(antd.Col, { xxl: 12, xl: 12, md: 12, className: "stastic-card-col" },
                    React.createElement(RegistryBarChartsStatComponent, { id: "total-programmes-sector", title: t("totalProgrammesSector"), options: totalProgrammesOptionsSub, series: totalProgrammesSectorSeries, lastUpdate: lastUpdateProgrammesSectorStatsC, loading: loadingCharts, toolTipText: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTTotalProgrammesSectorGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTTotalProgrammesSecProgrammeDev"
                                : categoryType === "mine"
                                    ? "tTTotalProgrammesSecCertifierMine"
                                    : "tTTotalProgrammesSecCertifierOverall"), Chart: Chart })))),
        React.createElement("div", { className: "stastics-and-charts-container center" },
            React.createElement(antd.Row, { gutter: [40, 40], className: "stastic-card-row" },
                React.createElement(antd.Col, { xxl: 12, xl: 12, md: 12, className: "stastic-card-col" },
                    React.createElement(RegistryBarChartsStatComponent, { id: "total-credits", title: t("totalCredits"), options: totalCreditsOptions, series: totalCreditsSeries, lastUpdate: lastUpdateTotalCredits, loading: loadingCharts, toolTipText: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTTotalCreditsGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTTotalCreditsProgrammeDev"
                                : categoryType === "mine"
                                    ? "tTTotalCreditsCertifierMine"
                                    : "tTTotalCreditsCertifierOverall"), Chart: Chart })),
                React.createElement(antd.Col, { xxl: 12, xl: 12, md: 12, className: "stastic-card-col" },
                    React.createElement(RegistryBarChartsStatComponent, { id: "total-credits-certified", title: t("totalCreditsCertified"), options: totalCreditsCertifiedOptions, series: totalCertifiedCreditsSeries, lastUpdate: lastUpdateTotalCreditsCertified, loading: loadingCharts, toolTipText: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                            ? "tTTotalCreditsCertifiedGovernment"
                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                ? "tTTotalCertifiedCreditsProgrammeDev"
                                : categoryType === "mine"
                                    ? "tTTotalCertifiedCreditsCertifierMine"
                                    : "tTTotalCertifiedCreditsCertifierOverall"), Chart: Chart })))),
        mapType !== exports.MapTypes.None ? (React.createElement("div", { className: "stastics-and-charts-container center" },
            React.createElement(antd.Row, { gutter: [40, 40], className: "stastic-card-row" },
                React.createElement(antd.Col, { xxl: 12, xl: 12, md: 12, className: "stastic-card-col" },
                    React.createElement("div", { className: "stastics-and-pie-card height-map-rem" },
                        React.createElement("div", { className: "pie-charts-top" },
                            React.createElement("div", { className: "pie-charts-title" }, t("programmeLocations")),
                            React.createElement("div", { className: "info-container" },
                                React.createElement("div", { className: "info-container" },
                                    React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                                            ? "tTProgrammeLocationsGovernment"
                                            : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                                exports.CompanyRole.PROGRAMME_DEVELOPER
                                                ? "tTProgrammeLocationsProgrammeDev"
                                                : categoryType === "mine"
                                                    ? "tTProgrammeLocationsCertifierMine"
                                                    : "tTProgrammeLocationsCertifierOverall") },
                                        React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 }))))),
                        loadingCharts ? (React.createElement("div", { className: "margin-top-2" },
                            React.createElement(antd.Skeleton, { active: true }),
                            React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
                            React.createElement("div", { className: "map-content" },
                                React.createElement(MapComponent, { mapType: mapType, center: programmeLocationsMapCenter, zoom: 4, mapSource: programmeLocationsMapSource, layer: programmeLocationsMapLayer, height: 360, style: "mapbox://styles/mapbox/light-v11", onRender: programmeLocationsMapOnRender, accessToken: accessToken })),
                            React.createElement("div", { className: "stage-legends" },
                                React.createElement(LegendItem, { text: "Authorised", color: "#0dcc59" }),
                                !((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER &&
                                    categoryType === "mine") && (React.createElement(React.Fragment, null,
                                    React.createElement(LegendItem, { text: "Rejected", color: "#CDCDCD" }),
                                    React.createElement(LegendItem, { text: "Pending", color: "#FF8183" }),
                                    React.createElement(LegendItem, { text: "Approved", color: "#B7A4FE" })))),
                            React.createElement("div", { className: "updated-on margin-top-1" },
                                React.createElement("div", { className: "updated-moment-container" }, lastUpdateProgrammesStatsC !== "0" &&
                                    lastUpdateProgrammesStatsC)))))),
                React.createElement(antd.Col, { xxl: 12, xl: 12, md: 12, className: "stastic-card-col" },
                    React.createElement("div", { className: "stastics-and-pie-card height-map-rem" },
                        React.createElement("div", { className: "pie-charts-top" },
                            React.createElement("div", { className: "pie-charts-title" }, t("trasnferLocations")),
                            React.createElement("div", { className: "info-container" },
                                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: t((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
                                        ? "tTTransferLocationsGovernment"
                                        : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) ===
                                            exports.CompanyRole.PROGRAMME_DEVELOPER
                                            ? "tTTrasnferLocationsProgrammeDev"
                                            : categoryType === "mine"
                                                ? "tTTrasnferLocationsCertifierMine"
                                                : "tTTrasnferLocationsCertifierOverall") },
                                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
                        loadingCharts ? (React.createElement("div", { className: "margin-top-2" },
                            React.createElement(antd.Skeleton, { active: true }),
                            React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
                            React.createElement("div", { className: "map-content" },
                                React.createElement(MapComponent, { mapType: mapType, center: [12, 50], zoom: 0.5, mapSource: transferLocationsMapSource, onClick: transferLocationsMapOnClick, showPopupOnClick: true, onMouseMove: transferLocationsMapOnMouseMove, layer: transferLocationsMapLayer, height: 360, style: "mapbox://styles/mapbox/streets-v11", accessToken: accessToken })),
                            React.createElement("div", { className: "updated-on margin-top-2" },
                                React.createElement("div", { className: "updated-moment-container" }, lastUpdateTransferLocations !== "0" &&
                                    lastUpdateTransferLocations))))))))) : ("")));
};

React.createContext(null);
var EditableCell = function (_a) {
    var editing = _a.editing, dataIndex = _a.dataIndex, title = _a.title; _a.inputType; var record = _a.record; _a.index; var children = _a.children, onBlurHandler = _a.onBlurHandler, t = _a.t, restProps = __rest(_a, ["editing", "dataIndex", "title", "inputType", "record", "index", "children", "onBlurHandler", "t"]);
    return (React.createElement("td", __assign({}, restProps), editing && dataIndex === "nationalPlanObjective" ? (React.createElement(antd.Form.Item, { name: dataIndex, style: { margin: 0 }, rules: [
            {
                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                    var trimValue;
                    return __generator(this, function (_a) {
                        trimValue = typeof value === "string" ? value.trim() : value;
                        if (!trimValue) {
                            throw new Error("".concat(title, " ").concat(t("ndc:isRequired")));
                        }
                        return [2 /*return*/];
                    });
                }); },
            },
        ] },
        React.createElement(antd.Input, { onBlur: function () { return onBlurHandler(record); }, placeholder: t("ndc:nationalPlanObjectivePlaceHolder") }))) : editing && dataIndex === "kpiUnit" ? (React.createElement(antd.Form.Item, { name: dataIndex, style: { margin: 0 }, rules: [
            {
                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                    var trimValue;
                    return __generator(this, function (_a) {
                        trimValue = typeof value === "string" ? value.trim() : value;
                        if (!trimValue) {
                            throw new Error("".concat(title, " ").concat(t("ndc:isRequired")));
                        }
                        return [2 /*return*/];
                    });
                }); },
            },
        ] },
        React.createElement(antd.Input, { onBlur: function () { return onBlurHandler(record); }, placeholder: t("ndc:kpiUnitPlaceHolder") }))) : editing && dataIndex === "kpi" ? (React.createElement(antd.Form.Item, { name: dataIndex, style: { margin: 0 }, rules: [
            {
                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                    var trimValue;
                    return __generator(this, function (_a) {
                        trimValue = typeof value === "string" ? value.trim() : value;
                        if (trimValue) {
                            if (isNaN(+trimValue)) {
                                throw new Error(t("ndc:kpiInvalidFormat"));
                            }
                            else if (+trimValue <= 0) {
                                throw new Error(t("ndc:kpiGreaterThanZero"));
                            }
                            else if (trimValue.toString().length > 7) {
                                throw new Error(t("ndc:kpiMaxLength"));
                            }
                        }
                        else {
                            throw new Error("".concat(title, " ").concat(t("ndc:isRequired")));
                        }
                        return [2 /*return*/];
                    });
                }); },
            },
        ] },
        React.createElement(antd.Input, { onBlur: function () { return onBlurHandler(record); }, placeholder: t("ndc:kpiPlaceHolder") }))) : (children)));
};

var css_248z$7 = ".ndc-steps-actions {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-right: 1rem;\n  justify-content: center; }\n  .ndc-steps-actions .action-btn {\n    border: 1px solid #008f39;\n    color: #008f39;\n    margin-right: 1rem; }\n  .ndc-steps-actions .back-btn {\n    border: 1px solid rgba(140, 140, 140, 0.7);\n    color: rgba(140, 140, 140, 0.7);\n    margin-right: 1rem; }\n  .ndc-steps-actions .mg-left-1 {\n    margin-left: 1rem; }\n\n.ndc-details .ant-input-number-input-wrap {\n  margin-right: 10px; }\n\n.ndc-details tbody {\n  vertical-align: top; }\n\n.ndc-details td .ant-space-item {\n  margin-top: 5px; }\n\n.ndc-details .ant-table-pagination.ant-pagination {\n  margin-top: 16px;\n  margin-right: 0px;\n  margin-left: 24px;\n  margin-bottom: 0px; }\n\n.ndc-details .ndc-button-row {\n  margin-top: 16px; }\n\n.ndc-details .btn-danger {\n  color: #ff4d4f !important;\n  border-color: #ff8183 !important; }\n";
styleInject(css_248z$7);

var NdcDetailsActionType;
(function (NdcDetailsActionType) {
    NdcDetailsActionType["MainAction"] = "MainAction";
    NdcDetailsActionType["SubAction"] = "SubAction";
})(NdcDetailsActionType || (NdcDetailsActionType = {}));
var NdcDetailsActionStatus;
(function (NdcDetailsActionStatus) {
    NdcDetailsActionStatus["New"] = "New";
    NdcDetailsActionStatus["Pending"] = "Pending";
    NdcDetailsActionStatus["Approved"] = "Approved";
    NdcDetailsActionStatus["Rejected"] = "Rejected";
})(NdcDetailsActionStatus || (NdcDetailsActionStatus = {}));
var getNdcActionStatusEnumVal = function (value) {
    var index = Object.keys(NdcDetailsActionStatus).indexOf(value);
    if (index < 0) {
        return value;
    }
    return Object.values(NdcDetailsActionStatus)[index];
};
var getNdcActionStatusTagType = function (status) {
    switch (getNdcActionStatusEnumVal(status)) {
        case NdcDetailsActionStatus.Rejected:
            return "error";
        case NdcDetailsActionStatus.Pending:
            return "processing";
        case NdcDetailsActionStatus.Approved:
            return "success";
        default:
            return "default";
    }
};

var NdcDetailsComponent = function (props) {
    var t = props.t;
    var RangePicker = antd.DatePicker.RangePicker;
    var _a = React.useState([]), ndcActionsList = _a[0], setNdcActionsList = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState([]), periodItems = _c[0], setPeriodItems = _c[1];
    var _d = React.useState({}), selectedPeriod = _d[0], setSelectedPeriod = _d[1];
    var selectedDateRangeRef = React.useRef({});
    var _e = React.useState(0), tableKey = _e[0], setTableKey = _e[1];
    var _f = useConnection(), get = _f.get, post = _f.post, put = _f.put;
    var _g = React.useState([]), ministryOrgList = _g[0], setMinistryOrgList = _g[1];
    var _h = React.useState({}), actionInfo = _h[0], setActionInfo = _h[1];
    var _j = React.useState(false), openConfirmationModal = _j[0], setOpenConfirmationModal = _j[1];
    var form = antd.Form.useForm()[0];
    var _k = React.useState(null), editingKey = _k[0], setEditingKey = _k[1];
    var _l = React.useState(0), nextAvailableActionId = _l[0], setNextAvailableActionId = _l[1];
    var _m = React.useState([]), expandedRowKeys = _m[0], setExpandedRowKeys = _m[1];
    var _o = React.useState([]), subNdcActionsForPeriod = _o[0], setSubNdcActionsForPeriod = _o[1];
    var _p = React.useState(1), currentPage = _p[0], setCurrentPage = _p[1];
    var _q = React.useState(10), pageSize = _q[0], setPageSize = _q[1];
    var isEditing = function (record) { return record.id === editingKey; };
    var isMainActionInEditMode = function () {
        var unsavedMainActions = ndcMainDetailsForPeriod.filter(function (item) {
            return item.status === NdcDetailsActionStatus.New &&
                item.actionType === NdcDetailsActionType.MainAction;
        });
        return unsavedMainActions.length > 0 ? true : false;
    };
    var userInfoState = useUserContext().userInfoState;
    React.useEffect(function () {
        if (expandedRowKeys && expandedRowKeys.length > 0) {
            var expandedKey = expandedRowKeys[0];
            setNdcSubActionsForMainAction(expandedKey);
        }
    }, ndcActionsList);
    var loginMinistry = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT
        ? process.env.REACT_APP_GOVERNMENT_MINISTRY
            ? process.env.REACT_APP_GOVERNMENT_MINISTRY
            : "Ministry Of Environment"
        : (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY
            ? userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyName
            : undefined;
    var isGovernmentUser = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly;
    var isMainNdcActionsEditable = selectedPeriod &&
        !selectedPeriod.finalized &&
        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly;
    var isSubNdcActionsEditable = function (record) {
        return (selectedPeriod &&
            !selectedPeriod.finalized &&
            record.status !== NdcDetailsActionStatus.Approved &&
            ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
                ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY &&
                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyName) === record.ministryName)) &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly);
    };
    var checkSubNdcActionCreatePermission = function () {
        return (selectedPeriod &&
            !selectedPeriod.finalized &&
            ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT ||
                (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) &&
            (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly);
    };
    var isNdcActionEditable = function (record) {
        if (record.actionType === NdcDetailsActionType.MainAction) {
            return isMainNdcActionsEditable;
        }
        else if (record.actionType === NdcDetailsActionType.SubAction) {
            return isSubNdcActionsEditable(record);
        }
    };
    var ndcMainDetailsForPeriod = selectedPeriod && selectedPeriod.key !== "add_new"
        ? ndcActionsList.filter(function (ndcDetail) {
            return (ndcDetail.periodId === parseInt(selectedPeriod.key) &&
                ndcDetail.actionType === NdcDetailsActionType.MainAction);
        })
        : [];
    var setNdcSubActionsForMainAction = function (mainActionId) {
        var subNdcDetails = ndcActionsList.filter(function (ndcDetail) {
            return (ndcDetail.parentActionId === mainActionId &&
                ndcDetail.actionType === NdcDetailsActionType.SubAction);
        });
        var emptySubNdcRow = {
            id: nextAvailableActionId,
            actionType: NdcDetailsActionType.SubAction,
            nationalPlanObjective: "",
            kpi: "",
            kpiUnit: "",
            ministryName: loginMinistry,
            status: NdcDetailsActionStatus.New,
            parentActionId: mainActionId,
        };
        if (checkSubNdcActionCreatePermission()) {
            subNdcDetails = __spreadArray(__spreadArray([], subNdcDetails, true), [emptySubNdcRow], false);
            setEditingKey(nextAvailableActionId);
            setNextAvailableActionId(function (value) { return value + 1; });
            form.setFieldsValue({
                nationalPlanObjective: "",
                kpi: "",
                kpiUnit: "",
            });
        }
        setSubNdcActionsForPeriod(subNdcDetails);
    };
    var inRange = function (num, min, max) {
        return num >= min && num <= max;
    };
    var ClearEditMode = function () {
        var unsavedMainActions = ndcActionsList.filter(function (item) {
            return item.status === NdcDetailsActionStatus.New &&
                item.actionType === NdcDetailsActionType.MainAction;
        });
        if (unsavedMainActions && unsavedMainActions.length) {
            var updatedActions = ndcActionsList.filter(function (item) { return !unsavedMainActions.includes(item); });
            setNdcActionsList(updatedActions);
        }
        setEditingKey(null);
    };
    var handleSave = function (row) { return __awaiter(void 0, void 0, void 0, function () {
        var updatedFields, updatedItem, exception_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 9, , 10]);
                    updatedFields = void 0;
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, form.validateFields()];
                case 2:
                    updatedFields = (_a.sent());
                    return [3 /*break*/, 4];
                case 3:
                    _a.sent();
                    return [2 /*return*/];
                case 4:
                    if (!updatedFields) {
                        ClearEditMode();
                        return [2 /*return*/];
                    }
                    else if (updatedFields.kpi === row.kpi &&
                        updatedFields.kpiUnit === row.kpiUnit &&
                        updatedFields.nationalPlanObjective === row.nationalPlanObjective) {
                        ClearEditMode();
                        return [2 /*return*/];
                    }
                    updatedItem = __assign(__assign({}, row), updatedFields);
                    if (!(updatedItem.status === NdcDetailsActionStatus.New)) return [3 /*break*/, 6];
                    if (isGovernmentUser &&
                        updatedItem.actionType === NdcDetailsActionType.SubAction) {
                        updatedItem.status = NdcDetailsActionStatus.Approved;
                    }
                    else {
                        updatedItem.status = NdcDetailsActionStatus.Pending;
                    }
                    return [4 /*yield*/, post("national/programme/addNdcDetailsAction", __assign(__assign({}, updatedItem), { kpi: parseFloat(updatedItem.kpi.toString()) }))];
                case 5:
                    _a.sent();
                    return [3 /*break*/, 8];
                case 6:
                    updatedItem.status = NdcDetailsActionStatus.Pending;
                    return [4 /*yield*/, put("national/programme/updateNdcDetailsAction", __assign(__assign({}, updatedItem), { kpi: parseFloat(updatedItem.kpi.toString()) }))];
                case 7:
                    _a.sent();
                    _a.label = 8;
                case 8:
                    fetchNdcDetailActions();
                    ClearEditMode();
                    return [3 /*break*/, 10];
                case 9:
                    exception_2 = _a.sent();
                    ClearEditMode();
                    antd.message.open({
                        type: "error",
                        content: exception_2.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 10];
                case 10: return [2 /*return*/];
            }
        });
    }); };
    var actionMenu = function (record) {
        if (record.status === NdcDetailsActionStatus.Pending &&
            isGovernmentUser &&
            selectedPeriod &&
            !selectedPeriod.finalized) {
            return (React.createElement(antd.List, { className: "action-menu", size: "small", dataSource: [
                    {
                        text: t("ndc:approve"),
                        icon: React.createElement(Icon__namespace.BoxArrowInDown, null),
                        style: "color-primary",
                        click: function () {
                            setActionInfo({
                                action: "Approve",
                                headerText: t("ndc:actionApproveTitle"),
                                type: "primary",
                                icon: React.createElement(Icon__namespace.BoxArrowInDown, null),
                                recordId: record.id,
                            });
                            setOpenConfirmationModal(true);
                        },
                    },
                    {
                        text: t("ndc:reject"),
                        icon: React.createElement(Icon__namespace.XOctagon, null),
                        style: "color-error",
                        click: function () {
                            setActionInfo({
                                action: "Reject",
                                headerText: t("ndc:rejectApproveTitle"),
                                type: "danger",
                                icon: React.createElement(Icon__namespace.XOctagon, null),
                                recordId: record.id,
                            });
                            setOpenConfirmationModal(true);
                        },
                    },
                ], renderItem: function (item) { return (React.createElement(antd.List.Item, { onClick: item.click },
                    React.createElement(antd.Typography.Text, { className: "action-icon ".concat(item.style) }, item.icon),
                    React.createElement("span", null, item.text))); } }));
        }
        else {
            return null;
        }
    };
    var defaultColumns = [
        {
            title: t("ndc:ndcColumnsNationalPlanObj"),
            dataIndex: "nationalPlanObjective",
            key: "nationalPlanObjective",
            align: "left",
            width: 400,
            editable: true,
            render: function (_, record) { return (React.createElement(antd.Space, { size: "middle" }, record.nationalPlanObjective ? (React.createElement(antd.Tooltip, { title: isNdcActionEditable(record) ? "" : t("ndc:ndcUnauthorisedMsg") },
                React.createElement("span", null, record.nationalPlanObjective))) : (React.createElement(antd.Input, { placeholder: t("ndc:nationalPlanObjectivePlaceHolder") })))); },
        },
        {
            title: t("ndc:ndcColumnsKpi"),
            dataIndex: "kpi",
            key: "kpi",
            align: "left",
            width: 100,
            editable: true,
            render: function (_, record) { return (React.createElement(antd.Space, { size: "middle" }, record.kpi ? (React.createElement(antd.Tooltip, { title: isNdcActionEditable(record) ? "" : t("ndc:ndcUnauthorisedMsg") },
                React.createElement("span", null, record.kpi))) : (React.createElement(antd.Input, { placeholder: t("ndc:kpiPlaceHolder") })))); },
        },
        {
            title: t("ndc:ndcColumnsKpiUnit"),
            dataIndex: "kpiUnit",
            key: "kpiUnit",
            align: "left",
            width: 100,
            editable: true,
            render: function (_, record) { return (React.createElement(antd.Space, { size: "middle" }, record.kpiUnit ? (React.createElement(antd.Tooltip, { title: isNdcActionEditable(record) ? "" : t("ndc:ndcUnauthorisedMsg") },
                React.createElement("span", null, record.kpiUnit))) : (React.createElement(antd.Input, { placeholder: t("ndc:kpiUnitPlaceHolder") })))); },
        },
        {
            title: t("ndc:ndcColumnsMinistry"),
            dataIndex: "ministryName",
            key: "ministryName",
            align: "left",
            width: 300,
            editable: false,
            render: function (_, record) { return (React.createElement(antd.Tooltip, { title: isSubNdcActionsEditable(record) ? "" : t("ndc:ndcUnauthorisedMsg") },
                React.createElement(antd.Select, { disabled: !(isSubNdcActionsEditable(record) && isEditing(record)), defaultValue: record.ministryName ? record.ministryName : loginMinistry, style: { width: 220 }, onChange: function (value, option) {
                        record.ministryName = option.label;
                        handleSave(record);
                    }, options: ministryOrgList }))); },
        },
        {
            title: t("ndc:ndcColumnsStatus"),
            dataIndex: "status",
            key: "status",
            align: "left",
            width: 200,
            editable: false,
            render: function (_, record) {
                var menu = actionMenu(record);
                return (React.createElement("div", { onClick: function (event) { return event.stopPropagation(); } },
                    record.actionType === NdcDetailsActionType.SubAction &&
                        record.status !== NdcDetailsActionStatus.New ? (React.createElement(antd.Tooltip, { title: record.status, color: TooltipColor, key: TooltipColor },
                        React.createElement(antd.Tag, { className: "clickable", color: getNdcActionStatusTagType(record.status) }, addSpaces(record.status)))) : (""),
                    record.actionType === NdcDetailsActionType.SubAction && menu ? (React.createElement(antd.Popover, { placement: "bottomRight", content: menu, trigger: "click" },
                        React.createElement(icons.EllipsisOutlined, { rotate: 90, style: {
                                fontWeight: 600,
                                fontSize: "1rem",
                                cursor: "pointer",
                            } }))) : (React.createElement("span", null))));
            },
        },
    ];
    var columns = defaultColumns.map(function (col) {
        if (!col.editable) {
            return col;
        }
        return __assign(__assign({}, col), { onCell: function (record) {
                return {
                    record: record,
                    editing: isEditing(record),
                    dataIndex: col.dataIndex,
                    title: col.title,
                    onBlurHandler: function (record) {
                        if (isEditing(record)) {
                            handleSave(record);
                        }
                    },
                    t: t,
                };
            } });
    });
    function onClickedAddNewNdcDetail() {
        return __awaiter(this, void 0, void 0, function () {
            var periodId, newData_1, lastPage;
            return __generator(this, function (_a) {
                if (selectedPeriod.key !== "add_new") {
                    form.setFieldsValue({
                        nationalPlanObjective: "",
                        kpi: "",
                        kpiUnit: "",
                    });
                    periodId = parseInt(selectedPeriod.key);
                    newData_1 = {
                        id: nextAvailableActionId,
                        actionType: NdcDetailsActionType.MainAction,
                        nationalPlanObjective: "",
                        kpi: "",
                        kpiUnit: "",
                        ministryName: loginMinistry !== undefined ? loginMinistry : '',
                        periodId: periodId,
                        status: NdcDetailsActionStatus.New,
                    };
                    setEditingKey(nextAvailableActionId);
                    setNextAvailableActionId(function (value) { return value + 1; });
                    setNdcActionsList(function (ndcActionsList) { return __spreadArray(__spreadArray([], ndcActionsList, true), [
                        newData_1,
                    ], false); });
                    setTableKey(function (key) { return key + 1; });
                    if (ndcMainDetailsForPeriod.length + 1 > pageSize) {
                        lastPage = Math.ceil(ndcMainDetailsForPeriod.length / pageSize);
                        setCurrentPage(lastPage);
                    }
                }
                return [2 /*return*/];
            });
        });
    }
    var components = {
        body: {
            cell: EditableCell,
        },
    };
    var onClickedDeletePeriod = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            setActionInfo({
                action: "Delete",
                headerText: t("ndc:periodDeleteConfirmTitle"),
                type: "danger",
                icon: React.createElement(Icon__namespace.XCircle, null),
                recordId: selectedPeriod.key,
            });
            setOpenConfirmationModal(true);
            return [2 /*return*/];
        });
    }); };
    var onClickedFinalizePeriod = function () { return __awaiter(void 0, void 0, void 0, function () {
        var isPendingActionAvailable;
        return __generator(this, function (_a) {
            if (ndcMainDetailsForPeriod.length === 0) {
                antd.message.open({
                    type: "error",
                    content: t("ndc:finalizeNdcEmptyErrorText"),
                    duration: 3,
                    style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                });
                return [2 /*return*/];
            }
            isPendingActionAvailable = false;
            ndcMainDetailsForPeriod.forEach(function (mainAction) {
                var pendingActions = ndcActionsList.filter(function (action) {
                    return (action.status === NdcDetailsActionStatus.Pending &&
                        action.actionType === NdcDetailsActionType.SubAction &&
                        action.parentActionId === mainAction.id);
                });
                if (pendingActions && pendingActions.length > 0) {
                    isPendingActionAvailable = true;
                    return;
                }
            });
            if (isPendingActionAvailable) {
                antd.message.open({
                    type: "error",
                    content: t("ndc:finalizeErrorText"),
                    duration: 3,
                    style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                });
            }
            else {
                setActionInfo({
                    action: "Finalise",
                    headerText: t("ndc:finalizeApproveTitle"),
                    text: t("ndc:finalizeApproveSubTitle"),
                    type: "primary",
                    icon: React.createElement(Icon__namespace.Clipboard2Check, null),
                    recordId: selectedPeriod.key,
                });
                setOpenConfirmationModal(true);
            }
            return [2 /*return*/];
        });
    }); };
    var onMainTableRowExpand = function (expanded, record) {
        var keys = [];
        if (expanded) {
            keys.push(record.id);
        }
        setExpandedRowKeys(keys);
        setNdcSubActionsForMainAction(record.id);
    };
    function addNewPeriodContent() {
        return (React.createElement("div", null,
            React.createElement(antd.Row, { justify: "start", align: "middle", gutter: [16, 16] },
                React.createElement(antd.Col, { flex: "340px" },
                    React.createElement(RangePicker, { disabledDate: function (current) { return moment(current).year() < 1900; }, onChange: onDateRangeChanged, picker: "year" })),
                React.createElement(antd.Col, { flex: "auto" },
                    React.createElement(antd.Button, { type: "primary", onClick: onAddNewPeriod, htmlType: "submit", loading: loading }, t("ndc:submit"))))));
    }
    var onChange = function (page, size) {
        setCurrentPage(page);
        setPageSize(size);
    };
    function mainNdcActionTableContent() {
        return (React.createElement("div", null,
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form, { form: form, component: false },
                        React.createElement(antd.Table, { tableLayout: "fixed", key: tableKey, className: "common-table-class", rowKey: "id", pagination: {
                                current: currentPage,
                                pageSize: pageSize,
                                total: ndcMainDetailsForPeriod.length,
                                showQuickJumper: true,
                                showSizeChanger: true,
                                onChange: onChange,
                            }, components: components, rowClassName: function () { return "editable-row"; }, bordered: true, loading: loading, dataSource: ndcMainDetailsForPeriod, columns: columns, expandedRowKeys: expandedRowKeys, onExpand: onMainTableRowExpand, expandable: {
                                expandedRowRender: function (record) {
                                    return subNdcActionTableContent();
                                },
                                columnWidth: 40,
                            }, onRow: function (record, rowIndex) {
                                return {
                                    onClick: function (event) {
                                        if (record.id &&
                                            isNdcActionEditable(record) &&
                                            !isEditing(record)) {
                                            form.setFieldsValue(__assign({}, record));
                                            setEditingKey(record.id);
                                        }
                                    },
                                    onMouseLeave: function () {
                                        if (isEditing(record)) {
                                            handleSave(record);
                                        }
                                    },
                                };
                            }, footer: function () {
                                return isGovernmentUser &&
                                    selectedPeriod &&
                                    !selectedPeriod.finalized && (React.createElement(antd.Row, { justify: "center" },
                                    React.createElement(antd.Button, { className: "btnAddNewMainAct", disabled: isMainActionInEditMode(), onClick: onClickedAddNewNdcDetail, type: "default" }, t("ndc:addNdcAction"))));
                            } })))),
            isGovernmentUser && selectedPeriod && !selectedPeriod.finalized ? (React.createElement(antd.Row, { justify: "end", className: "ndc-button-row" }, isMainActionInEditMode() ? (React.createElement(React.Fragment, null,
                React.createElement(antd.Button, { className: "mg-left-1", disabled: true }, t("ndc:delete")),
                React.createElement(antd.Button, { className: "mg-left-1", disabled: true }, t("ndc:finalize")))) : (React.createElement(React.Fragment, null,
                React.createElement(antd.Button, { className: "mg-left-1 btn-danger", onClick: onClickedDeletePeriod, htmlType: "submit", loading: loading }, t("ndc:delete")),
                React.createElement(antd.Button, { className: "mg-left-1", type: "primary", onClick: onClickedFinalizePeriod, htmlType: "submit", loading: loading }, t("ndc:finalize")))))) : ("")));
    }
    function subNdcActionTableContent(record) {
        return (React.createElement(antd.Table, { tableLayout: "fixed", rowKey: "id", components: components, rowClassName: function () { return "editable-row"; }, className: "common-table-class", bordered: true, dataSource: subNdcActionsForPeriod, loading: loading, onRow: function (record, rowIndex) {
                return {
                    onClick: function (event) {
                        if (record.id &&
                            isNdcActionEditable(record) &&
                            !isEditing(record)) {
                            form.setFieldsValue(__assign({}, record));
                            setEditingKey(record.id);
                        }
                    },
                    onMouseLeave: function () {
                        if (isEditing(record)) {
                            handleSave(record);
                        }
                    },
                };
            }, columns: columns, showHeader: false, pagination: false }));
    }
    var onAddNewPeriod = function () { return __awaiter(void 0, void 0, void 0, function () {
        var periodItem_1, existingIndex, response, addedPeriodItem, updatedPeriodItem_1, exception_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!selectedDateRangeRef ||
                        !selectedDateRangeRef.current ||
                        !selectedDateRangeRef.current.startYear ||
                        !selectedDateRangeRef.current.endYear) {
                        antd.message.open({
                            type: "error",
                            content: t("ndc:invalidYearsSelected"),
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        return [2 /*return*/];
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 5, , 6]);
                    periodItem_1 = {
                        startYear: selectedDateRangeRef.current.startYear,
                        endYear: selectedDateRangeRef.current.endYear,
                        finalized: false,
                    };
                    existingIndex = periodItems.findIndex(function (item) {
                        return inRange(periodItem_1.startYear, item.startYear, item.endYear) ||
                            inRange(periodItem_1.endYear, item.startYear, item.endYear);
                    });
                    if (!(existingIndex === -1)) return [3 /*break*/, 3];
                    return [4 /*yield*/, post("national/programme/addNdcDetailsPeriod", __assign({}, periodItem_1))];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        addedPeriodItem = response.data;
                        updatedPeriodItem_1 = __assign(__assign({}, addedPeriodItem), { key: addedPeriodItem.id, label: "".concat(addedPeriodItem.startYear, "-").concat(addedPeriodItem.endYear) });
                        setPeriodItems(function (items) { return __spreadArray(__spreadArray([], items, true), [updatedPeriodItem_1], false); });
                        setSelectedPeriod(updatedPeriodItem_1);
                        selectedDateRangeRef.current = null;
                    }
                    return [3 /*break*/, 4];
                case 3:
                    antd.message.open({
                        type: "error",
                        content: t("ndc:rangeAlreadyExists"),
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    _a.label = 4;
                case 4: return [3 /*break*/, 6];
                case 5:
                    exception_3 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: exception_3.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 6];
                case 6: return [2 /*return*/];
            }
        });
    }); };
    var onDateRangeChanged = function (range) {
        if (range) {
            var period = {
                startYear: Number(moment(range[0]).year()),
                endYear: Number(moment(range[1]).year()),
            };
            if (period.startYear === period.endYear) {
                antd.message.open({
                    type: "error",
                    content: t("ndc:sameStartEndDates"),
                    duration: 3,
                    style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                });
            }
            else {
                selectedDateRangeRef.current = period;
            }
        }
        else {
            selectedDateRangeRef.current = {
                startYear: range,
                endYear: range,
            };
        }
    };
    var onTabChange = function (key) {
        var selectedPeriod = periodItems.find(function (item) { return item.key === key; });
        if (selectedPeriod) {
            setSelectedPeriod(selectedPeriod);
        }
    };
    var onActionConfirmed = function () { return __awaiter(void 0, void 0, void 0, function () {
        var actionResponse, exception_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 10, , 11]);
                    if (!(actionInfo.action === "Approve")) return [3 /*break*/, 3];
                    return [4 /*yield*/, post("national/programme/approveNdcDetailsAction", {
                            id: actionInfo.recordId,
                        })];
                case 2:
                    actionResponse = _a.sent();
                    return [3 /*break*/, 9];
                case 3:
                    if (!(actionInfo.action === "Reject")) return [3 /*break*/, 5];
                    return [4 /*yield*/, post("national/programme/rejectNdcDetailsAction", {
                            id: actionInfo.recordId,
                        })];
                case 4:
                    actionResponse = _a.sent();
                    return [3 /*break*/, 9];
                case 5:
                    if (!(actionInfo.action === "Finalise")) return [3 /*break*/, 7];
                    return [4 /*yield*/, post("national/programme/finalizeNdcDetailsPeriod", {
                            id: selectedPeriod.key,
                        })];
                case 6:
                    actionResponse = _a.sent();
                    return [3 /*break*/, 9];
                case 7:
                    if (!(actionInfo.action === "Delete")) return [3 /*break*/, 9];
                    return [4 /*yield*/, post("national/programme/deleteNdcDetailsPeriod", {
                            id: selectedPeriod.key,
                        })];
                case 8:
                    actionResponse = _a.sent();
                    _a.label = 9;
                case 9: return [3 /*break*/, 11];
                case 10:
                    exception_4 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: exception_4.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 11];
                case 11:
                    if (actionResponse) {
                        if (actionInfo.action === "Delete") {
                            antd.message.open({
                                type: "success",
                                content: t("ndc:deletePeriodSuccessMsg"),
                                duration: 3,
                                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                            });
                            fetchNdcDetailPeriods();
                        }
                        else if (actionInfo.action === "Finalise") {
                            antd.message.open({
                                type: "success",
                                content: t("ndc:finalizeSuccessMsg"),
                                duration: 3,
                                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                            });
                            fetchNdcDetailPeriods();
                            setExpandedRowKeys([]);
                            ClearEditMode();
                        }
                        else if (actionInfo.action === "Approve") {
                            antd.message.open({
                                type: "success",
                                content: t("ndc:approveSuccessMsg"),
                                duration: 3,
                                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                            });
                            fetchNdcDetailActions();
                        }
                        else if (actionInfo.action === "Reject") {
                            antd.message.open({
                                type: "success",
                                content: t("ndc:rejectSuccessMsg"),
                                duration: 3,
                                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                            });
                            fetchNdcDetailActions();
                        }
                    }
                    setOpenConfirmationModal(false);
                    setLoading(false);
                    return [2 /*return*/];
            }
        });
    }); };
    var onActionCanceled = function () {
        setOpenConfirmationModal(false);
    };
    var fetchNdcDetailPeriods = function () { return __awaiter(void 0, void 0, void 0, function () {
        var periods, addNewTab, response, exception_5;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    periods = [];
                    addNewTab = {
                        key: "add_new",
                        label: "Add New",
                        startYear: 0,
                        endYear: 0,
                        finalized: false,
                        deleted: false,
                    };
                    return [4 /*yield*/, get("national/programme/queryNdcDetailsPeriod")];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        periods = response.data.map(function (period) {
                            return __assign(__assign({}, period), { key: period.id, label: period.finalized ? (React.createElement("span", null,
                                    React.createElement(icons.LockOutlined, null),
                                    " ",
                                    period.startYear,
                                    "-",
                                    period.endYear,
                                    " ")) : ("".concat(period.startYear, "-").concat(period.endYear)) });
                        });
                    }
                    if (isGovernmentUser) {
                        periods.unshift(addNewTab);
                    }
                    setPeriodItems(periods);
                    if (isGovernmentUser) {
                        setSelectedPeriod(addNewTab);
                    }
                    else {
                        setSelectedPeriod(periods[0]);
                    }
                    setLoading(false);
                    return [3 /*break*/, 5];
                case 3:
                    exception_5 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: exception_5.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var fetchNdcDetailActions = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, maxActionId, exception_6;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, get("national/programme/queryNdcDetailsAction")];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        maxActionId = Math.max.apply(Math, response.data.map(function (item) { return item.id; }));
                        setNextAvailableActionId(maxActionId + 1);
                        setNdcActionsList(response.data);
                    }
                    setLoading(false);
                    return [3 /*break*/, 5];
                case 3:
                    exception_6 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: exception_6.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var fetchMinistries = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, ministryOrgDetails, exception_7;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, get("national/organisation/getMinistries")];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        ministryOrgDetails = response.data.map(function (value) {
                            return {
                                value: value.company_companyId,
                                label: value.company_name,
                            };
                        });
                        setMinistryOrgList(ministryOrgDetails);
                    }
                    setLoading(false);
                    return [3 /*break*/, 5];
                case 3:
                    exception_7 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: exception_7.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        fetchNdcDetailPeriods();
        fetchNdcDetailActions();
        fetchMinistries();
    }, []);
    return (React.createElement("div", { className: "ndc-details content-container" },
        React.createElement("div", { className: "title-bar" },
            React.createElement(antd.Row, { justify: "space-between", align: "middle" },
                React.createElement(antd.Col, { span: 20 },
                    React.createElement("div", { className: "body-title" }, t("ndc:ndcTitle"))))),
        React.createElement("div", null,
            React.createElement(antd.Tabs, { centered: false, defaultActiveKey: "1", items: periodItems, activeKey: selectedPeriod ? selectedPeriod.key : "1", onChange: onTabChange })),
        React.createElement("div", null, selectedPeriod
            ? selectedPeriod.key === "add_new"
                ? addNewPeriodContent()
                : mainNdcActionTableContent()
            : ""),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onActionConfirmed, onActionCanceled: onActionCanceled, openModal: openConfirmationModal, errorMsg: "", loading: loading })));
};

var ImgWithFallback = function (_a) {
    var src = _a.src, alt = _a.alt, fallbackSrc = _a.fallbackSrc, mediaType = _a.mediaType, className = _a.className, delegated = __rest(_a, ["src", "alt", "fallbackSrc", "mediaType", "className"]);
    return (React.createElement("picture", null,
        React.createElement("source", { srcSet: src, type: mediaType }),
        React.createElement("img", __assign({ className: className, src: fallbackSrc, alt: alt }, delegated))));
};

var css_248z$6 = ".margin-left-1 {\n  margin-left: 1rem; }\n\n.investment-body {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  height: 3rem; }\n  .investment-body .invester {\n    display: flex;\n    flex-direction: column;\n    width: 50%; }\n    .investment-body .invester .name-and-progress {\n      display: flex;\n      flex-direction: row;\n      width: 100%; }\n      .investment-body .invester .name-and-progress .name {\n        font-weight: 600;\n        color: rgba(58, 53, 65, 0.8);\n        margin-bottom: 0.3rem; }\n      .investment-body .invester .name-and-progress .progress {\n        display: flex;\n        flex-direction: row;\n        align-items: flex-start;\n        margin-top: 0.2rem;\n        margin-left: 1rem; }\n  .investment-body .amount {\n    display: flex;\n    flex-direction: row;\n    font-weight: 500;\n    align-items: center;\n    justify-content: center;\n    color: rgba(58, 53, 65, 0.8);\n    width: 32%; }\n  .investment-body .actions {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 18%; }\n    .investment-body .actions .actions-icon-container {\n      display: flex;\n      height: 30px;\n      width: 30px;\n      align-items: center;\n      justify-content: center;\n      background-color: rgba(151, 110, 215, 0.3);\n      border-radius: 50px; }\n      .investment-body .actions .actions-icon-container .action-icons {\n        color: #008f39;\n        font-size: 16px; }\n";
styleInject(css_248z$6);

var InvestmentBody = function (props) {
    var data = props.data, translator = props.translator;
    translator.t;
    var _a = React.useState(false), loading = _a[0]; _a[1];
    var _b = React.useState({}), investmentData = _b[0], setInvestmentData = _b[1];
    React.useEffect(function () {
        setInvestmentData(data);
        console.log(data);
    }, [data]);
    return loading ? (React.createElement(antd.Skeleton, null)) : (React.createElement("div", { className: "investment-body" },
        React.createElement("div", { className: "invester" },
            React.createElement("div", { className: "name-and-progress" },
                React.createElement("div", { className: "name" }, investmentData === null || investmentData === void 0 ? void 0 : investmentData.invester),
                React.createElement("div", { className: "progress" },
                    (investmentData === null || investmentData === void 0 ? void 0 : investmentData.status) === exports.InvestmentStatus.APPROVED && (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380" } })),
                    (investmentData === null || investmentData === void 0 ? void 0 : investmentData.status) === exports.InvestmentStatus.REJECTED && (React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70" } })))),
            React.createElement("div", { className: "time" }, moment(parseInt(investmentData === null || investmentData === void 0 ? void 0 : investmentData.createdAt)).format("DD MMMM YYYY @ HH:mm"))),
        React.createElement("div", { className: "amount" },
            "$",
            addCommSep(investmentData === null || investmentData === void 0 ? void 0 : investmentData.amount)),
        React.createElement("div", { className: "actions" },
            (investmentData === null || investmentData === void 0 ? void 0 : investmentData.type) !== null && (React.createElement("div", { className: "actions-icon-container" },
                React.createElement(antd.Tooltip, { title: investmentData === null || investmentData === void 0 ? void 0 : investmentData.type, color: TooltipColor, key: TooltipColor }, (investmentData === null || investmentData === void 0 ? void 0 : investmentData.type) === exports.InvestmentType.PUBLIC ? (React.createElement(icons.EyeOutlined, { className: "action-icons" })) : (React.createElement(icons.EyeInvisibleOutlined, { className: "action-icons" }))))),
            (investmentData === null || investmentData === void 0 ? void 0 : investmentData.level) !== null && (React.createElement("div", { className: "actions-icon-container" },
                React.createElement(antd.Tooltip, { title: investmentData === null || investmentData === void 0 ? void 0 : investmentData.level, color: TooltipColor, key: TooltipColor }, (investmentData === null || investmentData === void 0 ? void 0 : investmentData.level) === exports.InvestmentLevel.INTERNATIONAL ? (React.createElement(icons.GlobalOutlined, { className: "action-icons" })) : (React.createElement(icons.FlagOutlined, { className: "action-icons" }))))),
            (investmentData === null || investmentData === void 0 ? void 0 : investmentData.stream) !== null && (React.createElement("div", { className: "actions-icon-container" },
                React.createElement(antd.Tooltip, { title: addSpaces(investmentData === null || investmentData === void 0 ? void 0 : investmentData.stream), color: TooltipColor, key: TooltipColor }, (investmentData === null || investmentData === void 0 ? void 0 : investmentData.stream) === exports.InvestmentStream.CLIMATE_FINANCE ? (React.createElement(icons.BankOutlined, { className: "action-icons" })) : (React.createElement(icons.LineChartOutlined, { className: "action-icons" }))))))));
};

var getValidNdcActions = function (programme) {
    var _a;
    var actionCreditsArray = [];
    (_a = programme.mitigationActions) === null || _a === void 0 ? void 0 : _a.map(function (action) {
        var _a;
        var verfiedAction = false;
        if (action.projectMaterial) {
            for (var _i = 0, _b = action.projectMaterial; _i < _b.length; _i++) {
                var documentDetails = _b[_i];
                var document_1 = void 0;
                documentDetails.url ? document_1 = documentDetails.url : document_1 = documentDetails;
                if (document_1.includes("VERIFICATION_REPORT") && ((_a = action.properties) === null || _a === void 0 ? void 0 : _a.availableCredits)) {
                    verfiedAction = true;
                    break;
                }
            }
        }
        if (verfiedAction && 0 < action.properties.availableCredits) {
            actionCreditsArray.push({
                actionId: action.actionId,
                availableCredits: action.properties.availableCredits,
            });
        }
    });
    return actionCreditsArray;
};
var ProgrammeIssueForm = function (props) {
    var programme = props.programme, onFinish = props.onFinish, onCancel = props.onCancel, actionBtnText = props.actionBtnText, subText = props.subText, enableIssue = props.enableIssue, translator = props.translator, ndcActions = props.ndcActions;
    var t = translator.t;
    var _a = React.useState(undefined), popupError = _a[0], setPopupError = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    return (React.createElement("div", { className: "transfer-form" },
        React.createElement(antd.Row, null,
            React.createElement(antd.Col, { span: 24, className: "sub-text" }, subText)),
        React.createElement(antd.Form, { name: "transfer_init_popup", layout: "vertical", onChange: function () { return setPopupError(undefined); }, onFinish: function (d) { return __awaiter(void 0, void 0, void 0, function () {
                var totalAmount, validIssues, res;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            validIssues = [];
                            if (enableIssue) {
                                totalAmount = 0;
                                d.issueAmount.map(function (action) {
                                    totalAmount += action.issueCredit;
                                    if (action.issueCredit > 0) {
                                        validIssues.push({
                                            actionId: action.actionId,
                                            issueCredit: action.issueCredit,
                                        });
                                    }
                                });
                                d.issueAmount = validIssues;
                            }
                            if (totalAmount === 0) {
                                setPopupError("Issue amount should be greater than 0");
                                setLoading(false);
                                return [2 /*return*/];
                            }
                            setLoading(true);
                            return [4 /*yield*/, onFinish(d)];
                        case 1:
                            res = _a.sent();
                            setPopupError(res);
                            setLoading(false);
                            return [2 /*return*/];
                    }
                });
            }); } },
            ndcActions && enableIssue ? (React.createElement(antd.Form.List, { name: "issueAmount", initialValue: ndcActions }, function (fields, _a) {
                _a.add; _a.remove;
                return (React.createElement("div", { style: { width: "100%" }, className: "space-container" }, fields.map(function (_a) {
                    var key = _a.key, name = _a.name, restField = __rest(_a, ["key", "name"]);
                    return (React.createElement(antd.Space, { wrap: true, key: key, style: {
                            display: "flex",
                            marginBottom: 8,
                        }, align: "center", size: "large" },
                        React.createElement("div", { style: { width: "100%" } },
                            React.createElement(antd.Row, null,
                                React.createElement(antd.Col, { lg: 11, md: 24 },
                                    React.createElement("div", { className: "label" }, "".concat(t("view:issueCreditNdcIdText"), ": ").concat(ndcActions[name].actionId))),
                                React.createElement(antd.Col, { lg: 6, md: 12 },
                                    React.createElement(antd.Form.Item, { initialValue: 0, className: "popup-credit-input", name: [name, "issueCredit"], rules: [
                                            {
                                                pattern: new RegExp(/^[+]?([.]\d+|\d+[.]?\d*)$/g),
                                                message: "Credit Should be a positive number",
                                            },
                                            {
                                                required: true,
                                                message: "Required field",
                                            },
                                            function (_a) {
                                                _a.getFieldValue;
                                                return ({
                                                    validator: function (rule, value) {
                                                        if (value &&
                                                            parseFloat(value) >
                                                                ndcActions[name].availableCredits) {
                                                            // eslint-disable-next-line prefer-promise-reject-errors
                                                            return Promise.reject("Amount > Authorised");
                                                        }
                                                        return Promise.resolve();
                                                    },
                                                });
                                            },
                                        ] },
                                        React.createElement(antd.InputNumber, { placeholder: "", controls: false, onKeyPress: function (event) {
                                                if (!/[0-9\.]/.test(event.key)) {
                                                    event.preventDefault();
                                                }
                                            } }))),
                                React.createElement(antd.Col, { lg: 1, md: 1, className: "seperator" }, "/"),
                                React.createElement(antd.Col, { lg: 6, md: 12 },
                                    React.createElement(antd.Form.Item, __assign({ className: "popup-credit-input" }, restField, { name: [name, "availableCredits"] }),
                                        React.createElement(antd.InputNumber, { formatter: function (value) { return addCommSep(value); }, disabled: true })))))));
                })));
            })) : (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: 18, md: 20 },
                    React.createElement("div", { className: "label" }, "".concat(t("view:authCreditText"), " (").concat(creditUnit, ")"))),
                React.createElement(antd.Col, { lg: 6, md: 6 },
                    React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                        React.createElement(antd.InputNumber, { placeholder: addCommSep(programme.creditEst - programme.creditIssued), disabled: true }))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: "Remarks", name: "comment" },
                        React.createElement(antd.Input.TextArea, { placeholder: "" })))),
            popupError ? (React.createElement(antd.Alert, { className: "error", message: popupError, type: "error", showIcon: true })) : (""),
            React.createElement(antd.Form.Item, { className: "footer" },
                React.createElement(antd.Button, { htmlType: "button", onClick: onCancel }, t("view:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading }, actionBtnText)))));
};

var ProgrammeRetireForm = function (props) {
    var programme = props.programme, onFinish = props.onFinish, onCancel = props.onCancel, actionBtnText = props.actionBtnText, subText = props.subText, hideType = props.hideType, myCompanyId = props.myCompanyId, translator = props.translator;
    var t = translator.t;
    var _a = React.useState(undefined), popupError = _a[0], setPopupError = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState(""), type = _c[0], setType = _c[1];
    var form = antd.Form.useForm()[0];
    var _d = React.useState(0), currentSum = _d[0], setCurrentSum = _d[1];
    var _e = React.useState([]), countryList = _e[0], setCountryList = _e[1];
    var _f = React.useState(); _f[0]; var setValue = _f[1];
    var _g = React.useState(false), checked = _g[0], setChecked = _g[1];
    var _h = React.useState(), govData = _h[0], setGovData = _h[1];
    var _j = useConnection(); _j.get; _j.delete; var post = _j.post;
    var getGovernmentDetails = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    console.log("getting government profile");
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.GOVERNMENT,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setGovData(response === null || response === void 0 ? void 0 : response.data[0]);
                        console.log("gov profile", response === null || response === void 0 ? void 0 : response.data[0]);
                        return [2 /*return*/, response === null || response === void 0 ? void 0 : response.data[0]];
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting government data", error_1);
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var handleSearch = function (newValue) { return __awaiter(void 0, void 0, void 0, function () {
        var resp;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(newValue !== undefined)) return [3 /*break*/, 2];
                    return [4 /*yield*/, post("national/organisation/countries", {
                            page: 1,
                            size: 250,
                            filterAnd: [
                                {
                                    key: "name",
                                    operation: "like",
                                    value: "%" + newValue.charAt(0).toUpperCase() + newValue.slice(1) + "%",
                                },
                            ],
                            sort: {
                                key: "name",
                                order: "ASC",
                            },
                        })];
                case 1:
                    resp = _a.sent();
                    setCountryList(resp.data.map(function (d) { return ({ label: d.name, value: d.alpha2 }); }));
                    _a.label = 2;
                case 2: return [2 /*return*/];
            }
        });
    }); };
    var handleChange = function (newValue) {
        setValue(newValue);
    };
    // if (!toCompanyDefault) {
    //   const myIndex = programme.companyId.map(e => Number(e)).indexOf(userCompanyId!);
    //   if (myIndex >= 0) {
    //     programme.companyId.splice(myIndex, 1);
    //     programme.creditOwnerPercentage.splice(myIndex, 1);
    //   }
    // }
    if (!programme.creditOwnerPercentage && programme.companyId.length === 1) {
        programme.creditOwnerPercentage = [100];
    }
    var companies = {};
    for (var _i = 0, _k = programme.company; _i < _k.length; _i++) {
        var c = _k[_i];
        companies[c.companyId] = c;
    }
    var validCompanies = [];
    var companyCredit = [];
    var totalCredits = 0;
    var companyName = undefined;
    for (var index in programme.creditOwnerPercentage) {
        if ((hideType && Number(programme.companyId[index]) !== myCompanyId) ||
            parseInt(companies[Number(programme.companyId[index])].state) ===
                exports.CompanyState.SUSPENDED.valueOf()) {
            continue;
        }
        else {
            companyName = companies[Number(programme.companyId[index])].name;
        }
        var companyAvailableTotal = ((programme.creditBalance -
            (programme.creditFrozen ? programme.creditFrozen[index] : 0)) *
            programme.creditOwnerPercentage[index]) /
            100;
        validCompanies.push({
            percentage: programme.creditOwnerPercentage[index],
            name: companies[Number(programme.companyId[index])].name,
            available: companyAvailableTotal,
            companyId: Number(programme.companyId[index]),
        });
        companyCredit.push(0);
        totalCredits += companyAvailableTotal;
    }
    React.useEffect(function () {
        handleSearch("");
        if (hideType) {
            setType("0");
        }
        getGovernmentDetails();
    }, []);
    if (!govData) {
        return React.createElement("div", null, "Loading");
    }
    return (React.createElement("div", { className: "transfer-form" },
        subText && (React.createElement(antd.Row, null,
            React.createElement(antd.Col, { span: 24, className: "sub-text" }, subText))),
        React.createElement(antd.Form, { name: "transfer_init_popup", layout: "vertical", form: form, initialValues: {
                companyCredit: companyCredit,
            }, onChange: function () { return setPopupError(undefined); }, onValuesChange: function (v, allVal) {
                if (allVal.companyCredit) {
                    setCurrentSum(allVal.companyCredit.reduce(function (a, b) { return (a ? a : 0) + (b ? b : 0); }, 0));
                }
            }, onFinish: function (d) { return __awaiter(void 0, void 0, void 0, function () {
                var res;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            setLoading(true);
                            if (d.comment) {
                                d.comment = d.comment.trim();
                            }
                            if (hideType) {
                                d.type = "0";
                            }
                            if (d.type === "0") {
                                if (currentSum === 0) {
                                    setPopupError("Total Amount should be greater than 0");
                                    setLoading(false);
                                    return [2 /*return*/];
                                }
                                d.fromCompanyIds = validCompanies.map(function (e) { return Number(e.companyId); });
                                // programme.companyId.map((n) => Number(n));
                                // d.companyCredit = d.companyCredit.map((n: any) => (n === undefined ? 0 : n));
                                d.toCompanyMeta = {
                                    name: (d.company !== "" && d.company !== null && d.company !== undefined) ? d.company : undefined,
                                    country: d.country,
                                };
                            }
                            d.omgePercentage = Number(govData.omgePercentage);
                            return [4 /*yield*/, onFinish(d)];
                        case 1:
                            res = _a.sent();
                            setPopupError(res);
                            setLoading(false);
                            return [2 /*return*/];
                    }
                });
            }); } },
            hideType && (React.createElement(React.Fragment, null,
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:from"), name: "from" },
                            React.createElement(antd.Input, { placeholder: companyName, disabled: true })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:programme"), name: "programme" },
                            React.createElement(antd.Input, { placeholder: programme.title, disabled: true })))))),
            !hideType && (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: "", name: "type", valuePropName: "type", rules: [
                            {
                                required: true,
                                message: "Required field",
                            },
                        ] },
                        React.createElement(antd.Radio.Group, { onChange: function (v) {
                                setType(v.target.value);
                                form.setFieldsValue({ type: v.target.value });
                            } },
                            React.createElement(antd.Space, { direction: "vertical" },
                                React.createElement(antd.Radio, { value: "0" }, "Cross-border transfer"),
                                React.createElement(antd.Radio, { value: "1" }, "Legal Action"),
                                React.createElement(antd.Radio, { value: "2" }, "Other"))))))),
            type === "0" && (React.createElement("div", null,
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:country"), name: "country", rules: [
                                {
                                    required: true,
                                    message: "Required field",
                                },
                            ] },
                            React.createElement(antd.Select, { showSearch: true, placeholder: t("view:searchCountry"), showArrow: true, filterOption: false, onSearch: handleSearch, onChange: handleChange, notFoundContent: null, options: countryList })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { span: 24 },
                        React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:company"), name: "company" },
                            React.createElement(antd.Input, null)))),
                validCompanies.map(function (pert, index) {
                    return (React.createElement(antd.Row, null,
                        React.createElement(antd.Col, { lg: 11, md: 24 }, hideType ? (React.createElement("div", { className: "label" }, "".concat(t("view:totalRetireCredit"), " (").concat(creditUnit, ")"))) : (React.createElement("div", { className: "label" }, pert.name))),
                        React.createElement(antd.Col, { lg: 6, md: 12 },
                            React.createElement(antd.Form.Item, { className: "popup-credit-input", name: ["companyCredit", index], rules: [
                                    {
                                        pattern: new RegExp(/^[+]?([.]\d+|\d+[.]?\d*)$/g),
                                        message: "Credit Should be a positive number",
                                    },
                                    {
                                        required: true,
                                        message: "Required field",
                                    },
                                    function (_a) {
                                        var getFieldValue = _a.getFieldValue;
                                        return ({
                                            validator: function (rule, v) {
                                                if (getFieldValue(["companyCredit", index]) &&
                                                    parseFloat(getFieldValue(["companyCredit", index])) > pert.available) {
                                                    // eslint-disable-next-line prefer-promise-reject-errors
                                                    return Promise.reject("Retire Amount > Credit Balance");
                                                }
                                                return Promise.resolve();
                                            },
                                        });
                                    },
                                ] },
                                React.createElement(antd.InputNumber, { placeholder: "", controls: false, onKeyPress: function (event) {
                                        if (!/[0-9\.]/.test(event.key)) {
                                            event.preventDefault();
                                        }
                                    } }))),
                        React.createElement(antd.Col, { lg: 1, md: 1, className: "seperator" }, "/"),
                        React.createElement(antd.Col, { lg: 6, md: 12 },
                            React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                                React.createElement(antd.InputNumber, { placeholder: addCommSep(pert.available), disabled: true })))));
                }),
                !hideType && validCompanies.length > 1 && (React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 11, md: 24 },
                        React.createElement("div", { className: "label" }, "".concat(t("view:totalTransferCredit"), " (").concat(creditUnit, ")"))),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(currentSum), disabled: true }))),
                    React.createElement(antd.Col, { lg: 1, md: 1, className: "seperator" }, "/"),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(totalCredits), disabled: true }))))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 11, md: 24 },
                        React.createElement("div", { className: "label" }, "".concat(t("view:govInternationalAcc")))),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(currentSum -
                                    Number(((currentSum * govData.omgePercentage) / 100).toFixed(2))), disabled: true }))),
                    React.createElement(antd.Col, { lg: 1, md: 1, className: "seperator" }, "/"),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(totalCredits), disabled: true })))),
                React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 11, md: 24, style: { display: "flex" } },
                        React.createElement("div", { className: "label" }, "".concat(t("view:omgeAcc"))),
                        React.createElement("div", { className: "info-container" },
                            React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "topLeft", trigger: "hover", title: t("view:omgeDesc"), overlayClassName: "custom-tooltip" },
                                React.createElement(Icon.InfoCircle, { color: "#000000", size: 15 })))),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(Number(((currentSum * govData.omgePercentage) / 100).toFixed(2))), disabled: true }))),
                    React.createElement(antd.Col, { lg: 1, md: 1, className: "seperator" }, "/"),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(totalCredits), disabled: true })))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: "Remarks", name: "comment", rules: [
                            {
                                required: true,
                                message: "Required field",
                            },
                            function (_a) {
                                _a.getFieldValue;
                                return ({
                                    validator: function (rule, v) {
                                        if (v !== undefined && v !== "" && v.trim() === "") {
                                            // eslint-disable-next-line prefer-promise-reject-errors
                                            return Promise.reject("Required field");
                                        }
                                        return Promise.resolve();
                                    },
                                });
                            },
                        ] },
                        React.createElement(antd.Input.TextArea, { placeholder: "" })))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "text-left", valuePropName: "checked", label: "", name: "confirm" },
                        React.createElement(antd.Checkbox, { className: "label", onChange: function (v) { return setChecked(v.target.checked); } }, hideType ? t("view:confirmRetire") : t("view:confirmClosure"))))),
            popupError ? (React.createElement(antd.Alert, { className: "error", message: popupError, type: "error", showIcon: true })) : (""),
            React.createElement(antd.Form.Item, { className: "footer" },
                React.createElement(antd.Button, { htmlType: "button", onClick: onCancel }, t("view:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading, disabled: !checked }, actionBtnText)))));
};

var ProgrammeRevokeForm = function (props) {
    var programme = props.programme, onFinish = props.onFinish, onCancel = props.onCancel, actionBtnText = props.actionBtnText, subText = props.subText, showCertifiers = props.showCertifiers, translator = props.translator;
    var t = translator.t;
    var form = antd.Form.useForm()[0];
    var _a = React.useState(undefined), popupError = _a[0], setPopupError = _a[1];
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState(false), remarks = _c[0], setRemarks = _c[1];
    var onRemarkValues = function () { return __awaiter(void 0, void 0, void 0, function () {
        var comment;
        return __generator(this, function (_a) {
            comment = form.getFieldValue("comment");
            if (comment === undefined || comment === "") {
                setRemarks(false);
            }
            else {
                setRemarks(true);
            }
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        onRemarkValues();
    });
    return (React.createElement("div", { className: "transfer-form" },
        React.createElement(antd.Row, null,
            React.createElement(antd.Col, { span: 24, className: "sub-text" }, subText)),
        React.createElement(antd.Form, { name: "transfer_init_popup", layout: "vertical", initialValues: {
                certifierId: programme.certifierId && programme.certifierId.length === 1
                    ? Number(programme.certifierId[0])
                    : undefined,
            }, onChange: function () { return setPopupError(undefined); }, onValuesChange: onRemarkValues, form: form, onFinish: function (d) { return __awaiter(void 0, void 0, void 0, function () {
                var res;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            setLoading(true);
                            return [4 /*yield*/, onFinish(d)];
                        case 1:
                            res = _a.sent();
                            setPopupError(res);
                            setLoading(false);
                            return [2 /*return*/];
                    }
                });
            }); } },
            showCertifiers && (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:certifier"), name: "certifierId", rules: [
                            {
                                required: true,
                                message: "Required field",
                            },
                        ] },
                        React.createElement(antd.Select, { disabled: !programme.certifierId || programme.certifierId.length <= 1, showArrow: true, filterOption: false, defaultActiveFirstOption: true, options: programme.certifier.map(function (c) { return ({
                                label: c.name,
                                value: c.companyId,
                            }); }) }))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: "Remarks", name: "comment", rules: [
                            {
                                required: true,
                                message: "Required field",
                            },
                        ] },
                        React.createElement(antd.Input.TextArea, { placeholder: "" })))),
            popupError ? (React.createElement(antd.Alert, { className: "error", message: popupError, type: "error", showIcon: true })) : (""),
            React.createElement(antd.Form.Item, { className: "footer" },
                React.createElement(antd.Button, { htmlType: "button", onClick: onCancel }, t("view:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading, disabled: !remarks }, actionBtnText)))));
};

var ProgrammeTransferForm = function (props) {
    var programme = props.programme, onFinish = props.onFinish, onCancel = props.onCancel, actionBtnText = props.actionBtnText; props.subText; var toCompanyDefault = props.toCompanyDefault, disableToCompany = props.disableToCompany, receiverLabelText = props.receiverLabelText, userCompanyId = props.userCompanyId, companyRole = props.companyRole, translator = props.translator, _a = props.ministryLevelPermission, ministryLevelPermission = _a === void 0 ? false : _a;
    var t = translator.t;
    var _b = React.useState(undefined), popupError = _b[0], setPopupError = _b[1];
    var _c = React.useState(false), loading = _c[0], setLoading = _c[1];
    var _d = React.useState(0), currentSum = _d[0], setCurrentSum = _d[1];
    var _e = React.useState(toCompanyDefault ? [toCompanyDefault] : []), companyList = _e[0], setCompanyList = _e[1];
    var _f = React.useState(), value = _f[0], setValue = _f[1];
    var _g = useConnection(); _g.get; _g.delete; var post = _g.post;
    var handleSearch = function (newValue) { return __awaiter(void 0, void 0, void 0, function () {
        var resp;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(newValue !== undefined)) return [3 /*break*/, 2];
                    return [4 /*yield*/, post("national/organisation/queryNames", {
                            page: 1,
                            size: 50,
                            filterAnd: [
                                {
                                    key: "name",
                                    operation: "like",
                                    value: "%" + newValue + "%",
                                },
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.PROGRAMME_DEVELOPER,
                                },
                            ],
                            sort: {
                                key: "name",
                                order: "ASC",
                            },
                        })];
                case 1:
                    resp = _a.sent();
                    setCompanyList(resp.data
                        .map(function (d) { return ({
                        label: d.name,
                        value: d.companyId,
                        state: d.state,
                    }); })
                        .filter(function (d) {
                        return (d.value !== userCompanyId &&
                            parseInt(d.state) === exports.CompanyState.ACTIVE.valueOf());
                    }));
                    return [3 /*break*/, 3];
                case 2:
                    setCompanyList(toCompanyDefault ? [toCompanyDefault] : []);
                    _a.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var handleChange = function (newValue) {
        setValue(newValue);
    };
    // if (!toCompanyDefault) {
    //   const myIndex = programme.companyId.map(e => Number(e)).indexOf(userCompanyId!);
    //   if (myIndex >= 0) {
    //     programme.companyId.splice(myIndex, 1);
    //     programme.creditOwnerPercentage.splice(myIndex, 1);
    //   }
    // }
    if (!programme.creditOwnerPercentage && programme.companyId.length === 1) {
        programme.creditOwnerPercentage = [100];
    }
    var companies = {};
    for (var _i = 0, _h = programme.company; _i < _h.length; _i++) {
        var c = _h[_i];
        companies[c.companyId] = c;
    }
    var validCompanies = [];
    var companyCredit = [];
    for (var index in programme.creditOwnerPercentage) {
        if (((toCompanyDefault &&
            userCompanyId !== Number(programme.companyId[index])) ||
            (!toCompanyDefault &&
                (userCompanyId === Number(programme.companyId[index]) ||
                    companyRole === exports.CompanyRole.GOVERNMENT ||
                    ministryLevelPermission))) &&
            parseInt(companies[Number(programme.companyId[index])].state) ===
                exports.CompanyState.ACTIVE.valueOf()) {
            var companyAvailableTotal = ((programme.creditBalance -
                (programme.creditFrozen ? programme.creditFrozen[index] : 0)) *
                programme.creditOwnerPercentage[index]) /
                100;
            validCompanies.push({
                percentage: programme.creditOwnerPercentage[index],
                name: companies[Number(programme.companyId[index])].name,
                companyId: Number(programme.companyId[index]),
                available: companyAvailableTotal,
            });
            companyCredit.push(0);
        }
    }
    React.useEffect(function () {
        handleSearch("");
    }, []);
    return (React.createElement("div", { className: "transfer-form" },
        React.createElement(antd.Form, { name: "transfer_init_popup", layout: "vertical", initialValues: {
                toCompanyId: toCompanyDefault ? toCompanyDefault.value : undefined,
                companyCredit: companyCredit,
            }, onChange: function () { return setPopupError(undefined); }, onValuesChange: function (v, allVal) {
                setCurrentSum(allVal.companyCredit.reduce(function (a, b) { return (a ? a : 0) + (b ? b : 0); }, 0));
            }, onFinish: function (d) { return __awaiter(void 0, void 0, void 0, function () {
                var res;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (currentSum === 0) {
                                setPopupError("Total Amount should be greater than 0");
                                return [2 /*return*/];
                            }
                            setLoading(true);
                            d.fromCompanyIds = validCompanies.map(function (e) { return Number(e.companyId); });
                            return [4 /*yield*/, onFinish(d)];
                        case 1:
                            res = _a.sent();
                            setPopupError(res);
                            setLoading(false);
                            return [2 /*return*/];
                    }
                });
            }); } },
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: receiverLabelText, name: "toCompanyId", rules: [
                            {
                                required: !disableToCompany,
                                message: "Required field",
                            },
                        ] },
                        React.createElement(antd.Select, { showSearch: true, disabled: disableToCompany, placeholder: t("view:searchCompany"), showArrow: true, filterOption: false, onSearch: handleSearch, onChange: handleChange, notFoundContent: null, options: companyList })))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: t("view:programme"), name: "programme" },
                        React.createElement(antd.Input, { placeholder: programme.title, disabled: true })))),
            validCompanies.map(function (pert, index) {
                return (React.createElement(antd.Row, null,
                    React.createElement(antd.Col, { lg: 11, md: 24 },
                        React.createElement("div", { className: "label" }, pert.name)),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input", name: ["companyCredit", index], rules: [
                                {
                                    pattern: new RegExp(/^[+]?([.]\d+|\d+[.]?\d*)$/g),
                                    message: "Credit Should be a positive number",
                                },
                                {
                                    required: true,
                                    message: "Required field",
                                },
                                function (_a) {
                                    var getFieldValue = _a.getFieldValue;
                                    return ({
                                        validator: function (rule, v) {
                                            if (getFieldValue(["companyCredit", index]) &&
                                                parseFloat(getFieldValue(["companyCredit", index])) >
                                                    pert.available) {
                                                // eslint-disable-next-line prefer-promise-reject-errors
                                                return Promise.reject("Amount > Available");
                                            }
                                            return Promise.resolve();
                                        },
                                    });
                                },
                            ] },
                            React.createElement(antd.InputNumber, { placeholder: "", controls: false, disabled: value === pert.companyId, onKeyPress: function (event) {
                                    if (!/[0-9\.]/.test(event.key)) {
                                        event.preventDefault();
                                    }
                                } }))),
                    React.createElement(antd.Col, { lg: 1, md: 1, className: "seperator" }, "/"),
                    React.createElement(antd.Col, { lg: 6, md: 12 },
                        React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                            React.createElement(antd.InputNumber, { placeholder: addCommSep(pert.available), disabled: true })))));
            }),
            validCompanies.length > 1 && (React.createElement(antd.Row, null,
                React.createElement(antd.Col, { lg: 11, md: 24 },
                    React.createElement("div", { className: "label" }, "".concat(t("view:totalTransferCredit"), " (").concat(creditUnit, ")"))),
                React.createElement(antd.Col, { lg: 6, md: 12 },
                    React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                        React.createElement(antd.InputNumber, { placeholder: addCommSep(currentSum), disabled: true }))),
                React.createElement(antd.Col, { lg: 1, md: 1, className: "seperator" }, "/"),
                React.createElement(antd.Col, { lg: 6, md: 12 },
                    React.createElement(antd.Form.Item, { className: "popup-credit-input" },
                        React.createElement(antd.InputNumber, { placeholder: addCommSep(programme.creditBalance), disabled: true }))))),
            React.createElement(antd.Row, null,
                React.createElement(antd.Col, { span: 24 },
                    React.createElement(antd.Form.Item, { className: "remarks-label", label: "Remarks", name: "comment" },
                        React.createElement(antd.Input.TextArea, { placeholder: "" })))),
            popupError ? (React.createElement(antd.Alert, { className: "error", message: popupError, type: "error", showIcon: true })) : (""),
            React.createElement(antd.Form.Item, { className: "footer" },
                React.createElement(antd.Button, { htmlType: "button", onClick: onCancel }, t("view:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading }, actionBtnText)))));
};

var TextArea$2 = antd.Input.TextArea;
var RejectDocumentationConfirmationModel = function (props) {
    var actionInfo = props.actionInfo, onActionConfirmed = props.onActionConfirmed, onActionCanceled = props.onActionCanceled, openModal = props.openModal, errorMsg = props.errorMsg, loading = props.loading, translator = props.translator;
    var t = translator.t;
    var _a = React.useState(""), comment = _a[0], setComment = _a[1];
    React.useEffect(function () {
        setComment("");
    }, [openModal]);
    return (React.createElement(antd.Modal, { title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" }, actionInfo.icon),
            React.createElement("div", null, actionInfo.headerText)), className: "popup-" + actionInfo.type, open: openModal, width: Math.min(400, window.innerWidth), centered: true, onCancel: onActionCanceled, destroyOnClose: true, footer: null },
        React.createElement("p", { style: { whiteSpace: "pre-line" } }, actionInfo.text),
        React.createElement(antd.Form, { layout: "vertical", onFinish: function () {
                onActionConfirmed(comment);
            } },
            React.createElement(antd.Form.Item, { className: "mg-bottom-0", label: t("programme:remarks"), name: "remarks", rules: [
                    {
                        required: true,
                        message: "".concat(t("programme:remarks")) + " " + "".concat(t("common:isRequired")),
                    },
                ] },
                React.createElement(TextArea$2, { defaultValue: comment, rows: 2, onChange: function (v) { return setComment(v.target.value); } })),
            errorMsg ? (React.createElement(antd.Alert, { className: "mg-top-1", message: errorMsg, type: "error", showIcon: true })) : (""),
            React.createElement("div", { className: "mg-top-1 ant-modal-footer padding-bottom-0" },
                React.createElement(antd.Button, { htmlType: "button", onClick: function () {
                        onActionCanceled();
                    } }, "CANCEL"),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", danger: true, htmlType: "submit", loading: loading, disabled: actionInfo.type === "reject" && comment === "" }, "REJECT")))));
};

var TextArea$1 = antd.Input.TextArea;
var ApproveDocumentationConfirmationModel = function (props) {
    var actionInfo = props.actionInfo, onActionConfirmed = props.onActionConfirmed, onActionCanceled = props.onActionCanceled, openModal = props.openModal, list_certificateur = props.list_certificateur, onChangeCertificator = props.onChangeCertificator, errorMsg = props.errorMsg, loading = props.loading, translator = props.translator;
    var t = translator.t;
    var _a = React.useState(""), comment = _a[0], setComment = _a[1];
    React.useEffect(function () {
        setComment("");
    }, [openModal]);
    return (React.createElement(antd.Modal, { title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" }, actionInfo.icon),
            React.createElement("div", null, actionInfo.headerText)), className: "popup-" + actionInfo.type, open: openModal, width: Math.min(400, window.innerWidth), centered: true, onCancel: onActionCanceled, destroyOnClose: true, footer: null },
        React.createElement("p", { style: { whiteSpace: "pre-line" } }, actionInfo.text),
        React.createElement(antd.Form, { layout: "vertical", onFinish: function () {
                onActionConfirmed(comment);
            } },
            React.createElement(antd.Form.Item, { className: "mg-bottom-0", label: t("programme:remarks"), name: "remarks", rules: [
                    {
                        required: true,
                        message: "".concat(t("programme:remarks")) + " " + "".concat(t("common:isRequired")),
                    },
                ] },
                React.createElement(TextArea$1, { defaultValue: comment, rows: 2, onChange: function (v) { return setComment(v.target.value); } })),
            errorMsg ? (React.createElement(antd.Alert, { className: "mg-top-1", message: errorMsg, type: "error", showIcon: true })) : (""),
            React.createElement("div", null,
                React.createElement("br", null),
                React.createElement("h6", null, "Selectionnez le certificateur "),
                React.createElement(antd.Select, { size: "large", onChange: onChangeCertificator }, list_certificateur.map(function (organisation) { return (React.createElement(antd.Select.Option, { key: organisation.companyId, value: organisation.taxId }, organisation.name)); }))),
            React.createElement("div", { className: "mg-top-1 ant-modal-footer padding-bottom-0" },
                React.createElement(antd.Button, { htmlType: "button", onClick: function () {
                        onActionCanceled();
                    } }, "CANCEL"),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading, disabled: actionInfo.type === "approve" && comment === "" }, "VALIDER")))));
};

var css_248z$5 = ".ndc-action-body {\n  display: flex;\n  flex-direction: column;\n  width: 100%; }\n  .ndc-action-body .report-details {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: flex-start;\n    justify-content: space-between; }\n    .ndc-action-body .report-details .report-type {\n      display: flex;\n      flex-direction: row;\n      width: 60%;\n      align-items: flex-start; }\n      .ndc-action-body .report-details .report-type .name-time-container {\n        display: flex;\n        flex-direction: column;\n        width: 70%;\n        margin-bottom: 0.5rem; }\n      .ndc-action-body .report-details .report-type .name {\n        font-weight: 600;\n        color: rgba(58, 53, 65, 0.8); }\n      .ndc-action-body .report-details .report-type .icon {\n        display: flex;\n        width: 30%; }\n      .ndc-action-body .report-details .report-type .empty {\n        font-weight: 600;\n        color: #cacaca; }\n    .ndc-action-body .report-details .report-link {\n      display: flex;\n      flex-direction: row;\n      width: 40%;\n      justify-content: flex-start;\n      gap: 20px;\n      align-items: center; }\n      .ndc-action-body .report-details .report-link .version {\n        font-weight: 600;\n        color: #cacaca; }\n      .ndc-action-body .report-details .report-link .link {\n        margin-left: 1rem; }\n";
styleInject(css_248z$5);

var NdcActionBody = function (props) {
    var data = props.data, programmeId = props.programmeId, canUploadMonitorReport = props.canUploadMonitorReport, programmeOwnerId = props.programmeOwnerId, getProgrammeDocs = props.getProgrammeDocs, ministryLevelPermission = props.ministryLevelPermission, translator = props.translator, onFinish = props.onFinish, programme = props.programme;
    var t = translator.t;
    var userInfoState = useUserContext().userInfoState;
    var fileInputMonitoringRef = React.useRef(null);
    var fileInputVerificationRef = React.useRef(null);
    var _a = useConnection(); _a.get; _a.put; var post = _a.post;
    var _b = React.useState(false), loading = _b[0], setLoading = _b[1];
    var _c = React.useState(), monitoringReportData = _c[0], setMonitoringReportData = _c[1];
    var _d = React.useState(""), monitoringReportversion = _d[0], setMonitoringReportversion = _d[1];
    var _e = React.useState(), verificationReportData = _e[0], setVerificationReportData = _e[1];
    var _f = React.useState(""), verificationReportVersion = _f[0], setVerificationReportversion = _f[1];
    var _g = React.useState(), ndcActionId = _g[0], setNdcActionId = _g[1];
    var _h = React.useState(false), openRejectDocConfirmationModal = _h[0], setOpenRejectDocConfirmationModal = _h[1];
    var _j = React.useState({}), actionInfo = _j[0], setActionInfo = _j[1];
    var _k = React.useState({}), rejectDocData = _k[0], setRejectDocData = _k[1];
    var maximumImageSize = process.env.REACT_APP_MAXIMUM_FILE_SIZE
        ? parseInt(process.env.REACT_APP_MAXIMUM_FILE_SIZE)
        : 5000000;
    var getBase64 = function (file) {
        return new Promise(function (resolve, reject) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () { return resolve(reader.result); };
            reader.onerror = function (error) { return reject(error); };
        });
    };
    var handleFileUploadMonitor = function () {
        var _a;
        (_a = fileInputMonitoringRef === null || fileInputMonitoringRef === void 0 ? void 0 : fileInputMonitoringRef.current) === null || _a === void 0 ? void 0 : _a.click();
    };
    var handleFileUploadVerification = function () {
        var _a;
        (_a = fileInputVerificationRef === null || fileInputVerificationRef === void 0 ? void 0 : fileInputVerificationRef.current) === null || _a === void 0 ? void 0 : _a.click();
    };
    var onUploadDocument = function (file, type) { return __awaiter(void 0, void 0, void 0, function () {
        var logoBase64, response_1, programmeData, modified_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (file.size > maximumImageSize) {
                        antd.message.open({
                            type: "error",
                            content: "".concat(t("common:maxSizeVal")),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        return [2 /*return*/];
                    }
                    setLoading(true);
                    return [4 /*yield*/, getBase64(file)];
                case 1:
                    logoBase64 = _a.sent();
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 6, 7, 8]);
                    if (!isValidateFileType(file === null || file === void 0 ? void 0 : file.type)) return [3 /*break*/, 4];
                    return [4 /*yield*/, post("national/programme/addDocument", {
                            type: type,
                            data: logoBase64,
                            programmeId: programmeId,
                            actionId: ndcActionId,
                        })];
                case 3:
                    response_1 = _a.sent();
                    if (response_1 === null || response_1 === void 0 ? void 0 : response_1.data) {
                        antd.message.open({
                            type: "success",
                            content: "".concat(t("programme:isUploaded")),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        if (type == exports.DocType.VERIFICATION_REPORT &&
                            (response_1 === null || response_1 === void 0 ? void 0 : response_1.data.status) == exports.DocumentStatus.ACCEPTED &&
                            response_1.data.programme.mitigationActions) {
                            programmeData = response_1 === null || response_1 === void 0 ? void 0 : response_1.data.programme;
                            modified_1 = false;
                            programmeData.mitigationActions.map(function (action) {
                                if (action.actionId == ndcActionId) {
                                    modified_1 = true;
                                    var docAdded = false;
                                    for (var _i = 0, _a = action.projectMaterial; _i < _a.length; _i++) {
                                        var documentDetails = _a[_i];
                                        var document_1 = void 0;
                                        documentDetails.url
                                            ? (document_1 = documentDetails.url)
                                            : (document_1 = documentDetails);
                                        if (document_1.includes("VERIFICATION_REPORT")) {
                                            docAdded = true;
                                            break;
                                        }
                                    }
                                    if (!docAdded) {
                                        action.projectMaterial.push(response_1 === null || response_1 === void 0 ? void 0 : response_1.data.url);
                                    }
                                }
                            });
                            if (modified_1) {
                                programme.mitigationActions = programmeData.mitigationActions;
                                onFinish(programme);
                            }
                        }
                    }
                    return [3 /*break*/, 5];
                case 4:
                    antd.message.open({
                        type: "error",
                        content: "".concat(t("programme:invalidFileFormat")),
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    _a.label = 5;
                case 5: return [3 /*break*/, 8];
                case 6:
                    _a.sent();
                    antd.message.open({
                        type: "error",
                        content: "".concat(t("programme:notUploaded")),
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 8];
                case 7:
                    getProgrammeDocs();
                    fileInputMonitoringRef.current = null;
                    fileInputVerificationRef.current = null;
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    }); };
    var docAction = function (id, status, actionId, type) { return __awaiter(void 0, void 0, void 0, function () {
        var programmeRes, programmeData, docRepoRes, docUrl_1, modified_2, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 6, 7, 8]);
                    return [4 /*yield*/, post("national/programme/docAction", {
                            id: id,
                            status: status,
                            actionId: actionId,
                        })];
                case 2:
                    _a.sent();
                    antd.message.open({
                        type: "success",
                        content: status === exports.DocumentStatus.ACCEPTED
                            ? "".concat(t("programme:docApproved"))
                            : "".concat(t("programme:docRejected")),
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    if (!(type == exports.DocType.VERIFICATION_REPORT &&
                        status == exports.DocumentStatus.ACCEPTED)) return [3 /*break*/, 5];
                    return [4 /*yield*/, post("national/programme/query", {
                            page: 1,
                            size: 2,
                            filterAnd: [
                                {
                                    key: "programmeId",
                                    operation: "=",
                                    value: programmeId,
                                },
                            ],
                        })];
                case 3:
                    programmeRes = _a.sent();
                    programmeData = programmeRes.data[0];
                    if (!programmeData.mitigationActions) return [3 /*break*/, 5];
                    return [4 /*yield*/, post("national/programme/queryDocs", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "id",
                                    operation: "=",
                                    value: id,
                                },
                            ],
                        })];
                case 4:
                    docRepoRes = _a.sent();
                    docUrl_1 = docRepoRes.data[0].url;
                    modified_2 = false;
                    programmeData.mitigationActions.map(function (action) {
                        if (action.actionId == actionId) {
                            modified_2 = true;
                            if (!action.projectMaterial.includes(docUrl_1)) {
                                action.projectMaterial.push(docUrl_1);
                            }
                        }
                    });
                    if (modified_2)
                        onFinish(programmeData);
                    _a.label = 5;
                case 5: return [3 /*break*/, 8];
                case 6:
                    error_2 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: error_2 === null || error_2 === void 0 ? void 0 : error_2.message,
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 8];
                case 7:
                    getProgrammeDocs();
                    setOpenRejectDocConfirmationModal(false);
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    }); };
    var handleOk = function () {
        docAction(rejectDocData === null || rejectDocData === void 0 ? void 0 : rejectDocData.id, exports.DocumentStatus.REJECTED, rejectDocData === null || rejectDocData === void 0 ? void 0 : rejectDocData.actionId, rejectDocData === null || rejectDocData === void 0 ? void 0 : rejectDocData.type);
    };
    var handleCancel = function () {
        setOpenRejectDocConfirmationModal(false);
    };
    React.useEffect(function () {
        data === null || data === void 0 ? void 0 : data.map(function (item) {
            setNdcActionId(item === null || item === void 0 ? void 0 : item.id);
            if (item === null || item === void 0 ? void 0 : item.monitoringReport) {
                setMonitoringReportData(item === null || item === void 0 ? void 0 : item.monitoringReport);
                var versionfull = item === null || item === void 0 ? void 0 : item.monitoringReport.url.split("_")[(item === null || item === void 0 ? void 0 : item.monitoringReport.url.split("_").length) - 1];
                var version = versionfull ? versionfull.split(".")[0] : "V1";
                setMonitoringReportversion(version.startsWith("V") ? version : "V1");
            }
            if (item === null || item === void 0 ? void 0 : item.verificationReport) {
                setVerificationReportData(item === null || item === void 0 ? void 0 : item.verificationReport);
                var versionfull = item === null || item === void 0 ? void 0 : item.verificationReport.url.split("_")[(item === null || item === void 0 ? void 0 : item.verificationReport.url.split("_").length) - 1];
                var version = versionfull ? versionfull.split(".")[0] : "V1";
                setVerificationReportversion(version.startsWith("V") ? version : "V1");
            }
        });
    }, [data]);
    var companyRolePermission = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly;
    var verficationCompanyRolePermission = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly;
    var monitoringReportPending = (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.status) === exports.DocumentStatus.PENDING;
    var monitoringReportAccepted = (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.status) === exports.DocumentStatus.ACCEPTED;
    var monitoringReportRejected = (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.status) === exports.DocumentStatus.REJECTED;
    var verifcationReportPending = (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.status) === exports.DocumentStatus.PENDING;
    var verificationReportAccepted = (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.status) === exports.DocumentStatus.ACCEPTED;
    var verifcationReportRejected = (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.status) === exports.DocumentStatus.REJECTED;
    return loading ? (React.createElement(antd.Skeleton, null)) : (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "ndc-action-body" },
            React.createElement("div", { className: "report-details" },
                React.createElement("div", { className: "report-type" },
                    React.createElement("div", { className: "name-time-container" },
                        React.createElement("div", { className: canUploadMonitorReport ? "name" : "empty" }, t("programme:monitoringReport")),
                        (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.txTime) && (React.createElement("div", { className: "time" },
                            moment(parseInt(monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.txTime)).format("DD MMMM YYYY @ HH:mm"),
                            " ~ " + monitoringReportversion))),
                    React.createElement("div", { className: "icon" }, (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.url) ? (monitoringReportPending ? ((companyRolePermission || ministryLevelPermission) && (React.createElement(React.Fragment, null,
                        React.createElement(icons.LikeOutlined, { onClick: function () {
                                return docAction(monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.id, exports.DocumentStatus.ACCEPTED, monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.actionId, monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.type);
                            }, className: "common-progress-icon", style: { color: "#976ED7", paddingTop: '3px' } }),
                        React.createElement(icons.DislikeOutlined, { onClick: function () {
                                setRejectDocData({
                                    id: monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.id,
                                    actionId: monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.actionId,
                                    type: monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.type,
                                });
                                setActionInfo({
                                    action: "Reject",
                                    headerText: "".concat(t("programme:rejectDocHeader")),
                                    text: "".concat(t("programme:rejectDocBody")),
                                    type: "reject",
                                    icon: React.createElement(icons.DislikeOutlined, null),
                                });
                                setOpenRejectDocConfirmationModal(true);
                            }, className: "common-progress-icon margin-left-1", style: { color: "#FD6F70", paddingTop: '3px' } })))) : monitoringReportAccepted ? (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: '3px' } })) : (monitoringReportRejected && (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: t("programme:rejectTip"), overlayClassName: "custom-tooltip" },
                        React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70", paddingTop: '3px' } }))))) : (React.createElement(React.Fragment, null,
                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                ? t("programme:notAuthToUploadDoc")
                                : uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? !canUploadMonitorReport &&
                                        t("programme:programmeNotAuth")
                                    : t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: canUploadMonitorReport &&
                                    uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? {
                                        color: "#3F3A47",
                                        cursor: "pointer",
                                        margin: "0px 0px 1.5px 0px",
                                    }
                                    : {
                                        color: "#cacaca",
                                        cursor: "default",
                                        margin: "0px 0px 1.5px 0px",
                                    }, onClick: function () {
                                    if (canUploadMonitorReport &&
                                        uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId, ministryLevelPermission)) {
                                        handleFileUploadMonitor();
                                    }
                                } })),
                        React.createElement("input", { type: "file", ref: fileInputMonitoringRef, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                var selectedFile = e.target.files[0];
                                e.target.value = null;
                                onUploadDocument(selectedFile, exports.DocType.MONITORING_REPORT);
                            } }))))),
                (monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.url) && (React.createElement("div", { className: "report-link" },
                    React.createElement("div", { className: "link" }, linkDocVisible(monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.status) && (React.createElement("a", { href: monitoringReportData === null || monitoringReportData === void 0 ? void 0 : monitoringReportData.url, target: "_blank", rel: "noopener noreferrer", download: true },
                        React.createElement(icons.BookOutlined, { className: "common-progress-icon margin-right-1", style: { color: "#3F3A47", paddingTop: '3px' } })))),
                    !monitoringReportAccepted && (React.createElement(React.Fragment, null,
                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                ? t("programme:notAuthToUploadDoc")
                                : uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? !canUploadMonitorReport &&
                                        t("programme:programmeNotAuth")
                                    : t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: canUploadMonitorReport &&
                                    uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? {
                                        color: "#3F3A47",
                                        cursor: "pointer",
                                        margin: "0px 0px 1.5px 0px",
                                    }
                                    : {
                                        color: "#cacaca",
                                        cursor: "default",
                                        margin: "0px 0px 1.5px 0px",
                                    }, onClick: function () {
                                    if (canUploadMonitorReport &&
                                        uploadDocUserPermission(userInfoState, exports.DocType.MONITORING_REPORT, programmeOwnerId, ministryLevelPermission)) {
                                        handleFileUploadMonitor();
                                    }
                                } })),
                        React.createElement("input", { type: "file", ref: fileInputMonitoringRef, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                var selectedFile = e.target.files[0];
                                e.target.value = null;
                                onUploadDocument(selectedFile, exports.DocType.MONITORING_REPORT);
                            } })))))),
            React.createElement("div", { className: "report-details" },
                React.createElement("div", { className: "report-type" },
                    React.createElement("div", { className: "name-time-container" },
                        React.createElement("div", { className: canUploadMonitorReport && monitoringReportAccepted
                                ? "name"
                                : "empty" }, t("programme:verificationReport")),
                        (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.txTime) && (React.createElement("div", { className: "time" },
                            moment(parseInt(verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.txTime)).format("DD MMMM YYYY @ HH:mm"),
                            " ~ " + verificationReportVersion))),
                    React.createElement("div", { className: "icon" }, (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.url) ? (verifcationReportPending ? ((verficationCompanyRolePermission ||
                        ministryLevelPermission) && (React.createElement(React.Fragment, null,
                        React.createElement(icons.LikeOutlined, { onClick: function () {
                                return docAction(verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.id, exports.DocumentStatus.ACCEPTED, verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.actionId, verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.type);
                            }, className: "common-progress-icon", style: { color: "#976ED7", paddingTop: '3px' } }),
                        React.createElement(icons.DislikeOutlined, { onClick: function () {
                                setRejectDocData({
                                    id: verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.id,
                                    actionId: verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.actionId,
                                    type: verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.type,
                                });
                                setActionInfo({
                                    action: "Reject",
                                    headerText: "".concat(t("programme:rejectDocHeader")),
                                    text: "".concat(t("programme:rejectDocBody")),
                                    type: "reject",
                                    icon: React.createElement(icons.DislikeOutlined, null),
                                });
                                setOpenRejectDocConfirmationModal(true);
                            }, className: "common-progress-icon margin-left-1", style: { color: "#FD6F70", paddingTop: '3px' } })))) : verificationReportAccepted ? (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: '3px' } })) : (verifcationReportRejected && (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: t("programme:rejectTip"), overlayClassName: "custom-tooltip" },
                        React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70", paddingTop: '3px' } }))))) : (React.createElement(React.Fragment, null,
                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                ? t("programme:notAuthToUploadDoc")
                                : uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? !monitoringReportAccepted &&
                                        t("programme:monitoringRepNotApproved")
                                    : t("programme:notAuthToUploadDoc"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: monitoringReportAccepted &&
                                    uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? {
                                        color: "#3F3A47",
                                        cursor: "pointer",
                                        margin: "0px 0px 1.5px 0px",
                                    }
                                    : {
                                        color: "#cacaca",
                                        cursor: "default",
                                        margin: "0px 0px 1.5px 0px",
                                    }, onClick: function () {
                                    if (monitoringReportAccepted &&
                                        uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId, ministryLevelPermission)) {
                                        handleFileUploadVerification();
                                    }
                                } })),
                        monitoringReportAccepted && (React.createElement("input", { type: "file", ref: fileInputVerificationRef, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                var selectedFile = e.target.files[0];
                                e.target.value = null;
                                onUploadDocument(selectedFile, exports.DocType.VERIFICATION_REPORT);
                            } })))))),
                (verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.url) && (React.createElement("div", { className: "report-link" },
                    React.createElement("div", { className: "link" }, linkDocVisible(verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.status) && (React.createElement("a", { href: verificationReportData === null || verificationReportData === void 0 ? void 0 : verificationReportData.url, target: "_blank", rel: "noopener noreferrer", download: true },
                        React.createElement(icons.BookOutlined, { className: "common-progress-icon margin-right-1", style: { color: "#3F3A47", paddingTop: '3px' } })))),
                    !verificationReportAccepted && monitoringReportAccepted && (React.createElement(React.Fragment, null,
                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                ? t("programme:notAuthToUploadDoc")
                                : uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? !monitoringReportAccepted &&
                                        t("programme:monitoringRepNotApproved")
                                    : t("programme:notAuthToUploadDoc"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: monitoringReportAccepted &&
                                    uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId, ministryLevelPermission)
                                    ? {
                                        color: "#3F3A47",
                                        cursor: "pointer",
                                        margin: "0px 0px 1.5px 0px",
                                    }
                                    : {
                                        color: "#cacaca",
                                        cursor: "default",
                                        margin: "0px 0px 1.5px 0px",
                                    }, onClick: function () {
                                    if (monitoringReportAccepted &&
                                        uploadDocUserPermission(userInfoState, exports.DocType.VERIFICATION_REPORT, programmeOwnerId, ministryLevelPermission)) {
                                        handleFileUploadVerification();
                                    }
                                } })),
                        React.createElement("input", { type: "file", ref: fileInputVerificationRef, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                var selectedFile = e.target.files[0];
                                e.target.value = null;
                                onUploadDocument(selectedFile, exports.DocType.VERIFICATION_REPORT);
                            } }))))))),
        React.createElement(RejectDocumentationConfirmationModel, { actionInfo: actionInfo, onActionConfirmed: handleOk, onActionCanceled: handleCancel, openModal: openRejectDocConfirmationModal, errorMsg: "", loading: loading, translator: translator })));
};

var css_248z$4 = ".info-view .title-icon {\n  padding-right: 10px; }\n\n.info-view .title-text {\n  color: rgba(58, 53, 65, 0.8);\n  font-weight: 600; }\n\n.info-view .title {\n  margin-bottom: 5px; }\n\n.info-view .field-key {\n  color: rgba(58, 53, 65, 0.6);\n  font-weight: 500;\n  text-overflow: ellipsis;\n  overflow: hidden; }\n  .info-view .field-key .label-container {\n    display: flex;\n    flex-direction: row;\n    align-items: start; }\n  .info-view .field-key .label {\n    width: 70%; }\n  .info-view .field-key .label-uploaded {\n    color: rgba(58, 53, 65, 0.8);\n    width: 70%; }\n\n.info-view .field-value {\n  color: rgba(58, 53, 65, 0.6);\n  text-overflow: ellipsis;\n  overflow: hidden; }\n  .info-view .field-value .link {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 20px; }\n\n.info-view .field {\n  margin: 15px 25px;\n  font-size: 0.8rem; }\n";
styleInject(css_248z$4);

var ProgrammeDocuments = function (props) {
    var data = props.data, title = props.title, icon = props.icon, programmeId = props.programmeId, programmeOwnerId = props.programmeOwnerId, getDocumentDetails = props.getDocumentDetails; props.programme; var authoriseDoc2Url = props.authoriseDoc2Url, setauthoriseDoc2Url = props.setauthoriseDoc2Url; props.onPopupAction; var updateProgrammeData = props.updateProgrammeData, getProgrammeById = props.getProgrammeById, ministryLevelPermission = props.ministryLevelPermission, translator = props.translator, methodologyDocumentUpdated = props.methodologyDocumentUpdated, programmeStatus = props.programmeStatus;
    var t = translator.t;
    var userInfoState = useUserContext().userInfoState;
    var _a = useConnection(); _a.delete; var post = _a.post;
    var _b = useConnection(); _b.get; var put = _b.put;
    var fileInputRef = React.useRef(null);
    var fileInputRefMeth = React.useRef(null);
    var fileInputRefImpactAssessment = React.useRef(null);
    var _c = React.useState(false), loading = _c[0], setLoading = _c[1];
    var _d = React.useState(""), errorMsg = _d[0], setErrorMsg = _d[1];
    var _e = React.useState(""), designDocUrl = _e[0], setDesignDocUrl = _e[1];
    var _f = React.useState(""), approvalDocUrl = _f[0], setapprovalDocUrl = _f[1];
    var _g = React.useState(""), approvalDocUrlsigne = _g[0], setapprovalDocUrlsigne = _g[1];
    var _h = React.useState(""); _h[0]; var setNoObjectionDocUrl = _h[1];
    var _j = React.useState(""), authorisationDocUrlsigne = _j[0], setAuthorisationDocUrlsigne = _j[1];
    var _k = React.useState(""); _k[0]; var setAuthorisationDocUrl = _k[1];
    var _l = React.useState(""), methodologyDocUrl = _l[0], setMethodologyDocUrl = _l[1];
    var _m = React.useState(""), designDocDate = _m[0], setDesignDocDate = _m[1];
    var _o = React.useState(""); _o[0]; var setNoObjectionDate = _o[1];
    var _p = React.useState(""), methodologyDate = _p[0], setMethodologyDate = _p[1];
    var _q = React.useState(""); _q[0]; var setAuthorisationDocDate = _q[1];
    var _r = React.useState(""), designDocStatus = _r[0], setDesignDocStatus = _r[1];
    var _s = React.useState(""), methodDocStatus = _s[0], setMethodDocStatus = _s[1];
    var _t = React.useState(""), designDocId = _t[0], setDesignDocId = _t[1];
    var _u = React.useState(""), designDocversion = _u[0], setDesignDocversion = _u[1];
    var _v = React.useState(""), methDocId = _v[0], setMethDocId = _v[1];
    var _w = React.useState(""), methDocversion = _w[0], setMethDocversion = _w[1];
    var _x = React.useState([]), docData = _x[0], setDocData = _x[1];
    var _y = React.useState([]), list_certificateur = _y[0], setlist_certificateur = _y[1];
    var _z = React.useState(""); _z[0]; var setSelectedCertifier = _z[1];
    var _0 = React.useState(null), selectedFile = _0[0], setSelectedFile = _0[1];
    var _1 = React.useState(false), openRejectDocConfirmationModal = _1[0], setOpenRejectDocConfirmationModal = _1[1];
    var _2 = React.useState(false), openApproveDocConfirmationModal = _2[0], setOpenApproveDocConfirmationModal = _2[1];
    var _3 = React.useState({}), actionInfo = _3[0], setActionInfo = _3[1];
    var _4 = React.useState({}), rejectDocData = _4[0], setRejectDocData = _4[1];
    var _5 = React.useState(false), openUploadModalConfirm = _5[0], setOpenUploadModalConfirm = _5[1];
    var _6 = React.useState(false), openUploadModalConfirmAuth = _6[0], setOpenUploadModalConfirmAuth = _6[1];
    var _7 = React.useState(false), letterOfAuth = _7[0], setletterOfAuth = _7[1];
    var _8 = React.useState(""), impactAssessmentUrl = _8[0], setImpactAssessmentUrl = _8[1];
    var _9 = React.useState(""), impactAssessmentDate = _9[0], setImpactAssessmentDate = _9[1];
    var _10 = React.useState(""), impactAssessmentStatus = _10[0], setImpactAssessmentStatus = _10[1];
    var _11 = React.useState(""), impactAssessmentId = _11[0], setImpactAssessmentId = _11[1];
    var _12 = React.useState(""), impactAssessmentversion = _12[0], setImpactAssessmentversion = _12[1];
    var maximumImageSize = process.env.REACT_APP_MAXIMUM_FILE_SIZE
        ? parseInt(process.env.REACT_APP_MAXIMUM_FILE_SIZE)
        : 5000000;
    var isProjectRejected = programmeStatus && programmeStatus === exports.ProgrammeStageUnified.Rejected;
    var uploadImpactAssessmentDocUserPermission = uploadDocUserPermission(userInfoState, exports.DocType.ENVIRONMENTAL_IMPACT_ASSESSMENT, programmeOwnerId, ministryLevelPermission);
    var impactAssessmentToolTipTitle = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
        ? t("programme:notAuthToUploadDoc")
        : isProjectRejected
            ? t("programme:docUploadProgrammeRejected")
            : !uploadImpactAssessmentDocUserPermission && t("programme:orgNotAuth");
    var handleDesignDocFileUpload = function () {
        var _a;
        (_a = fileInputRef === null || fileInputRef === void 0 ? void 0 : fileInputRef.current) === null || _a === void 0 ? void 0 : _a.click();
    };
    var handleMethodologyFileUpload = function () {
        var _a;
        (_a = fileInputRefMeth === null || fileInputRefMeth === void 0 ? void 0 : fileInputRefMeth.current) === null || _a === void 0 ? void 0 : _a.click();
    };
    var handleImpactAssessmentFileUpload = function () {
        var _a;
        (_a = fileInputRefImpactAssessment === null || fileInputRefImpactAssessment === void 0 ? void 0 : fileInputRefImpactAssessment.current) === null || _a === void 0 ? void 0 : _a.click();
    };
    React.useEffect(function () {
        setDocData(data);
        getletter_projet(programmeId);
        //Recuperer la liste des certificateurs
        //Faire la requete de validation
        //Demander la lettre d'approbation
        getcertificator();
    }, [data]);
    React.useEffect(function () {
        if (docData === null || docData === void 0 ? void 0 : docData.length) {
            docData === null || docData === void 0 ? void 0 : docData.map(function (item) {
                var _a, _b, _c, _d, _e;
                if ((_a = item === null || item === void 0 ? void 0 : item.url) === null || _a === void 0 ? void 0 : _a.includes("DESIGN")) {
                    setDesignDocUrl(item === null || item === void 0 ? void 0 : item.url);
                    setDesignDocDate(item === null || item === void 0 ? void 0 : item.txTime);
                    setDesignDocStatus(item === null || item === void 0 ? void 0 : item.status);
                    setDesignDocId(item === null || item === void 0 ? void 0 : item.id);
                    var versionfull = (item === null || item === void 0 ? void 0 : item.url).split("_")[(item === null || item === void 0 ? void 0 : item.url).split("_").length - 1];
                    var version = versionfull ? versionfull.split(".")[0] : "1";
                    setDesignDocversion(version.startsWith("V") ? version : "V1");
                }
                if ((_b = item === null || item === void 0 ? void 0 : item.url) === null || _b === void 0 ? void 0 : _b.includes("METHODOLOGY")) {
                    setMethodologyDocUrl(item === null || item === void 0 ? void 0 : item.url);
                    setMethodologyDate(item === null || item === void 0 ? void 0 : item.txTime);
                    setMethodDocStatus(item === null || item === void 0 ? void 0 : item.status);
                    setMethDocId(item === null || item === void 0 ? void 0 : item.id);
                    var versionfull = (item === null || item === void 0 ? void 0 : item.url).split("_")[(item === null || item === void 0 ? void 0 : item.url).split("_").length - 1];
                    var version = versionfull ? versionfull.split(".")[0] : "1";
                    setMethDocversion(version.startsWith("V") ? version : "V1");
                }
                if ((_c = item === null || item === void 0 ? void 0 : item.url) === null || _c === void 0 ? void 0 : _c.includes("OBJECTION")) {
                    setNoObjectionDocUrl(item === null || item === void 0 ? void 0 : item.url);
                    setNoObjectionDate(item === null || item === void 0 ? void 0 : item.txTime);
                }
                if ((_d = item === null || item === void 0 ? void 0 : item.url) === null || _d === void 0 ? void 0 : _d.includes("AUTHORISATION")) {
                    setAuthorisationDocUrl(item === null || item === void 0 ? void 0 : item.url);
                    setAuthorisationDocDate(item === null || item === void 0 ? void 0 : item.txTime);
                }
                if ((_e = item === null || item === void 0 ? void 0 : item.url) === null || _e === void 0 ? void 0 : _e.includes("ENVIRONMENTAL_IMPACT_ASSESSMENT")) {
                    setImpactAssessmentUrl(item === null || item === void 0 ? void 0 : item.url);
                    setImpactAssessmentDate(item === null || item === void 0 ? void 0 : item.txTime);
                    setImpactAssessmentStatus(item === null || item === void 0 ? void 0 : item.status);
                    setImpactAssessmentId(item === null || item === void 0 ? void 0 : item.id);
                    var versionfull = (item === null || item === void 0 ? void 0 : item.url).split("_")[(item === null || item === void 0 ? void 0 : item.url).split("_").length - 1];
                    var version = versionfull ? versionfull.split(".")[0] : "1";
                    setImpactAssessmentversion(version.startsWith("V") ? version : "V1");
                }
            });
        }
    }, [docData]);
    var getcertificator = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    console.log("getting certificator profile");
                    return [4 /*yield*/, post("national/organisation/query", {
                            page: 1,
                            size: 100,
                            filterAnd: [
                                {
                                    key: "companyRole",
                                    operation: "=",
                                    value: exports.CompanyRole.CERTIFIER,
                                },
                            ],
                        })];
                case 2:
                    response = _a.sent();
                    if (response.data) {
                        setlist_certificateur(response === null || response === void 0 ? void 0 : response.data);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log("Error in getting government data", error_1);
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var getletter_projet = function (programmeId) { return __awaiter(void 0, void 0, void 0, function () {
        var headers, method, url, data_1;
        return __generator(this, function (_a) {
            try {
                headers = {
                    authorization: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RpbmciLCJpYXQiOjE3MTcxMjg0MjEsImV4cCI6MTcyNzQ5NjQyMX0.fuU7TGjn2BIVkjM1puGCmwCS-CDkGXHDTfZxJno5kzQ",
                };
                method = "post";
                url = "https://docregister.ci.skyvisionafrica.com/api/v1/doc/read_global";
                data_1 = {
                    Id: programmeId,
                    Type: "Projet",
                };
                axios({
                    method: method,
                    url: url,
                    data: data_1,
                    headers: headers,
                }).then(function (response) {
                    if (response && response.data) {
                        console.log(response.data);
                        //Modifier l'url de la lettre d'approbation
                        //setAuthorisationDocUrlsigne();
                        if (response.data.data.approbation_letter.exist == true) {
                            if (response.data.data.approbation_letter.signed == true) {
                                setapprovalDocUrlsigne(response.data.data.approbation_letter.link);
                            }
                            else {
                                setapprovalDocUrl(response.data.data.approbation_letter.link);
                            }
                        }
                        if (response.data.data.autorisation_letter.exist == true) {
                            if (response.data.data.autorisation_letter.signed == true) {
                                setAuthorisationDocUrlsigne(response.data.data.autorisation_letter.link);
                            }
                            else {
                                setauthoriseDoc2Url(response.data.data.autorisation_letter.link);
                            }
                        }
                    }
                });
            }
            catch (error) {
                console.error("Error", error);
                antd.message.open({
                    type: "error",
                    content: "Erreur de chargement",
                    duration: 3,
                    style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                });
            }
            return [2 /*return*/];
        });
    }); };
    var onChangeCertificator = function (val) {
        setSelectedCertifier(val);
    };
    var onUploadModalCanceled = function () {
        setOpenUploadModalConfirm(false);
    };
    var onUploadModalConfirm = function () {
        setActionInfo({
            action: "Confirmer",
            headerText: "Chargez votre lettre sign\u00E9e",
            text: "".concat(t("companyProfile:approveConfirmText")),
            type: "primary",
            icon: React.createElement(Icon__namespace.ClipboardCheck, null),
        });
        setErrorMsg("");
        setOpenUploadModalConfirm(true);
    };
    var onUploadModalConfirmAuth = function () {
        setActionInfo({
            action: "Confirmer",
            headerText: "Chargez votre lettre sign\u00E9e",
            text: "".concat(t("companyProfile:approveConfirmText")),
            type: "primary",
            icon: React.createElement(Icon__namespace.ClipboardCheck, null),
        });
        setErrorMsg("");
        setletterOfAuth(true);
        setOpenUploadModalConfirmAuth(true);
    };
    var onUploadModalCanceledAuth = function () {
        setOpenUploadModalConfirmAuth(false);
    };
    var handleFileChange = function (event) {
        console.log(event);
        setSelectedFile(event.target.files[0]);
    };
    var onUploadLetterSign = function () { return __awaiter(void 0, void 0, void 0, function () {
        var formData, headers, response, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    console.log(selectedFile);
                    if (!selectedFile) {
                        antd.message.open({
                            type: "error",
                            content: "Please select a file before uploading.",
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        return [2 /*return*/];
                    }
                    setLoading(true);
                    formData = new FormData();
                    formData.append("file", selectedFile);
                    formData.append("Type", "approbation_letter"); // Replace with the actual type
                    formData.append("Id_pro_idea", programmeId); // Replace with the actual ID
                    headers = {
                        Authorization: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RpbmciLCJpYXQiOjE3MTcxMjg0MjEsImV4cCI6MTcyNzQ5NjQyMX0.fuU7TGjn2BIVkjM1puGCmwCS-CDkGXHDTfZxJno5kzQ", // Replace with the actual token
                    };
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, axios.post("https://docregister.ci.skyvisionafrica.com/api/v1/doc/add_doc_sign", // Replace with the actual URL
                        formData, { headers: headers })];
                case 2:
                    response = _a.sent();
                    if (response && response.data) {
                        console.log(response.data);
                        // setMethodDocStatus("Accepted");
                        // changer le status du registre 
                        //Sauvegarder la lettre signée
                        // docAction(methDocId, DocumentStatus.ACCEPTED);
                        setapprovalDocUrlsigne(response.data.data.link);
                        setOpenUploadModalConfirm(false);
                        antd.message.open({
                            type: "success",
                            content: "File uploaded successfully.",
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_2 = _a.sent();
                    console.error("Error uploading file:", error_2);
                    antd.message.open({
                        type: "error",
                        content: "Erreur  d'upload du fichier.",
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var onUploadLetterSignAuth = function () { return __awaiter(void 0, void 0, void 0, function () {
        var formData, body, headers, response, response_actualise, error_3, error_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    console.log(selectedFile);
                    if (!selectedFile) {
                        antd.message.open({
                            type: "error",
                            content: "Please select a file before uploading.",
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        return [2 /*return*/];
                    }
                    setLoading(true);
                    formData = new FormData();
                    formData.append("file", selectedFile);
                    formData.append("Type", "autorisation_letter"); // Replace with the actual type
                    formData.append("Id_pro_idea", programmeId); // Replace with the actual ID
                    body = {
                        programmeId: programmeId,
                        issueAmount: Number('0'),
                        comment: ''
                    };
                    headers = {
                        Authorization: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RpbmciLCJpYXQiOjE3MTcxMjg0MjEsImV4cCI6MTcyNzQ5NjQyMX0.fuU7TGjn2BIVkjM1puGCmwCS-CDkGXHDTfZxJno5kzQ", // Replace with the actual token
                    };
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 7, 8, 9]);
                    return [4 /*yield*/, axios.post("https://docregister.ci.skyvisionafrica.com/api/v1/doc/add_doc_sign", // Replace with the actual URL
                        formData, { headers: headers })];
                case 2:
                    response = _a.sent();
                    if (!(response && response.data)) return [3 /*break*/, 6];
                    console.log(response.data);
                    console.log(body);
                    _a.label = 3;
                case 3:
                    _a.trys.push([3, 5, , 6]);
                    return [4 /*yield*/, put("national/programme/authorize", body)];
                case 4:
                    response_actualise = _a.sent();
                    console.log(response_actualise.data);
                    if (response_actualise.status === 200 || response_actualise.status === 201) {
                        antd.message.open({
                            type: "success",
                            content: "File uploaded successfully.",
                            duration: 3,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        setAuthorisationDocUrlsigne(response.data.data.link);
                        updateProgrammeData(response_actualise);
                        // setLoading(false);
                        setOpenUploadModalConfirmAuth(false);
                    }
                    return [3 /*break*/, 6];
                case 5:
                    error_3 = _a.sent();
                    console.error("Error uploading file:", error_3);
                    antd.message.open({
                        type: "error",
                        content: "Erreur  d'upload du fichier.",
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setOpenUploadModalConfirmAuth(false);
                    return [3 /*break*/, 6];
                case 6: return [3 /*break*/, 9];
                case 7:
                    error_4 = _a.sent();
                    console.error("Error uploading file:", error_4);
                    antd.message.open({
                        type: "error",
                        content: "Erreur  d'upload du fichier.",
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    setOpenUploadModalConfirmAuth(false);
                    return [3 /*break*/, 9];
                case 8:
                    setLoading(false);
                    setOpenUploadModalConfirmAuth(false);
                    return [7 /*endfinally*/];
                case 9: return [2 /*return*/];
            }
        });
    }); };
    var generateletter = function () {
        try {
            setLoading(true);
            //Demander de generer un document
            var headers = {
                authorization: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RpbmciLCJpYXQiOjE3MTcxMjg0MjEsImV4cCI6MTcyNzQ5NjQyMX0.fuU7TGjn2BIVkjM1puGCmwCS-CDkGXHDTfZxJno5kzQ",
            };
            var method = "post";
            var url = "https://docregister.ci.skyvisionafrica.com/api/v1/doc/create_project";
            var data_2 = {
                IdProjet: programmeId,
                Type: "approbation_letter",
                Lang: "fr",
            };
            axios({
                method: method,
                url: url,
                data: data_2,
                headers: headers,
            }).then(function (response) {
                if (response && response.data) {
                    console.log(response.data);
                    //Modifier l'url de la lettre d'approbation
                    setapprovalDocUrl(response.data.data.Url);
                }
            });
            setOpenRejectDocConfirmationModal(false);
            antd.message.open({
                type: "success",
                content: "Lettre non signée générée avec succes",
                duration: 3,
                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
            });
            //  getIdeaNoteDetails(IdeaNoteDetail.companyId);
            //   getUserDetails(IdeaNoteDetail.companyId);
        }
        catch (error) {
            antd.message.open({
                type: "error",
                content: error.message,
                duration: 3,
                style: { textAlign: "right", marginRight: 15, marginTop: 10 },
            });
        }
        finally {
            setLoading(false);
        }
    };
    var getBase64 = function (file) {
        return new Promise(function (resolve, reject) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () { return resolve(reader.result); };
            reader.onerror = function (error) { return reject(error); };
        });
    };
    var onUploadDocument = function (file, type) { return __awaiter(void 0, void 0, void 0, function () {
        var logoBase64, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (file.size > maximumImageSize) {
                        antd.message.open({
                            type: "error",
                            content: "".concat(t("common:maxSizeVal")),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                        return [2 /*return*/];
                    }
                    setLoading(true);
                    return [4 /*yield*/, getBase64(file)];
                case 1:
                    logoBase64 = _a.sent();
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 6, 7, 8]);
                    if (!isValidateFileType(file === null || file === void 0 ? void 0 : file.type, type)) return [3 /*break*/, 4];
                    return [4 /*yield*/, post("national/programme/addDocument", {
                            type: type,
                            data: logoBase64,
                            programmeId: programmeId,
                        })];
                case 3:
                    response = _a.sent();
                    console.log(response);
                    fileInputRefMeth.current = null;
                    if (response === null || response === void 0 ? void 0 : response.data) {
                        setDocData(__spreadArray(__spreadArray([], docData, true), [response === null || response === void 0 ? void 0 : response.data], false));
                        methodologyDocumentUpdated();
                        antd.message.open({
                            type: "success",
                            content: "".concat(t("programme:isUploaded")),
                            duration: 4,
                            style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                        });
                    }
                    return [3 /*break*/, 5];
                case 4:
                    antd.message.open({
                        type: "error",
                        content: "".concat(t("programme:invalidFileFormat")),
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    _a.label = 5;
                case 5: return [3 /*break*/, 8];
                case 6:
                    _a.sent();
                    fileInputRefMeth.current = null;
                    antd.message.open({
                        type: "error",
                        content: "".concat(t("programme:notUploaded")),
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 8];
                case 7:
                    getDocumentDetails();
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    }); };
    var docAction = function (id, status) { return __awaiter(void 0, void 0, void 0, function () {
        var error_6;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("national/programme/docAction", {
                            id: id,
                            status: status,
                        })];
                case 2:
                    _a.sent();
                    antd.message.open({
                        type: "success",
                        content: status === exports.DocumentStatus.ACCEPTED
                            ? "".concat(t("programme:docApproved"))
                            : "".concat(t("programme:docRejected")),
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 3:
                    error_6 = _a.sent();
                    antd.message.open({
                        type: "error",
                        content: error_6 === null || error_6 === void 0 ? void 0 : error_6.message,
                        duration: 4,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setOpenRejectDocConfirmationModal(false);
                    getDocumentDetails();
                    getProgrammeById();
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var handleOk = function () {
        docAction(rejectDocData === null || rejectDocData === void 0 ? void 0 : rejectDocData.id, exports.DocumentStatus.REJECTED);
    };
    var handleCancel = function () {
        setOpenRejectDocConfirmationModal(false);
    };
    var handleOkApprove = function () {
        docAction(methDocId, exports.DocumentStatus.ACCEPTED);
        // Certifie le projet avec le certificateur
        generateletter();
        setOpenApproveDocConfirmationModal(false);
    };
    var handleCancelApprove = function () {
        setOpenRejectDocConfirmationModal(false);
    };
    var companyRolePermission = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly;
    var designDocActionPermission = (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly;
    var designDocPending = designDocStatus === exports.DocumentStatus.PENDING;
    return loading ? (React.createElement(antd.Skeleton, null)) : (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "info-view" },
            React.createElement("div", { className: "title" },
                React.createElement("span", { className: "title-icon" }, icon),
                React.createElement("span", { className: "title-text" }, title)),
            React.createElement("div", null,
                React.createElement(antd.Row, { className: "field", key: "Design Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: designDocUrl !== "" ? "label-uploaded" : "label" }, t("programme:designDoc")),
                            designDocPending &&
                                (designDocActionPermission || ministryLevelPermission) && (React.createElement(React.Fragment, null,
                                React.createElement(icons.LikeOutlined, { onClick: function () {
                                        return docAction(designDocId, exports.DocumentStatus.ACCEPTED);
                                    }, className: "common-progress-icon", style: { color: "#976ED7", paddingTop: "3px" } }),
                                React.createElement(icons.DislikeOutlined, { onClick: function () {
                                        setRejectDocData({ id: designDocId });
                                        setActionInfo({
                                            action: "Reject",
                                            headerText: "".concat(t("programme:rejectDocHeader")),
                                            text: "".concat(t("programme:rejectDocBody")),
                                            type: "reject",
                                            icon: React.createElement(icons.DislikeOutlined, null),
                                        });
                                        setOpenRejectDocConfirmationModal(true);
                                    }, className: "common-progress-icon margin-left-1", style: { color: "#FD6F70", paddingTop: "3px" } }))),
                            designDocStatus === exports.DocumentStatus.ACCEPTED && (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: "3px" } })),
                            designDocStatus === exports.DocumentStatus.REJECTED && (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: t("programme:rejectTip"), overlayClassName: "custom-tooltip" },
                                React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70" } })))),
                        designDocUrl !== "" && (React.createElement("div", { className: "time" },
                            moment(parseInt(designDocDate)).format("DD MMMM YYYY @ HH:mm"),
                            " ~ " + designDocversion))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" }, designDocUrl !== "" ? (React.createElement("div", { className: "link" },
                        linkDocVisible(designDocStatus) && (React.createElement("a", { href: designDocUrl, target: "_blank", rel: "noopener noreferrer", download: true },
                            React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } }))),
                        designDocStatus !== exports.DocumentStatus.ACCEPTED && (React.createElement(React.Fragment, null,
                            React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly ||
                                    (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER
                                    ? t("programme:notAuthToUploadDoc")
                                    : !uploadDocUserPermission(userInfoState, exports.DocType.DESIGN_DOCUMENT, programmeOwnerId, ministryLevelPermission) && t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                                React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: uploadDocUserPermission(userInfoState, exports.DocType.DESIGN_DOCUMENT, programmeOwnerId, ministryLevelPermission)
                                        ? {
                                            color: "#3F3A47",
                                            cursor: "pointer",
                                            margin: "0px 0px 1.5px 0px",
                                        }
                                        : {
                                            color: "#cacaca",
                                            cursor: "default",
                                            margin: "0px 0px 1.5px 0px",
                                        }, onClick: function () {
                                        return uploadDocUserPermission(userInfoState, exports.DocType.DESIGN_DOCUMENT, programmeOwnerId, ministryLevelPermission) && handleDesignDocFileUpload();
                                    } })),
                            React.createElement("input", { type: "file", ref: fileInputRef, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                    var selectedFile = e.target.files[0];
                                    e.target.value = null;
                                    onUploadDocument(selectedFile, exports.DocType.DESIGN_DOCUMENT);
                                } }))))) : (React.createElement(React.Fragment, null,
                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly ||
                                (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.CERTIFIER
                                ? t("programme:notAuthToUploadDoc")
                                : !uploadDocUserPermission(userInfoState, exports.DocType.DESIGN_DOCUMENT, programmeOwnerId, ministryLevelPermission) && t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: uploadDocUserPermission(userInfoState, exports.DocType.DESIGN_DOCUMENT, programmeOwnerId, ministryLevelPermission)
                                    ? {
                                        color: "#3F3A47",
                                        cursor: "pointer",
                                        margin: "0px 0px 1.5px 0px",
                                    }
                                    : {
                                        color: "#cacaca",
                                        cursor: "default",
                                        margin: "0px 0px 1.5px 0px",
                                    }, onClick: function () {
                                    return uploadDocUserPermission(userInfoState, exports.DocType.DESIGN_DOCUMENT, programmeOwnerId, ministryLevelPermission) && handleDesignDocFileUpload();
                                } })),
                        React.createElement("input", { type: "file", ref: fileInputRef, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                var selectedFile = e.target.files[0];
                                e.target.value = null;
                                onUploadDocument(selectedFile, exports.DocType.DESIGN_DOCUMENT);
                            } }))))),
                React.createElement(antd.Row, { className: "field", key: "Methodology Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: methodologyDocUrl !== "" ? "label-uploaded" : "label" }, t("programme:methDoc")),
                            methodDocStatus === exports.DocumentStatus.PENDING &&
                                (companyRolePermission || ministryLevelPermission) && (React.createElement(React.Fragment, null,
                                React.createElement(icons.LikeOutlined, { onClick: function () {
                                        //docAction(methDocId, DocumentStatus.ACCEPTED)
                                        setActionInfo({
                                            action: "APPROVE",
                                            headerText: "Confirmez vous ce rapport de validation ?",
                                            text: "".concat(t("programme:rejectDocBody")),
                                            type: "approve",
                                            icon: React.createElement(icons.LikeOutlined, null),
                                        });
                                        setOpenApproveDocConfirmationModal(true);
                                    }, className: "common-progress-icon", style: { color: "#976ED7", paddingTop: "3px" } }),
                                React.createElement(icons.DislikeOutlined, { onClick: function () {
                                        setRejectDocData({ id: methDocId });
                                        setActionInfo({
                                            action: "Reject",
                                            headerText: "".concat(t("programme:rejectDocHeader")),
                                            text: "".concat(t("programme:rejectDocBody")),
                                            type: "reject",
                                            icon: React.createElement(icons.DislikeOutlined, null),
                                        });
                                        setOpenRejectDocConfirmationModal(true);
                                    }, className: "common-progress-icon margin-left-1", style: { color: "#FD6F70", paddingTop: "3px" } }))),
                            methodDocStatus === exports.DocumentStatus.ACCEPTED && (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: "3px" } })),
                            methodDocStatus === exports.DocumentStatus.REJECTED && (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: t("programme:rejectTip"), overlayClassName: "custom-tooltip" },
                                React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70" } })))),
                        methodologyDocUrl !== "" && (React.createElement("div", { className: "time" },
                            moment(parseInt(methodologyDate)).format("DD MMMM YYYY @ HH:mm"),
                            " ~ " + methDocversion))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" }, methodologyDocUrl !== "" ? (React.createElement("div", { className: "link" },
                        linkDocVisible(methodDocStatus) && (React.createElement("a", { href: methodologyDocUrl, target: "_blank", rel: "noopener noreferrer", download: true },
                            React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } }))),
                        methodDocStatus !== exports.DocumentStatus.ACCEPTED && (React.createElement(React.Fragment, null,
                            React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                    ? t("programme:notAuthToUploadDoc")
                                    : !uploadDocUserPermission(userInfoState, exports.DocType.METHODOLOGY_DOCUMENT, programmeOwnerId, ministryLevelPermission) && t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                                React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: designDocStatus === exports.DocumentStatus.ACCEPTED &&
                                        uploadDocUserPermission(userInfoState, exports.DocType.METHODOLOGY_DOCUMENT, programmeOwnerId, ministryLevelPermission)
                                        ? {
                                            color: "#3F3A47",
                                            cursor: "pointer",
                                            margin: "0px 0px 1.5px 0px",
                                        }
                                        : {
                                            color: "#cacaca",
                                            margin: "0px 0px 1.5px 0px",
                                        }, onClick: function () {
                                        return designDocStatus === exports.DocumentStatus.ACCEPTED &&
                                            uploadDocUserPermission(userInfoState, exports.DocType.METHODOLOGY_DOCUMENT, programmeOwnerId, ministryLevelPermission) &&
                                            handleMethodologyFileUpload();
                                    } })),
                            React.createElement("input", { type: "file", ref: fileInputRefMeth, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                    var selectedFile = e.target.files[0];
                                    e.target.value = null;
                                    if (designDocStatus === exports.DocumentStatus.ACCEPTED)
                                        onUploadDocument(selectedFile, exports.DocType.METHODOLOGY_DOCUMENT);
                                } }))))) : (React.createElement(React.Fragment, null,
                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly
                                ? t("programme:notAuthToUploadDoc")
                                : uploadDocUserPermission(userInfoState, exports.DocType.METHODOLOGY_DOCUMENT, programmeOwnerId, ministryLevelPermission)
                                    ? designDocStatus !== exports.DocumentStatus.ACCEPTED &&
                                        t("programme:designDocNotApproved")
                                    : t("programme:orgNotAuth"), overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: designDocStatus === exports.DocumentStatus.ACCEPTED &&
                                    uploadDocUserPermission(userInfoState, exports.DocType.METHODOLOGY_DOCUMENT, programmeOwnerId, ministryLevelPermission)
                                    ? {
                                        color: "#3F3A47",
                                        cursor: "pointer",
                                        margin: "0px 0px 1.5px 0px",
                                    }
                                    : {
                                        color: "#cacaca",
                                        cursor: "default",
                                        margin: "0px 0px 1.5px 0px",
                                    }, onClick: function () {
                                    return designDocStatus === exports.DocumentStatus.ACCEPTED &&
                                        uploadDocUserPermission(userInfoState, exports.DocType.METHODOLOGY_DOCUMENT, programmeOwnerId, ministryLevelPermission) &&
                                        handleMethodologyFileUpload();
                                } })),
                        React.createElement("input", { type: "file", ref: fileInputRefMeth, style: { display: "none" }, accept: ".xls, .xlsx, .ppt, .pptx, .csv, .doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                var selectedFile = e.target.files[0];
                                e.target.value = null;
                                if (designDocStatus === exports.DocumentStatus.ACCEPTED)
                                    onUploadDocument(selectedFile, exports.DocType.METHODOLOGY_DOCUMENT);
                            } }))))),
                authorisationDocUrlsigne !== "" ? (React.createElement(antd.Row, { className: "field", key: "Authorisation Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: "label-uploaded" }, t("programme:authLetterLabel")),
                            React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: "3px" } }))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: authorisationDocUrlsigne, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))))) : (React.createElement("div", null, authoriseDoc2Url !== "" && (React.createElement(antd.Row, { className: "field", key: "Approval Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: "label-uploaded" }, t("programme:authLetterLabel")))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: authoriseDoc2Url, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement(icons.FileAddOutlined, { onClick: function () {
                                    onUploadModalConfirmAuth();
                                }, className: "common-progress-icon", style: {
                                    color: "#976ED7",
                                    paddingTop: "3px",
                                    margin: "0px 0px 1.5px 0px"
                                } }))))))),
                approvalDocUrlsigne !== "" ? (React.createElement(antd.Row, { className: "field", key: "Approval Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: "label-uploaded" }, "Lettre d'approbation"),
                            React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: "3px" } }))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: approvalDocUrlsigne, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))))) : (React.createElement("div", null, approvalDocUrl !== "" && (React.createElement(antd.Row, { className: "field", key: "Approval Document" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-uploaded" }, "Lettre d'Approbation")),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement("a", { href: approvalDocUrl, target: "_blank", rel: "noopener noreferrer", download: true },
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" },
                        React.createElement("div", { className: "link" },
                            React.createElement(icons.FileAddOutlined, { onClick: function () {
                                    onUploadModalConfirm();
                                }, className: "common-progress-icon", style: {
                                    color: "#976ED7",
                                    paddingTop: "3px",
                                    margin: "0px 0px 1.5px 0px"
                                } }))))))),
                React.createElement(antd.Row, { className: "field", key: "Environmental Impact Assessment" },
                    React.createElement(antd.Col, { span: 18, className: "field-key" },
                        React.createElement("div", { className: "label-container" },
                            React.createElement("div", { className: impactAssessmentUrl !== "" ? "label-uploaded" : "label" }, t("programme:environmentalImpactAssessment")),
                            impactAssessmentStatus === exports.DocumentStatus.PENDING &&
                                (ministryLevelPermission || companyRolePermission) && (React.createElement(React.Fragment, null,
                                React.createElement(icons.LikeOutlined, { onClick: function () {
                                        return docAction(impactAssessmentId, exports.DocumentStatus.ACCEPTED);
                                    }, className: "common-progress-icon", style: { color: "#976ED7", paddingTop: "3px" } }),
                                React.createElement(icons.DislikeOutlined, { onClick: function () {
                                        setRejectDocData({ id: impactAssessmentId });
                                        setActionInfo({
                                            action: "Reject",
                                            headerText: "".concat(t("programme:rejectDocHeader")),
                                            text: "".concat(t("programme:rejectDocBody")),
                                            type: "reject",
                                            icon: React.createElement(icons.DislikeOutlined, null),
                                        });
                                        setOpenRejectDocConfirmationModal(true);
                                    }, className: "common-progress-icon margin-left-1", style: { color: "#FD6F70", paddingTop: "3px" } }))),
                            impactAssessmentStatus === exports.DocumentStatus.ACCEPTED && (React.createElement(icons.CheckCircleOutlined, { className: "common-progress-icon", style: { color: "#5DC380", paddingTop: "3px" } })),
                            impactAssessmentStatus === exports.DocumentStatus.REJECTED && (React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: t("programme:rejectTip"), overlayClassName: "custom-tooltip" },
                                React.createElement(icons.ExclamationCircleOutlined, { className: "common-progress-icon", style: { color: "#FD6F70" } })))),
                        impactAssessmentUrl !== "" && (React.createElement("div", { className: "time" },
                            moment(parseInt(impactAssessmentDate)).format("DD MMMM YYYY @ HH:mm"),
                            " ~ " + impactAssessmentversion))),
                    React.createElement(antd.Col, { span: 6, className: "field-value" }, impactAssessmentUrl !== "" ? (React.createElement("div", { className: "link" },
                        linkDocVisible(impactAssessmentStatus) && (React.createElement("a", { href: impactAssessmentUrl, target: "_blank", rel: "noopener noreferrer", download: true },
                            React.createElement("div", null,
                                React.createElement(icons.BookOutlined, { className: "common-progress-icon", style: { color: "#3F3A47" } })))),
                        impactAssessmentStatus !== exports.DocumentStatus.ACCEPTED && (React.createElement(React.Fragment, null,
                            React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: impactAssessmentToolTipTitle, overlayClassName: "custom-tooltip" },
                                React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: uploadImpactAssessmentDocUserPermission &&
                                        !isProjectRejected
                                        ? {
                                            color: "#3F3A47",
                                            cursor: "pointer",
                                            margin: "0px 0px 1.5px 0px",
                                        }
                                        : {
                                            color: "#cacaca",
                                            cursor: "default",
                                            margin: "0px 0px 1.5px 0px",
                                        }, onClick: function () {
                                        return uploadImpactAssessmentDocUserPermission &&
                                            !isProjectRejected &&
                                            handleImpactAssessmentFileUpload();
                                    } })),
                            React.createElement("input", { type: "file", ref: fileInputRefImpactAssessment, style: { display: "none" }, accept: ".doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                    var selectedFile = e.target.files[0];
                                    e.target.value = null;
                                    onUploadDocument(selectedFile, exports.DocType.ENVIRONMENTAL_IMPACT_ASSESSMENT);
                                } }))))) : (React.createElement(React.Fragment, null,
                        React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "top", trigger: "hover", title: impactAssessmentToolTipTitle, overlayClassName: "custom-tooltip" },
                            React.createElement(icons.FileAddOutlined, { className: "common-progress-icon", style: uploadImpactAssessmentDocUserPermission &&
                                    !isProjectRejected
                                    ? {
                                        color: "#3F3A47",
                                        cursor: "pointer",
                                        margin: "0px 0px 1.5px 0px",
                                    }
                                    : {
                                        color: "#cacaca",
                                        cursor: "default",
                                        margin: "0px 0px 1.5px 0px",
                                    }, onClick: function () {
                                    return uploadImpactAssessmentDocUserPermission &&
                                        !isProjectRejected &&
                                        handleImpactAssessmentFileUpload();
                                } })),
                        React.createElement("input", { type: "file", ref: fileInputRefImpactAssessment, style: { display: "none" }, accept: ".doc, .docx, .pdf, .png, .jpg", onChange: function (e) {
                                var selectedFile = e.target.files[0];
                                e.target.value = null;
                                onUploadDocument(selectedFile, exports.DocType.ENVIRONMENTAL_IMPACT_ASSESSMENT);
                            } }))))))),
        React.createElement(RejectDocumentationConfirmationModel, { actionInfo: actionInfo, onActionConfirmed: handleOk, onActionCanceled: handleCancel, openModal: openRejectDocConfirmationModal, errorMsg: "", loading: loading, translator: translator }),
        React.createElement(ApproveDocumentationConfirmationModel, { actionInfo: actionInfo, onActionConfirmed: handleOkApprove, onActionCanceled: handleCancelApprove, openModal: openApproveDocConfirmationModal, list_certificateur: list_certificateur, onChangeCertificator: onChangeCertificator, errorMsg: "", loading: loading, translator: translator }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onUploadLetterSign, onActionCanceled: onUploadModalCanceled, openModal: openUploadModalConfirm, uploadmodal: openUploadModalConfirm, onUploadLetter: onUploadLetterSign, handleFileChange: handleFileChange, errorMsg: errorMsg, loading: loading }),
        React.createElement(UserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onUploadLetterSignAuth, onActionCanceled: onUploadModalCanceledAuth, openModal: openUploadModalConfirmAuth, letterOfAuth: letterOfAuth, uploadmodal: openUploadModalConfirmAuth, onUploadLetter: onUploadLetterSignAuth, handleFileChange: handleFileChange, errorMsg: errorMsg, loading: loading })));
};

var css_248z$3 = ".remark {\n  padding-top: 7px;\n  font-size: 0.75rem; }\n  .remark .remark-title {\n    text-transform: capitalize;\n    font-weight: 500;\n    color: rgba(58, 53, 65, 0.5); }\n  .remark .remark-body {\n    font-weight: 400;\n    color: rgba(58, 53, 65, 0.5); }\n";
styleInject(css_248z$3);

var formatString = function (str, vargs) {
    var parts = str.split("{}");
    var insertAt = 1;
    for (var _i = 0, vargs_1 = vargs; _i < vargs_1.length; _i++) {
        var arg = vargs_1[_i];
        parts.splice(insertAt, 0, arg);
        insertAt += 2;
    }
    return parts.join("");
};
var addNdcDesc = function (props) {
    var ndcActions = props.ndcActions, t = props.t, creditUnit = props.creditUnit;
    var actions = ndcActions.split("&");
    var ndcDesc = "";
    for (var id in actions) {
        var parts = actions[id].split("?");
        if (Number(id) == actions.length - 1 && actions.length > 1) {
            ndcDesc += " and ".concat(formatString(t("view:t1IssueNdcDesc"), [
                parts[1],
                creditUnit,
                parts[0],
            ]));
        }
        else if (actions.length > 1 && Number(id) != actions.length - 2) {
            ndcDesc += "".concat(formatString(t("view:t1IssueNdcDesc"), [
                parts[1],
                creditUnit,
                parts[0],
            ]), ", ");
        }
        else {
            ndcDesc += "".concat(formatString(t("view:t1IssueNdcDesc"), [
                parts[1],
                creditUnit,
                parts[0],
            ]));
        }
    }
    return ndcDesc;
};
var TimelineBody = function (props) {
    var text = props.text, remark = props.remark, via = props.via, t = props.t;
    return (React.createElement("div", null,
        React.createElement("div", null,
            text,
            via && React.createElement("span", null, " ".concat(t("view:via"), " ").concat(via))),
        remark && remark !== "undefined" && remark !== "null" && (React.createElement("div", { className: "remark" },
            React.createElement("div", { className: "remark-title" }, t("view:remarks")),
            React.createElement("div", { className: "remark-body" }, remark)))));
};

var css_248z$2 = ".emission-tab-container .ant-tabs-tab-btn {\n  padding: 5px 30px;\n  text-align: center;\n  font-weight: 600;\n  color: rgba(58, 53, 65, 0.5); }\n\n.emission-tab-container .anticon-lock {\n  margin-right: 0 !important; }\n\n.empty-emission-container {\n  padding-top: 5%;\n  padding-bottom: 5%; }\n\n.emission-tab-container .add-emission {\n  display: flex;\n  flex-direction: column;\n  background-color: #ffffff;\n  margin: 1rem 0 1rem 0;\n  border-radius: 10px;\n  padding: 0 1.5rem 2.5rem 1.5rem; }\n  .emission-tab-container .add-emission .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\n    color: #008f39; }\n  .emission-tab-container .add-emission .ant-tabs-ink-bar {\n    position: absolute;\n    background: #008f39 !important;\n    pointer-events: none; }\n  .emission-tab-container .add-emission .add-new-year-picker-col {\n    padding-left: 5%; }\n  .emission-tab-container .add-emission .ant-picker {\n    border-radius: 4px !important;\n    height: 40px !important;\n    width: 80%; }\n  .emission-tab-container .add-emission .ant-input-suffix {\n    display: flex;\n    flex: none;\n    align-items: center;\n    height: 40px; }\n    .emission-tab-container .add-emission .ant-input-suffix button {\n      border: none;\n      color: #8C8C8C; }\n  .emission-tab-container .add-emission .ant-input-affix-wrapper {\n    padding: 0 11px;\n    border-radius: 5px; }\n  .emission-tab-container .add-emission .add-new-upload-file-label {\n    color: rgba(58, 53, 65, 0.5);\n    padding: 0 0 8px;\n    line-height: 1.5715;\n    white-space: initial;\n    text-align: left; }\n  .emission-tab-container .add-emission .add-new-upload-file-name-input input {\n    height: 40px;\n    color: #008f39;\n    border-radius: 4px !important; }\n  .emission-tab-container .add-emission .add-new-upload-file-inner-col button {\n    height: 40px;\n    font-size: 12px;\n    width: 120px;\n    color: #8C8C8C;\n    border-radius: 4px !important; }\n  .emission-tab-container .add-emission .view-download-file-name-input input {\n    height: 40px;\n    color: #8C8C8C;\n    border-radius: 4px !important; }\n  .emission-tab-container .add-emission .view-download-file-inner-col button {\n    height: 40px;\n    font-size: 12px;\n    font-weight: 400;\n    width: 135px;\n    margin-left: 5px;\n    color: #8C8C8C;\n    border-radius: 4px !important; }\n  .emission-tab-container .add-emission .table-heading-row {\n    padding-top: 20px;\n    padding-bottom: 25px;\n    margin-left: 10px !important; }\n    .emission-tab-container .add-emission .table-heading-row .table-heading-col {\n      text-align: center;\n      font-size: 18px;\n      font-weight: 700;\n      color: #28282899; }\n  .emission-tab-container .add-emission .total-emission-row {\n    padding: 12px 16px;\n    margin-left: 30px !important; }\n    .emission-tab-container .add-emission .total-emission-row span {\n      font-size: 18px;\n      font-weight: 700;\n      color: #3A3541CC; }\n    .emission-tab-container .add-emission .total-emission-row .total-emission-value-col {\n      border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n      padding-bottom: 10px; }\n  .emission-tab-container .add-emission .panel-header-col {\n    font-size: 16px;\n    font-weight: 600;\n    color: #3A3541CC; }\n  .emission-tab-container .add-emission .panel-header-emission-value-col {\n    border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n    padding-bottom: 10px; }\n  .emission-tab-container .add-emission .sub-panel .panel-header-emission-value-col {\n    border-bottom: none !important;\n    padding-bottom: 10px; }\n  .emission-tab-container .add-emission .sub-panel-heading {\n    border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n    padding-bottom: 10px;\n    margin-top: 35px; }\n    .emission-tab-container .add-emission .sub-panel-heading .panel-header-col {\n      font-size: 14px;\n      font-weight: 600;\n      color: #3A3541CC; }\n  .emission-tab-container .add-emission .ant-collapse-ghost > .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n    padding-top: 0px;\n    padding-bottom: 12px;\n    margin-left: 32px; }\n  .emission-tab-container .add-emission .ant-collapse-expand-icon {\n    margin-top: 3px; }\n    .emission-tab-container .add-emission .ant-collapse-expand-icon svg {\n      font-size: 16px;\n      color: #008f39; }\n  .emission-tab-container .add-emission .ant-collapse {\n    margin-left: 10px; }\n  .emission-tab-container .add-emission .co2-total-pill {\n    border-radius: 20px;\n    background-color: rgba(145, 85, 253, 0.4);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .emission-tab-container .add-emission .ch4-total-pill {\n    border-radius: 20px;\n    background-color: rgba(217, 217, 217, 0.6);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .emission-tab-container .add-emission .n2o-total-pill {\n    border-radius: 20px;\n    background-color: rgba(185, 226, 244, 0.4);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .emission-tab-container .add-emission .co2eq-total-pill {\n    border-radius: 20px;\n    background-color: rgba(255, 166, 166, 0.6);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .emission-tab-container .add-emission .panel-content-row {\n    border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n    padding-bottom: 10px;\n    height: 68px;\n    align-items: center; }\n    .emission-tab-container .add-emission .panel-content-row .panel-content-title {\n      font-size: 14px;\n      font-weight: 400;\n      color: #3A3541CC; }\n  .emission-tab-container .add-emission .panel-content-input-box-row {\n    margin-top: 14px; }\n    .emission-tab-container .add-emission .panel-content-input-box-row .ant-input-number {\n      height: 40px;\n      margin-left: 17%; }\n  .emission-tab-container .add-emission .total-co2-land-input-box-row .ant-input-number {\n    margin-left: 14% !important; }\n  .emission-tab-container .add-emission .total-co2-without-land-row {\n    margin-left: 40px !important;\n    align-items: center;\n    margin-top: 10px; }\n    .emission-tab-container .add-emission .total-co2-without-land-row .total-co2-without-land-title {\n      font-size: 16px;\n      font-weight: 600;\n      color: #3A3541CC; }\n    .emission-tab-container .add-emission .total-co2-without-land-row .panel-content-input-box-row {\n      border-bottom: 1px solid rgba(217, 217, 217, 0.6); }\n  .emission-tab-container .add-emission .ant-input-number-input {\n    text-align: center;\n    height: 40px; }\n  .emission-tab-container .add-emission .view-data-panel .panel-content-input-box-row {\n    padding-bottom: 24px; }\n  .emission-tab-container .add-emission .total-co2-with-land-row {\n    margin-left: 40px !important;\n    align-items: center; }\n    .emission-tab-container .add-emission .total-co2-with-land-row .total-co2-with-land-title {\n      font-size: 16px;\n      font-weight: 600;\n      color: #3A3541CC; }\n    .emission-tab-container .add-emission .total-co2-with-land-row .panel-content-input-box-row {\n      border-bottom: 1px solid rgba(217, 217, 217, 0.6); }\n  .emission-tab-container .add-emission .steps-actions {\n    display: flex;\n    flex-direction: row-reverse;\n    margin-right: 1rem;\n    margin-top: 3rem; }\n    .emission-tab-container .add-emission .steps-actions .action-btn {\n      border: 1px solid #008f39;\n      color: #008f39;\n      margin-right: 1rem; }\n    .emission-tab-container .add-emission .steps-actions .back-btn {\n      border: 1px solid rgba(140, 140, 140, 0.7);\n      color: rgba(140, 140, 140, 0.7);\n      margin-right: 1rem; }\n    .emission-tab-container .add-emission .steps-actions .submit-btn {\n      margin-right: 1rem; }\n    .emission-tab-container .add-emission .steps-actions .mg-left-1 {\n      margin-left: 1rem; }\n  @media only screen and (max-width: 1600px) {\n    .emission-tab-container .add-emission .panel-content-input-box-row .ant-input-number {\n      margin-left: 2%; }\n    .emission-tab-container .add-emission .total-co2-land-input-box-row .ant-input-number {\n      margin-left: 0% !important; } }\n";
styleInject(css_248z$2);

var EmissionTypes = { co2: 'CO2', ch4: 'CH4', n2o: 'N2O', co2eq: 'CO2-eq' };

var EmissionSectors = {
    'Energy Industries': 'energyIndustries',
    'Manufacturing Industries and Construction': 'manufacturingIndustriesConstruction',
    Transport: 'transport',
    'Other Sectors': 'otherSectors',
    'Non-Specified': 'nonSpecified',
    'Solid Fuels': 'solidFuels',
    'Oil and Natural Gas': 'oilNaturalGas',
    'Other emissions from Energy Production': 'otherEmissionsEnergyProduction',
    'Transport of CO2': 'transportOfCo2',
    'Injection and Storage': 'injectionStorage',
    'Other (Carbon dioxide Transport and Storage)': 'otherCarbonDioxideTransportStorage',
    'Mineral Industry': 'mineralIndustry',
    'Chemical Industry': 'chemicalIndustry',
    'Metal Industry': 'metalIndustry',
    'Non-Energy Products from Fuels and Solvent Use': 'nonEnergyProductsFuelsSolventUse',
    'Electronics Industry': 'electronicsIndustry',
    'Product Uses as Substitutes for Ozone Depleting Substances': 'productUsesSubstOzoneDepletingSubs',
    'Other Product Manufacture and Use': 'otherProductManufactureUse',
    'Other (Industrial Processes & Product Use)': 'otherIndustrialProcessesProductUse',
    Livestock: 'livestock',
    Land: 'land',
    'Aggregate sources and non-CO2 emissions sources on land': 'aggregateNonCo2SourcesLand',
    'Other (Agriculture, Forestry, and Other Land Use)': 'otherAgricultureForestryOtherLandUse',
    'Solid Waste Disposal': 'solidWasteDisposal',
    'Biological Treatment of Solid Waste': 'biologicalTreatmentSolidWaste',
    'Incineration and Open Burning of Waste': 'incinerationOpenBurningWaste',
    'Wastewater Treatment and Discharge': 'wastewaterTreatmentDischarge',
    'Other (Waste)': 'otherWaste',
    'Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3': 'indirectN2oEmissions',
    Other: 'other',
    'Total CO2 equivalent emissions without land use, land-use change and forestry': 'totalCo2WithoutLand',
    'Total CO2 equivalent emissions with land use, land-use change and forestry': 'totalCo2WithLand',
};
var formFields = {
    energyEmissions: {
        fuelCombustionActivities: [
            'energyIndustries',
            'manufacturingIndustriesConstruction',
            'transport',
            'otherSectors',
            'nonSpecified',
        ],
        fugitiveEmissionsFromFuels: ['solidFuels', 'oilNaturalGas', 'otherEmissionsEnergyProduction'],
        carbonDioxideTransportStorage: ['transportOfCo2', 'injectionStorage', 'other'],
    },
    industrialProcessesProductUse: [
        'mineralIndustry',
        'chemicalIndustry',
        'metalIndustry',
        'nonEnergyProductsFuelsSolventUse',
        'electronicsIndustry',
        'productUsesSubstOzoneDepletingSubs',
        'otherProductManufactureUse',
        'other',
    ],
    agricultureForestryOtherLandUse: ['livestock', 'land', 'aggregateNonCo2SourcesLand', 'other'],
    waste: [
        'solidWasteDisposal',
        'biologicalTreatmentSolidWaste',
        'incinerationOpenBurningWaste',
        'wastewaterTreatmentDischarge',
        'other',
    ],
    other: ['indirectN2oEmissions', 'other'],
};
var emissionCsvFieldMap = {
    "year": "Year",
    "energyEmissions_fuelCombustionActivities_energyIndustries_co2": "Energy Industries - CO2",
    "energyEmissions_fuelCombustionActivities_energyIndustries_ch4": "Energy Industries - CH4",
    "energyEmissions_fuelCombustionActivities_energyIndustries_n2o": "Energy Industries - N2O",
    "energyEmissions_fuelCombustionActivities_energyIndustries_co2eq": "Energy Industries - CO2-eq",
    "energyEmissions_fuelCombustionActivities_manufacturingIndustriesConstruction_co2": "Manufacturing Industries and Construction - CO2",
    "energyEmissions_fuelCombustionActivities_manufacturingIndustriesConstruction_ch4": "Manufacturing Industries and Construction - CH4",
    "energyEmissions_fuelCombustionActivities_manufacturingIndustriesConstruction_n2o": "Manufacturing Industries and Construction - N2O",
    "energyEmissions_fuelCombustionActivities_manufacturingIndustriesConstruction_co2eq": "Manufacturing Industries and Construction - CO2-eq",
    "energyEmissions_fuelCombustionActivities_transport_co2": "Transport - CO2",
    "energyEmissions_fuelCombustionActivities_transport_ch4": "Transport - CH4",
    "energyEmissions_fuelCombustionActivities_transport_n2o": "Transport - N2O",
    "energyEmissions_fuelCombustionActivities_transport_co2eq": "Transport - CO2-eq",
    "energyEmissions_fuelCombustionActivities_otherSectors_co2": "Other Sectors - CO2",
    "energyEmissions_fuelCombustionActivities_otherSectors_ch4": "Other Sectors - CH4",
    "energyEmissions_fuelCombustionActivities_otherSectors_n2o": "Other Sectors - N2O",
    "energyEmissions_fuelCombustionActivities_otherSectors_co2eq": "Other Sectors - CO2-eq",
    "energyEmissions_fuelCombustionActivities_nonSpecified_co2": "Non-Specified - CO2",
    "energyEmissions_fuelCombustionActivities_nonSpecified_ch4": "Non-Specified - CH4",
    "energyEmissions_fuelCombustionActivities_nonSpecified_n2o": "Non-Specified - N2O",
    "energyEmissions_fuelCombustionActivities_nonSpecified_co2eq": "Non-Specified - CO2-eq",
    "energyEmissions_fugitiveEmissionsFromFuels_solidFuels_co2": "Solid Fuels - CO2",
    "energyEmissions_fugitiveEmissionsFromFuels_solidFuels_ch4": "Solid Fuels - CH4",
    "energyEmissions_fugitiveEmissionsFromFuels_solidFuels_n2o": "Solid Fuels - N2O",
    "energyEmissions_fugitiveEmissionsFromFuels_solidFuels_co2eq": "Solid Fuels - CO2-eq",
    "energyEmissions_fugitiveEmissionsFromFuels_oilNaturalGas_co2": "Oil and Natural Gas - CO2",
    "energyEmissions_fugitiveEmissionsFromFuels_oilNaturalGas_ch4": "Oil and Natural Gas - CH4",
    "energyEmissions_fugitiveEmissionsFromFuels_oilNaturalGas_n2o": "Oil and Natural Gas - N2O",
    "energyEmissions_fugitiveEmissionsFromFuels_oilNaturalGas_co2eq": "Oil and Natural Gas - CO2-eq",
    "energyEmissions_fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_co2": "Other emissions from Energy Production - CO2",
    "energyEmissions_fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_ch4": "Other emissions from Energy Production - CH4",
    "energyEmissions_fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_n2o": "Other emissions from Energy Production - N2O",
    "energyEmissions_fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_co2eq": "Other emissions from Energy Production - CO2-eq",
    "energyEmissions_carbonDioxideTransportStorage_transportOfCo2_co2": "Transport of CO2 - CO2",
    "energyEmissions_carbonDioxideTransportStorage_transportOfCo2_ch4": "Transport of CO2 - CH4",
    "energyEmissions_carbonDioxideTransportStorage_transportOfCo2_n2o": "Transport of CO2 - N2O",
    "energyEmissions_carbonDioxideTransportStorage_transportOfCo2_co2eq": "Transport of CO2 - CO2-eq",
    "energyEmissions_carbonDioxideTransportStorage_injectionStorage_co2": "Injection and Storage - CO2",
    "energyEmissions_carbonDioxideTransportStorage_injectionStorage_ch4": "Injection and Storage - CH4",
    "energyEmissions_carbonDioxideTransportStorage_injectionStorage_n2o": "Injection and Storage - N2O",
    "energyEmissions_carbonDioxideTransportStorage_injectionStorage_co2eq": "Injection and Storage - CO2-eq",
    "energyEmissions_carbonDioxideTransportStorage_other_ch4": "Other (Carbon dioxide Transport and Storage) - CH4",
    "energyEmissions_carbonDioxideTransportStorage_other_co2": "Other (Carbon dioxide Transport and Storage) - CO2",
    "energyEmissions_carbonDioxideTransportStorage_other_n2o": "Other (Carbon dioxide Transport and Storage) - N2O",
    "energyEmissions_carbonDioxideTransportStorage_other_co2eq": "Other (Carbon dioxide Transport and Storage) - CO2-eq",
    "industrialProcessesProductUse_mineralIndustry_co2": "Mineral Industry - CO2",
    "industrialProcessesProductUse_mineralIndustry_ch4": "Mineral Industry - CH4",
    "industrialProcessesProductUse_mineralIndustry_n2o": "Mineral Industry - N2O",
    "industrialProcessesProductUse_mineralIndustry_co2eq": "Mineral Industry - CO2-eq",
    "industrialProcessesProductUse_chemicalIndustry_co2": "Chemical Industry - CO2",
    "industrialProcessesProductUse_chemicalIndustry_ch4": "Chemical Industry - CH4",
    "industrialProcessesProductUse_chemicalIndustry_n2o": "Chemical Industry - N2O",
    "industrialProcessesProductUse_chemicalIndustry_co2eq": "Chemical Industry - CO2-eq",
    "industrialProcessesProductUse_metalIndustry_co2": "Metal Industry - CO2",
    "industrialProcessesProductUse_metalIndustry_ch4": "Metal Industry - CH4",
    "industrialProcessesProductUse_metalIndustry_n2o": "Metal Industry - N2O",
    "industrialProcessesProductUse_metalIndustry_co2eq": "Metal Industry - CO2-eq",
    "industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_co2": "Non-Energy Products from Fuels and Solvent Use - CO2",
    "industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_ch4": "Non-Energy Products from Fuels and Solvent Use - CH4",
    "industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_n2o": "Non-Energy Products from Fuels and Solvent Use - N2O",
    "industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_co2eq": "Non-Energy Products from Fuels and Solvent Use - CO2-eq",
    "industrialProcessesProductUse_electronicsIndustry_co2": "Electronics Industry - CO2",
    "industrialProcessesProductUse_electronicsIndustry_ch4": "Electronics Industry - CH4",
    "industrialProcessesProductUse_electronicsIndustry_n2o": "Electronics Industry - N2O",
    "industrialProcessesProductUse_electronicsIndustry_co2eq": "Electronics Industry - CO2-eq",
    "industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_co2": "Product Uses as Substitutes for Ozone Depleting Substances - CO2",
    "industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_ch4": "Product Uses as Substitutes for Ozone Depleting Substances - CH4",
    "industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_n2o": "Product Uses as Substitutes for Ozone Depleting Substances - N2O",
    "industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_co2eq": "Product Uses as Substitutes for Ozone Depleting Substances - CO2-eq",
    "industrialProcessesProductUse_otherProductManufactureUse_co2": "Other Product Manufacture and Use - CO2",
    "industrialProcessesProductUse_otherProductManufactureUse_ch4": "Other Product Manufacture and Use - CH4",
    "industrialProcessesProductUse_otherProductManufactureUse_n2o": "Other Product Manufacture and Use - N2O",
    "industrialProcessesProductUse_otherProductManufactureUse_co2eq": "Other Product Manufacture and Use - CO2-eq",
    "industrialProcessesProductUse_other_co2": "Other (Industrial Processes & Product Use) - CO2",
    "industrialProcessesProductUse_other_ch4": "Other (Industrial Processes & Product Use) - CH4",
    "industrialProcessesProductUse_other_n2o": "Other (Industrial Processes & Product Use) - N2O",
    "industrialProcessesProductUse_other_co2eq": "Other (Industrial Processes & Product Use) - CO2-eq",
    "agricultureForestryOtherLandUse_livestock_co2": "Livestock - CO2",
    "agricultureForestryOtherLandUse_livestock_ch4": "Livestock - CH4",
    "agricultureForestryOtherLandUse_livestock_n2o": "Livestock - N2O",
    "agricultureForestryOtherLandUse_livestock_co2eq": "Livestock - CO2-eq",
    "agricultureForestryOtherLandUse_land_co2": "Land - CO2",
    "agricultureForestryOtherLandUse_land_ch4": "Land - CH4",
    "agricultureForestryOtherLandUse_land_n2o": "Land - N2O",
    "agricultureForestryOtherLandUse_land_co2eq": "Land - CO2-eq",
    "agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_co2": "Aggregate sources and non-CO2 emissions sources on land - CO2",
    "agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_ch4": "Aggregate sources and non-CO2 emissions sources on land - CH4",
    "agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_n2o": "Aggregate sources and non-CO2 emissions sources on land - N2O",
    "agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_co2eq": "Aggregate sources and non-CO2 emissions sources on land - CO2-eq",
    "agricultureForestryOtherLandUse_other_co2": "Other (Agriculture, Forestry, and Other Land Use) - CO2",
    "agricultureForestryOtherLandUse_other_ch4": "Other (Agriculture, Forestry, and Other Land Use) - CH4",
    "agricultureForestryOtherLandUse_other_n2o": "Other (Agriculture, Forestry, and Other Land Use) - N2O",
    "agricultureForestryOtherLandUse_other_co2eq": "Other (Agriculture, Forestry, and Other Land Use) - CO2-eq",
    "waste_solidWasteDisposal_co2": "Solid Waste Disposal - CO2",
    "waste_solidWasteDisposal_ch4": "Solid Waste Disposal - CH4",
    "waste_solidWasteDisposal_n2o": "Solid Waste Disposal - N2O",
    "waste_solidWasteDisposal_co2eq": "Solid Waste Disposal - CO2-eq",
    "waste_biologicalTreatmentSolidWaste_co2": "Biological Treatment of Solid Waste - CO2",
    "waste_biologicalTreatmentSolidWaste_ch4": "Biological Treatment of Solid Waste - CH4",
    "waste_biologicalTreatmentSolidWaste_n2o": "Biological Treatment of Solid Waste - N2O",
    "waste_biologicalTreatmentSolidWaste_co2eq": "Biological Treatment of Solid Waste - CO2-eq",
    "waste_incinerationOpenBurningWaste_co2": "Incineration and Open Burning of Waste - CO2",
    "waste_incinerationOpenBurningWaste_ch4": "Incineration and Open Burning of Waste - CH4",
    "waste_incinerationOpenBurningWaste_n2o": "Incineration and Open Burning of Waste - N2O",
    "waste_incinerationOpenBurningWaste_co2eq": "Incineration and Open Burning of Waste - CO2-eq",
    "waste_wastewaterTreatmentDischarge_co2": "Wastewater Treatment and Discharge - CO2",
    "waste_wastewaterTreatmentDischarge_ch4": "Wastewater Treatment and Discharge - CH4",
    "waste_wastewaterTreatmentDischarge_n2o": "Wastewater Treatment and Discharge - N2O",
    "waste_wastewaterTreatmentDischarge_co2eq": "Wastewater Treatment and Discharge - CO2-eq",
    "waste_other_co2": "Other (Waste) - CO2",
    "waste_other_ch4": "Other (Waste) - CH4",
    "waste_other_n2o": "Other (Waste) - N2O",
    "waste_other_co2eq": "Other (Waste) - CO2-eq",
    "other_indirectN2oEmissions_co2": "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3 - CO2",
    "other_indirectN2oEmissions_ch4": "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3 - CH4",
    "other_indirectN2oEmissions_n2o": "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3 - N2O",
    "other_indirectN2oEmissions_co2eq": "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3 - CO2-eq",
    "other_other_co2": "Other - CO2",
    "other_other_ch4": "Other - CH4",
    "other_other_n2o": "Other - N2O",
    "other_other_co2eq": "Other - CO2-eq",
    "totalCo2WithoutLand_co2": "Total CO2 equivalent emissions without land use, land-use change and forestry - CO2",
    "totalCo2WithoutLand_ch4": "Total CO2 equivalent emissions without land use, land-use change and forestry - CH4",
    "totalCo2WithoutLand_n2o": "Total CO2 equivalent emissions without land use, land-use change and forestry - N2O",
    "totalCo2WithoutLand_co2eq": "Total CO2 equivalent emissions without land use, land-use change and forestry - CO2-eq",
    "totalCo2WithLand_co2": "Total CO2 equivalent emissions with land use, land-use change and forestry - CO2",
    "totalCo2WithLand_ch4": "Total CO2 equivalent emissions with land use, land-use change and forestry - CH4",
    "totalCo2WithLand_n2o": "Total CO2 equivalent emissions with land use, land-use change and forestry - N2O",
    "totalCo2WithLand_co2eq": "Total CO2 equivalent emissions with land use, land-use change and forestry - CO2-eq",
};
var projectionsCsvFieldMap = {
    "year": "Year",
    "energyEmissions_fuelCombustionActivities_energyIndustries_bau": "Energy Industries - BAU",
    "energyEmissions_fuelCombustionActivities_energyIndustries_conditionalNdc": "Energy Industries - Conditional NDC",
    "energyEmissions_fuelCombustionActivities_energyIndustries_unconditionalNdc": "Energy Industries - Unconditional NDC",
    "energyEmissions_fuelCombustionActivities_manufacturingIndustriesConstruction_bau": "Manufacturing Industries and Construction - BAU",
    "energyEmissions_fuelCombustionActivities_manufacturingIndustriesConstruction_conditionalNdc": "Manufacturing Industries and Construction - Conditional NDC",
    "energyEmissions_fuelCombustionActivities_manufacturingIndustriesConstruction_unconditionalNdc": "Manufacturing Industries and Construction - Unconditional NDC",
    "energyEmissions_fuelCombustionActivities_transport_bau": "Transport - BAU",
    "energyEmissions_fuelCombustionActivities_transport_conditionalNdc": "Transport - Conditional NDC",
    "energyEmissions_fuelCombustionActivities_transport_unconditionalNdc": "Transport - Unconditional NDC",
    "energyEmissions_fuelCombustionActivities_otherSectors_bau": "Other Sectors - BAU",
    "energyEmissions_fuelCombustionActivities_otherSectors_conditionalNdc": "Other Sectors - Conditional NDC",
    "energyEmissions_fuelCombustionActivities_otherSectors_unconditionalNdc": "Other Sectors - Unconditional NDC",
    "energyEmissions_fuelCombustionActivities_nonSpecified_bau": "Non-Specified - BAU",
    "energyEmissions_fuelCombustionActivities_nonSpecified_conditionalNdc": "Non-Specified - Conditional NDC",
    "energyEmissions_fuelCombustionActivities_nonSpecified_unconditionalNdc": "Non-Specified - Unconditional NDC",
    "energyEmissions_fugitiveEmissionsFromFuels_solidFuels_bau": "Solid Fuels - BAU",
    "energyEmissions_fugitiveEmissionsFromFuels_solidFuels_conditionalNdc": "Solid Fuels - Conditional NDC",
    "energyEmissions_fugitiveEmissionsFromFuels_solidFuels_unconditionalNdc": "Solid Fuels - Unconditional NDC",
    "energyEmissions_fugitiveEmissionsFromFuels_oilNaturalGas_bau": "Oil and Natural Gas - BAU",
    "energyEmissions_fugitiveEmissionsFromFuels_oilNaturalGas_conditionalNdc": "Oil and Natural Gas - Conditional NDC",
    "energyEmissions_fugitiveEmissionsFromFuels_oilNaturalGas_unconditionalNdc": "Oil and Natural Gas - Unconditional NDC",
    "energyEmissions_fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_bau": "Other emissions from Energy Production - BAU",
    "energyEmissions_fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_conditionalNdc": "Other emissions from Energy Production - Conditional NDC",
    "energyEmissions_fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_unconditionalNdc": "Other emissions from Energy Production - Unconditional NDC",
    "energyEmissions_carbonDioxideTransportStorage_transportOfCo2_bau": "Transport of CO2 - BAU",
    "energyEmissions_carbonDioxideTransportStorage_transportOfCo2_conditionalNdc": "Transport of CO2 - Conditional NDC",
    "energyEmissions_carbonDioxideTransportStorage_transportOfCo2_unconditionalNdc": "Transport of CO2 - Unconditional NDC",
    "energyEmissions_carbonDioxideTransportStorage_injectionStorage_bau": "Injection and Storage - BAU",
    "energyEmissions_carbonDioxideTransportStorage_injectionStorage_conditionalNdc": "Injection and Storage - Conditional NDC",
    "energyEmissions_carbonDioxideTransportStorage_injectionStorage_unconditionalNdc": "Injection and Storage - Unconditional NDC",
    "energyEmissions_carbonDioxideTransportStorage_other_bau": "Other (Carbon dioxide Transport and Storage) - BAU",
    "energyEmissions_carbonDioxideTransportStorage_other_conditionalNdc": "Other (Carbon dioxide Transport and Storage) - Conditional NDC",
    "energyEmissions_carbonDioxideTransportStorage_other_unconditionalNdc": "Other (Carbon dioxide Transport and Storage) - Unconditional NDC",
    "industrialProcessesProductUse_mineralIndustry_bau": "Mineral Industry - BAU",
    "industrialProcessesProductUse_mineralIndustry_conditionalNdc": "Mineral Industry - Conditional NDC",
    "industrialProcessesProductUse_mineralIndustry_unconditionalNdc": "Mineral Industry - Unconditional NDC",
    "industrialProcessesProductUse_chemicalIndustry_bau": "Chemical Industry - BAU",
    "industrialProcessesProductUse_chemicalIndustry_conditionalNdc": "Chemical Industry - Conditional NDC",
    "industrialProcessesProductUse_chemicalIndustry_unconditionalNdc": "Chemical Industry - Unconditional NDC",
    "industrialProcessesProductUse_metalIndustry_bau": "Metal Industry - BAU",
    "industrialProcessesProductUse_metalIndustry_conditionalNdc": "Metal Industry - Conditional NDC",
    "industrialProcessesProductUse_metalIndustry_unconditionalNdc": "Metal Industry - Unconditional NDC",
    "industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_bau": "Non-Energy Products from Fuels and Solvent Use - BAU",
    "industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_conditionalNdc": "Non-Energy Products from Fuels and Solvent Use - Conditional NDC",
    "industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_unconditionalNdc": "Non-Energy Products from Fuels and Solvent Use - Unconditional NDC",
    "industrialProcessesProductUse_electronicsIndustry_bau": "Electronics Industry - BAU",
    "industrialProcessesProductUse_electronicsIndustry_conditionalNdc": "Electronics Industry - Conditional NDC",
    "industrialProcessesProductUse_electronicsIndustry_unconditionalNdc": "Electronics Industry - Unconditional NDC",
    "industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_bau": "Product Uses as Substitutes for Ozone Depleting Substances - BAU",
    "industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_conditionalNdc": "Product Uses as Substitutes for Ozone Depleting Substances - Conditional NDC",
    "industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_unconditionalNdc": "Product Uses as Substitutes for Ozone Depleting Substances - Unconditional NDC",
    "industrialProcessesProductUse_otherProductManufactureUse_bau": "Other Product Manufacture and Use - BAU",
    "industrialProcessesProductUse_otherProductManufactureUse_conditionalNdc": "Other Product Manufacture and Use - Conditional NDC",
    "industrialProcessesProductUse_otherProductManufactureUse_unconditionalNdc": "Other Product Manufacture and Use - Unconditional NDC",
    "industrialProcessesProductUse_other_bau": "Other (Industrial Processes & Product Use) - BAU",
    "industrialProcessesProductUse_other_conditionalNdc": "Other (Industrial Processes & Product Use) - Conditional NDC",
    "industrialProcessesProductUse_other_unconditionalNdc": "Other (Industrial Processes & Product Use) - Unconditional NDC",
    "agricultureForestryOtherLandUse_livestock_bau": "Livestock - BAU",
    "agricultureForestryOtherLandUse_livestock_conditionalNdc": "Livestock - Conditional NDC",
    "agricultureForestryOtherLandUse_livestock_unconditionalNdc": "Livestock - Unconditional NDC",
    "agricultureForestryOtherLandUse_land_bau": "Land - BAU",
    "agricultureForestryOtherLandUse_land_conditionalNdc": "Land - Conditional NDC",
    "agricultureForestryOtherLandUse_land_unconditionalNdc": "Land - Unconditional NDC",
    "agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_bau": "Aggregate sources and non-CO2 emissions sources on land - BAU",
    "agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_conditionalNdc": "Aggregate sources and non-CO2 emissions sources on land - Conditional NDC",
    "agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_unconditionalNdc": "Aggregate sources and non-CO2 emissions sources on land - Unconditional NDC",
    "agricultureForestryOtherLandUse_other_bau": "Other (Agriculture, Forestry, and Other Land Use) - BAU",
    "agricultureForestryOtherLandUse_other_conditionalNdc": "Other (Agriculture, Forestry, and Other Land Use) - Conditional NDC",
    "agricultureForestryOtherLandUse_other_unconditionalNdc": "Other (Agriculture, Forestry, and Other Land Use) - Unconditional NDC",
    "waste_solidWasteDisposal_bau": "Solid Waste Disposal - BAU",
    "waste_solidWasteDisposal_conditionalNdc": "Solid Waste Disposal - Conditional NDC",
    "waste_solidWasteDisposal_unconditionalNdc": "Solid Waste Disposal - Unconditional NDC",
    "waste_biologicalTreatmentSolidWaste_bau": "Biological Treatment of Solid Waste - BAU",
    "waste_biologicalTreatmentSolidWaste_conditionalNdc": "Biological Treatment of Solid Waste - Conditional NDC",
    "waste_biologicalTreatmentSolidWaste_unconditionalNdc": "Biological Treatment of Solid Waste - Unconditional NDC",
    "waste_incinerationOpenBurningWaste_bau": "Incineration and Open Burning of Waste - BAU",
    "waste_incinerationOpenBurningWaste_conditionalNdc": "Incineration and Open Burning of Waste - Conditional NDC",
    "waste_incinerationOpenBurningWaste_unconditionalNdc": "Incineration and Open Burning of Waste - Unconditional NDC",
    "waste_wastewaterTreatmentDischarge_bau": "Wastewater Treatment and Discharge - BAU",
    "waste_wastewaterTreatmentDischarge_conditionalNdc": "Wastewater Treatment and Discharge - Conditional NDC",
    "waste_wastewaterTreatmentDischarge_unconditionalNdc": "Wastewater Treatment and Discharge - Unconditional NDC",
    "waste_other_bau": "Other (Waste) - BAU",
    "waste_other_conditionalNdc": "Other (Waste) - Conditional NDC",
    "waste_other_unconditionalNdc": "Other (Waste) - Unconditional NDC",
    "other_indirectN2oEmissions_bau": "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3 - BAU",
    "other_indirectN2oEmissions_conditionalNdc": "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3 - Conditional NDC",
    "other_indirectN2oEmissions_unconditionalNdc": "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3 - Unconditional NDC",
    "other_other_bau": "Other - BAU",
    "other_other_conditionalNdc": "Other - Conditional NDC",
    "other_other_unconditionalNdc": "Other - Unconditional NDC",
    "totalCo2WithoutLand_bau": "Total CO2 equivalent emissions without land use, land-use change and forestry - BAU",
    "totalCo2WithoutLand_conditionalNdc": "Total CO2 equivalent emissions without land use, land-use change and forestry - Conditional NDC",
    "totalCo2WithoutLand_unconditionalNdc": "Total CO2 equivalent emissions without land use, land-use change and forestry - Unconditional NDC",
    "totalCo2WithLand_bau": "Total CO2 equivalent emissions with land use, land-use change and forestry - BAU",
    "totalCo2WithLand_conditionalNdc": "Total CO2 equivalent emissions with land use, land-use change and forestry - Conditional NDC",
    "totalCo2WithLand_unconditionalNdc": "Total CO2 equivalent emissions with land use, land-use change and forestry - Unconditional NDC",
};
var totalEmissionFields = [
    'Total National Emission and Removals - CO2',
    'Total National Emission and Removals - CH4',
    'Total National Emission and Removals - N2O',
    'Total National Emission and Removals - CO2eq',
];
var totalProjectionFields = [
    'Total National Emission and Removals - BAU',
    'Total National Emission and Removals - Conditional NDC',
    'Total National Emission and Removals - Unconditional NDC',
];
var excelFields = [
    "Energy",
    "Fuel Combustion Activities",
    "Energy Industries",
    "Manufacturing Industries and Construction",
    "Transport",
    "Other Sectors",
    "Non-Specified",
    "Fugitive emissions from fuels",
    "Solid Fuels",
    "Oil and Natural Gas",
    "Other emissions from Energy Production",
    "Carbon dioxide Transport and Storage",
    "Transport of CO2",
    "Injection and Storage",
    "Other (Carbon dioxide Transport and Storage)",
    "Industrial Processes & Product Use",
    "Mineral Industry",
    "Chemical Industry",
    "Metal Industry",
    "Non-Energy Products from Fuels and Solvent Use",
    "Electronics Industry",
    "Product Uses as Substitutes for Ozone Depleting Substances",
    "Other Product Manufacture and Use",
    "Other (Industrial Processes & Product Use)",
    "Agriculture, Forestry, and Other Land Use",
    "Livestock",
    "Land",
    "Aggregate sources and non-CO2 emissions sources on land",
    "Other (Agriculture, Forestry, and Other Land Use)",
    "Waste",
    "Solid Waste Disposal",
    "Biological Treatment of Solid Waste",
    "Incineration and Open Burning of Waste",
    "Wastewater Treatment and Discharge",
    "Other (Waste)",
    "Other",
    "Indirect N2O emissions from the atmospheric deposition of nitrogen in NOx and NH3",
    "Other",
    "Total CO2 equivalent emissions without land use, land-use change and forestry",
    "Total CO2 equivalent emissions with land use, land-use change and forestry",
];

antd.Input.TextArea;
var DiscardChangesConfirmationModel = function (props) {
    var t = props.t, actionInfo = props.actionInfo, onActionConfirmed = props.onActionConfirmed, onActionCanceled = props.onActionCanceled, openModal = props.openModal; props.errorMsg; var loading = props.loading;
    var _a = React.useState(""); _a[0]; var setComment = _a[1];
    React.useEffect(function () {
        setComment("");
    }, [openModal]);
    return (React.createElement(antd.Modal, { title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" }, actionInfo.icon),
            React.createElement("div", null, actionInfo.headerText)), className: "popup-" + actionInfo.type, open: openModal, width: Math.min(400, window.innerWidth), centered: true, onCancel: onActionCanceled, destroyOnClose: true, footer: null },
        React.createElement("p", { style: { whiteSpace: "pre-line" } }, actionInfo.text),
        React.createElement(antd.Form, { layout: "vertical", onFinish: function () {
                onActionConfirmed();
            } },
            React.createElement("div", { className: "mg-top-1 ant-modal-footer padding-bottom-0" },
                React.createElement(antd.Button, { htmlType: "button", onClick: function () {
                        onActionCanceled();
                    } }, t("userProfile:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading }, actionInfo.action)))));
};

var GHGRecordState;
(function (GHGRecordState) {
    GHGRecordState["SAVED"] = "SAVED";
    GHGRecordState["FINALIZED"] = "FINALIZED";
})(GHGRecordState || (GHGRecordState = {}));

var TextArea = antd.Input.TextArea;
var GHGUserActionConfirmationModel = function (props) {
    var t = props.t, actionInfo = props.actionInfo, onActionConfirmed = props.onActionConfirmed, onActionCanceled = props.onActionCanceled, openModal = props.openModal, errorMsg = props.errorMsg, loading = props.loading;
    var _a = React.useState(""), comment = _a[0], setComment = _a[1];
    React.useEffect(function () {
        setComment("");
    }, [openModal]);
    return (React.createElement(antd.Modal, { title: React.createElement("div", { className: "popup-header" },
            React.createElement("div", { className: "icon" }, actionInfo.icon),
            React.createElement("div", null, actionInfo.headerText)), className: "popup-" + actionInfo.type, open: openModal, width: Math.min(400, window.innerWidth), centered: true, onCancel: onActionCanceled, destroyOnClose: true, footer: null },
        React.createElement("p", { style: { whiteSpace: "pre-line" } }, actionInfo.text),
        React.createElement(antd.Form, { layout: "vertical", onFinish: function () {
                var status = actionInfo.action === "submit" ? GHGRecordState.SAVED : GHGRecordState.FINALIZED;
                onActionConfirmed(comment, status);
            } },
            React.createElement(antd.Form.Item, { className: "mg-bottom-0", label: t("ghgInventory:remarks"), name: "remarks", required: actionInfo.type === "danger" },
                React.createElement(TextArea, { defaultValue: comment, rows: 2, onChange: function (v) { return setComment(v.target.value); } })),
            errorMsg ? (React.createElement(antd.Alert, { className: "mg-top-1", message: errorMsg, type: "error", showIcon: true })) : (""),
            React.createElement("div", { className: "mg-top-1 ant-modal-footer padding-bottom-0" },
                React.createElement(antd.Button, { htmlType: "button", onClick: function () {
                        onActionCanceled();
                    } }, t("userProfile:cancel")),
                React.createElement(antd.Button, { className: "mg-left-2", type: "primary", htmlType: "submit", loading: loading, disabled: actionInfo.type === "danger" && comment === "" }, actionInfo.action)))));
};

var GHGEmissionsComponent = function (props) {
    var t = props.t;
    var userInfoState = useUserContext().userInfoState;
    var _a = React.useState([]), data = _a[0], setData = _a[1];
    var _b = useConnection(), get = _b.get, post = _b.post;
    var _c = React.useState(false), loading = _c[0], setLoading = _c[1];
    var _d = React.useState(false), isPendingFinalization = _d[0], setIsPendingFinalization = _d[1];
    var _e = React.useState(null); _e[0]; var setSelectedYear = _e[1];
    var _f = React.useState(''), uploadedFileName = _f[0], setUploadedFileName = _f[1];
    var _g = React.useState([]), disabledYears = _g[0], setDisabledYears = _g[1];
    var _h = React.useState(); _h[0]; _h[1];
    var _j = React.useState(0), totalNationalCo2 = _j[0], setTotalNationalCo2 = _j[1];
    var _k = React.useState(0), totalNationalCh4 = _k[0], setTotalNationalCh4 = _k[1];
    var _l = React.useState(0), totalNationalN2o = _l[0], setTotalNationalN2o = _l[1];
    var _m = React.useState(0), totalNationalCo2Eq = _m[0], setTotalNationalCo2Eq = _m[1];
    var _o = React.useState(0), energyEmissionsCo2 = _o[0], setEnergyEmissionsCo2 = _o[1];
    var _p = React.useState(0), energyEmissionsCh4 = _p[0], setEnergyEmissionsCh4 = _p[1];
    var _q = React.useState(0), energyEmissionsN2o = _q[0], setEnergyEmissionsN2o = _q[1];
    var _r = React.useState(0), energyEmissionsCo2Eq = _r[0], setEnergyEmissionsCo2Eq = _r[1];
    var _s = React.useState(0), fuelCombustionActivitiesCo2 = _s[0], setFuelCombustionActivitiesCo2 = _s[1];
    var _t = React.useState(0), fuelCombustionActivitiesCh4 = _t[0], setFuelCombustionActivitiesCh4 = _t[1];
    var _u = React.useState(0), fuelCombustionActivitiesN2o = _u[0], setFuelCombustionActivitiesN2o = _u[1];
    var _v = React.useState(0), fuelCombustionActivitiesCo2Eq = _v[0], setFuelCombustionActivitiesCo2Eq = _v[1];
    var _w = React.useState(0), fugitiveEmissionsFromFuelsCo2 = _w[0], setFugitiveEmissionsFromFuelsCo2 = _w[1];
    var _x = React.useState(0), fugitiveEmissionsFromFuelsCh4 = _x[0], setFugitiveEmissionsFromFuelsCh4 = _x[1];
    var _y = React.useState(0), fugitiveEmissionsFromFuelsN2o = _y[0], setFugitiveEmissionsFromFuelsN2o = _y[1];
    var _z = React.useState(0), fugitiveEmissionsFromFuelsCo2Eq = _z[0], setFugitiveEmissionsFromFuelsCo2Eq = _z[1];
    var _0 = React.useState(0), carbonDioxideTransportStorageCo2 = _0[0], setCarbonDioxideTransportStorageCo2 = _0[1];
    var _1 = React.useState(0), carbonDioxideTransportStorageCh4 = _1[0], setCarbonDioxideTransportStorageCh4 = _1[1];
    var _2 = React.useState(0), carbonDioxideTransportStorageN2o = _2[0], setCarbonDioxideTransportStorageN2o = _2[1];
    var _3 = React.useState(0), carbonDioxideTransportStorageCo2Eq = _3[0], setCarbonDioxideTransportStorageCo2Eq = _3[1];
    var _4 = React.useState(0), industrialProcessesProductUseCo2 = _4[0], setIndustrialProcessesProductUseCo2 = _4[1];
    var _5 = React.useState(0), industrialProcessesProductUseCh4 = _5[0], setIndustrialProcessesProductUseCh4 = _5[1];
    var _6 = React.useState(0), industrialProcessesProductUseN2o = _6[0], setIndustrialProcessesProductUseN2o = _6[1];
    var _7 = React.useState(0), industrialProcessesProductUseCo2Eq = _7[0], setIndustrialProcessesProductUseCo2Eq = _7[1];
    var _8 = React.useState(0), agricultureForestryOtherLandUseCo2 = _8[0], setAgricultureForestryOtherLandUseCo2 = _8[1];
    var _9 = React.useState(0), agricultureForestryOtherLandUseCh4 = _9[0], setAgricultureForestryOtherLandUseCh4 = _9[1];
    var _10 = React.useState(0), agricultureForestryOtherLandUseN2o = _10[0], setAgricultureForestryOtherLandUseN2o = _10[1];
    var _11 = React.useState(0), agricultureForestryOtherLandUseCo2Eq = _11[0], setAgricultureForestryOtherLandUseCo2Eq = _11[1];
    var _12 = React.useState(0), wasteCo2 = _12[0], setWasteCo2 = _12[1];
    var _13 = React.useState(0), wasteCh4 = _13[0], setWasteCh4 = _13[1];
    var _14 = React.useState(0), wasteN2o = _14[0], setWasteN2o = _14[1];
    var _15 = React.useState(0), wasteCo2Eq = _15[0], setWasteCo2Eq = _15[1];
    var _16 = React.useState(0), otherCo2 = _16[0], setOtherCo2 = _16[1];
    var _17 = React.useState(0), otherCh4 = _17[0], setOtherCh4 = _17[1];
    var _18 = React.useState(0), otherN2o = _18[0], setOtherN2o = _18[1];
    var _19 = React.useState(0), otherCo2Eq = _19[0], setOtherCo2Eq = _19[1];
    var _20 = React.useState({
        totalCo2WithoutLand_ch4: 0,
        totalCo2WithoutLand_co2: 0,
        totalCo2WithoutLand_n2o: 0,
        totalCo2WithoutLand_co2eq: 0
    }); _20[0]; var setTotalCo2WithoutLandEmissions = _20[1];
    var _21 = React.useState({
        totalCo2WithLand_ch4: 0,
        totalCo2WithLand_co2: 0,
        totalCo2WithLand_n2o: 0,
        totalCo2WithLand_co2eq: 0
    }); _21[0]; _21[1];
    var _22 = React.useState(false), isSavedFormDataSet = _22[0], setIsSavedFormDataSet = _22[1];
    var _23 = React.useState(1), formDataVersion = _23[0], setFormDataVersion = _23[1];
    var _24 = React.useState(false), isFormChanged = _24[0], setIsFormChanged = _24[1];
    var _25 = React.useState(false), openSaveFormModal = _25[0], setOpenSaveFormModal = _25[1];
    var _26 = React.useState(false), openFinalizeFormModal = _26[0], setOpenFinalizeFormModal = _26[1];
    var _27 = React.useState(false), openResetFormModal = _27[0], setOpenResetFormModal = _27[1];
    var _28 = React.useState(''), errorMsg = _28[0], setErrorMsg = _28[1];
    var _29 = React.useState({}), actionInfo = _29[0], setActionInfo = _29[1];
    var Panel = antd.Collapse.Panel;
    var form = antd.Form.useForm()[0];
    var createSetFieldObject = function (obj, objName) {
        var result = {};
        for (var key in obj) {
            var energyEmissionsSub = obj[key];
            for (var childKey in energyEmissionsSub) {
                if (typeof energyEmissionsSub[childKey] === 'object') {
                    for (var category in energyEmissionsSub) {
                        var subcategory = energyEmissionsSub[category];
                        for (var gas in subcategory) {
                            result["".concat(key, "_").concat(category, "_").concat(gas)] = !isNaN(subcategory[gas]) ? subcategory[gas] : 0;
                        }
                    }
                }
                else {
                    for (var gas in energyEmissionsSub) {
                        result["".concat(objName, "_").concat(key, "_").concat(gas)] = !isNaN(energyEmissionsSub[gas]) ? energyEmissionsSub[gas] : 0;
                    }
                }
            }
        }
        return result;
    };
    var validateExcelDataFormat = function (sheet, excelData) {
        var sheetHeadings = utils.sheet_to_json(sheet, {
            header: 1,
        })[0];
        var columnHeadings = ['Sector', 'CO2', 'CH4', 'N2O', 'CO2-eq'];
        if (!columnHeadings.every(function (element) { return sheetHeadings.includes(element); })) {
            return false;
        }
        var sectorValues = excelData.map(function (excelDataObj) { return excelDataObj.Sector; });
        if (!excelFields.every(function (element) { return sectorValues.includes(element); })) {
            return false;
        }
        return true;
    };
    var populateFormWithUploadedFile = function (excelData, keyPrefix) {
        var emissions = {};
        for (var key in EmissionTypes) {
            emissions[key] = excelData[EmissionTypes[key]];
        }
        return (emissions);
    };
    var handleFileUploadData = function (excelData) {
        var result = {};
        excelData.forEach(function (excelDataObj) {
            if (Object.keys(EmissionSectors).includes(excelDataObj.Sector)) {
                result[EmissionSectors[excelDataObj.Sector]] = populateFormWithUploadedFile(excelDataObj, EmissionSectors[excelDataObj.Sector]);
            }
        });
        var upData = {
            energyEmissions: {
                fuelCombustionActivities: {
                    energyIndustries: result.energyIndustries,
                    manufacturingIndustriesConstruction: result.manufacturingIndustriesConstruction,
                    transport: result.transport,
                    otherSectors: result.otherSectors,
                    nonSpecified: result.nonSpecified,
                },
                fugitiveEmissionsFromFuels: {
                    solidFuels: result.solidFuels,
                    oilNaturalGas: result.oilNaturalGas,
                    otherEmissionsEnergyProduction: result.otherEmissionsEnergyProduction,
                },
                carbonDioxideTransportStorage: {
                    transportOfCo2: result.transportOfCo2,
                    injectionStorage: result.injectionStorage,
                    other: result.otherCarbonDioxideTransportStorage,
                },
            },
            industrialProcessesProductUse: {
                mineralIndustry: result.mineralIndustry,
                chemicalIndustry: result.chemicalIndustry,
                metalIndustry: result.metalIndustry,
                nonEnergyProductsFuelsSolventUse: result.nonEnergyProductsFuelsSolventUse,
                electronicsIndustry: result.electronicsIndustry,
                productUsesSubstOzoneDepletingSubs: result.productUsesSubstOzoneDepletingSubs,
                otherProductManufactureUse: result.otherProductManufactureUse,
                other: result.otherIndustrialProcessesProductUse,
            },
            agricultureForestryOtherLandUse: {
                livestock: result.livestock,
                land: result.land,
                aggregateNonCo2SourcesLand: result.aggregateNonCo2SourcesLand,
                other: result.otherAgricultureForestryOtherLandUse,
            },
            waste: {
                solidWasteDisposal: result.solidWasteDisposal,
                biologicalTreatmentSolidWaste: result.biologicalTreatmentSolidWaste,
                incinerationOpenBurningWaste: result.incinerationOpenBurningWaste,
                wastewaterTreatmentDischarge: result.wastewaterTreatmentDischarge,
                other: result.otherWaste,
            },
            other: {
                indirectN2oEmissions: result.indirectN2oEmissions,
                other: result.other,
            },
            totalCo2WithoutLand: result.totalCo2WithoutLand,
            totalCo2WithLand: result.totalCo2WithLand,
        };
        // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
        setFormValues(upData);
    };
    React.useEffect(function () {
        var hasSaveState = data.some(function (item) { return item.state === 'SAVED'; });
        setIsPendingFinalization(hasSaveState);
    }, [data, uploadedFileName]);
    var handleYearChange = function (date, dateString) {
        setSelectedYear(dateString);
    };
    function calculateSumEmissionView(obj, gasType) {
        var sum = 0;
        for (var key in obj) {
            if (key === gasType) {
                sum += (typeof obj[key] === "number") ? obj[key] : 0;
            }
            else if (typeof obj[key] === 'object' &&
                key !== 'totalCo2WithLand' &&
                key !== 'totalCo2WithoutLand') {
                var calculatedSum = calculateSumEmissionView(obj[key], gasType);
                sum += (typeof calculatedSum === "number") ? calculatedSum : 0;
            }
        }
        return sum;
    }
    var onValuesChange = function (changedValues, allValues) {
        // Track the changed values
        var initialValues = null;
        if (isPendingFinalization) {
            var savedData = data.filter(function (item) { return item.state === 'SAVED'; });
            initialValues = savedData[0];
        }
        var currentValues = form.getFieldsValue(true);
        var isChanged = !(JSON.stringify(currentValues) === JSON.stringify(initialValues));
        setIsFormChanged(isChanged);
    };
    var getBase64 = function (file) {
        return new Promise(function (resolve, reject) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () { return resolve(reader.result); };
            reader.onerror = function (error) { return reject(error); };
        });
    };
    var createSaveRequestPayload = function (fields, remarks, status) { return __awaiter(void 0, void 0, void 0, function () {
        var requestBody, savedEmission, emissionImportBase64;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    requestBody = {};
                    savedEmission = {
                        year: fields === null || fields === void 0 ? void 0 : fields.year.year(),
                        energyEmissions: {
                            fuelCombustionActivities: {
                                energyIndustries: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_energyIndustries_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_energyIndustries_ch4,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_energyIndustries_co2eq,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_energyIndustries_n2o,
                                },
                                manufacturingIndustriesConstruction: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_manufacturingIndustriesConstruction_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_manufacturingIndustriesConstruction_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_manufacturingIndustriesConstruction_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_manufacturingIndustriesConstruction_co2eq,
                                },
                                transport: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_transport_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_transport_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_transport_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_transport_co2eq,
                                },
                                otherSectors: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_otherSectors_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_otherSectors_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_otherSectors_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_otherSectors_co2eq,
                                },
                                nonSpecified: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_nonSpecified_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_nonSpecified_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_nonSpecified_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_nonSpecified_co2eq,
                                },
                            },
                            fugitiveEmissionsFromFuels: {
                                solidFuels: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_solidFuels_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_solidFuels_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_solidFuels_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_solidFuels_co2eq,
                                },
                                oilNaturalGas: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_oilNaturalGas_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_oilNaturalGas_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_oilNaturalGas_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_oilNaturalGas_co2eq,
                                },
                                otherEmissionsEnergyProduction: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_co2eq,
                                },
                            },
                            carbonDioxideTransportStorage: {
                                transportOfCo2: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_transportOfCo2_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_transportOfCo2_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_transportOfCo2_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_transportOfCo2_co2eq,
                                },
                                injectionStorage: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_injectionStorage_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_injectionStorage_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_injectionStorage_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_injectionStorage_co2eq,
                                },
                                other: {
                                    co2: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_other_co2,
                                    ch4: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_other_ch4,
                                    n2o: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_other_n2o,
                                    co2eq: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_other_co2eq,
                                },
                            },
                        },
                        industrialProcessesProductUse: {
                            mineralIndustry: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_mineralIndustry_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_mineralIndustry_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_mineralIndustry_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_mineralIndustry_co2eq,
                            },
                            chemicalIndustry: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_chemicalIndustry_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_chemicalIndustry_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_chemicalIndustry_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_chemicalIndustry_co2eq,
                            },
                            metalIndustry: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_metalIndustry_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_metalIndustry_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_metalIndustry_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_metalIndustry_co2eq,
                            },
                            nonEnergyProductsFuelsSolventUse: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_co2eq,
                            },
                            electronicsIndustry: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_electronicsIndustry_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_electronicsIndustry_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_electronicsIndustry_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_electronicsIndustry_co2eq,
                            },
                            productUsesSubstOzoneDepletingSubs: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_co2eq,
                            },
                            otherProductManufactureUse: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_otherProductManufactureUse_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_otherProductManufactureUse_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_otherProductManufactureUse_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_otherProductManufactureUse_co2eq,
                            },
                            other: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_other_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_other_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_other_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_other_co2eq,
                            },
                        },
                        agricultureForestryOtherLandUse: {
                            livestock: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_livestock_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_livestock_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_livestock_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_livestock_co2eq,
                            },
                            land: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_land_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_land_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_land_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_land_co2eq,
                            },
                            aggregateNonCo2SourcesLand: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_co2eq,
                            },
                            other: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_other_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_other_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_other_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_other_co2eq,
                            },
                        },
                        waste: {
                            solidWasteDisposal: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.waste_solidWasteDisposal_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.waste_solidWasteDisposal_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.waste_solidWasteDisposal_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.waste_solidWasteDisposal_co2eq,
                            },
                            biologicalTreatmentSolidWaste: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.waste_biologicalTreatmentSolidWaste_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.waste_biologicalTreatmentSolidWaste_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.waste_biologicalTreatmentSolidWaste_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.waste_biologicalTreatmentSolidWaste_co2eq,
                            },
                            incinerationOpenBurningWaste: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.waste_incinerationOpenBurningWaste_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.waste_incinerationOpenBurningWaste_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.waste_incinerationOpenBurningWaste_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.waste_incinerationOpenBurningWaste_co2eq,
                            },
                            wastewaterTreatmentDischarge: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.waste_wastewaterTreatmentDischarge_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.waste_wastewaterTreatmentDischarge_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.waste_wastewaterTreatmentDischarge_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.waste_wastewaterTreatmentDischarge_co2eq,
                            },
                            other: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.waste_other_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.waste_other_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.waste_other_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.waste_other_co2eq,
                            },
                        },
                        other: {
                            indirectN2oEmissions: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.other_indirectN2oEmissions_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.other_indirectN2oEmissions_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.other_indirectN2oEmissions_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.other_indirectN2oEmissions_co2eq,
                            },
                            other: {
                                co2: fields === null || fields === void 0 ? void 0 : fields.other_other_co2,
                                ch4: fields === null || fields === void 0 ? void 0 : fields.other_other_ch4,
                                n2o: fields === null || fields === void 0 ? void 0 : fields.other_other_n2o,
                                co2eq: fields === null || fields === void 0 ? void 0 : fields.other_other_co2eq,
                            },
                        },
                        totalCo2WithoutLand: {
                            co2: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithoutLand_co2,
                            ch4: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithoutLand_ch4,
                            n2o: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithoutLand_n2o,
                            co2eq: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithoutLand_co2eq,
                        },
                        totalCo2WithLand: {
                            co2: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithLand_co2,
                            ch4: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithLand_ch4,
                            n2o: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithLand_n2o,
                            co2eq: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithLand_co2eq,
                        },
                        state: status,
                        remarks: remarks,
                        version: formDataVersion,
                    };
                    requestBody = savedEmission;
                    if (!(fields === null || fields === void 0 ? void 0 : fields.emissionsDocument)) return [3 /*break*/, 2];
                    return [4 /*yield*/, getBase64((_a = fields === null || fields === void 0 ? void 0 : fields.emissionsDocument[0]) === null || _a === void 0 ? void 0 : _a.originFileObj)];
                case 1:
                    emissionImportBase64 = _b.sent();
                    if ((emissionImportBase64 === null || emissionImportBase64 === void 0 ? void 0 : emissionImportBase64.length) > 0) {
                        requestBody.emissionDocument = emissionImportBase64;
                    }
                    _b.label = 2;
                case 2: return [2 /*return*/, requestBody];
            }
        });
    }); };
    var clearForm = function () {
        form.resetFields();
        setFuelCombustionActivitiesCo2(0);
        setFuelCombustionActivitiesCh4(0);
        setFuelCombustionActivitiesN2o(0);
        setFuelCombustionActivitiesCo2Eq(0);
        setFugitiveEmissionsFromFuelsCo2(0);
        setFugitiveEmissionsFromFuelsCh4(0);
        setFugitiveEmissionsFromFuelsN2o(0);
        setFugitiveEmissionsFromFuelsCo2Eq(0);
        setCarbonDioxideTransportStorageCo2(0);
        setCarbonDioxideTransportStorageCh4(0);
        setCarbonDioxideTransportStorageN2o(0);
        setCarbonDioxideTransportStorageCo2Eq(0);
        setIndustrialProcessesProductUseCo2(0);
        setIndustrialProcessesProductUseCh4(0);
        setIndustrialProcessesProductUseN2o(0);
        setIndustrialProcessesProductUseCo2Eq(0);
        setAgricultureForestryOtherLandUseCo2(0);
        setAgricultureForestryOtherLandUseCh4(0);
        setAgricultureForestryOtherLandUseN2o(0);
        setAgricultureForestryOtherLandUseCo2Eq(0);
        setWasteCo2(0);
        setWasteCh4(0);
        setWasteN2o(0);
        setWasteCo2Eq(0);
        setOtherCo2(0);
        setOtherCh4(0);
        setOtherN2o(0);
        setOtherCo2Eq(0);
    };
    var resetForm = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: 
                // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
                return [4 /*yield*/, getEmissionData()];
                case 1:
                    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
                    _a.sent();
                    setOpenResetFormModal(false);
                    setIsSavedFormDataSet(false);
                    clearUploadDoc();
                    if (!isPendingFinalization) {
                        clearForm();
                    }
                    antd.message.open({
                        type: 'success',
                        content: t('ghgInventory:formCancelledSuccess'),
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    return [2 /*return*/];
            }
        });
    }); };
    var onResetFormCanceled = function () {
        setOpenResetFormModal(false);
    };
    var onOpenResetFormModel = function () {
        if (!isFormChanged) {
            antd.message.open({
                type: 'error',
                content: t('ghgInventory:formNotChanged'),
                duration: 4,
                style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
            });
        }
        else {
            setActionInfo({
                action: "".concat(t('ghgInventory:proceed')),
                headerText: "".concat(t('ghgInventory:discardHeaderText')),
                type: 'danger',
                icon: React.createElement(icons.CloseCircleOutlined, null),
            });
            setErrorMsg('');
            setOpenResetFormModal(true);
        }
    };
    var onSaveFormCanceled = function () {
        setOpenSaveFormModal(false);
    };
    var onOpenSaveFormModel = function () {
        var _a = form.getFieldsValue(true); _a.year; var rest = __rest(_a, ["year"]);
        var otherFieldsNegativeValue = Object.values(rest).some(function (value) {
            return typeof value === 'number' && value < 0;
        });
        form
            .validateFields()
            .then(function (values) {
            if (!isFormChanged) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:formNotChanged'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
            else {
                setActionInfo({
                    action: "".concat(t("ghgInventory:submit")),
                    headerText: "".concat(t("ghgInventory:submitModelHeader")),
                    type: "primary",
                    icon: React.createElement(icons.CheckCircleOutlined, null),
                });
                setErrorMsg('');
                setOpenSaveFormModal(true);
            }
        })
            .catch(function (errorInfo) {
            if (otherFieldsNegativeValue) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:negativeValuesNotAllowed'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
        });
    };
    var onFinalizeFormCanceled = function () {
        setOpenFinalizeFormModal(false);
    };
    var onOpenFinalizeFormModel = function () {
        var _a = form.getFieldsValue(true); _a.year; var rest = __rest(_a, ["year"]);
        var otherFieldsEmpty = Object.values(rest).every(function (value) { return !value; });
        var otherFieldsNegativeValue = Object.values(rest).some(function (value) {
            return typeof value === 'number' && value < 0;
        });
        form
            .validateFields()
            .then(function (values) {
            // Validation successful, set ActionInfo and open the form modal
            if (otherFieldsEmpty) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:cannotFinaliseEmpty'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
            else {
                setActionInfo({
                    action: "".concat(t("ghgInventory:finalize")),
                    headerText: "".concat(t("ghgInventory:finalizeModelHeader")),
                    type: "primary",
                    icon: React.createElement(Icon.ClipboardCheck, null),
                });
                setErrorMsg('');
                setOpenFinalizeFormModal(true);
            }
        })
            .catch(function (errorInfo) {
            // Validation failed
            if (otherFieldsNegativeValue) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:negativeValuesNotAllowed'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
            console.log('Validation failed:', errorInfo);
        });
    };
    var onSubmitForm = function (remarks, status) { return __awaiter(void 0, void 0, void 0, function () {
        var fields, payload, response, messageContent, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    fields = form.getFieldsValue(true);
                    return [4 /*yield*/, createSaveRequestPayload(fields, remarks, status)];
                case 1:
                    payload = _a.sent();
                    setLoading(true);
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 6, 11, 12]);
                    return [4 /*yield*/, post('national/emissions', payload)];
                case 3:
                    response = _a.sent();
                    console.log('Emission creation -> ', response);
                    if (!((response === null || response === void 0 ? void 0 : response.statusText) === 'SUCCESS')) return [3 /*break*/, 5];
                    setOpenSaveFormModal(false);
                    messageContent = (response === null || response === void 0 ? void 0 : response.status) == axios.HttpStatusCode.Created ?
                        t('ghgInventory:emissionCreationSuccess')
                        : t('ghgInventory:emissionUpdateSuccess');
                    if (status === GHGRecordState.FINALIZED) {
                        clearUploadDoc();
                        clearForm();
                        messageContent = t('ghgInventory:emissionFinalizedSuccess');
                    }
                    setOpenFinalizeFormModal(false);
                    antd.message.open({
                        type: 'success',
                        content: messageContent,
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    clearUploadDoc();
                    return [4 /*yield*/, getEmissionData()];
                case 4:
                    _a.sent();
                    _a.label = 5;
                case 5: return [3 /*break*/, 12];
                case 6:
                    error_1 = _a.sent();
                    console.log('Error in emission creation - ', error_1);
                    setOpenSaveFormModal(false);
                    setOpenFinalizeFormModal(false);
                    antd.message.open({
                        type: 'error',
                        content: error_1 === null || error_1 === void 0 ? void 0 : error_1.message,
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    if (!(error_1.status === axios.HttpStatusCode.Conflict.valueOf())) return [3 /*break*/, 8];
                    return [4 /*yield*/, getEmissionData()];
                case 7:
                    _a.sent();
                    setIsSavedFormDataSet(false);
                    clearUploadDoc();
                    if (!isPendingFinalization) {
                        clearForm();
                    }
                    return [3 /*break*/, 10];
                case 8:
                    if (!(error_1.status === axios.HttpStatusCode.Forbidden.valueOf())) return [3 /*break*/, 10];
                    clearUploadDoc();
                    clearForm();
                    return [4 /*yield*/, getEmissionData()];
                case 9:
                    _a.sent();
                    _a.label = 10;
                case 10: return [3 /*break*/, 12];
                case 11:
                    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
                    setIsFormChanged(false);
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 12: return [2 /*return*/];
            }
        });
    }); };
    var getEmissionData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, get('national/emissions')];
                case 2:
                    response = _a.sent();
                    console.log('Emissions GET -> ', response);
                    if (response === null || response === void 0 ? void 0 : response.data) {
                        setData(response.data);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_2 = _a.sent();
                    console.log('Error in emission fetch - ', error_2);
                    antd.message.open({
                        type: 'error',
                        content: error_2 === null || error_2 === void 0 ? void 0 : error_2.message,
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setIsFormChanged(false);
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        var fetchData = function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, getEmissionData()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        fetchData();
    }, []);
    var setFormValues = function (emissionObject) {
        if (emissionObject.year) {
            form.setFieldsValue({ year: moment(emissionObject.year, 'YYYY') });
        }
        form.setFieldsValue(createSetFieldObject(emissionObject.energyEmissions, 'energyEmissions'));
        form.setFieldsValue(createSetFieldObject(emissionObject.industrialProcessesProductUse, 'industrialProcessesProductUse'));
        form.setFieldsValue(createSetFieldObject(emissionObject.agricultureForestryOtherLandUse, 'agricultureForestryOtherLandUse'));
        form.setFieldsValue(createSetFieldObject(emissionObject.waste, 'waste'));
        form.setFieldsValue(createSetFieldObject(emissionObject.other, 'other'));
        form.setFieldsValue({
            totalCo2WithoutLand_co2: emissionObject.totalCo2WithoutLand.co2,
            totalCo2WithoutLand_ch4: emissionObject.totalCo2WithoutLand.ch4,
            totalCo2WithoutLand_n2o: emissionObject.totalCo2WithoutLand.n2o,
            totalCo2WithoutLand_co2eq: emissionObject.totalCo2WithoutLand.co2eq,
        });
        form.setFieldsValue({
            totalCo2WithLand_co2: emissionObject.totalCo2WithLand.co2,
            totalCo2WithLand_ch4: emissionObject.totalCo2WithLand.ch4,
            totalCo2WithLand_n2o: emissionObject.totalCo2WithLand.n2o,
            totalCo2WithLand_co2eq: emissionObject.totalCo2WithLand.co2eq,
        });
        setFuelCombustionActivitiesCo2(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fuelCombustionActivities, 'co2'));
        setFuelCombustionActivitiesCh4(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fuelCombustionActivities, 'ch4'));
        setFuelCombustionActivitiesN2o(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fuelCombustionActivities, 'n2o'));
        setFuelCombustionActivitiesCo2Eq(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fuelCombustionActivities, 'co2eq'));
        setFugitiveEmissionsFromFuelsCo2(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fugitiveEmissionsFromFuels, 'co2'));
        setFugitiveEmissionsFromFuelsCh4(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fugitiveEmissionsFromFuels, 'ch4'));
        setFugitiveEmissionsFromFuelsN2o(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fugitiveEmissionsFromFuels, 'n2o'));
        setFugitiveEmissionsFromFuelsCo2Eq(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.fugitiveEmissionsFromFuels, 'co2eq'));
        setCarbonDioxideTransportStorageCo2(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.carbonDioxideTransportStorage, 'co2'));
        setCarbonDioxideTransportStorageCh4(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.carbonDioxideTransportStorage, 'ch4'));
        setCarbonDioxideTransportStorageN2o(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.carbonDioxideTransportStorage, 'n2o'));
        setCarbonDioxideTransportStorageCo2Eq(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.energyEmissions.carbonDioxideTransportStorage, 'co2eq'));
        setIndustrialProcessesProductUseCo2(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.industrialProcessesProductUse, 'co2'));
        setIndustrialProcessesProductUseCh4(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.industrialProcessesProductUse, 'ch4'));
        setIndustrialProcessesProductUseN2o(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.industrialProcessesProductUse, 'n2o'));
        setIndustrialProcessesProductUseCo2Eq(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.industrialProcessesProductUse, 'co2eq'));
        setAgricultureForestryOtherLandUseCo2(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.agricultureForestryOtherLandUse, 'co2'));
        setAgricultureForestryOtherLandUseCh4(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.agricultureForestryOtherLandUse, 'ch4'));
        setAgricultureForestryOtherLandUseN2o(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.agricultureForestryOtherLandUse, 'n2o'));
        setAgricultureForestryOtherLandUseCo2Eq(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.agricultureForestryOtherLandUse, 'co2eq'));
        setWasteCo2(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.waste, 'co2'));
        setWasteCh4(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.waste, 'ch4'));
        setWasteN2o(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.waste, 'n2o'));
        setWasteCo2Eq(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.waste, 'co2eq'));
        setOtherCo2(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.other, 'co2'));
        setOtherCh4(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.other, 'ch4'));
        setOtherN2o(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.other, 'n2o'));
        setOtherCo2Eq(calculateSumEmissionView(emissionObject === null || emissionObject === void 0 ? void 0 : emissionObject.other, 'co2eq'));
        setIsSavedFormDataSet(true);
    };
    React.useEffect(function () {
        var savedData = data.filter(function (item) { return item.state === 'SAVED'; });
        if (!isSavedFormDataSet) {
            if (savedData && savedData.length > 0) {
                setFormValues(savedData[0]);
            }
        }
        if (savedData && savedData.length > 0) {
            setFormDataVersion(savedData[0].version);
        }
        console.log("data changed - version updated2? = ", formDataVersion);
        var years = data
            .filter(function (item) { return !(item.state === 'SAVED' && item.year); }) // Filter out items where state is not 'SAVED'
            .map(function (item) { return parseInt(item.year); });
        // Update 'disabledYears' only if 'years' array has changed
        setDisabledYears(function (prevYears) {
            if (JSON.stringify(prevYears) !== JSON.stringify(years)) {
                return years;
            }
            return prevYears;
        });
    }, [data]);
    var checkFile = function (file) {
        var isXLSX = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||
            file.type === 'application/vnd.ms-excel';
        if (!isXLSX) {
            console.log('You can only upload XLSX file!');
        }
        return isXLSX;
    };
    var normFile = function (e) {
        if (Array.isArray(e)) {
            return e;
        }
        return e === null || e === void 0 ? void 0 : e.fileList;
    };
    var clearUploadDoc = function () {
        setUploadedFileName('');
        form.setFieldsValue({
            emissionsDocument: null,
        });
    };
    var isYearDisabled = function (current) {
        return disabledYears.includes(current.year());
    };
    React.useEffect(function () {
        setEnergyEmissionsCo2(fuelCombustionActivitiesCo2 + fugitiveEmissionsFromFuelsCo2 + carbonDioxideTransportStorageCo2);
    }, [
        fuelCombustionActivitiesCo2,
        fugitiveEmissionsFromFuelsCo2,
        carbonDioxideTransportStorageCo2,
    ]);
    React.useEffect(function () {
        setTotalNationalCo2(energyEmissionsCo2 +
            industrialProcessesProductUseCo2 +
            agricultureForestryOtherLandUseCo2 +
            wasteCo2 +
            otherCo2);
    }, [
        energyEmissionsCo2 +
            industrialProcessesProductUseCo2 +
            agricultureForestryOtherLandUseCo2 +
            wasteCo2 +
            otherCo2,
    ]);
    React.useEffect(function () {
        setEnergyEmissionsCh4(fuelCombustionActivitiesCh4 + fugitiveEmissionsFromFuelsCh4 + carbonDioxideTransportStorageCh4);
    }, [
        fuelCombustionActivitiesCh4,
        fugitiveEmissionsFromFuelsCh4,
        carbonDioxideTransportStorageCh4,
    ]);
    React.useEffect(function () {
        setTotalNationalCh4(energyEmissionsCh4 +
            industrialProcessesProductUseCh4 +
            agricultureForestryOtherLandUseCh4 +
            wasteCh4 +
            otherCh4);
    }, [
        energyEmissionsCh4 +
            industrialProcessesProductUseCh4 +
            agricultureForestryOtherLandUseCh4 +
            wasteCh4 +
            otherCh4,
    ]);
    React.useEffect(function () {
        setEnergyEmissionsN2o(fuelCombustionActivitiesN2o + fugitiveEmissionsFromFuelsN2o + carbonDioxideTransportStorageN2o);
    }, [
        fuelCombustionActivitiesN2o,
        fugitiveEmissionsFromFuelsN2o,
        carbonDioxideTransportStorageN2o,
    ]);
    React.useEffect(function () {
        setTotalNationalN2o(energyEmissionsN2o +
            industrialProcessesProductUseN2o +
            agricultureForestryOtherLandUseN2o +
            wasteN2o +
            otherN2o);
    }, [
        energyEmissionsN2o +
            industrialProcessesProductUseN2o +
            agricultureForestryOtherLandUseN2o +
            wasteN2o +
            otherN2o,
    ]);
    React.useEffect(function () {
        setEnergyEmissionsCo2Eq(fuelCombustionActivitiesCo2Eq +
            fugitiveEmissionsFromFuelsCo2Eq +
            carbonDioxideTransportStorageCo2Eq);
    }, [
        fuelCombustionActivitiesCo2Eq,
        fugitiveEmissionsFromFuelsCo2Eq,
        carbonDioxideTransportStorageCo2Eq,
    ]);
    React.useEffect(function () {
        setTotalNationalCo2Eq(energyEmissionsCo2Eq +
            industrialProcessesProductUseCo2Eq +
            agricultureForestryOtherLandUseCo2Eq +
            wasteCo2Eq +
            otherCo2Eq);
    }, [
        energyEmissionsCo2Eq +
            industrialProcessesProductUseCo2Eq +
            agricultureForestryOtherLandUseCo2Eq +
            wasteCo2Eq +
            otherCo2Eq,
    ]);
    var calculateSumCo2 = function (event, panelHeading) {
        var formValues = form.getFieldsValue();
        if (panelHeading === 'fuelCombustionActivities') {
            var sum = (formValues.fuelCombustionActivities_energyIndustries_co2 || 0) +
                (formValues.fuelCombustionActivities_manufacturingIndustriesConstruction_co2 || 0) +
                (formValues.fuelCombustionActivities_transport_co2 || 0) +
                (formValues.fuelCombustionActivities_otherSectors_co2 || 0) +
                (formValues.fuelCombustionActivities_nonSpecified_co2 || 0);
            setFuelCombustionActivitiesCo2(sum);
        }
        if (panelHeading === 'fugitiveEmissionsFromFuels') {
            var sum = (formValues.fugitiveEmissionsFromFuels_solidFuels_co2 || 0) +
                (formValues.fugitiveEmissionsFromFuels_oilNaturalGas_co2 || 0) +
                (formValues.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_co2 || 0);
            setFugitiveEmissionsFromFuelsCo2(sum);
        }
        if (panelHeading === 'carbonDioxideTransportStorage') {
            var sum = (formValues.carbonDioxideTransportStorage_transportOfCo2_co2 || 0) +
                (formValues.carbonDioxideTransportStorage_injectionStorage_co2 || 0) +
                (formValues.carbonDioxideTransportStorage_other_co2 || 0);
            setCarbonDioxideTransportStorageCo2(sum);
        }
        if (panelHeading === 'industrialProcessesProductUse') {
            var sum = (formValues.industrialProcessesProductUse_mineralIndustry_co2 || 0) +
                (formValues.industrialProcessesProductUse_chemicalIndustry_co2 || 0) +
                (formValues.industrialProcessesProductUse_metalIndustry_co2 || 0) +
                (formValues.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_co2 || 0) +
                (formValues.industrialProcessesProductUse_electronicsIndustry_co2 || 0) +
                (formValues.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_co2 || 0) +
                (formValues.industrialProcessesProductUse_otherProductManufactureUse_co2 || 0) +
                (formValues.industrialProcessesProductUse_other_co2 || 0);
            setIndustrialProcessesProductUseCo2(sum);
        }
        if (panelHeading === 'agricultureForestryOtherLandUse') {
            var sum = (formValues.agricultureForestryOtherLandUse_livestock_co2 || 0) +
                (formValues.agricultureForestryOtherLandUse_land_co2 || 0) +
                (formValues.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_co2 || 0) +
                (formValues.agricultureForestryOtherLandUse_other_co2 || 0);
            setAgricultureForestryOtherLandUseCo2(sum);
        }
        if (panelHeading === 'waste') {
            var sum = (formValues.waste_solidWasteDisposal_co2 || 0) +
                (formValues.waste_biologicalTreatmentSolidWaste_co2 || 0) +
                (formValues.waste_incinerationOpenBurningWaste_co2 || 0) +
                (formValues.waste_wastewaterTreatmentDischarge_co2 || 0) +
                (formValues.waste_other_co2 || 0);
            setWasteCo2(sum);
        }
        if (panelHeading === 'other') {
            var sum = (formValues.other_indirectN2oEmissions_co2 || 0) + (formValues.other_other_co2 || 0);
            setOtherCo2(sum);
        }
        return 0;
    };
    var calculateSumCh4 = function (event, panelHeading) {
        var formValues = form.getFieldsValue();
        if (panelHeading === 'fuelCombustionActivities') {
            var sum = (formValues.fuelCombustionActivities_energyIndustries_ch4 || 0) +
                (formValues.fuelCombustionActivities_manufacturingIndustriesConstruction_ch4 || 0) +
                (formValues.fuelCombustionActivities_transport_ch4 || 0) +
                (formValues.fuelCombustionActivities_otherSectors_ch4 || 0) +
                (formValues.fuelCombustionActivities_nonSpecified_ch4 || 0);
            setFuelCombustionActivitiesCh4(sum);
        }
        if (panelHeading === 'fugitiveEmissionsFromFuels') {
            var sum = (formValues.fugitiveEmissionsFromFuels_solidFuels_ch4 || 0) +
                (formValues.fugitiveEmissionsFromFuels_oilNaturalGas_ch4 || 0) +
                (formValues.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_ch4 || 0);
            setFugitiveEmissionsFromFuelsCh4(sum);
        }
        if (panelHeading === 'carbonDioxideTransportStorage') {
            var sum = (formValues.carbonDioxideTransportStorage_transportOfCo2_ch4 || 0) +
                (formValues.carbonDioxideTransportStorage_injectionStorage_ch4 || 0) +
                (formValues.carbonDioxideTransportStorage_other_ch4 || 0);
            setCarbonDioxideTransportStorageCh4(sum);
        }
        if (panelHeading === 'industrialProcessesProductUse') {
            var sum = (formValues.industrialProcessesProductUse_mineralIndustry_ch4 || 0) +
                (formValues.industrialProcessesProductUse_chemicalIndustry_ch4 || 0) +
                (formValues.industrialProcessesProductUse_metalIndustry_ch4 || 0) +
                (formValues.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_ch4 || 0) +
                (formValues.industrialProcessesProductUse_electronicsIndustry_ch4 || 0) +
                (formValues.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_ch4 || 0) +
                (formValues.industrialProcessesProductUse_otherProductManufactureUse_ch4 || 0) +
                (formValues.industrialProcessesProductUse_other_ch4 || 0);
            setIndustrialProcessesProductUseCh4(sum);
        }
        if (panelHeading === 'agricultureForestryOtherLandUse') {
            var sum = (formValues.agricultureForestryOtherLandUse_livestock_ch4 || 0) +
                (formValues.agricultureForestryOtherLandUse_land_ch4 || 0) +
                (formValues.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_ch4 || 0) +
                (formValues.agricultureForestryOtherLandUse_other_ch4 || 0);
            setAgricultureForestryOtherLandUseCh4(sum);
        }
        if (panelHeading === 'waste') {
            var sum = (formValues.waste_solidWasteDisposal_ch4 || 0) +
                (formValues.waste_biologicalTreatmentSolidWaste_ch4 || 0) +
                (formValues.waste_incinerationOpenBurningWaste_ch4 || 0) +
                (formValues.waste_wastewaterTreatmentDischarge_ch4 || 0) +
                (formValues.waste_other_ch4 || 0);
            setWasteCh4(sum);
        }
        if (panelHeading === 'other') {
            var sum = (formValues.other_indirectN2oEmissions_ch4 || 0) + (formValues.other_other_ch4 || 0);
            setOtherCh4(sum);
        }
        return 0;
    };
    var calculateSumN2o = function (event, panelHeading) {
        var formValues = form.getFieldsValue();
        if (panelHeading === 'fuelCombustionActivities') {
            var sum = (formValues.fuelCombustionActivities_energyIndustries_n2o || 0) +
                (formValues.fuelCombustionActivities_manufacturingIndustriesConstruction_n2o || 0) +
                (formValues.fuelCombustionActivities_transport_n2o || 0) +
                (formValues.fuelCombustionActivities_otherSectors_n2o || 0) +
                (formValues.fuelCombustionActivities_nonSpecified_n2o || 0);
            setFuelCombustionActivitiesN2o(sum);
        }
        if (panelHeading === 'fugitiveEmissionsFromFuels') {
            var sum = (formValues.fugitiveEmissionsFromFuels_solidFuels_n2o || 0) +
                (formValues.fugitiveEmissionsFromFuels_oilNaturalGas_n2o || 0) +
                (formValues.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_n2o || 0);
            setFugitiveEmissionsFromFuelsN2o(sum);
        }
        if (panelHeading === 'carbonDioxideTransportStorage') {
            var sum = (formValues.carbonDioxideTransportStorage_transportOfCo2_n2o || 0) +
                (formValues.carbonDioxideTransportStorage_injectionStorage_n2o || 0) +
                (formValues.carbonDioxideTransportStorage_other_n2o || 0);
            setCarbonDioxideTransportStorageN2o(sum);
        }
        if (panelHeading === 'industrialProcessesProductUse') {
            var sum = (formValues.industrialProcessesProductUse_mineralIndustry_n2o || 0) +
                (formValues.industrialProcessesProductUse_chemicalIndustry_n2o || 0) +
                (formValues.industrialProcessesProductUse_metalIndustry_n2o || 0) +
                (formValues.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_n2o || 0) +
                (formValues.industrialProcessesProductUse_electronicsIndustry_n2o || 0) +
                (formValues.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_n2o || 0) +
                (formValues.industrialProcessesProductUse_otherProductManufactureUse_n2o || 0) +
                (formValues.industrialProcessesProductUse_other_n2o || 0);
            setIndustrialProcessesProductUseN2o(sum);
        }
        if (panelHeading === 'agricultureForestryOtherLandUse') {
            var sum = (formValues.agricultureForestryOtherLandUse_livestock_n2o || 0) +
                (formValues.agricultureForestryOtherLandUse_land_n2o || 0) +
                (formValues.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_n2o || 0) +
                (formValues.agricultureForestryOtherLandUse_other_n2o || 0);
            setAgricultureForestryOtherLandUseN2o(sum);
        }
        if (panelHeading === 'waste') {
            var sum = (formValues.waste_solidWasteDisposal_n2o || 0) +
                (formValues.waste_biologicalTreatmentSolidWaste_n2o || 0) +
                (formValues.waste_incinerationOpenBurningWaste_n2o || 0) +
                (formValues.waste_wastewaterTreatmentDischarge_n2o || 0) +
                (formValues.waste_other_n2o || 0);
            setWasteN2o(sum);
        }
        if (panelHeading === 'other') {
            var sum = (formValues.other_indirectN2oEmissions_n2o || 0) + (formValues.other_other_n2o || 0);
            setOtherN2o(sum);
        }
        return 0;
    };
    var calculateSumCo2Eq = function (event, panelHeading) {
        var formValues = form.getFieldsValue();
        if (panelHeading === 'fuelCombustionActivities') {
            var sum = (formValues.fuelCombustionActivities_energyIndustries_co2eq || 0) +
                (formValues.fuelCombustionActivities_manufacturingIndustriesConstruction_co2eq || 0) +
                (formValues.fuelCombustionActivities_transport_co2eq || 0) +
                (formValues.fuelCombustionActivities_otherSectors_co2eq || 0) +
                (formValues.fuelCombustionActivities_nonSpecified_co2eq || 0);
            setFuelCombustionActivitiesCo2Eq(sum);
        }
        if (panelHeading === 'fugitiveEmissionsFromFuels') {
            var sum = (formValues.fugitiveEmissionsFromFuels_solidFuels_co2eq || 0) +
                (formValues.fugitiveEmissionsFromFuels_oilNaturalGas_co2eq || 0) +
                (formValues.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_co2eq || 0);
            setFugitiveEmissionsFromFuelsCo2Eq(sum);
        }
        if (panelHeading === 'carbonDioxideTransportStorage') {
            var sum = (formValues.carbonDioxideTransportStorage_transportOfCo2_co2eq || 0) +
                (formValues.carbonDioxideTransportStorage_injectionStorage_co2eq || 0) +
                (formValues.carbonDioxideTransportStorage_other_co2eq || 0);
            setCarbonDioxideTransportStorageCo2Eq(sum);
        }
        if (panelHeading === 'industrialProcessesProductUse') {
            var sum = (formValues.industrialProcessesProductUse_mineralIndustry_co2eq || 0) +
                (formValues.industrialProcessesProductUse_chemicalIndustry_co2eq || 0) +
                (formValues.industrialProcessesProductUse_metalIndustry_co2eq || 0) +
                (formValues.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_co2eq || 0) +
                (formValues.industrialProcessesProductUse_electronicsIndustry_co2eq || 0) +
                (formValues.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_co2eq || 0) +
                (formValues.industrialProcessesProductUse_otherProductManufactureUse_co2eq || 0) +
                (formValues.industrialProcessesProductUse_other_co2eq || 0);
            setIndustrialProcessesProductUseCo2Eq(sum);
        }
        if (panelHeading === 'agricultureForestryOtherLandUse') {
            var sum = (formValues.agricultureForestryOtherLandUse_livestock_co2eq || 0) +
                (formValues.agricultureForestryOtherLandUse_land_co2eq || 0) +
                (formValues.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_co2eq || 0) +
                (formValues.agricultureForestryOtherLandUse_other_co2eq || 0);
            setAgricultureForestryOtherLandUseCo2Eq(sum);
        }
        if (panelHeading === 'waste') {
            var sum = (formValues.waste_solidWasteDisposal_co2eq || 0) +
                (formValues.waste_biologicalTreatmentSolidWaste_co2eq || 0) +
                (formValues.waste_incinerationOpenBurningWaste_co2eq || 0) +
                (formValues.waste_wastewaterTreatmentDischarge_co2eq || 0) +
                (formValues.waste_other_co2eq || 0);
            setWasteCo2Eq(sum);
        }
        if (panelHeading === 'other') {
            console.log("INSIDE setOtherCo2Eq", formValues.other_indirectN2oEmissions_co2eq, formValues.other_other_co2eq);
            var sum = (formValues.other_indirectN2oEmissions_co2eq || 0) + (formValues.other_other_co2eq || 0);
            setOtherCo2Eq(sum);
        }
        return 0;
    };
    var getCO2Sum = function (panelHeading) {
        switch (panelHeading) {
            case 'energyEmissions':
                return energyEmissionsCo2;
            case 'fuelCombustionActivities':
                return fuelCombustionActivitiesCo2;
            case 'fugitiveEmissionsFromFuels':
                return fugitiveEmissionsFromFuelsCo2;
            case 'carbonDioxideTransportStorage':
                return carbonDioxideTransportStorageCo2;
            case 'industrialProcessesProductUse':
                return industrialProcessesProductUseCo2;
            case 'agricultureForestryOtherLandUse':
                return agricultureForestryOtherLandUseCo2;
            case 'waste':
                return wasteCo2;
            case 'other':
                return otherCo2;
            default:
                return 0;
        }
    };
    var getCH4Sum = function (panelHeading) {
        switch (panelHeading) {
            case 'energyEmissions':
                return energyEmissionsCh4;
            case 'fuelCombustionActivities':
                return fuelCombustionActivitiesCh4;
            case 'fugitiveEmissionsFromFuels':
                return fugitiveEmissionsFromFuelsCh4;
            case 'carbonDioxideTransportStorage':
                return carbonDioxideTransportStorageCh4;
            case 'industrialProcessesProductUse':
                return industrialProcessesProductUseCh4;
            case 'agricultureForestryOtherLandUse':
                return agricultureForestryOtherLandUseCh4;
            case 'waste':
                return wasteCh4;
            case 'other':
                return otherCh4;
            default:
                return 0;
        }
    };
    var getN2OSum = function (panelHeading) {
        switch (panelHeading) {
            case 'energyEmissions':
                return energyEmissionsN2o;
            case 'fuelCombustionActivities':
                return fuelCombustionActivitiesN2o;
            case 'fugitiveEmissionsFromFuels':
                return fugitiveEmissionsFromFuelsN2o;
            case 'carbonDioxideTransportStorage':
                return carbonDioxideTransportStorageN2o;
            case 'industrialProcessesProductUse':
                return industrialProcessesProductUseN2o;
            case 'agricultureForestryOtherLandUse':
                return agricultureForestryOtherLandUseN2o;
            case 'waste':
                return wasteN2o;
            case 'other':
                return otherN2o;
            default:
                return 0;
        }
    };
    var getCO2EQSum = function (panelHeading) {
        switch (panelHeading) {
            case 'energyEmissions':
                return energyEmissionsCo2Eq;
            case 'fuelCombustionActivities':
                return fuelCombustionActivitiesCo2Eq;
            case 'fugitiveEmissionsFromFuels':
                return fugitiveEmissionsFromFuelsCo2Eq;
            case 'carbonDioxideTransportStorage':
                return carbonDioxideTransportStorageCo2Eq;
            case 'industrialProcessesProductUse':
                return industrialProcessesProductUseCo2Eq;
            case 'agricultureForestryOtherLandUse':
                return agricultureForestryOtherLandUseCo2Eq;
            case 'waste':
                return wasteCo2Eq;
            case 'other':
                return otherCo2Eq;
            default:
                return 0;
        }
    };
    var handleTotalCo2WithoutLandEmissions = function (field, value) {
        setTotalCo2WithoutLandEmissions(function (prevState) {
            var _a;
            return (__assign(__assign({}, prevState), (_a = {}, _a[field] = value, _a)));
        });
    };
    // Helper function to get form field value
    var getFieldValue = function (fieldName) {
        var formValues = form.getFieldsValue(true);
        var fieldValue = formValues[fieldName];
        return (fieldValue && fieldValue >= 0) ? addCommSep(Number(fieldValue)) : fieldValue;
    };
    var renderPanelHeader = function (panelHeading) { return (React.createElement(antd.Row, { gutter: 16 },
        React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-header-col" },
            React.createElement("span", null, t("ghgInventory:".concat(panelHeading)))),
        React.createElement(antd.Col, { xl: 9, md: 9, className: "panel-header-emission-value-col" },
            React.createElement(antd.Row, { gutter: 16 },
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: addCommSep(Number(getCO2Sum(panelHeading))) },
                        React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(getCO2Sum(panelHeading)))))),
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: addCommSep(Number(getCH4Sum(panelHeading))) },
                        React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(getCH4Sum(panelHeading)))))),
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: addCommSep(Number(getN2OSum(panelHeading))) },
                        React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(getN2OSum(panelHeading)))))),
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: addCommSep(Number(getCO2EQSum(panelHeading))) },
                        React.createElement("div", { className: "co2eq-total-pill" }, addCommSep(Number(getCO2EQSum(panelHeading)))))))))); };
    var renderPanelHeaderView = function (panelHeading, tabData) {
        var emissionsObject = tabData[panelHeading];
        return (React.createElement(antd.Row, { gutter: 16 },
            React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-header-col" },
                React.createElement("span", null, t("ghgInventory:".concat(panelHeading)))),
            React.createElement(antd.Col, { xl: 9, md: 9 },
                React.createElement(antd.Row, { gutter: 16, className: "panel-header-emission-value-col" },
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(emissionsObject, 'co2'))) },
                            React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(calculateSumEmissionView(emissionsObject, 'co2')))))),
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(emissionsObject, 'ch4'))) },
                            React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(calculateSumEmissionView(emissionsObject, 'ch4')))))),
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(emissionsObject, 'n2o'))) },
                            React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(calculateSumEmissionView(emissionsObject, 'n2o')))))),
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(emissionsObject, 'co2eq'))) },
                            React.createElement("div", { className: "co2eq-total-pill" }, addCommSep(Number(calculateSumEmissionView(emissionsObject, 'co2eq'))))))))));
    };
    var renderPanelContent = function (panelHeading, item, index) { return (React.createElement(antd.Row, { gutter: 16, key: index, className: "panel-content-row" },
        React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-content-title" },
            React.createElement("span", null, t("ghgInventory:".concat(item)))),
        React.createElement(antd.Col, { xl: 9, md: 9 },
            React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row" },
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: getFieldValue(panelHeading + '_' + item + '_co2') },
                        React.createElement(antd.Form.Item, { name: panelHeading + '_' + item + '_co2', rules: [
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (value && value < 0) {
                                                throw new Error();
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.InputNumber, { onChange: function (event) { return calculateSumCo2(event, panelHeading); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: getFieldValue(panelHeading + '_' + item + '_ch4') },
                        React.createElement(antd.Form.Item, { name: panelHeading + '_' + item + '_ch4', rules: [
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (value && value < 0) {
                                                throw new Error();
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.InputNumber, { onChange: function (event) { return calculateSumCh4(event, panelHeading); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: getFieldValue(panelHeading + '_' + item + '_n2o') },
                        React.createElement(antd.Form.Item, { name: panelHeading + '_' + item + '_n2o', rules: [
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (value && value < 0) {
                                                throw new Error();
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.InputNumber, { onChange: function (event) { return calculateSumN2o(event, panelHeading); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                React.createElement(antd.Col, { xl: 6 },
                    React.createElement(antd.Tooltip, { title: getFieldValue(panelHeading + '_' + item + '_co2eq') },
                        React.createElement(antd.Form.Item, { name: panelHeading + '_' + item + '_co2eq', rules: [
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (value && value < 0) {
                                                throw new Error();
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.InputNumber, { onChange: function (event) { return calculateSumCo2Eq(event, panelHeading); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))))))); };
    var renderPanelContentView = function (co2, ch4, n2o, co2eq, item, index) {
        return (React.createElement(antd.Row, { gutter: 16, key: index, className: "panel-content-row" },
            React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-content-title" },
                React.createElement("span", null, t("ghgInventory:".concat(item)))),
            React.createElement(antd.Col, { xl: 9, md: 9 },
                React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row" },
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: co2 ? addCommSep(Number(co2)) : co2 },
                            React.createElement("div", null,
                                React.createElement(antd.InputNumber, { value: co2 ? addCommSep(Number(co2)) : co2, disabled: true })))),
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: ch4 ? addCommSep(Number(ch4)) : ch4 },
                            React.createElement("div", null,
                                React.createElement(antd.InputNumber, { value: ch4 ? addCommSep(Number(ch4)) : ch4, disabled: true })))),
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: n2o ? addCommSep(Number(n2o)) : n2o },
                            React.createElement("div", null,
                                React.createElement(antd.InputNumber, { value: n2o ? addCommSep(Number(n2o)) : n2o, disabled: true })))),
                    React.createElement(antd.Col, { xl: 6 },
                        React.createElement(antd.Tooltip, { title: co2eq ? addCommSep(Number(co2eq)) : co2eq },
                            React.createElement("div", null,
                                React.createElement(antd.InputNumber, { value: co2eq ? addCommSep(Number(co2eq)) : co2eq, disabled: true }))))))));
    };
    var objectToCSV = function (dataToDownload) {
        var flattenObject = function (obj, prefix) {
            if (prefix === void 0) { prefix = ''; }
            return Object.keys(obj).reduce(function (acc, key) {
                var pre = prefix.length ? "".concat(prefix, "_") : '';
                if (typeof obj[key] === 'object' && obj[key] !== null) {
                    Object.assign(acc, flattenObject(obj[key], pre + key));
                }
                else {
                    acc[pre + key] = obj[key];
                }
                return acc;
            }, {});
        };
        var headers = [];
        var contentKeys = [];
        var flattenedObj = flattenObject(dataToDownload);
        var objKeys = Object.keys(flattenedObj);
        for (var key in emissionCsvFieldMap) {
            if (objKeys.includes(key)) {
                headers.push(emissionCsvFieldMap[key]);
                contentKeys.push(key);
            }
        }
        var flattenedData = [dataToDownload].map(function (item) {
            var flattened = flattenObject(item);
            return contentKeys.map(function (header) { return flattened[header]; });
        });
        var allHeaders = __spreadArray(__spreadArray([], headers, true), totalEmissionFields, true);
        var totalEmissionValues = [
            calculateSumEmissionView(dataToDownload, 'co2'),
            calculateSumEmissionView(dataToDownload, 'ch4'),
            calculateSumEmissionView(dataToDownload, 'n2o'),
            calculateSumEmissionView(dataToDownload, 'co2eq')
        ];
        var combinedData = __spreadArray(__spreadArray([], flattenedData[0], true), [totalEmissionValues], false);
        var csvContent = allHeaders.map(function (header) { return "\"".concat(header, "\""); }).join(',') +
            '\n' +
            combinedData.map(function (value) { return (value === undefined || value === null) ? "" : value; }).join(',');
        return csvContent;
    };
    var downloadCSV = function (dataToDownload) {
        var csvContent = objectToCSV(dataToDownload);
        var encodedUri = encodeURI("data:text/csv;charset=utf-8,".concat(csvContent));
        var link = document.createElement('a');
        link.setAttribute('href', encodedUri);
        link.setAttribute('download', "GHG-Reporting-Emissions_".concat(dataToDownload.year, "_V").concat(dataToDownload.version, ".csv"));
        document.body.appendChild(link);
        link.click();
    };
    var isRowDataEmpty = function (emissionDataObj) {
        if (emissionDataObj == undefined || emissionDataObj == null) {
            return true;
        }
        var co2 = emissionDataObj === null || emissionDataObj === void 0 ? void 0 : emissionDataObj.co2;
        var ch4 = emissionDataObj === null || emissionDataObj === void 0 ? void 0 : emissionDataObj.ch4;
        var n2o = emissionDataObj === null || emissionDataObj === void 0 ? void 0 : emissionDataObj.n2o;
        var co2eq = emissionDataObj === null || emissionDataObj === void 0 ? void 0 : emissionDataObj.co2eq;
        if (!co2 && !ch4 && !n2o && !co2eq) {
            return true;
        }
        return false;
    };
    var isSectionDataEmpty = function (sectionTotalCo2, sectionTotalCh4, sectionTotalN2o, sectionTotalCo2eq) {
        if (!sectionTotalCo2 && !sectionTotalCh4 && !sectionTotalN2o && !sectionTotalCo2eq) {
            return true;
        }
        return false;
    };
    var displayEmptyView = function () {
        if (!data || data.length === 0) {
            if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.GOVERNMENT && (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.MINISTRY) {
                return true;
            }
            else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly) {
                return true;
            }
        }
        return false;
    };
    var canViewForm = function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT || (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly && data.some(function (item) { return item.state === 'SAVED'; })) {
                return true;
            }
            else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
                return true;
            }
        }
        return false;
    };
    return (React.createElement("div", null,
        React.createElement("div", { className: "content-container emission-tab-container" },
            React.createElement("div", { className: "emission-title-bar" },
                React.createElement("div", { className: "title-bar" },
                    React.createElement("div", { className: "body-title" }, t("ghgInventory:emissions")),
                    React.createElement("div", { className: "body-sub-title" }, t("ghgInventory:totalNationalEmissionSubTitle")))),
            (displayEmptyView()) && (React.createElement("div", { className: "content-card empty-emission-container" },
                React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: React.createElement("span", null, t("ghgInventory:noEmissions")) }))),
            (!displayEmptyView()) && (React.createElement("div", { className: "content-card add-emission" },
                React.createElement(antd.Tabs, { defaultActiveKey: "Add New", centered: true },
                    (canViewForm()) && (React.createElement(antd.Tabs.TabPane, { key: "Add New", tab: t("ghgInventory:addNew") },
                        React.createElement("div", null,
                            React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, name: "add-emission", className: "programme-details-form", layout: "vertical", requiredMark: true, form: form, onValuesChange: onValuesChange, onFinish: onOpenSaveFormModel },
                                React.createElement(antd.Row, null,
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-year-picker-col" },
                                        React.createElement("div", null,
                                            React.createElement(antd.Form.Item, { label: t('ghgInventory:year'), name: "year", rules: [
                                                    {
                                                        required: true,
                                                        message: '',
                                                    },
                                                    {
                                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                            return __generator(this, function (_a) {
                                                                if (String(value).trim() === '' ||
                                                                    String(value).trim() === undefined ||
                                                                    value === null ||
                                                                    value === undefined) {
                                                                    throw new Error("".concat(t('ghgInventory:year'), " ").concat(t('isRequired')));
                                                                }
                                                                return [2 /*return*/];
                                                            });
                                                        }); },
                                                    },
                                                ] },
                                                React.createElement(antd.DatePicker, { onChange: handleYearChange, picker: "year", disabledDate: isYearDisabled, size: "large", disabled: isPendingFinalization })))),
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-upload-file-col" },
                                        React.createElement(antd.Row, { className: "add-new-upload-file-label" }, t("ghgInventory:emissionRemovalDocument")),
                                        React.createElement(antd.Row, null,
                                            React.createElement(antd.Col, { xxl: 5, xl: 6, md: 6, className: "add-new-upload-file-inner-col" },
                                                React.createElement(antd.Form.Item, { name: "emissionsDocument", valuePropName: "fileList", getValueFromEvent: normFile, required: true },
                                                    React.createElement(antd.Upload, { accept: ".xlsx", showUploadList: false, beforeUpload: function (file) {
                                                            if (!checkFile(file)) {
                                                                antd.message.open({
                                                                    type: 'error',
                                                                    content: t('ghgInventory:invalidFileType'),
                                                                    duration: 4,
                                                                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                                                                });
                                                                return false;
                                                            }
                                                            // show an error message in UI
                                                            var reader = new FileReader();
                                                            reader.onload = function (e) {
                                                                var _a;
                                                                var xldata = (_a = e.target) === null || _a === void 0 ? void 0 : _a.result;
                                                                if (xldata) {
                                                                    try {
                                                                        var workbook = readSync(xldata, { type: 'array' });
                                                                        var sheetName = workbook.SheetNames[0];
                                                                        var sheet = workbook.Sheets[sheetName];
                                                                        var excelData = utils.sheet_to_json(sheet);
                                                                        if (!validateExcelDataFormat(sheet, excelData)) {
                                                                            antd.message.open({
                                                                                type: 'error',
                                                                                content: t('ghgInventory:invalidDataInExcel'),
                                                                                duration: 4,
                                                                                style: {
                                                                                    textAlign: 'right',
                                                                                    marginRight: 15,
                                                                                    marginTop: 10,
                                                                                },
                                                                            });
                                                                            return false;
                                                                        }
                                                                        handleFileUploadData(excelData);
                                                                        setUploadedFileName(file.name);
                                                                    }
                                                                    catch (error) {
                                                                        console.log(error, 'error', file);
                                                                    }
                                                                }
                                                            };
                                                            reader.readAsArrayBuffer(file); // Use readAsArrayBuffer for Excel files
                                                            // Prevent upload
                                                            return false;
                                                        } },
                                                        React.createElement(antd.Button, { icon: React.createElement(icons.UploadOutlined, null), disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly }, t("ghgInventory:upload"))))),
                                            React.createElement(antd.Col, { xl: 16, md: 16, className: "add-new-upload-file-name-input" },
                                                React.createElement(antd.Input, { value: uploadedFileName, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly, readOnly: true, suffix: uploadedFileName && (React.createElement(antd.Button, { onClick: clearUploadDoc, icon: React.createElement(icons.DeleteOutlined, null), style: { marginRight: '-10px', padding: '0px 6px' } })) }))))),
                                React.createElement(antd.Row, { gutter: 16 },
                                    React.createElement(antd.Col, { span: 9, offset: 12 },
                                        React.createElement(antd.Row, { gutter: 16, className: "table-heading-row" },
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "CO",
                                                React.createElement("sub", null, "2")),
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "CH",
                                                React.createElement("sub", null, "4")),
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "N",
                                                React.createElement("sub", null, "2"),
                                                "O"),
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "CO",
                                                React.createElement("sub", null, "2"),
                                                "-eq")))),
                                React.createElement(antd.Row, { gutter: 16, className: "total-emission-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12 },
                                        React.createElement("span", { className: "total-emission-title" }, t("ghgInventory:totalNationalEmission"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "total-emission-value-col" },
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(totalNationalCo2)) },
                                                    React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(totalNationalCo2))))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(totalNationalCh4)) },
                                                    React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(totalNationalCh4))))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(totalNationalN2o)) },
                                                    React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(totalNationalN2o))))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(totalNationalCo2Eq)) },
                                                    React.createElement("div", { className: "co2eq-total-pill" }, addCommSep(Number(totalNationalCo2Eq)))))))),
                                React.createElement(antd.Collapse, { ghost: true, expandIcon: function (_a) {
                                        var isActive = _a.isActive;
                                        return isActive ? React.createElement(icons.MinusCircleOutlined, null) : React.createElement(icons.PlusCircleOutlined, null);
                                    } }, Object.entries(formFields).map(function (_a) {
                                    var panelHeading = _a[0], panelContent = _a[1];
                                    return (React.createElement(Panel, { header: renderPanelHeader(panelHeading), key: panelHeading }, Array.isArray(panelContent)
                                        ? panelContent.map(function (item, index) {
                                            return renderPanelContent(panelHeading, item, index);
                                        })
                                        : Object.entries(panelContent).map(function (_a) {
                                            var subPanelHeading = _a[0], subPanelContent = _a[1];
                                            return (React.createElement("div", { className: "sub-panel" },
                                                React.createElement("div", { className: "sub-panel-heading" }, renderPanelHeader(subPanelHeading)),
                                                subPanelContent.map(function (item, index) {
                                                    return renderPanelContent(subPanelHeading, item, index);
                                                })));
                                        })));
                                })),
                                React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithoutLand', className: "total-co2-without-land-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-without-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithoutLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row total-co2-land-input-box-row" },
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithoutLand_co2') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithoutLand_co2", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithoutLand_co2', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithoutLand_ch4') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithoutLand_ch4", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithoutLand_ch4', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithoutLand_n2o') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithoutLand_n2o", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithoutLand_n2o', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithoutLand_co2eq') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithoutLand_co2eq", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithoutLand_co2eq', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly }))))))),
                                React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithLand', className: "total-co2-with-land-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-with-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row total-co2-land-input-box-row" },
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithLand_co2') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithLand_co2", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithLand_co2', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithLand_ch4') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithLand_ch4", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithLand_ch4', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithLand_n2o') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithLand_n2o", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithLand_n2o', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithLand_co2eq') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithLand_co2eq", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithLand_co2eq', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly }))))))),
                                (((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT || (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY)
                                    && ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly)) &&
                                    (React.createElement("div", { className: "steps-actions" },
                                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
                                            (React.createElement(antd.Button, { className: "finalize-btn", type: "primary", loading: loading, onClick: onOpenFinalizeFormModel }, "Finalise")),
                                        React.createElement(antd.Button, { className: "submit-btn", type: "primary", onClick: onOpenSaveFormModel, loading: loading }, "Submit"),
                                        React.createElement(antd.Button, { className: "back-btn", onClick: onOpenResetFormModel, loading: loading }, "Cancel"))))))),
                    data.map(function (tabData) {
                        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23;
                        return tabData.state === 'FINALIZED' && (React.createElement(antd.Tabs.TabPane, { className: 'view-data-panel', key: tabData.id.toString(), tab: React.createElement("span", null,
                                tabData.year,
                                tabData.state === 'FINALIZED' && React.createElement(icons.LockFilled, { style: { marginLeft: 5 } })) },
                            React.createElement("div", null,
                                React.createElement(antd.Row, null,
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-year-picker-col" },
                                        React.createElement("div", null,
                                            React.createElement(antd.Row, { className: "add-new-upload-file-label" }, "Year"),
                                            React.createElement(antd.DatePicker, { picker: "year", disabledDate: isYearDisabled, defaultValue: moment(tabData.year, 'YYYY'), disabled: true, size: "large" }))),
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-upload-file-col" },
                                        React.createElement(antd.Row, { className: "add-new-upload-file-label" }, t("ghgInventory:emissionRemovalDocument")),
                                        React.createElement(antd.Row, null,
                                            React.createElement(antd.Col, { xl: 15, md: 15, className: "view-download-file-name-input" },
                                                React.createElement(antd.Input, { value: "GHG-Reporting-Emissions_".concat(tabData.year, "_V").concat(tabData.version, ".csv"), disabled: true })),
                                            React.createElement(antd.Col, { xl: 5, md: 5, className: "view-download-file-inner-col" },
                                                React.createElement(antd.Button, { icon: React.createElement(icons.DownloadOutlined, null), onClick: function () { downloadCSV(tabData); } }, t("ghgInventory:download")))))),
                                React.createElement(antd.Row, { gutter: 16 },
                                    React.createElement(antd.Col, { span: 9, offset: 12 },
                                        React.createElement(antd.Row, { gutter: 16, className: "table-heading-row" },
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "CO",
                                                React.createElement("sub", null, "2")),
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "CH",
                                                React.createElement("sub", null, "4")),
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "N",
                                                React.createElement("sub", null, "2"),
                                                "O"),
                                            React.createElement(antd.Col, { xl: 6, className: "table-heading-col" },
                                                "CO",
                                                React.createElement("sub", null, "2"),
                                                "-eq")))),
                                React.createElement(antd.Row, { gutter: 16, className: "total-emission-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12 },
                                        React.createElement("span", null, t("ghgInventory:totalNationalEmission"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9, className: "total-emission-value-col" },
                                        React.createElement(antd.Row, { gutter: 16 },
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(tabData, 'co2'))) },
                                                    React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(calculateSumEmissionView(tabData, 'co2')))))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(tabData, 'ch4'))) },
                                                    React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(calculateSumEmissionView(tabData, 'ch4')))))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(tabData, 'n2o'))) },
                                                    React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(calculateSumEmissionView(tabData, 'n2o')))))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(tabData, 'co2eq'))) },
                                                    React.createElement("div", { className: "co2eq-total-pill" }, addCommSep(Number(calculateSumEmissionView(tabData, 'co2eq'))))))))),
                                React.createElement(antd.Collapse, { ghost: true, expandIcon: function (_a) {
                                        var isActive = _a.isActive;
                                        return isActive ? React.createElement(icons.MinusCircleOutlined, null) : React.createElement(icons.PlusCircleOutlined, null);
                                    } }, Object.entries(formFields).map(function (_a) {
                                    var panelHeading = _a[0], panelContent = _a[1];
                                    var emissionsObject = tabData[panelHeading];
                                    var sectionTotalCo2 = calculateSumEmissionView(emissionsObject, 'co2');
                                    var sectionTotalCh4 = calculateSumEmissionView(emissionsObject, 'ch4');
                                    var sectionTotalN2o = calculateSumEmissionView(emissionsObject, 'n2o');
                                    var sectionTotalCo2eq = calculateSumEmissionView(emissionsObject, 'co2eq');
                                    if (!isSectionDataEmpty(sectionTotalCo2, sectionTotalCh4, sectionTotalN2o, sectionTotalCo2eq)) {
                                        return (React.createElement(Panel, { header: renderPanelHeaderView(panelHeading, tabData), key: panelHeading }, Array.isArray(panelContent)
                                            ? panelContent.map(function (item, index) {
                                                for (var key in tabData) {
                                                    if (key === panelHeading) {
                                                        var emissionsObject_1 = tabData[key];
                                                        var emissionsData = emissionsObject_1[item];
                                                        if (!isRowDataEmpty(emissionsData)) {
                                                            return renderPanelContentView(emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.co2, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.ch4, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.n2o, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.co2eq, item, index);
                                                        }
                                                    }
                                                }
                                            })
                                            : Object.entries(panelContent).map(function (_a) {
                                                var subPanelHeading = _a[0], subPanelContent = _a[1];
                                                var emissionsObject = tabData.energyEmissions[subPanelHeading];
                                                var sectionTotalCo2 = calculateSumEmissionView(emissionsObject, 'co2');
                                                var sectionTotalCh4 = calculateSumEmissionView(emissionsObject, 'ch4');
                                                var sectionTotalN2o = calculateSumEmissionView(emissionsObject, 'n2o');
                                                var sectionTotalCo2eq = calculateSumEmissionView(emissionsObject, 'co2eq');
                                                if (!isSectionDataEmpty(sectionTotalCo2, sectionTotalCh4, sectionTotalN2o, sectionTotalCo2eq)) {
                                                    return (React.createElement("div", { className: "sub-panel" },
                                                        React.createElement("div", { className: "sub-panel-heading" }, renderPanelHeaderView(subPanelHeading, tabData.energyEmissions)),
                                                        subPanelContent.map(function (item, index) {
                                                            for (var key in tabData.energyEmissions[subPanelHeading]) {
                                                                if (key === item) {
                                                                    var emissionsObject_2 = tabData.energyEmissions[subPanelHeading];
                                                                    var emissionsData = emissionsObject_2[item];
                                                                    if (!isRowDataEmpty(emissionsData)) {
                                                                        return renderPanelContentView(emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.co2, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.ch4, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.n2o, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.co2eq, item, index);
                                                                    }
                                                                }
                                                            }
                                                        })));
                                                }
                                            })));
                                    }
                                })),
                                (!isRowDataEmpty(tabData.totalCo2WithoutLand)) && (React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithoutLand', className: "total-co2-without-land-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-without-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithoutLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row total-co2-land-input-box-row" },
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_a = tabData.totalCo2WithoutLand) === null || _a === void 0 ? void 0 : _a.co2)
                                                        ? addCommSep(Number((_b = tabData.totalCo2WithoutLand) === null || _b === void 0 ? void 0 : _b.co2))
                                                        : (_c = tabData.totalCo2WithoutLand) === null || _c === void 0 ? void 0 : _c.co2 },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_d = tabData.totalCo2WithoutLand) === null || _d === void 0 ? void 0 : _d.co2)
                                                                ? addCommSep(Number((_e = tabData.totalCo2WithoutLand) === null || _e === void 0 ? void 0 : _e.co2))
                                                                : (_f = tabData.totalCo2WithoutLand) === null || _f === void 0 ? void 0 : _f.co2, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_g = tabData.totalCo2WithoutLand) === null || _g === void 0 ? void 0 : _g.ch4)
                                                        ? addCommSep(Number((_h = tabData.totalCo2WithoutLand) === null || _h === void 0 ? void 0 : _h.ch4))
                                                        : (_j = tabData.totalCo2WithoutLand) === null || _j === void 0 ? void 0 : _j.ch4 },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_k = tabData.totalCo2WithoutLand) === null || _k === void 0 ? void 0 : _k.ch4)
                                                                ? addCommSep(Number((_l = tabData.totalCo2WithoutLand) === null || _l === void 0 ? void 0 : _l.ch4))
                                                                : (_m = tabData.totalCo2WithoutLand) === null || _m === void 0 ? void 0 : _m.ch4, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_o = tabData.totalCo2WithoutLand) === null || _o === void 0 ? void 0 : _o.n2o)
                                                        ? addCommSep(Number((_p = tabData.totalCo2WithoutLand) === null || _p === void 0 ? void 0 : _p.n2o))
                                                        : (_q = tabData.totalCo2WithoutLand) === null || _q === void 0 ? void 0 : _q.n2o },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_r = tabData.totalCo2WithoutLand) === null || _r === void 0 ? void 0 : _r.n2o)
                                                                ? addCommSep(Number((_s = tabData.totalCo2WithoutLand) === null || _s === void 0 ? void 0 : _s.n2o))
                                                                : (_t = tabData.totalCo2WithoutLand) === null || _t === void 0 ? void 0 : _t.n2o, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_u = tabData.totalCo2WithoutLand) === null || _u === void 0 ? void 0 : _u.co2eq)
                                                        ? addCommSep(Number((_v = tabData.totalCo2WithoutLand) === null || _v === void 0 ? void 0 : _v.co2eq))
                                                        : (_w = tabData.totalCo2WithoutLand) === null || _w === void 0 ? void 0 : _w.co2eq },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_x = tabData.totalCo2WithoutLand) === null || _x === void 0 ? void 0 : _x.co2eq)
                                                                ? addCommSep(Number((_y = tabData.totalCo2WithoutLand) === null || _y === void 0 ? void 0 : _y.co2eq))
                                                                : (_z = tabData.totalCo2WithoutLand) === null || _z === void 0 ? void 0 : _z.co2eq, disabled: true })))))))),
                                (!isRowDataEmpty(tabData.totalCo2WithLand)) && (React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithLand', className: "total-co2-with-land-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-with-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row total-co2-land-input-box-row" },
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_0 = tabData.totalCo2WithLand) === null || _0 === void 0 ? void 0 : _0.co2)
                                                        ? addCommSep(Number((_1 = tabData.totalCo2WithLand) === null || _1 === void 0 ? void 0 : _1.co2))
                                                        : (_2 = tabData.totalCo2WithLand) === null || _2 === void 0 ? void 0 : _2.co2 },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_3 = tabData.totalCo2WithLand) === null || _3 === void 0 ? void 0 : _3.co2)
                                                                ? addCommSep(Number((_4 = tabData.totalCo2WithLand) === null || _4 === void 0 ? void 0 : _4.co2))
                                                                : (_5 = tabData.totalCo2WithLand) === null || _5 === void 0 ? void 0 : _5.co2, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_6 = tabData.totalCo2WithLand) === null || _6 === void 0 ? void 0 : _6.ch4)
                                                        ? addCommSep(Number((_7 = tabData.totalCo2WithLand) === null || _7 === void 0 ? void 0 : _7.ch4))
                                                        : (_8 = tabData.totalCo2WithLand) === null || _8 === void 0 ? void 0 : _8.ch4 },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_9 = tabData.totalCo2WithLand) === null || _9 === void 0 ? void 0 : _9.ch4)
                                                                ? addCommSep(Number((_10 = tabData.totalCo2WithLand) === null || _10 === void 0 ? void 0 : _10.ch4))
                                                                : (_11 = tabData.totalCo2WithLand) === null || _11 === void 0 ? void 0 : _11.ch4, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_12 = tabData.totalCo2WithLand) === null || _12 === void 0 ? void 0 : _12.n2o)
                                                        ? addCommSep(Number((_13 = tabData.totalCo2WithLand) === null || _13 === void 0 ? void 0 : _13.n2o))
                                                        : (_14 = tabData.totalCo2WithLand) === null || _14 === void 0 ? void 0 : _14.n2o },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_15 = tabData.totalCo2WithLand) === null || _15 === void 0 ? void 0 : _15.n2o)
                                                                ? addCommSep(Number((_16 = tabData.totalCo2WithLand) === null || _16 === void 0 ? void 0 : _16.n2o))
                                                                : (_17 = tabData.totalCo2WithLand) === null || _17 === void 0 ? void 0 : _17.n2o, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 6 },
                                                React.createElement(antd.Tooltip, { title: ((_18 = tabData.totalCo2WithLand) === null || _18 === void 0 ? void 0 : _18.co2eq)
                                                        ? addCommSep(Number((_19 = tabData.totalCo2WithLand) === null || _19 === void 0 ? void 0 : _19.co2eq))
                                                        : (_20 = tabData.totalCo2WithLand) === null || _20 === void 0 ? void 0 : _20.co2eq },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_21 = tabData.totalCo2WithLand) === null || _21 === void 0 ? void 0 : _21.co2eq)
                                                                ? addCommSep(Number((_22 = tabData.totalCo2WithLand) === null || _22 === void 0 ? void 0 : _22.co2eq))
                                                                : (_23 = tabData.totalCo2WithLand) === null || _23 === void 0 ? void 0 : _23.co2eq, disabled: true })))))))))));
                    }))))),
        React.createElement(GHGUserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onSubmitForm, onActionCanceled: onSaveFormCanceled, openModal: openSaveFormModal, errorMsg: errorMsg, loading: loading }),
        React.createElement(GHGUserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onSubmitForm, onActionCanceled: onFinalizeFormCanceled, openModal: openFinalizeFormModal, errorMsg: errorMsg, loading: loading }),
        React.createElement(DiscardChangesConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: resetForm, onActionCanceled: onResetFormCanceled, openModal: openResetFormModal, errorMsg: errorMsg, loading: loading })));
};

var css_248z$1 = ".projection-tab-container .ant-tabs-tab-btn {\n  padding: 5px 30px;\n  text-align: center;\n  font-weight: 600;\n  color: rgba(58, 53, 65, 0.5); }\n\n.projection-tab-container .anticon-lock {\n  margin-right: 0 !important; }\n\n.projection-tab-container .add-projection {\n  display: flex;\n  flex-direction: column;\n  background-color: #ffffff;\n  margin: 1rem 0 1rem 0;\n  border-radius: 10px;\n  padding: 0 1.5rem 2.5rem 1.5rem; }\n  .projection-tab-container .add-projection .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\n    color: #008f39; }\n  .projection-tab-container .add-projection .ant-tabs-ink-bar {\n    position: absolute;\n    background: #008f39 !important;\n    pointer-events: none; }\n  .projection-tab-container .add-projection .add-new-year-picker-col {\n    padding-left: 5%; }\n  .projection-tab-container .add-projection .ant-picker {\n    border-radius: 4px !important;\n    height: 40px !important;\n    width: 80%; }\n  .projection-tab-container .add-projection .ant-input-suffix {\n    display: flex;\n    flex: none;\n    align-items: center;\n    height: 40px; }\n    .projection-tab-container .add-projection .ant-input-suffix button {\n      border: none;\n      color: #8C8C8C; }\n  .projection-tab-container .add-projection .ant-input-affix-wrapper {\n    padding: 0 11px;\n    border-radius: 5px; }\n  .projection-tab-container .add-projection .add-new-upload-file-label {\n    color: rgba(58, 53, 65, 0.5);\n    padding: 0 0 8px;\n    line-height: 1.5715;\n    white-space: initial;\n    text-align: left; }\n  .projection-tab-container .add-projection .add-new-upload-file-name-input input {\n    height: 40px;\n    color: #008f39;\n    border-radius: 4px !important; }\n  .projection-tab-container .add-projection .add-new-upload-file-inner-col button {\n    height: 40px;\n    font-size: 12px;\n    width: 120px;\n    color: #8C8C8C;\n    border-radius: 4px !important; }\n  .projection-tab-container .add-projection .view-download-file-name-input input {\n    height: 40px;\n    color: #8C8C8C;\n    border-radius: 4px !important; }\n  .projection-tab-container .add-projection .view-download-file-inner-col button {\n    height: 40px;\n    font-size: 12px;\n    font-weight: 400;\n    width: 135px;\n    margin-left: 5px;\n    color: #8C8C8C;\n    border-radius: 4px !important; }\n  .projection-tab-container .add-projection .table-heading-row {\n    padding-top: 20px;\n    padding-bottom: 25px;\n    margin-left: 10px !important; }\n    .projection-tab-container .add-projection .table-heading-row .table-heading-col {\n      text-align: center;\n      font-size: 16px;\n      font-weight: 700;\n      color: #28282899; }\n  .projection-tab-container .add-projection .total-emission-row {\n    padding: 12px 16px;\n    margin-left: 30px !important; }\n    .projection-tab-container .add-projection .total-emission-row span {\n      font-size: 18px;\n      font-weight: 700;\n      color: #3A3541CC; }\n    .projection-tab-container .add-projection .total-emission-row .total-emission-value-col {\n      border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n      padding-bottom: 10px; }\n  .projection-tab-container .add-projection .panel-header-col {\n    font-size: 16px;\n    font-weight: 600;\n    color: #3A3541CC; }\n  .projection-tab-container .add-projection .panel-header-emission-value-col {\n    border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n    padding-bottom: 10px; }\n  .projection-tab-container .add-projection .sub-panel .panel-header-emission-value-col {\n    border-bottom: none !important;\n    padding-bottom: 10px; }\n  .projection-tab-container .add-projection .sub-panel-heading {\n    border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n    padding-bottom: 10px;\n    margin-top: 35px; }\n    .projection-tab-container .add-projection .sub-panel-heading .panel-header-col {\n      font-size: 14px;\n      font-weight: 600;\n      color: #3A3541CC; }\n  .projection-tab-container .add-projection .ant-collapse-ghost > .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n    padding-top: 0px;\n    padding-bottom: 12px;\n    margin-left: 32px; }\n  .projection-tab-container .add-projection .ant-collapse-expand-icon {\n    margin-top: 3px; }\n    .projection-tab-container .add-projection .ant-collapse-expand-icon svg {\n      font-size: 16px;\n      color: #008f39; }\n  .projection-tab-container .add-projection .ant-collapse {\n    margin-left: 10px; }\n  .projection-tab-container .add-projection .co2-total-pill {\n    border-radius: 20px;\n    background-color: rgba(145, 85, 253, 0.4);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .projection-tab-container .add-projection .ch4-total-pill {\n    border-radius: 20px;\n    background-color: rgba(217, 217, 217, 0.6);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .projection-tab-container .add-projection .n2o-total-pill {\n    border-radius: 20px;\n    background-color: rgba(185, 226, 244, 0.4);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .projection-tab-container .add-projection .co2eq-total-pill {\n    border-radius: 20px;\n    background-color: rgba(255, 166, 166, 0.6);\n    padding: 5px 15px;\n    height: 30px;\n    color: #5B5B5B;\n    font-size: 12px;\n    font-weight: 900;\n    margin-left: auto;\n    margin-right: auto;\n    width: 90px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .projection-tab-container .add-projection .panel-content-row {\n    border-bottom: 1px solid rgba(217, 217, 217, 0.6);\n    padding-bottom: 10px;\n    height: 68px;\n    align-items: center; }\n    .projection-tab-container .add-projection .panel-content-row .panel-content-title {\n      font-size: 14px;\n      font-weight: 400;\n      color: #3A3541CC; }\n  .projection-tab-container .add-projection .panel-content-input-box-row {\n    margin-top: 14px; }\n    .projection-tab-container .add-projection .panel-content-input-box-row .ant-input-number {\n      height: 40px;\n      margin-left: 20%; }\n  .projection-tab-container .add-projection .total-co2-land-input-box-row .ant-input-number {\n    margin-left: 17% !important; }\n  .projection-tab-container .add-projection .total-co2-without-land-row {\n    margin-left: 40px !important;\n    align-items: center;\n    margin-top: 10px; }\n    .projection-tab-container .add-projection .total-co2-without-land-row .total-co2-without-land-title {\n      font-size: 16px;\n      font-weight: 600;\n      color: #3A3541CC; }\n    .projection-tab-container .add-projection .total-co2-without-land-row .panel-content-input-box-row {\n      border-bottom: 1px solid rgba(217, 217, 217, 0.6); }\n  .projection-tab-container .add-projection .total-co2-with-land-row {\n    margin-left: 40px !important;\n    align-items: center; }\n    .projection-tab-container .add-projection .total-co2-with-land-row .total-co2-with-land-title {\n      font-size: 16px;\n      font-weight: 600;\n      color: #3A3541CC; }\n    .projection-tab-container .add-projection .total-co2-with-land-row .panel-content-input-box-row {\n      border-bottom: 1px solid rgba(217, 217, 217, 0.6); }\n  .projection-tab-container .add-projection .ant-input-number-input {\n    text-align: center;\n    height: 40px; }\n  .projection-tab-container .add-projection .view-data-panel .panel-content-input-box-row {\n    padding-bottom: 24px; }\n  .projection-tab-container .add-projection .steps-actions {\n    display: flex;\n    flex-direction: row-reverse;\n    margin-right: 1rem;\n    margin-top: 3rem; }\n    .projection-tab-container .add-projection .steps-actions .action-btn {\n      border: 1px solid #008f39;\n      color: #008f39;\n      margin-right: 1rem; }\n    .projection-tab-container .add-projection .steps-actions .submit-btn {\n      margin-right: 1rem; }\n    .projection-tab-container .add-projection .steps-actions .back-btn {\n      border: 1px solid rgba(140, 140, 140, 0.7);\n      color: rgba(140, 140, 140, 0.7);\n      margin-right: 1rem; }\n    .projection-tab-container .add-projection .steps-actions .mg-left-1 {\n      margin-left: 1rem; }\n  @media only screen and (max-width: 1600px) {\n    .projection-tab-container .add-projection .panel-content-input-box-row .ant-input-number {\n      margin-left: 10%; }\n    .projection-tab-container .add-projection .total-co2-land-input-box-row .ant-input-number {\n      margin-left: 7% !important; } }\n";
styleInject(css_248z$1);

var ProjectionTypes = {
    bau: 'Business As Usual',
    conditionalNdc: 'Conditional NDC',
    unconditionalNdc: 'Unconditional NDC',
};

var GHGProjectionsComponent = function (props) {
    var t = props.t;
    var userInfoState = useUserContext().userInfoState;
    var _a = React.useState([]), data = _a[0], setData = _a[1];
    var _b = useConnection(); _b.put; var get = _b.get, post = _b.post;
    var _c = React.useState(false), loading = _c[0], setLoading = _c[1];
    var _d = React.useState(false), isPendingFinalization = _d[0], setIsPendingFinalization = _d[1];
    var _e = React.useState(null); _e[0]; var setSelectedYear = _e[1];
    var _f = React.useState(''), uploadedFileName = _f[0], setUploadedFileName = _f[1];
    var _g = React.useState([]), disabledYears = _g[0], setDisabledYears = _g[1];
    var _h = React.useState(); _h[0]; _h[1];
    var _j = React.useState(0), totalNationalBau = _j[0], setTotalNationalBau = _j[1];
    var _k = React.useState(0), totalNationalConditionalNdc = _k[0], setTotalNationalConditionalNdc = _k[1];
    var _l = React.useState(0), totalNationalUnconditionalNdc = _l[0], setTotalNationalUnconditionalNdc = _l[1];
    var _m = React.useState(0), energyEmissionsBau = _m[0], setEnergyEmissionsBau = _m[1];
    var _o = React.useState(0), energyEmissionsConditionalNdc = _o[0], setEnergyEmissionsConditionalNdc = _o[1];
    var _p = React.useState(0), energyEmissionsUnconditionalNdc = _p[0], setEnergyEmissionsUnconditionalNdc = _p[1];
    var _q = React.useState(0), fuelCombustionActivitiesBau = _q[0], setFuelCombustionActivitiesBau = _q[1];
    var _r = React.useState(0), fuelCombustionActivitiesConditionalNdc = _r[0], setFuelCombustionActivitiesConditionalNdc = _r[1];
    var _s = React.useState(0), fuelCombustionActivitiesUnconditionalNdc = _s[0], setFuelCombustionActivitiesUnconditionalNdc = _s[1];
    var _t = React.useState(0), fugitiveEmissionsFromFuelsBau = _t[0], setFugitiveEmissionsFromFuelsBau = _t[1];
    var _u = React.useState(0), fugitiveEmissionsFromFuelsConditionalNdc = _u[0], setFugitiveEmissionsFromFuelsConditionalNdc = _u[1];
    var _v = React.useState(0), fugitiveEmissionsFromFuelsUnconditionalNdc = _v[0], setFugitiveEmissionsFromFuelsUnconditionalNdc = _v[1];
    var _w = React.useState(0), carbonDioxideTransportStorageBau = _w[0], setCarbonDioxideTransportStorageBau = _w[1];
    var _x = React.useState(0), carbonDioxideTransportStorageConditionalNdc = _x[0], setCarbonDioxideTransportStorageConditionalNdc = _x[1];
    var _y = React.useState(0), carbonDioxideTransportStorageUnconditionalNdc = _y[0], setCarbonDioxideTransportStorageUnconditionalNdc = _y[1];
    var _z = React.useState(0), industrialProcessesProductUseBau = _z[0], setIndustrialProcessesProductUseBau = _z[1];
    var _0 = React.useState(0), industrialProcessesProductUseConditionalNdc = _0[0], setIndustrialProcessesProductUseConditionalNdc = _0[1];
    var _1 = React.useState(0), industrialProcessesProductUseUnconditionalNdc = _1[0], setIndustrialProcessesProductUseUnconditionalNdc = _1[1];
    var _2 = React.useState(0), agricultureForestryOtherLandUseBau = _2[0], setAgricultureForestryOtherLandUseBau = _2[1];
    var _3 = React.useState(0), agricultureForestryOtherLandUseConditionalNdc = _3[0], setAgricultureForestryOtherLandUseConditionalNdc = _3[1];
    var _4 = React.useState(0), agricultureForestryOtherLandUseUnconditionalNdc = _4[0], setAgricultureForestryOtherLandUseUnconditionalNdc = _4[1];
    var _5 = React.useState(0), wasteBau = _5[0], setWasteBau = _5[1];
    var _6 = React.useState(0), wasteConditionalNdc = _6[0], setWasteConditionalNdc = _6[1];
    var _7 = React.useState(0), wasteUnconditionalNdc = _7[0], setWasteUnconditionalNdc = _7[1];
    var _8 = React.useState(0), otherBau = _8[0], setOtherBau = _8[1];
    var _9 = React.useState(0), otherConditionalNdc = _9[0], setOtherConditionalNdc = _9[1];
    var _10 = React.useState(0), otherUnconditionalNdc = _10[0], setOtherUnconditionalNdc = _10[1];
    var _11 = React.useState({
        totalCo2WithoutLand_bau: 0,
        totalCo2WithoutLand_conditionalNdc: 0,
        totalCo2WithoutLand_unconditionalNdc: 0
    }); _11[0]; var setTotalCo2WithoutLandEmissions = _11[1];
    var _12 = React.useState({
        totalCo2WithLand_bau: 0,
        totalCo2WithLand_conditionalNdc: 0,
        totalCo2WithLand_unconditionalNdc: 0
    }); _12[0]; _12[1];
    var _13 = React.useState(false), isSavedFormDataSet = _13[0], setIsSavedFormDataSet = _13[1];
    var _14 = React.useState(1), formDataVersion = _14[0], setFormDataVersion = _14[1];
    var _15 = React.useState(false), isFormChanged = _15[0], setIsFormChanged = _15[1];
    var _16 = React.useState(false), openSaveFormModal = _16[0], setOpenSaveFormModal = _16[1];
    var _17 = React.useState(false), openFinalizeFormModal = _17[0], setOpenFinalizeFormModal = _17[1];
    var _18 = React.useState(false), openResetFormModal = _18[0], setOpenResetFormModal = _18[1];
    var _19 = React.useState(''), errorMsg = _19[0], setErrorMsg = _19[1];
    var _20 = React.useState({}), actionInfo = _20[0], setActionInfo = _20[1];
    var Panel = antd.Collapse.Panel;
    var form = antd.Form.useForm()[0];
    var createSetFieldObject = function (obj, objName) {
        var result = {};
        for (var key in obj) {
            var energyEmissionsSub = obj[key];
            for (var childKey in energyEmissionsSub) {
                if (typeof energyEmissionsSub[childKey] === 'object') {
                    for (var category in energyEmissionsSub) {
                        var subcategory = energyEmissionsSub[category];
                        for (var gas in subcategory) {
                            result["".concat(key, "_").concat(category, "_").concat(gas)] = !isNaN(subcategory[gas]) ? subcategory[gas] : 0;
                        }
                    }
                }
                else {
                    for (var gas in energyEmissionsSub) {
                        result["".concat(objName, "_").concat(key, "_").concat(gas)] = !isNaN(energyEmissionsSub[gas]) ? energyEmissionsSub[gas] : 0;
                    }
                }
            }
        }
        return result;
    };
    var validateExcelDataFormat = function (sheet, excelData) {
        var sheetHeadings = utils.sheet_to_json(sheet, {
            header: 1,
        })[0];
        var columnHeadings = ['Sector', 'Business As Usual', 'Conditional NDC', 'Unconditional NDC'];
        if (!columnHeadings.every(function (element) { return sheetHeadings.includes(element); })) {
            return false;
        }
        var sectorValues = excelData.map(function (excelDataObj) { return excelDataObj.Sector; });
        if (!excelFields.every(function (element) { return sectorValues.includes(element); })) {
            return false;
        }
        return true;
    };
    var populateFormWithUploadedFile = function (excelData, keyPrefix) {
        var emissions = {};
        for (var key in ProjectionTypes) {
            emissions[key] = excelData[ProjectionTypes[key]];
        }
        return (emissions);
    };
    var handleFileUploadData = function (excelData) {
        var result = {};
        excelData.forEach(function (excelDataObj) {
            if (Object.keys(EmissionSectors).includes(excelDataObj.Sector)) {
                result[EmissionSectors[excelDataObj.Sector]] = populateFormWithUploadedFile(excelDataObj, EmissionSectors[excelDataObj.Sector]);
            }
        });
        var upData = {
            energyEmissions: {
                fuelCombustionActivities: {
                    energyIndustries: result.energyIndustries,
                    manufacturingIndustriesConstruction: result.manufacturingIndustriesConstruction,
                    transport: result.transport,
                    otherSectors: result.otherSectors,
                    nonSpecified: result.nonSpecified,
                },
                fugitiveEmissionsFromFuels: {
                    solidFuels: result.solidFuels,
                    oilNaturalGas: result.oilNaturalGas,
                    otherEmissionsEnergyProduction: result.otherEmissionsEnergyProduction,
                },
                carbonDioxideTransportStorage: {
                    transportOfCo2: result.transportOfCo2,
                    injectionStorage: result.injectionStorage,
                    other: result.otherCarbonDioxideTransportStorage,
                },
            },
            industrialProcessesProductUse: {
                mineralIndustry: result.mineralIndustry,
                chemicalIndustry: result.chemicalIndustry,
                metalIndustry: result.metalIndustry,
                nonEnergyProductsFuelsSolventUse: result.nonEnergyProductsFuelsSolventUse,
                electronicsIndustry: result.electronicsIndustry,
                productUsesSubstOzoneDepletingSubs: result.productUsesSubstOzoneDepletingSubs,
                otherProductManufactureUse: result.otherProductManufactureUse,
                other: result.otherIndustrialProcessesProductUse,
            },
            agricultureForestryOtherLandUse: {
                livestock: result.livestock,
                land: result.land,
                aggregateNonCo2SourcesLand: result.aggregateNonCo2SourcesLand,
                other: result.otherAgricultureForestryOtherLandUse,
            },
            waste: {
                solidWasteDisposal: result.solidWasteDisposal,
                biologicalTreatmentSolidWaste: result.biologicalTreatmentSolidWaste,
                incinerationOpenBurningWaste: result.incinerationOpenBurningWaste,
                wastewaterTreatmentDischarge: result.wastewaterTreatmentDischarge,
                other: result.otherWaste,
            },
            other: {
                indirectN2oEmissions: result.indirectN2oEmissions,
                other: result.other,
            },
            totalCo2WithoutLand: result.totalCo2WithoutLand,
            totalCo2WithLand: result.totalCo2WithLand,
        };
        // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
        setFormValues(upData);
    };
    React.useEffect(function () {
        var hasSaveState = data.some(function (item) { return item.state === 'SAVED'; });
        setIsPendingFinalization(hasSaveState);
    }, [data, uploadedFileName]);
    function calculateSumEmissionView(obj, conditionType) {
        var sum = 0;
        for (var key in obj) {
            if (key === conditionType) {
                sum += (typeof obj[key] === "number") ? obj[key] : 0;
            }
            else if (typeof obj[key] === 'object' &&
                key !== 'totalCo2WithLand' &&
                key !== 'totalCo2WithoutLand') {
                var calculatedSum = calculateSumEmissionView(obj[key], conditionType);
                sum += (typeof calculatedSum === "number") ? calculatedSum : 0;
            }
        }
        return sum;
    }
    var onValuesChange = function (changedValues, allValues) {
        var initialValues = null;
        if (isPendingFinalization) {
            var savedData = data.filter(function (item) { return item.state === 'SAVED'; });
            initialValues = savedData[0];
        }
        var currentValues = form.getFieldsValue(true);
        var isChanged = !(JSON.stringify(currentValues) === JSON.stringify(initialValues));
        setIsFormChanged(isChanged);
    };
    var getBase64 = function (file) {
        return new Promise(function (resolve, reject) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () { return resolve(reader.result); };
            reader.onerror = function (error) { return reject(error); };
        });
    };
    var createSaveRequestPayload = function (fields, remarks, status) { return __awaiter(void 0, void 0, void 0, function () {
        var requestBody, savedEmission, emissionImportBase64;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    requestBody = {};
                    savedEmission = {
                        year: fields === null || fields === void 0 ? void 0 : fields.year.year(),
                        energyEmissions: {
                            fuelCombustionActivities: {
                                energyIndustries: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_energyIndustries_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_energyIndustries_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_energyIndustries_unconditionalNdc,
                                },
                                manufacturingIndustriesConstruction: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_manufacturingIndustriesConstruction_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_manufacturingIndustriesConstruction_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_manufacturingIndustriesConstruction_unconditionalNdc,
                                },
                                transport: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_transport_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_transport_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_transport_unconditionalNdc,
                                },
                                otherSectors: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_otherSectors_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_otherSectors_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_otherSectors_unconditionalNdc,
                                },
                                nonSpecified: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_nonSpecified_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_nonSpecified_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fuelCombustionActivities_nonSpecified_unconditionalNdc,
                                },
                            },
                            fugitiveEmissionsFromFuels: {
                                solidFuels: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_solidFuels_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_solidFuels_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_solidFuels_unconditionalNdc,
                                },
                                oilNaturalGas: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_oilNaturalGas_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_oilNaturalGas_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_oilNaturalGas_unconditionalNdc,
                                },
                                otherEmissionsEnergyProduction: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_unconditionalNdc,
                                },
                            },
                            carbonDioxideTransportStorage: {
                                transportOfCo2: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_transportOfCo2_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_transportOfCo2_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_transportOfCo2_unconditionalNdc,
                                },
                                injectionStorage: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_injectionStorage_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_injectionStorage_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_injectionStorage_unconditionalNdc,
                                },
                                other: {
                                    bau: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_other_bau,
                                    conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_other_conditionalNdc,
                                    unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.carbonDioxideTransportStorage_other_unconditionalNdc,
                                },
                            },
                        },
                        industrialProcessesProductUse: {
                            mineralIndustry: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_mineralIndustry_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_mineralIndustry_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_mineralIndustry_unconditionalNdc,
                            },
                            chemicalIndustry: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_chemicalIndustry_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_chemicalIndustry_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_chemicalIndustry_unconditionalNdc,
                            },
                            metalIndustry: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_metalIndustry_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_metalIndustry_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_metalIndustry_unconditionalNdc,
                            },
                            nonEnergyProductsFuelsSolventUse: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_unconditionalNdc,
                            },
                            electronicsIndustry: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_electronicsIndustry_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_electronicsIndustry_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_electronicsIndustry_unconditionalNdc,
                            },
                            productUsesSubstOzoneDepletingSubs: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_unconditionalNdc,
                            },
                            otherProductManufactureUse: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_otherProductManufactureUse_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_otherProductManufactureUse_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_otherProductManufactureUse_unconditionalNdc,
                            },
                            other: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_other_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_other_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.industrialProcessesProductUse_other_unconditionalNdc,
                            },
                        },
                        agricultureForestryOtherLandUse: {
                            livestock: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_livestock_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_livestock_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_livestock_unconditionalNdc,
                            },
                            land: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_land_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_land_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_land_unconditionalNdc,
                            },
                            aggregateNonCo2SourcesLand: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_unconditionalNdc,
                            },
                            other: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_other_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_other_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.agricultureForestryOtherLandUse_other_unconditionalNdc,
                            },
                        },
                        waste: {
                            solidWasteDisposal: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.waste_solidWasteDisposal_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_solidWasteDisposal_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_solidWasteDisposal_unconditionalNdc,
                            },
                            biologicalTreatmentSolidWaste: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.waste_biologicalTreatmentSolidWaste_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_biologicalTreatmentSolidWaste_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_biologicalTreatmentSolidWaste_unconditionalNdc,
                            },
                            incinerationOpenBurningWaste: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.waste_incinerationOpenBurningWaste_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_incinerationOpenBurningWaste_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_incinerationOpenBurningWaste_unconditionalNdc,
                            },
                            wastewaterTreatmentDischarge: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.waste_wastewaterTreatmentDischarge_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_wastewaterTreatmentDischarge_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_wastewaterTreatmentDischarge_unconditionalNdc,
                            },
                            other: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.waste_other_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_other_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.waste_other_unconditionalNdc,
                            },
                        },
                        other: {
                            indirectN2oEmissions: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.other_indirectN2oEmissions_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.other_indirectN2oEmissions_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.other_indirectN2oEmissions_unconditionalNdc,
                            },
                            other: {
                                bau: fields === null || fields === void 0 ? void 0 : fields.other_other_bau,
                                conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.other_other_conditionalNdc,
                                unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.other_other_unconditionalNdc,
                            },
                        },
                        totalCo2WithoutLand: {
                            bau: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithoutLand_bau,
                            conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithoutLand_conditionalNdc,
                            unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithoutLand_unconditionalNdc,
                        },
                        totalCo2WithLand: {
                            bau: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithLand_bau,
                            conditionalNdc: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithLand_conditionalNdc,
                            unconditionalNdc: fields === null || fields === void 0 ? void 0 : fields.totalCo2WithLand_unconditionalNdc,
                        },
                        state: status,
                        remarks: remarks,
                        version: formDataVersion,
                    };
                    requestBody = savedEmission;
                    if (!(fields === null || fields === void 0 ? void 0 : fields.emissionsDocument)) return [3 /*break*/, 2];
                    return [4 /*yield*/, getBase64((_a = fields === null || fields === void 0 ? void 0 : fields.emissionsDocument[0]) === null || _a === void 0 ? void 0 : _a.originFileObj)];
                case 1:
                    emissionImportBase64 = _b.sent();
                    if ((emissionImportBase64 === null || emissionImportBase64 === void 0 ? void 0 : emissionImportBase64.length) > 0) {
                        requestBody.emissionDocument = emissionImportBase64;
                    }
                    _b.label = 2;
                case 2: return [2 /*return*/, requestBody];
            }
        });
    }); };
    var clearForm = function () {
        form.resetFields();
        setFuelCombustionActivitiesBau(0);
        setFuelCombustionActivitiesConditionalNdc(0);
        setFuelCombustionActivitiesUnconditionalNdc(0);
        setFugitiveEmissionsFromFuelsBau(0);
        setFugitiveEmissionsFromFuelsConditionalNdc(0);
        setFugitiveEmissionsFromFuelsUnconditionalNdc(0);
        setCarbonDioxideTransportStorageBau(0);
        setCarbonDioxideTransportStorageConditionalNdc(0);
        setCarbonDioxideTransportStorageUnconditionalNdc(0);
        setIndustrialProcessesProductUseBau(0);
        setIndustrialProcessesProductUseConditionalNdc(0);
        setIndustrialProcessesProductUseUnconditionalNdc(0);
        setAgricultureForestryOtherLandUseBau(0);
        setAgricultureForestryOtherLandUseConditionalNdc(0);
        setAgricultureForestryOtherLandUseUnconditionalNdc(0);
        setWasteBau(0);
        setWasteConditionalNdc(0);
        setWasteUnconditionalNdc(0);
        setOtherBau(0);
        setOtherConditionalNdc(0);
        setOtherUnconditionalNdc(0);
    };
    var resetForm = function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: 
                // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
                return [4 /*yield*/, getProjectionData()];
                case 1:
                    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
                    _a.sent();
                    setOpenResetFormModal(false);
                    setIsSavedFormDataSet(false);
                    clearUploadDoc();
                    if (!isPendingFinalization) {
                        clearForm();
                    }
                    antd.message.open({
                        type: 'success',
                        content: t('ghgInventory:formCancelledSuccess'),
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    return [2 /*return*/];
            }
        });
    }); };
    var onResetFormCanceled = function () {
        setOpenResetFormModal(false);
    };
    var onOpenResetFormModel = function () {
        if (!isFormChanged) {
            antd.message.open({
                type: 'error',
                content: t('ghgInventory:formNotChanged'),
                duration: 4,
                style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
            });
        }
        else {
            setActionInfo({
                action: "".concat(t('ghgInventory:proceed')),
                headerText: "".concat(t('ghgInventory:discardHeaderText')),
                type: 'danger',
                icon: React.createElement(icons.CloseCircleOutlined, null),
            });
            setErrorMsg('');
            setOpenResetFormModal(true);
        }
    };
    var onSaveFormCanceled = function () {
        setOpenSaveFormModal(false);
    };
    var onOpenSaveFormModel = function () {
        var _a = form.getFieldsValue(true); _a.year; var rest = __rest(_a, ["year"]);
        var otherFieldsNegativeValue = Object.values(rest).some(function (value) {
            return typeof value === 'number' && value < 0;
        });
        form
            .validateFields()
            .then(function (values) {
            if (!isFormChanged) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:formNotChanged'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
            else {
                setActionInfo({
                    action: "".concat(t("ghgInventory:submit")),
                    headerText: "".concat(t("ghgInventory:submitModelHeader")),
                    type: "primary",
                    icon: React.createElement(icons.CheckCircleOutlined, null),
                });
                setErrorMsg('');
                setOpenSaveFormModal(true);
            }
        })
            .catch(function (errorInfo) {
            if (otherFieldsNegativeValue) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:negativeValuesNotAllowed'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
        });
    };
    var onFinalizeFormCanceled = function () {
        setOpenFinalizeFormModal(false);
    };
    var onOpenFinalizeFormModel = function () {
        var _a = form.getFieldsValue(true); _a.year; var rest = __rest(_a, ["year"]);
        var otherFieldsEmpty = Object.values(rest).every(function (value) { return !value; });
        var otherFieldsNegativeValue = Object.values(rest).some(function (value) {
            return typeof value === 'number' && value < 0;
        });
        form
            .validateFields()
            .then(function (values) {
            // Validation successful, set ActionInfo and open the form modal
            if (otherFieldsEmpty) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:cannotFinaliseEmpty'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
            else {
                setActionInfo({
                    action: "".concat(t("ghgInventory:finalize")),
                    headerText: "".concat(t("ghgInventory:finalizeModelHeader")),
                    type: "primary",
                    icon: React.createElement(Icon.ClipboardCheck, null),
                });
                setErrorMsg('');
                setOpenFinalizeFormModal(true);
            }
        })
            .catch(function (errorInfo) {
            // Validation failed
            if (otherFieldsNegativeValue) {
                antd.message.open({
                    type: 'error',
                    content: t('ghgInventory:negativeValuesNotAllowed'),
                    duration: 4,
                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                });
            }
            console.log('Validation failed:', errorInfo);
        });
    };
    var getProjectionData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setLoading(true);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, get('national/projections')];
                case 2:
                    response = _a.sent();
                    console.log('Projection GET -> ', response);
                    if (response === null || response === void 0 ? void 0 : response.data) {
                        setData(response.data);
                    }
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _a.sent();
                    console.log('Error in projection fetch - ', error_1);
                    antd.message.open({
                        type: 'error',
                        content: error_1 === null || error_1 === void 0 ? void 0 : error_1.message,
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setIsFormChanged(false);
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        var fetchData = function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, getProjectionData()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        fetchData();
    }, []);
    var onSubmitForm = function (remarks, status) { return __awaiter(void 0, void 0, void 0, function () {
        var fields, payload, response, messageContent, error_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    fields = form.getFieldsValue(true);
                    return [4 /*yield*/, createSaveRequestPayload(fields, remarks, status)];
                case 1:
                    payload = _a.sent();
                    setLoading(true);
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 6, 11, 12]);
                    return [4 /*yield*/, post('national/projections', payload)];
                case 3:
                    response = _a.sent();
                    console.log('Projections creation -> ', response);
                    if (!((response === null || response === void 0 ? void 0 : response.statusText) === 'SUCCESS')) return [3 /*break*/, 5];
                    setOpenSaveFormModal(false);
                    messageContent = (response === null || response === void 0 ? void 0 : response.status) == axios.HttpStatusCode.Created ?
                        t('ghgInventory:projectionCreationSuccess')
                        : t('ghgInventory:projectionUpdateSuccess');
                    if (status === GHGRecordState.FINALIZED) {
                        clearUploadDoc();
                        clearForm();
                        messageContent = t('ghgInventory:projectionFinalizedSuccess');
                    }
                    setOpenFinalizeFormModal(false);
                    antd.message.open({
                        type: 'success',
                        content: messageContent,
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    clearUploadDoc();
                    return [4 /*yield*/, getProjectionData()];
                case 4:
                    _a.sent();
                    _a.label = 5;
                case 5: return [3 /*break*/, 12];
                case 6:
                    error_2 = _a.sent();
                    console.log('Error in projection creation - ', error_2);
                    setOpenSaveFormModal(false);
                    setOpenFinalizeFormModal(false);
                    antd.message.open({
                        type: 'error',
                        content: error_2 === null || error_2 === void 0 ? void 0 : error_2.message,
                        duration: 4,
                        style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                    });
                    if (!(error_2.status === axios.HttpStatusCode.Conflict.valueOf())) return [3 /*break*/, 8];
                    return [4 /*yield*/, getProjectionData()];
                case 7:
                    _a.sent();
                    setIsSavedFormDataSet(false);
                    clearUploadDoc();
                    if (!isPendingFinalization) {
                        clearForm();
                    }
                    return [3 /*break*/, 10];
                case 8:
                    if (!(error_2.status === axios.HttpStatusCode.Forbidden.valueOf())) return [3 /*break*/, 10];
                    clearUploadDoc();
                    clearForm();
                    return [4 /*yield*/, getProjectionData()];
                case 9:
                    _a.sent();
                    _a.label = 10;
                case 10: return [3 /*break*/, 12];
                case 11:
                    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
                    setIsFormChanged(false);
                    setLoading(false);
                    return [7 /*endfinally*/];
                case 12: return [2 /*return*/];
            }
        });
    }); };
    var setFormValues = function (projectionObject) {
        if (projectionObject.year) {
            form.setFieldsValue({ year: moment(projectionObject.year, 'YYYY') });
        }
        form.setFieldsValue(createSetFieldObject(projectionObject.energyEmissions, 'energyEmissions'));
        form.setFieldsValue(createSetFieldObject(projectionObject.industrialProcessesProductUse, 'industrialProcessesProductUse'));
        form.setFieldsValue(createSetFieldObject(projectionObject.agricultureForestryOtherLandUse, 'agricultureForestryOtherLandUse'));
        form.setFieldsValue(createSetFieldObject(projectionObject.waste, 'waste'));
        form.setFieldsValue(createSetFieldObject(projectionObject.other, 'other'));
        form.setFieldsValue({
            totalCo2WithoutLand_bau: projectionObject.totalCo2WithoutLand.bau,
            totalCo2WithoutLand_conditionalNdc: projectionObject.totalCo2WithoutLand.conditionalNdc,
            totalCo2WithoutLand_unconditionalNdc: projectionObject.totalCo2WithoutLand.unconditionalNdc,
        });
        form.setFieldsValue({
            totalCo2WithLand_bau: projectionObject.totalCo2WithLand.bau,
            totalCo2WithLand_conditionalNdc: projectionObject.totalCo2WithLand.conditionalNdc,
            totalCo2WithLand_unconditionalNdc: projectionObject.totalCo2WithLand.unconditionalNdc,
        });
        setFuelCombustionActivitiesBau(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.fuelCombustionActivities, 'bau'));
        setFuelCombustionActivitiesConditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.fuelCombustionActivities, 'conditionalNdc'));
        setFuelCombustionActivitiesUnconditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.fuelCombustionActivities, 'unconditionalNdc'));
        setFugitiveEmissionsFromFuelsBau(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.fugitiveEmissionsFromFuels, 'bau'));
        setFugitiveEmissionsFromFuelsConditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.fugitiveEmissionsFromFuels, 'conditionalNdc'));
        setFugitiveEmissionsFromFuelsUnconditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.fugitiveEmissionsFromFuels, 'unconditionalNdc'));
        setCarbonDioxideTransportStorageBau(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.carbonDioxideTransportStorage, 'bau'));
        setCarbonDioxideTransportStorageConditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.carbonDioxideTransportStorage, 'conditionalNdc'));
        setCarbonDioxideTransportStorageUnconditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.energyEmissions.carbonDioxideTransportStorage, 'unconditionalNdc'));
        setIndustrialProcessesProductUseBau(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.industrialProcessesProductUse, 'bau'));
        setIndustrialProcessesProductUseConditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.industrialProcessesProductUse, 'conditionalNdc'));
        setIndustrialProcessesProductUseUnconditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.industrialProcessesProductUse, 'unconditionalNdc'));
        setAgricultureForestryOtherLandUseBau(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.agricultureForestryOtherLandUse, 'bau'));
        setAgricultureForestryOtherLandUseConditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.agricultureForestryOtherLandUse, 'conditionalNdc'));
        setAgricultureForestryOtherLandUseUnconditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.agricultureForestryOtherLandUse, 'unconditionalNdc'));
        setWasteBau(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.waste, 'bau'));
        setWasteConditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.waste, 'conditionalNdc'));
        setWasteUnconditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.waste, 'unconditionalNdc'));
        setOtherBau(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.other, 'bau'));
        setOtherConditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.other, 'conditionalNdc'));
        setOtherUnconditionalNdc(calculateSumEmissionView(projectionObject === null || projectionObject === void 0 ? void 0 : projectionObject.other, 'unconditionalNdc'));
        setIsSavedFormDataSet(true);
    };
    React.useEffect(function () {
        var savedData = data.filter(function (item) { return item.state === 'SAVED'; });
        if (!isSavedFormDataSet) {
            if (savedData && savedData.length > 0) {
                setFormValues(savedData[0]);
            }
        }
        if (savedData && savedData.length > 0) {
            setFormDataVersion(savedData[0].version);
        }
        var years = data
            .filter(function (item) { return !(item.state === 'SAVED' && item.year); }) // Filter out items where state is not 'SAVED'
            .map(function (item) { return parseInt(item.year); });
        // Update 'disabledYears' only if 'years' array has changed
        setDisabledYears(function (prevYears) {
            if (JSON.stringify(prevYears) !== JSON.stringify(years)) {
                return years;
            }
            return prevYears;
        });
    }, [data]);
    var checkFile = function (file) {
        var isXLSX = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||
            file.type === 'application/vnd.ms-excel';
        if (!isXLSX) {
            console.log('You can only upload XLSX file!');
        }
        return isXLSX;
    };
    var normFile = function (e) {
        if (Array.isArray(e)) {
            return e;
        }
        return e === null || e === void 0 ? void 0 : e.fileList;
    };
    var clearUploadDoc = function () {
        setUploadedFileName('');
        form.setFieldsValue({
            emissionsDocument: null,
        });
    };
    var handleYearChange = function (date, dateString) {
        setSelectedYear(dateString);
    };
    var isYearDisabled = function (current) {
        return disabledYears.includes(current.year());
    };
    React.useEffect(function () {
        setEnergyEmissionsBau(fuelCombustionActivitiesBau + fugitiveEmissionsFromFuelsBau + carbonDioxideTransportStorageBau);
    }, [
        fuelCombustionActivitiesBau,
        fugitiveEmissionsFromFuelsBau,
        carbonDioxideTransportStorageBau,
    ]);
    React.useEffect(function () {
        setTotalNationalBau(energyEmissionsBau +
            industrialProcessesProductUseBau +
            agricultureForestryOtherLandUseBau +
            wasteBau +
            otherBau);
    }, [
        energyEmissionsBau +
            industrialProcessesProductUseBau +
            agricultureForestryOtherLandUseBau +
            wasteBau +
            otherBau,
    ]);
    React.useEffect(function () {
        setEnergyEmissionsConditionalNdc(fuelCombustionActivitiesConditionalNdc +
            fugitiveEmissionsFromFuelsConditionalNdc +
            carbonDioxideTransportStorageConditionalNdc);
    }, [
        fuelCombustionActivitiesConditionalNdc,
        fugitiveEmissionsFromFuelsConditionalNdc,
        carbonDioxideTransportStorageConditionalNdc,
    ]);
    React.useEffect(function () {
        setTotalNationalConditionalNdc(energyEmissionsConditionalNdc +
            industrialProcessesProductUseConditionalNdc +
            agricultureForestryOtherLandUseConditionalNdc +
            wasteConditionalNdc +
            otherConditionalNdc);
    }, [
        energyEmissionsConditionalNdc +
            industrialProcessesProductUseConditionalNdc +
            agricultureForestryOtherLandUseConditionalNdc +
            wasteConditionalNdc +
            otherConditionalNdc,
    ]);
    React.useEffect(function () {
        setEnergyEmissionsUnconditionalNdc(fuelCombustionActivitiesUnconditionalNdc +
            fugitiveEmissionsFromFuelsUnconditionalNdc +
            carbonDioxideTransportStorageUnconditionalNdc);
    }, [
        fuelCombustionActivitiesUnconditionalNdc,
        fugitiveEmissionsFromFuelsUnconditionalNdc,
        carbonDioxideTransportStorageUnconditionalNdc,
    ]);
    React.useEffect(function () {
        setTotalNationalUnconditionalNdc(energyEmissionsUnconditionalNdc +
            industrialProcessesProductUseUnconditionalNdc +
            agricultureForestryOtherLandUseUnconditionalNdc +
            wasteUnconditionalNdc +
            otherUnconditionalNdc);
    }, [
        energyEmissionsUnconditionalNdc +
            industrialProcessesProductUseUnconditionalNdc +
            agricultureForestryOtherLandUseUnconditionalNdc +
            wasteUnconditionalNdc +
            otherUnconditionalNdc,
    ]);
    var getBauSum = function (panelHeading) {
        switch (panelHeading) {
            case 'energyEmissions':
                return energyEmissionsBau;
            case 'fuelCombustionActivities':
                return fuelCombustionActivitiesBau;
            case 'fugitiveEmissionsFromFuels':
                return fugitiveEmissionsFromFuelsBau;
            case 'carbonDioxideTransportStorage':
                return carbonDioxideTransportStorageBau;
            case 'industrialProcessesProductUse':
                return industrialProcessesProductUseBau;
            case 'agricultureForestryOtherLandUse':
                return agricultureForestryOtherLandUseBau;
            case 'waste':
                return wasteBau;
            case 'other':
                return otherBau;
            default:
                return 0;
        }
    };
    var getConditionalNdcSum = function (panelHeading) {
        switch (panelHeading) {
            case 'energyEmissions':
                return energyEmissionsConditionalNdc;
            case 'fuelCombustionActivities':
                return fuelCombustionActivitiesConditionalNdc;
            case 'fugitiveEmissionsFromFuels':
                return fugitiveEmissionsFromFuelsConditionalNdc;
            case 'carbonDioxideTransportStorage':
                return carbonDioxideTransportStorageConditionalNdc;
            case 'industrialProcessesProductUse':
                return industrialProcessesProductUseConditionalNdc;
            case 'agricultureForestryOtherLandUse':
                return agricultureForestryOtherLandUseConditionalNdc;
            case 'waste':
                return wasteConditionalNdc;
            case 'other':
                return otherConditionalNdc;
            default:
                return 0;
        }
    };
    var getUnconditionalNdcSum = function (panelHeading) {
        switch (panelHeading) {
            case 'energyEmissions':
                return energyEmissionsUnconditionalNdc;
            case 'fuelCombustionActivities':
                return fuelCombustionActivitiesUnconditionalNdc;
            case 'fugitiveEmissionsFromFuels':
                return fugitiveEmissionsFromFuelsUnconditionalNdc;
            case 'carbonDioxideTransportStorage':
                return carbonDioxideTransportStorageUnconditionalNdc;
            case 'industrialProcessesProductUse':
                return industrialProcessesProductUseUnconditionalNdc;
            case 'agricultureForestryOtherLandUse':
                return agricultureForestryOtherLandUseUnconditionalNdc;
            case 'waste':
                return wasteUnconditionalNdc;
            case 'other':
                return otherUnconditionalNdc;
            default:
                return 0;
        }
    };
    var calculateSumBau = function (event, panelHeading) {
        var formValues = form.getFieldsValue();
        if (panelHeading === 'fuelCombustionActivities') {
            var sum = (formValues.fuelCombustionActivities_energyIndustries_bau || 0) +
                (formValues.fuelCombustionActivities_manufacturingIndustriesConstruction_bau || 0) +
                (formValues.fuelCombustionActivities_transport_bau || 0) +
                (formValues.fuelCombustionActivities_otherSectors_bau || 0) +
                (formValues.fuelCombustionActivities_nonSpecified_bau || 0);
            console.log('sum triggered', sum);
            setFuelCombustionActivitiesBau(sum);
        }
        if (panelHeading === 'fugitiveEmissionsFromFuels') {
            var sum = (formValues.fugitiveEmissionsFromFuels_solidFuels_bau || 0) +
                (formValues.fugitiveEmissionsFromFuels_oilNaturalGas_bau || 0) +
                (formValues.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_bau || 0);
            setFugitiveEmissionsFromFuelsBau(sum);
        }
        if (panelHeading === 'carbonDioxideTransportStorage') {
            var sum = (formValues.carbonDioxideTransportStorage_transportOfCo2_bau || 0) +
                (formValues.carbonDioxideTransportStorage_injectionStorage_bau || 0) +
                (formValues.carbonDioxideTransportStorage_other_bau || 0);
            setCarbonDioxideTransportStorageBau(sum);
        }
        if (panelHeading === 'industrialProcessesProductUse') {
            var sum = (formValues.industrialProcessesProductUse_mineralIndustry_bau || 0) +
                (formValues.industrialProcessesProductUse_chemicalIndustry_bau || 0) +
                (formValues.industrialProcessesProductUse_metalIndustry_bau || 0) +
                (formValues.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_bau || 0) +
                (formValues.industrialProcessesProductUse_electronicsIndustry_bau || 0) +
                (formValues.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_bau || 0) +
                (formValues.industrialProcessesProductUse_otherProductManufactureUse_bau || 0) +
                (formValues.industrialProcessesProductUse_other_bau || 0);
            setIndustrialProcessesProductUseBau(sum);
        }
        if (panelHeading === 'agricultureForestryOtherLandUse') {
            var sum = (formValues.agricultureForestryOtherLandUse_livestock_bau || 0) +
                (formValues.agricultureForestryOtherLandUse_land_bau || 0) +
                (formValues.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_bau || 0) +
                (formValues.agricultureForestryOtherLandUse_other_bau || 0);
            setAgricultureForestryOtherLandUseBau(sum);
        }
        if (panelHeading === 'waste') {
            var sum = (formValues.waste_solidWasteDisposal_bau || 0) +
                (formValues.waste_biologicalTreatmentSolidWaste_bau || 0) +
                (formValues.waste_incinerationOpenBurningWaste_bau || 0) +
                (formValues.waste_wastewaterTreatmentDischarge_bau || 0) +
                (formValues.waste_other_bau || 0);
            setWasteBau(sum);
        }
        if (panelHeading === 'other') {
            var sum = (formValues.other_indirectN2oEmissions_bau || 0) + (formValues.other_other_bau || 0);
            setOtherBau(sum);
        }
        return 0;
    };
    var calculateSumConditionalNdc = function (event, panelHeading) {
        var formValues = form.getFieldsValue();
        if (panelHeading === 'fuelCombustionActivities') {
            var sum = (formValues.fuelCombustionActivities_energyIndustries_conditionalNdc || 0) +
                (formValues.fuelCombustionActivities_manufacturingIndustriesConstruction_conditionalNdc ||
                    0) +
                (formValues.fuelCombustionActivities_transport_conditionalNdc || 0) +
                (formValues.fuelCombustionActivities_otherSectors_conditionalNdc || 0) +
                (formValues.fuelCombustionActivities_nonSpecified_conditionalNdc || 0);
            setFuelCombustionActivitiesConditionalNdc(sum);
        }
        if (panelHeading === 'fugitiveEmissionsFromFuels') {
            var sum = (formValues.fugitiveEmissionsFromFuels_solidFuels_conditionalNdc || 0) +
                (formValues.fugitiveEmissionsFromFuels_oilNaturalGas_conditionalNdc || 0) +
                (formValues.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_conditionalNdc || 0);
            setFugitiveEmissionsFromFuelsConditionalNdc(sum);
        }
        if (panelHeading === 'carbonDioxideTransportStorage') {
            var sum = (formValues.carbonDioxideTransportStorage_transportOfCo2_conditionalNdc || 0) +
                (formValues.carbonDioxideTransportStorage_injectionStorage_conditionalNdc || 0) +
                (formValues.carbonDioxideTransportStorage_other_conditionalNdc || 0);
            setCarbonDioxideTransportStorageConditionalNdc(sum);
        }
        if (panelHeading === 'industrialProcessesProductUse') {
            var sum = (formValues.industrialProcessesProductUse_mineralIndustry_conditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_chemicalIndustry_conditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_metalIndustry_conditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_conditionalNdc ||
                    0) +
                (formValues.industrialProcessesProductUse_electronicsIndustry_conditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_conditionalNdc ||
                    0) +
                (formValues.industrialProcessesProductUse_otherProductManufactureUse_conditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_other_conditionalNdc || 0);
            setIndustrialProcessesProductUseConditionalNdc(sum);
        }
        if (panelHeading === 'agricultureForestryOtherLandUse') {
            var sum = (formValues.agricultureForestryOtherLandUse_livestock_conditionalNdc || 0) +
                (formValues.agricultureForestryOtherLandUse_land_conditionalNdc || 0) +
                (formValues.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_conditionalNdc ||
                    0) +
                (formValues.agricultureForestryOtherLandUse_other_conditionalNdc || 0);
            setAgricultureForestryOtherLandUseConditionalNdc(sum);
        }
        if (panelHeading === 'waste') {
            var sum = (formValues.waste_solidWasteDisposal_conditionalNdc || 0) +
                (formValues.waste_biologicalTreatmentSolidWaste_conditionalNdc || 0) +
                (formValues.waste_incinerationOpenBurningWaste_conditionalNdc || 0) +
                (formValues.waste_wastewaterTreatmentDischarge_conditionalNdc || 0) +
                (formValues.waste_other_conditionalNdc || 0);
            setWasteConditionalNdc(sum);
        }
        if (panelHeading === 'other') {
            var sum = (formValues.other_indirectN2oEmissions_conditionalNdc || 0) +
                (formValues.other_other_conditionalNdc || 0);
            setOtherConditionalNdc(sum);
        }
        return 0;
    };
    var calculateSumUnconditionalNdc = function (event, panelHeading) {
        var formValues = form.getFieldsValue();
        if (panelHeading === 'fuelCombustionActivities') {
            var sum = (formValues.fuelCombustionActivities_energyIndustries_unconditionalNdc || 0) +
                (formValues.fuelCombustionActivities_manufacturingIndustriesConstruction_unconditionalNdc ||
                    0) +
                (formValues.fuelCombustionActivities_transport_unconditionalNdc || 0) +
                (formValues.fuelCombustionActivities_otherSectors_unconditionalNdc || 0) +
                (formValues.fuelCombustionActivities_nonSpecified_unconditionalNdc || 0);
            setFuelCombustionActivitiesUnconditionalNdc(sum);
        }
        if (panelHeading === 'fugitiveEmissionsFromFuels') {
            var sum = (formValues.fugitiveEmissionsFromFuels_solidFuels_unconditionalNdc || 0) +
                (formValues.fugitiveEmissionsFromFuels_oilNaturalGas_unconditionalNdc || 0) +
                (formValues.fugitiveEmissionsFromFuels_otherEmissionsEnergyProduction_unconditionalNdc ||
                    0);
            setFugitiveEmissionsFromFuelsUnconditionalNdc(sum);
        }
        if (panelHeading === 'carbonDioxideTransportStorage') {
            var sum = (formValues.carbonDioxideTransportStorage_transportOfCo2_unconditionalNdc || 0) +
                (formValues.carbonDioxideTransportStorage_injectionStorage_unconditionalNdc || 0) +
                (formValues.carbonDioxideTransportStorage_other_unconditionalNdc || 0);
            setCarbonDioxideTransportStorageUnconditionalNdc(sum);
        }
        if (panelHeading === 'industrialProcessesProductUse') {
            var sum = (formValues.industrialProcessesProductUse_mineralIndustry_unconditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_chemicalIndustry_unconditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_metalIndustry_unconditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_nonEnergyProductsFuelsSolventUse_unconditionalNdc ||
                    0) +
                (formValues.industrialProcessesProductUse_electronicsIndustry_unconditionalNdc || 0) +
                (formValues.industrialProcessesProductUse_productUsesSubstOzoneDepletingSubs_unconditionalNdc ||
                    0) +
                (formValues.industrialProcessesProductUse_otherProductManufactureUse_unconditionalNdc ||
                    0) +
                (formValues.industrialProcessesProductUse_other_unconditionalNdc || 0);
            setIndustrialProcessesProductUseUnconditionalNdc(sum);
        }
        if (panelHeading === 'agricultureForestryOtherLandUse') {
            var sum = (formValues.agricultureForestryOtherLandUse_livestock_unconditionalNdc || 0) +
                (formValues.agricultureForestryOtherLandUse_land_unconditionalNdc || 0) +
                (formValues.agricultureForestryOtherLandUse_aggregateNonCo2SourcesLand_unconditionalNdc ||
                    0) +
                (formValues.agricultureForestryOtherLandUse_other_unconditionalNdc || 0);
            setAgricultureForestryOtherLandUseUnconditionalNdc(sum);
        }
        if (panelHeading === 'waste') {
            var sum = (formValues.waste_solidWasteDisposal_unconditionalNdc || 0) +
                (formValues.waste_biologicalTreatmentSolidWaste_unconditionalNdc || 0) +
                (formValues.waste_incinerationOpenBurningWaste_unconditionalNdc || 0) +
                (formValues.waste_wastewaterTreatmentDischarge_unconditionalNdc || 0) +
                (formValues.waste_other_unconditionalNdc || 0);
            setWasteUnconditionalNdc(sum);
        }
        if (panelHeading === 'other') {
            var sum = (formValues.other_indirectN2oEmissions_unconditionalNdc || 0) +
                (formValues.other_other_unconditionalNdc || 0);
            setOtherUnconditionalNdc(sum);
        }
        return 0;
    };
    var handleTotalCo2WithoutLandEmissions = function (field, value) {
        setTotalCo2WithoutLandEmissions(function (prevState) {
            var _a;
            return (__assign(__assign({}, prevState), (_a = {}, _a[field] = value, _a)));
        });
    };
    // Helper function to get form field value
    var getFieldValue = function (fieldName) {
        var formValues = form.getFieldsValue(true);
        var fieldValue = formValues[fieldName];
        return (fieldValue && fieldValue >= 0) ? addCommSep(Number(fieldValue)) : fieldValue;
    };
    var renderPanelHeader = function (panelHeading) { return (React.createElement(antd.Row, { gutter: 16 },
        React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-header-col" },
            React.createElement("span", null, t("ghgInventory:".concat(panelHeading)))),
        React.createElement(antd.Col, { xl: 9, md: 9, className: "panel-header-emission-value-col" },
            React.createElement(antd.Row, { gutter: 16 },
                React.createElement(antd.Col, { xl: 7 },
                    React.createElement(antd.Tooltip, { title: addCommSep(Number(getBauSum(panelHeading))) },
                        React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(getBauSum(panelHeading)))))),
                React.createElement(antd.Col, { xl: 7 },
                    React.createElement(antd.Tooltip, { title: addCommSep(Number(getConditionalNdcSum(panelHeading))) },
                        React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(getConditionalNdcSum(panelHeading)))))),
                React.createElement(antd.Col, { xl: 7 },
                    React.createElement(antd.Tooltip, { title: addCommSep(Number(getUnconditionalNdcSum(panelHeading))) },
                        React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(getUnconditionalNdcSum(panelHeading)))))))))); };
    var renderPanelHeaderView = function (panelHeading, tabData) {
        var projectionObject = tabData[panelHeading];
        return (React.createElement(antd.Row, { gutter: 16 },
            React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-header-col" },
                React.createElement("span", null, t("ghgInventory:".concat(panelHeading)))),
            React.createElement(antd.Col, { xl: 9, md: 9 },
                React.createElement(antd.Row, { gutter: 16, className: "panel-header-emission-value-col" },
                    React.createElement(antd.Col, { xl: 7 },
                        React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(projectionObject, 'bau'))) },
                            React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(calculateSumEmissionView(projectionObject, 'bau')))))),
                    React.createElement(antd.Col, { xl: 7 },
                        React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(projectionObject, 'conditionalNdc'))) },
                            React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(calculateSumEmissionView(projectionObject, 'conditionalNdc')))))),
                    React.createElement(antd.Col, { xl: 7 },
                        React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(projectionObject, 'unconditionalNdc'))) },
                            React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(calculateSumEmissionView(projectionObject, 'unconditionalNdc'))))))))));
    };
    var renderPanelContent = function (panelHeading, item, index) { return (React.createElement(antd.Row, { gutter: 16, key: index, className: "panel-content-row" },
        React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-content-title" },
            React.createElement("span", null, t("ghgInventory:".concat(item)))),
        React.createElement(antd.Col, { xl: 9, md: 9 },
            React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row" },
                React.createElement(antd.Col, { xl: 7 },
                    React.createElement(antd.Tooltip, { title: getFieldValue(panelHeading + '_' + item + '_bau') },
                        React.createElement(antd.Form.Item, { name: panelHeading + '_' + item + '_bau', rules: [
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (value && value < 0) {
                                                throw new Error();
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.InputNumber, { onChange: function (event) { return calculateSumBau(event, panelHeading); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                React.createElement(antd.Col, { xl: 7 },
                    React.createElement(antd.Tooltip, { title: getFieldValue(panelHeading + '_' + item + '_conditionalNdc') },
                        React.createElement(antd.Form.Item, { name: panelHeading + '_' + item + '_conditionalNdc', rules: [
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (value && value < 0) {
                                                throw new Error();
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.InputNumber, { onChange: function (event) { return calculateSumConditionalNdc(event, panelHeading); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                React.createElement(antd.Col, { xl: 7 },
                    React.createElement(antd.Tooltip, { title: getFieldValue(panelHeading + '_' + item + '_unconditionalNdc') },
                        React.createElement(antd.Form.Item, { name: panelHeading + '_' + item + '_unconditionalNdc', rules: [
                                {
                                    validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            if (value && value < 0) {
                                                throw new Error();
                                            }
                                            return [2 /*return*/];
                                        });
                                    }); },
                                },
                            ] },
                            React.createElement(antd.InputNumber, { onChange: function (event) { return calculateSumUnconditionalNdc(event, panelHeading); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))))))); };
    var renderPanelContentView = function (bau, conditionalNdc, unconditionalNdc, item, index) {
        return (React.createElement(antd.Row, { gutter: 16, key: index, className: "panel-content-row" },
            React.createElement(antd.Col, { xl: 12, md: 12, className: "panel-content-title" },
                React.createElement("span", null, t("ghgInventory:".concat(item)))),
            React.createElement(antd.Col, { xl: 9, md: 9 },
                React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row" },
                    React.createElement(antd.Col, { xl: 7 },
                        React.createElement(antd.Tooltip, { title: bau ? addCommSep(Number(bau)) : bau },
                            React.createElement("div", null,
                                React.createElement(antd.InputNumber, { value: bau ? addCommSep(Number(bau)) : bau, disabled: true })))),
                    React.createElement(antd.Col, { xl: 7 },
                        React.createElement(antd.Tooltip, { title: conditionalNdc ? addCommSep(Number(conditionalNdc)) : conditionalNdc },
                            React.createElement("div", null,
                                React.createElement(antd.InputNumber, { value: conditionalNdc ? addCommSep(Number(conditionalNdc)) : conditionalNdc, disabled: true })))),
                    React.createElement(antd.Col, { xl: 7 },
                        React.createElement(antd.Tooltip, { title: unconditionalNdc ? addCommSep(Number(unconditionalNdc)) : unconditionalNdc },
                            React.createElement("div", null,
                                React.createElement(antd.InputNumber, { value: unconditionalNdc ? addCommSep(Number(unconditionalNdc)) : unconditionalNdc, disabled: true }))))))));
    };
    var objectToCSV = function (dataToDownload) {
        var flattenObject = function (obj, prefix) {
            if (prefix === void 0) { prefix = ''; }
            return Object.keys(obj).reduce(function (acc, key) {
                var pre = prefix.length ? "".concat(prefix, "_") : '';
                if (typeof obj[key] === 'object' && obj[key] !== null) {
                    Object.assign(acc, flattenObject(obj[key], pre + key));
                }
                else {
                    acc[pre + key] = obj[key];
                }
                return acc;
            }, {});
        };
        var headers = [];
        var contentKeys = [];
        var flattenedObj = flattenObject(dataToDownload);
        var objKeys = Object.keys(flattenedObj);
        for (var key in projectionsCsvFieldMap) {
            if (objKeys.includes(key)) {
                headers.push(projectionsCsvFieldMap[key]);
                contentKeys.push(key);
            }
        }
        var flattenedData = [dataToDownload].map(function (item) {
            var flattened = flattenObject(item);
            return contentKeys.map(function (header) { return flattened[header]; });
        });
        var allHeaders = __spreadArray(__spreadArray([], headers, true), totalProjectionFields, true);
        var totalEmissionValues = [
            calculateSumEmissionView(dataToDownload, 'bau'),
            calculateSumEmissionView(dataToDownload, 'conditionalNdc'),
            calculateSumEmissionView(dataToDownload, 'unconditionalNdc')
        ];
        var combinedData = __spreadArray(__spreadArray([], flattenedData[0], true), [totalEmissionValues], false);
        var csvContent = allHeaders.map(function (header) { return "\"".concat(header, "\""); }).join(',') +
            '\n' +
            combinedData.map(function (value) { return (value === undefined || value === null) ? "" : value; }).join(',');
        return csvContent;
    };
    var downloadCSV = function (dataToDownload) {
        var csvContent = objectToCSV(dataToDownload);
        var encodedUri = encodeURI("data:text/csv;charset=utf-8,".concat(csvContent));
        var link = document.createElement('a');
        link.setAttribute('href', encodedUri);
        link.setAttribute('download', "GHG-Reporting-Projections_".concat(dataToDownload.year, "_V").concat(dataToDownload.version, ".csv"));
        document.body.appendChild(link);
        link.click();
    };
    var isRowDataEmpty = function (projectionDataObj) {
        if (projectionDataObj == undefined || projectionDataObj == null) {
            return true;
        }
        var bau = projectionDataObj === null || projectionDataObj === void 0 ? void 0 : projectionDataObj.bau;
        var conditionalNdc = projectionDataObj === null || projectionDataObj === void 0 ? void 0 : projectionDataObj.conditionalNdc;
        var unconditionalNdc = projectionDataObj === null || projectionDataObj === void 0 ? void 0 : projectionDataObj.unconditionalNdc;
        if (!bau && !conditionalNdc && !unconditionalNdc) {
            return true;
        }
        return false;
    };
    var isSectionDataEmpty = function (sectionTotalBau, sectionTotalConditionalNdc, sectionTotalUnconditionalNdc) {
        if (!sectionTotalBau && !sectionTotalConditionalNdc && !sectionTotalUnconditionalNdc) {
            return true;
        }
        return false;
    };
    var displayEmptyView = function () {
        if (!data || data.length === 0) {
            if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.GOVERNMENT && (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) !== exports.CompanyRole.MINISTRY) {
                return true;
            }
            else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly) {
                return true;
            }
        }
        return false;
    };
    var canViewForm = function () {
        if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT || (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY) {
            if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly && data.some(function (item) { return item.state === 'SAVED'; })) {
                return true;
            }
            else if ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly) {
                return true;
            }
        }
        return false;
    };
    return (React.createElement("div", null,
        React.createElement("div", { className: "content-container projection-tab-container" },
            React.createElement("div", { className: "projection-title-bar" },
                React.createElement("div", { className: "title-bar" },
                    React.createElement("div", { className: "body-title" }, t("ghgInventory:projections")),
                    React.createElement("div", { className: "body-sub-title" }, t("ghgInventory:totalNationalEmissionSubTitle")))),
            (displayEmptyView()) && (React.createElement("div", { className: "content-card empty-emission-container" },
                React.createElement(antd.Empty, { image: antd.Empty.PRESENTED_IMAGE_SIMPLE, description: React.createElement("span", null, t("ghgInventory:noProjections")) }))),
            (!displayEmptyView()) && (React.createElement("div", { className: "content-card add-projection" },
                React.createElement(antd.Tabs, { defaultActiveKey: "Add New", centered: true },
                    (canViewForm()) && (React.createElement(antd.Tabs.TabPane, { key: "Add New", tab: t("ghgInventory:addNew") },
                        React.createElement("div", null,
                            React.createElement(antd.Form, { labelCol: { span: 20 }, wrapperCol: { span: 24 }, name: "add-projection", className: "programme-details-form", layout: "vertical", requiredMark: true, form: form, onValuesChange: onValuesChange, onFinish: onOpenSaveFormModel },
                                React.createElement(antd.Row, null,
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-year-picker-col" },
                                        React.createElement("div", null,
                                            React.createElement(antd.Form.Item, { label: t("ghgInventory:year"), name: "year", rules: [
                                                    {
                                                        required: true,
                                                        message: "",
                                                    },
                                                    {
                                                        validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                            return __generator(this, function (_a) {
                                                                if (String(value).trim() === "" ||
                                                                    String(value).trim() === undefined ||
                                                                    value === null ||
                                                                    value === undefined) {
                                                                    throw new Error("".concat(t("ghgInventory:year"), " ").concat(t("isRequired")));
                                                                }
                                                                return [2 /*return*/];
                                                            });
                                                        }); },
                                                    },
                                                ] },
                                                React.createElement(antd.DatePicker, { onChange: handleYearChange, picker: "year", disabledDate: isYearDisabled, size: "large", disabled: isPendingFinalization })))),
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-upload-file-col" },
                                        React.createElement(antd.Row, { className: "add-new-upload-file-label" }, t("ghgInventory:emissionRemovalDocument")),
                                        React.createElement(antd.Row, null,
                                            React.createElement(antd.Col, { xxl: 5, xl: 6, md: 6, className: "add-new-upload-file-inner-col" },
                                                React.createElement(antd.Form.Item, { name: "emissionsDocument", valuePropName: "fileList", getValueFromEvent: normFile, required: true },
                                                    React.createElement(antd.Upload, { accept: ".xlsx", showUploadList: false, beforeUpload: function (file) {
                                                            if (!checkFile(file)) {
                                                                antd.message.open({
                                                                    type: 'error',
                                                                    content: t('ghgInventory:invalidFileType'),
                                                                    duration: 4,
                                                                    style: { textAlign: 'right', marginRight: 15, marginTop: 10 },
                                                                });
                                                                return false;
                                                            }
                                                            var reader = new FileReader();
                                                            reader.onload = function (e) {
                                                                var _a;
                                                                var xldata = (_a = e.target) === null || _a === void 0 ? void 0 : _a.result;
                                                                if (xldata) {
                                                                    try {
                                                                        var workbook = readSync(xldata, { type: 'array' });
                                                                        var sheetName = workbook.SheetNames[0];
                                                                        var sheet = workbook.Sheets[sheetName];
                                                                        var excelData = utils.sheet_to_json(sheet);
                                                                        if (!validateExcelDataFormat(sheet, excelData)) {
                                                                            antd.message.open({
                                                                                type: 'error',
                                                                                content: t('ghgInventory:invalidDataInExcel'),
                                                                                duration: 4,
                                                                                style: {
                                                                                    textAlign: 'right',
                                                                                    marginRight: 15,
                                                                                    marginTop: 10,
                                                                                },
                                                                            });
                                                                            return false;
                                                                        }
                                                                        handleFileUploadData(excelData);
                                                                        setUploadedFileName(file.name);
                                                                    }
                                                                    catch (error) {
                                                                        console.log(error, 'error', file);
                                                                    }
                                                                }
                                                            };
                                                            reader.readAsArrayBuffer(file); // Use readAsArrayBuffer for Excel files
                                                            // Prevent upload
                                                            return false;
                                                        } },
                                                        React.createElement(antd.Button, { icon: React.createElement(icons.UploadOutlined, null), disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly }, t("ghgInventory:upload"))))),
                                            React.createElement(antd.Col, { xl: 16, md: 16, className: "add-new-upload-file-name-input" },
                                                React.createElement(antd.Input, { value: uploadedFileName, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly, readOnly: true, suffix: uploadedFileName && (React.createElement(antd.Button, { onClick: clearUploadDoc, icon: React.createElement(icons.DeleteOutlined, null), style: { marginRight: '-10px', padding: '0px 6px' } })) }))))),
                                React.createElement(antd.Row, { gutter: 16 },
                                    React.createElement(antd.Col, { span: 9, offset: 12 },
                                        React.createElement(antd.Row, { gutter: 16, className: "table-heading-row" },
                                            React.createElement(antd.Col, { xl: 7, className: "table-heading-col" }, "Business As Usual (BAU)"),
                                            React.createElement(antd.Col, { xl: 7, className: "table-heading-col" }, "Conditional NDC"),
                                            React.createElement(antd.Col, { xl: 7, className: "table-heading-col" }, "Unconditional NDC")))),
                                React.createElement(antd.Row, { gutter: 16, className: "total-emission-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12 },
                                        React.createElement("span", { className: "total-emission-title" }, t("ghgInventory:totalNationalEmission"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "total-emission-value-col" },
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(totalNationalBau)) },
                                                    React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(totalNationalBau))))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(totalNationalConditionalNdc)) },
                                                    React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(totalNationalConditionalNdc))))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(totalNationalUnconditionalNdc)) },
                                                    React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(totalNationalUnconditionalNdc)))))))),
                                React.createElement(antd.Collapse, { ghost: true, expandIcon: function (_a) {
                                        var isActive = _a.isActive;
                                        return isActive ? React.createElement(icons.MinusCircleOutlined, null) : React.createElement(icons.PlusCircleOutlined, null);
                                    } }, Object.entries(formFields).map(function (_a) {
                                    var panelHeading = _a[0], panelContent = _a[1];
                                    return (React.createElement(Panel, { header: renderPanelHeader(panelHeading), key: panelHeading }, Array.isArray(panelContent)
                                        ? panelContent.map(function (item, index) {
                                            return renderPanelContent(panelHeading, item, index);
                                        })
                                        : Object.entries(panelContent).map(function (_a) {
                                            var subPanelHeading = _a[0], subPanelContent = _a[1];
                                            return (
                                            //   <Col span={12} key={subPanelHeading}>
                                            React.createElement("div", { className: "sub-panel" },
                                                React.createElement("div", { className: "sub-panel-heading" }, renderPanelHeader(subPanelHeading)),
                                                subPanelContent.map(function (item, index) {
                                                    return renderPanelContent(subPanelHeading, item, index);
                                                })));
                                        })));
                                })),
                                React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithoutLand', className: "total-co2-without-land-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-without-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithoutLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row total-co2-land-input-box-row" },
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithoutLand_bau') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithoutLand_bau", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithoutLand_bau', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithoutLand_conditionalNdc') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithoutLand_conditionalNdc", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithoutLand_conditionalNdc', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithoutLand_unconditionalNdc') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithoutLand_unconditionalNdc", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithoutLand_unconditionalNdc', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly }))))))),
                                React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithLand', className: "total-co2-with-land-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-with-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row total-co2-land-input-box-row" },
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithLand_bau') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithLand_bau", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithLand_bau', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithLand_conditionalNdc') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithLand_conditionalNdc", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithLand_conditionalNdc', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: getFieldValue('totalCo2WithLand_unconditionalNdc') },
                                                    React.createElement(antd.Form.Item, { name: "totalCo2WithLand_unconditionalNdc", rules: [
                                                            {
                                                                validator: function (rule, value) { return __awaiter(void 0, void 0, void 0, function () {
                                                                    return __generator(this, function (_a) {
                                                                        if (value && value < 0) {
                                                                            throw new Error();
                                                                        }
                                                                        return [2 /*return*/];
                                                                    });
                                                                }); },
                                                            },
                                                        ] },
                                                        React.createElement(antd.InputNumber, { onChange: function (value) { return handleTotalCo2WithoutLandEmissions('totalCo2WithLand_unconditionalNdc', value); }, disabled: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) === exports.Role.ViewOnly }))))))),
                                (((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT || (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.MINISTRY)
                                    && ((userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.userRole) !== exports.Role.ViewOnly)) &&
                                    (React.createElement("div", { className: "steps-actions" },
                                        (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.GOVERNMENT &&
                                            (React.createElement(antd.Button, { className: "finalize-btn", type: "primary", loading: loading, onClick: onOpenFinalizeFormModel }, "Finalise")),
                                        React.createElement(antd.Button, { className: "submit-btn", type: "primary", onClick: onOpenSaveFormModel, loading: loading }, "Submit"),
                                        React.createElement(antd.Button, { className: "back-btn", onClick: onOpenResetFormModel, loading: loading }, "Cancel"))))))),
                    data.map(function (tabData) {
                        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11;
                        return tabData.state === 'FINALIZED' && (React.createElement(antd.Tabs.TabPane, { className: 'view-data-panel', key: tabData.id.toString(), tab: React.createElement("span", null,
                                tabData.year,
                                tabData.state === 'FINALIZED' && React.createElement(icons.LockFilled, { style: { marginLeft: 5 } })) },
                            React.createElement("div", null,
                                React.createElement(antd.Row, null,
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-year-picker-col" },
                                        React.createElement("div", null,
                                            React.createElement(antd.Row, { className: "add-new-upload-file-label" }, "Year"),
                                            React.createElement(antd.DatePicker
                                            //   onChange={handleYearChange}
                                            , { 
                                                //   onChange={handleYearChange}
                                                picker: "year", disabledDate: isYearDisabled, defaultValue: moment(tabData.year, 'YYYY'), disabled: true, size: "large" }))),
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "add-new-upload-file-col" },
                                        React.createElement(antd.Row, { className: "add-new-upload-file-label" }, t("ghgInventory:emissionRemovalDocument")),
                                        React.createElement(antd.Row, null,
                                            React.createElement(antd.Col, { xl: 15, md: 15, className: "view-download-file-name-input" },
                                                React.createElement(antd.Input, { value: "GHG-Reporting-Projections_".concat(tabData.year, "_V").concat(tabData.version, ".csv"), disabled: true })),
                                            React.createElement(antd.Col, { xl: 5, md: 5, className: "view-download-file-inner-col" },
                                                React.createElement(antd.Button, { icon: React.createElement(icons.DownloadOutlined, null), onClick: function () { downloadCSV(tabData); } }, t("ghgInventory:download")))))),
                                React.createElement(antd.Row, { gutter: 16 },
                                    React.createElement(antd.Col, { span: 9, offset: 12 },
                                        React.createElement(antd.Row, { gutter: 16, className: "table-heading-row" },
                                            React.createElement(antd.Col, { xl: 7, className: "table-heading-col" }, "Business As Usual (BAU)"),
                                            React.createElement(antd.Col, { xl: 7, className: "table-heading-col" }, "Conditional NDC"),
                                            React.createElement(antd.Col, { xl: 7, className: "table-heading-col" }, "Unconditional NDC")))),
                                React.createElement(antd.Row, { gutter: 16, className: "total-emission-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12 },
                                        React.createElement("span", null, t("ghgInventory:totalNationalEmission"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9, className: "total-emission-value-col" },
                                        React.createElement(antd.Row, { gutter: 16 },
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(tabData, 'bau'))) },
                                                    React.createElement("div", { className: "co2-total-pill" }, addCommSep(Number(calculateSumEmissionView(tabData, 'bau')))))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(tabData, 'conditionalNdc'))) },
                                                    React.createElement("div", { className: "ch4-total-pill" }, addCommSep(Number(calculateSumEmissionView(tabData, 'conditionalNdc')))))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: addCommSep(Number(calculateSumEmissionView(tabData, 'unconditionalNdc'))) },
                                                    React.createElement("div", { className: "n2o-total-pill" }, addCommSep(Number(calculateSumEmissionView(tabData, 'unconditionalNdc'))))))))),
                                React.createElement(antd.Collapse, { ghost: true, expandIcon: function (_a) {
                                        var isActive = _a.isActive;
                                        return isActive ? React.createElement(icons.MinusCircleOutlined, null) : React.createElement(icons.PlusCircleOutlined, null);
                                    } }, Object.entries(formFields).map(function (_a) {
                                    var panelHeading = _a[0], panelContent = _a[1];
                                    var projectionsObject = tabData[panelHeading];
                                    var sectionTotalBau = calculateSumEmissionView(projectionsObject, 'bau');
                                    var sectionTotalConditionalNdc = calculateSumEmissionView(projectionsObject, 'conditionalNdc');
                                    var sectionTotalUnconditionalNdc = calculateSumEmissionView(projectionsObject, 'unconditionalNdc');
                                    if (!isSectionDataEmpty(sectionTotalBau, sectionTotalConditionalNdc, sectionTotalUnconditionalNdc)) {
                                        return (React.createElement(Panel, { header: renderPanelHeaderView(panelHeading, tabData), key: panelHeading }, Array.isArray(panelContent)
                                            ? panelContent.map(function (item, index) {
                                                for (var key in tabData) {
                                                    if (key === panelHeading) {
                                                        var emissionsObject = tabData[key];
                                                        var emissionsData = emissionsObject[item];
                                                        if (!isRowDataEmpty(emissionsData)) {
                                                            return renderPanelContentView(emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.bau, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.conditionalNdc, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.unconditionalNdc, item, index);
                                                        }
                                                    }
                                                }
                                            })
                                            : Object.entries(panelContent).map(function (_a) {
                                                var subPanelHeading = _a[0], subPanelContent = _a[1];
                                                var projectionsObject = tabData.energyEmissions[subPanelHeading];
                                                var sectionTotalBau = calculateSumEmissionView(projectionsObject, 'bau');
                                                var sectionTotalConditionalNdc = calculateSumEmissionView(projectionsObject, 'conditionalNdc');
                                                var sectionTotalUnconditionalNdc = calculateSumEmissionView(projectionsObject, 'unconditionalNdc');
                                                if (!isSectionDataEmpty(sectionTotalBau, sectionTotalConditionalNdc, sectionTotalUnconditionalNdc)) {
                                                    return (React.createElement("div", { className: "sub-panel" },
                                                        React.createElement("div", { className: "sub-panel-heading" }, renderPanelHeaderView(subPanelHeading, tabData.energyEmissions)),
                                                        subPanelContent.map(function (item, index) {
                                                            for (var key in tabData.energyEmissions[subPanelHeading]) {
                                                                if (key === item) {
                                                                    var emissionsObject = tabData.energyEmissions[subPanelHeading];
                                                                    var emissionsData = emissionsObject[item];
                                                                    if (!isRowDataEmpty(emissionsData)) {
                                                                        return renderPanelContentView(emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.bau, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.conditionalNdc, emissionsData === null || emissionsData === void 0 ? void 0 : emissionsData.unconditionalNdc, item, index);
                                                                    }
                                                                }
                                                            }
                                                        })));
                                                }
                                            })));
                                    }
                                })),
                                (!isRowDataEmpty(tabData.totalCo2WithoutLand)) && (React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithoutLand', className: "total-co2-without-land-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-without-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithoutLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row total-co2-land-input-box-row" },
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: ((_a = tabData.totalCo2WithoutLand) === null || _a === void 0 ? void 0 : _a.bau)
                                                        ? addCommSep(Number((_b = tabData.totalCo2WithoutLand) === null || _b === void 0 ? void 0 : _b.bau))
                                                        : (_c = tabData.totalCo2WithoutLand) === null || _c === void 0 ? void 0 : _c.bau },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_d = tabData.totalCo2WithoutLand) === null || _d === void 0 ? void 0 : _d.bau)
                                                                ? addCommSep(Number((_e = tabData.totalCo2WithoutLand) === null || _e === void 0 ? void 0 : _e.bau))
                                                                : (_f = tabData.totalCo2WithoutLand) === null || _f === void 0 ? void 0 : _f.bau, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: ((_g = tabData.totalCo2WithoutLand) === null || _g === void 0 ? void 0 : _g.conditionalNdc)
                                                        ? addCommSep(Number((_h = tabData.totalCo2WithoutLand) === null || _h === void 0 ? void 0 : _h.conditionalNdc))
                                                        : (_j = tabData.totalCo2WithoutLand) === null || _j === void 0 ? void 0 : _j.conditionalNdc },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_k = tabData.totalCo2WithoutLand) === null || _k === void 0 ? void 0 : _k.conditionalNdc)
                                                                ? addCommSep(Number((_l = tabData.totalCo2WithoutLand) === null || _l === void 0 ? void 0 : _l.conditionalNdc))
                                                                : (_m = tabData.totalCo2WithoutLand) === null || _m === void 0 ? void 0 : _m.conditionalNdc, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: ((_o = tabData.totalCo2WithoutLand) === null || _o === void 0 ? void 0 : _o.unconditionalNdc)
                                                        ? addCommSep(Number((_p = tabData.totalCo2WithoutLand) === null || _p === void 0 ? void 0 : _p.unconditionalNdc))
                                                        : (_q = tabData.totalCo2WithoutLand) === null || _q === void 0 ? void 0 : _q.unconditionalNdc },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_r = tabData.totalCo2WithoutLand) === null || _r === void 0 ? void 0 : _r.unconditionalNdc)
                                                                ? addCommSep(Number((_s = tabData.totalCo2WithoutLand) === null || _s === void 0 ? void 0 : _s.unconditionalNdc))
                                                                : (_t = tabData.totalCo2WithoutLand) === null || _t === void 0 ? void 0 : _t.unconditionalNdc, disabled: true })))))))),
                                (!isRowDataEmpty(tabData.totalCo2WithLand)) && (React.createElement(antd.Row, { gutter: 16, key: 'totalCo2WithLand', className: "total-co2-with-land-row total-co2-land-input-box-row" },
                                    React.createElement(antd.Col, { xl: 12, md: 12, className: "total-co2-with-land-title" },
                                        React.createElement("span", null, t("ghgInventory:totalCo2WithLand"))),
                                    React.createElement(antd.Col, { xl: 9, md: 9 },
                                        React.createElement(antd.Row, { gutter: 16, className: "panel-content-input-box-row" },
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: ((_u = tabData.totalCo2WithLand) === null || _u === void 0 ? void 0 : _u.bau)
                                                        ? addCommSep(Number((_v = tabData.totalCo2WithLand) === null || _v === void 0 ? void 0 : _v.bau))
                                                        : (_w = tabData.totalCo2WithLand) === null || _w === void 0 ? void 0 : _w.bau },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_x = tabData.totalCo2WithLand) === null || _x === void 0 ? void 0 : _x.bau)
                                                                ? addCommSep(Number((_y = tabData.totalCo2WithLand) === null || _y === void 0 ? void 0 : _y.bau))
                                                                : (_z = tabData.totalCo2WithLand) === null || _z === void 0 ? void 0 : _z.bau, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: ((_0 = tabData.totalCo2WithLand) === null || _0 === void 0 ? void 0 : _0.conditionalNdc)
                                                        ? addCommSep(Number((_1 = tabData.totalCo2WithLand) === null || _1 === void 0 ? void 0 : _1.conditionalNdc))
                                                        : (_2 = tabData.totalCo2WithLand) === null || _2 === void 0 ? void 0 : _2.conditionalNdc },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_3 = tabData.totalCo2WithLand) === null || _3 === void 0 ? void 0 : _3.conditionalNdc)
                                                                ? addCommSep(Number((_4 = tabData.totalCo2WithLand) === null || _4 === void 0 ? void 0 : _4.conditionalNdc))
                                                                : (_5 = tabData.totalCo2WithLand) === null || _5 === void 0 ? void 0 : _5.conditionalNdc, disabled: true })))),
                                            React.createElement(antd.Col, { xl: 7 },
                                                React.createElement(antd.Tooltip, { title: ((_6 = tabData.totalCo2WithLand) === null || _6 === void 0 ? void 0 : _6.unconditionalNdc)
                                                        ? addCommSep(Number((_7 = tabData.totalCo2WithLand) === null || _7 === void 0 ? void 0 : _7.unconditionalNdc))
                                                        : (_8 = tabData.totalCo2WithLand) === null || _8 === void 0 ? void 0 : _8.unconditionalNdc },
                                                    React.createElement("div", null,
                                                        React.createElement(antd.InputNumber, { value: ((_9 = tabData.totalCo2WithLand) === null || _9 === void 0 ? void 0 : _9.unconditionalNdc)
                                                                ? addCommSep(Number((_10 = tabData.totalCo2WithLand) === null || _10 === void 0 ? void 0 : _10.unconditionalNdc))
                                                                : (_11 = tabData.totalCo2WithLand) === null || _11 === void 0 ? void 0 : _11.unconditionalNdc, disabled: true })))))))))));
                    }))))),
        React.createElement(GHGUserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onSubmitForm, onActionCanceled: onSaveFormCanceled, openModal: openSaveFormModal, errorMsg: errorMsg, loading: loading }),
        React.createElement(GHGUserActionConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: onSubmitForm, onActionCanceled: onFinalizeFormCanceled, openModal: openFinalizeFormModal, errorMsg: errorMsg, loading: loading }),
        React.createElement(DiscardChangesConfirmationModel, { t: t, actionInfo: actionInfo, onActionConfirmed: resetForm, onActionCanceled: onResetFormCanceled, openModal: openResetFormModal, errorMsg: errorMsg, loading: loading })));
};

var css_248z = ".mapboxgl-popup-content {\n  background-color: #ffffff !important;\n  color: rgba(58, 53, 65, 0.8) !important; }\n\n.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip {\n  border-top-color: #ffffff !important; }\n\n.mapboxgl-popup-close-button,\n.mapboxgl-popup-close-button:hover {\n  display: none; }\n\n.total-container {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray; }\n\n.annual-report {\n  display: flex;\n  margin-top: 30px;\n  margin-left: 22px; }\n\n.ant-btn.annual-report-downloadbutton {\n  border-radius: 0px 5px 5px 0px !important; }\n\n.ant-btn.annual-report-dropdownbutton {\n  margin-left: 20px;\n  border-radius: 5px 0px 0px 0px !important; }\n\n.margin-top-6 {\n  margin-top: 7.5rem; }\n\n.margin-top-2 {\n  margin-top: 2rem; }\n\n.margin-top-1 {\n  margin-top: 1rem; }\n\n.ant-btn.ghg-primary {\n  border-radius: 0px 5px 5px 0px !important; }\n\n.ant-btn.ghg-default {\n  border-radius: 5px 0px 0px 5px !important; }\n\n.ant-btn.mid-default-btn {\n  border-radius: 0px 0px 0px 0px !important; }\n\n.cards-title {\n  font-family: \"Inter\";\n  align-items: flex-start;\n  justify-content: flex-start;\n  font-style: normal;\n  font-weight: 600;\n  height: 50px;\n  font-size: 1.15rem;\n  margin-top: 1rem;\n  color: rgba(58, 53, 65, 0.8); }\n\n.ghg-dashboard-main-container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  padding: 0 2rem 0 2rem; }\n  .ghg-dashboard-main-container .header-and-title {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    padding: 0 15px 0 15px;\n    font-family: \"Inter-Regular\";\n    font-size: 1.4rem;\n    font-weight: 600; }\n  .ghg-dashboard-main-container .stastics-cards-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: center; }\n    .ghg-dashboard-main-container .stastics-cards-container .stastic-card-row {\n      width: 100%; }\n      .ghg-dashboard-main-container .stastics-cards-container .stastic-card-row .stastic-card-col {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center; }\n  .ghg-dashboard-main-container .filter-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 2rem;\n    padding: 0 1.2rem 0 1.2rem; }\n    .ghg-dashboard-main-container .filter-container .radio-selection .ant-radio-button-wrapper {\n      height: 35px !important;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      color: rgba(58, 53, 65, 0.5); }\n    .ghg-dashboard-main-container .filter-container .radio-selection .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled)::before {\n      background-color: transparent !important; }\n    .ghg-dashboard-main-container .filter-container .radio-selection .overall {\n      border-radius: 5px 0 0 5px !important; }\n    .ghg-dashboard-main-container .filter-container .radio-selection .mine {\n      border-radius: 0 5px 5px 0 !important; }\n  .ghg-dashboard-main-container .center {\n    align-items: center;\n    justify-content: center; }\n  .ghg-dashboard-main-container .height-pie-rem {\n    height: 26.2rem; }\n    .ghg-dashboard-main-container .height-pie-rem .apexcharts-legend {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between !important; }\n    .ghg-dashboard-main-container .height-pie-rem .apexcharts-legend-series {\n      display: flex !important;\n      width: 38%; }\n  .ghg-dashboard-main-container .apx-legend-position-bottom {\n    height: 35px !important; }\n  .ghg-dashboard-main-container .height-bar-rem {\n    height: 29rem; }\n  .ghg-dashboard-main-container .height-map-rem {\n    height: 510px; }\n  .ghg-dashboard-main-container .statics-and-charts-container {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    margin-top: 2rem;\n    margin-bottom: 2rem; }\n    .ghg-dashboard-main-container .statics-and-charts-container .ant-picker-cell-in-view.ant-picker-cell-selected .ant-picker-cell-inner {\n      width: 65px !important;\n      height: 32px !important;\n      text-align: center !important;\n      border-radius: 50px !important;\n      background: #008f39 !important;\n      line-height: 30px !important; }\n    .ghg-dashboard-main-container .statics-and-charts-container .ant-picker-cell-in-view.ant-picker-cell-range-end .ant-picker-cell-inner {\n      width: 65px !important;\n      height: 32px !important;\n      text-align: center !important;\n      border-radius: 50px !important;\n      background: #008f39 !important;\n      line-height: 30px !important; }\n    .ghg-dashboard-main-container .statics-and-charts-container .ant-picker-cell-disabled::before {\n      width: 65px !important;\n      height: 32px !important;\n      text-align: center !important;\n      border-radius: 50px !important;\n      line-height: 30px !important; }\n    .ghg-dashboard-main-container .statics-and-charts-container .ant-picker-cell::before {\n      left: 11px; }\n    .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row {\n      width: 100%; }\n      .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card {\n        display: flex;\n        flex-direction: column;\n        background-color: #ffffff;\n        border-radius: 10px;\n        padding: 0 1rem 0.7rem 1rem;\n        width: 100%; }\n        .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .margin-top-2 {\n          width: 100%;\n          margin-top: 2rem; }\n        .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .title-section {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-end;\n          justify-content: space-between;\n          width: 100%;\n          padding: 1rem 1rem 0 1rem; }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .title-section .title {\n            font-family: \"Inter\";\n            font-style: normal;\n            font-weight: 600;\n            width: 90%;\n            font-size: 1.15rem;\n            color: rgba(58, 53, 65, 0.8); }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .title-section .info-container {\n            display: flex;\n            flex-direction: row;\n            width: 10%;\n            height: 30px;\n            align-items: center;\n            justify-content: flex-end; }\n        .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .total-programme-details {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-between;\n          height: 150px;\n          margin-top: -0.5rem; }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .total-programme-details .details {\n            display: flex;\n            flex-direction: column;\n            width: 70%;\n            padding: 0 1rem 0 0.8rem; }\n            .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .total-programme-details .details .detail {\n              font-family: \"Inter\";\n              font-style: normal;\n              font-weight: 400;\n              font-size: 0.875rem;\n              line-height: 1.375rem;\n              padding-left: 0.125rem;\n              color: rgba(58, 53, 65, 0.8);\n              margin-bottom: 0.5rem; }\n            .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .total-programme-details .details .value {\n              font-family: \"Inter\";\n              font-style: normal;\n              font-weight: 600;\n              font-size: 1.6rem;\n              line-height: 22px;\n              padding-left: 0.125rem;\n              padding: 0;\n              color: #008f39; }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .total-programme-details .icon {\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n            width: 30%; }\n            .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .total-programme-details .icon img {\n              height: 80px; }\n        .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .stage-legends {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          margin-top: 1rem; }\n        .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .updated-on {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-end;\n          justify-content: flex-start;\n          padding: 0 1rem 0 0.8rem;\n          height: 50px; }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .updated-on .updated-moment-container {\n            display: flex;\n            flex-direction: row;\n            font-size: 0.75rem;\n            border-radius: 3.125rem;\n            padding: 0.05rem 0.8rem 0.05rem 0.8rem;\n            color: #008f39;\n            background-color: rgba(185, 226, 244, 0.4); }\n        .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .charts-top {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n          padding: 0 1rem 0 1rem; }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .charts-top .charts-title {\n            display: flex;\n            flex-direction: row;\n            font-family: \"Inter\";\n            align-items: flex-start;\n            justify-content: flex-start;\n            font-style: normal;\n            font-weight: 700;\n            height: 50px;\n            font-size: 18px;\n            margin-top: 1rem;\n            color: rgba(58, 53, 65, 0.8); }\n            .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .charts-top .charts-title .unit {\n              display: flex;\n              margin: 0 0 0 0.5rem;\n              font-family: \"Inter\";\n              font-size: 1.15rem;\n              font-weight: 500;\n              color: rgba(58, 53, 65, 0.5); }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .charts-top .info-container {\n            display: flex;\n            flex-direction: row;\n            align-items: center; }\n        .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .charts-section {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 100%; }\n          .ghg-dashboard-main-container .statics-and-charts-container .statics-card-row .statics-card-col .statics-card .charts-section chart {\n            width: 1000px !important; }\n  .ghg-dashboard-main-container .actual-estimate-btn-grp {\n    padding-right: 30px;\n    font-size: 13px;\n    font-weight: 600;\n    text-align: center;\n    color: #3A354180; }\n    .ghg-dashboard-main-container .actual-estimate-btn-grp .ant-btn-default {\n      width: 90px;\n      color: #3A354180;\n      border: 1px solid #3A354180; }\n    .ghg-dashboard-main-container .actual-estimate-btn-grp .ant-btn-primary {\n      width: 90px; }\n    .ghg-dashboard-main-container .actual-estimate-btn-grp .ant-btn span {\n      text-transform: none; }\n    .ghg-dashboard-main-container .actual-estimate-btn-grp .ant-radio-button-wrapper {\n      border: 1px solid #3A354180 !important;\n      color: #3A354180 !important;\n      width: 90px !important; }\n    .ghg-dashboard-main-container .actual-estimate-btn-grp .ant-radio-button-wrapper-checked {\n      background-color: #008f39 !important;\n      color: #ffffff !important; }\n    .ghg-dashboard-main-container .actual-estimate-btn-grp .actual-btn {\n      border-radius: 4px 0 0 4px !important; }\n    .ghg-dashboard-main-container .actual-estimate-btn-grp .estimate-btn {\n      border-radius: 0 4px 4px 0 !important; }\n  .ghg-dashboard-main-container .statics-card:hover {\n    box-shadow: rgba(0, 5, 18, 0.2) 0px 8px 24px; }\n  .ghg-dashboard-main-container .stastics-charts-container-total-programmes {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 60px 10px 25px 15px; }\n    .ghg-dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .ghg-dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .ghg-dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .ghg-dashboard-main-container .stastics-charts-container-total-programmes .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .ghg-dashboard-main-container .stastics-charts-container-certified-programmes {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 5px 10px 25px 15px; }\n    .ghg-dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .ghg-dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .ghg-dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .ghg-dashboard-main-container .stastics-charts-container-certified-programmes .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .ghg-dashboard-main-container .stastics-pie-charts-container {\n    display: flex;\n    flex-direction: row;\n    width: 98%;\n    margin: 5px 10px 25px 15px; }\n    .ghg-dashboard-main-container .stastics-pie-charts-container .stastic-charts-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .ghg-dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n        .ghg-dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col .chart-card {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          height: 400px;\n          background: #f6f6f6;\n          box-shadow: rgba(106, 106, 106, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n        .ghg-dashboard-main-container .stastics-pie-charts-container .stastic-charts-row .stastic-charts-col .chart-card:hover {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n          background: #f1f1f1;\n          box-shadow: rgba(124, 124, 124, 0.2) 0px 8px 24px;\n          border-radius: 10px;\n          padding: 10px 10px 10px 10px; }\n  .ghg-dashboard-main-container .maps-container {\n    display: flex;\n    flex-direction: row;\n    border-radius: 10px;\n    margin: 25px 20px 25px 15px;\n    height: auto; }\n    .ghg-dashboard-main-container .maps-container .maps-container-row {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      width: 100%; }\n      .ghg-dashboard-main-container .maps-container .maps-container-row .maps-container-col {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        width: 100%; }\n";
styleInject(css_248z);

var BarChartEstimatedActualStatComponent = function (props) {
    var id = props.id, title = props.title, estimateOptions = props.estimateOptions, actualOptions = props.actualOptions, estimatedSeries = props.estimatedSeries, actualSeries = props.actualSeries, lastUpdateEstimate = props.lastUpdateEstimate, lastUpdateActual = props.lastUpdateActual, loading = props.loading, toolTipText = props.toolTipText, Chart = props.Chart, width = props.width;
    var _a = React.useState(false), showEstimate = _a[0], setShowEstimate = _a[1];
    var _b = React.useState(true), showActuals = _b[0], setShowActuals = _b[1];
    var handleEstimatesClick = function () {
        setShowEstimate(true);
        setShowActuals(false);
    };
    var handleActualsClick = function () {
        setShowEstimate(false);
        setShowActuals(true);
    };
    return (React.createElement("div", { className: "statics-card height-bar-rem" },
        React.createElement("div", { className: "charts-top" },
            React.createElement("div", { className: "charts-title" }, title),
            React.createElement("div", { className: "info-container" },
                React.createElement("div", { className: "actual-estimate-btn-grp" },
                    React.createElement(antd.Button.Group, null,
                        React.createElement(antd.Button, { className: "actual-btn", type: showActuals ? 'primary' : 'default', onClick: handleActualsClick }, "Actual"),
                        React.createElement(antd.Button, { className: "estimate-btn", type: showEstimate ? 'primary' : 'default', onClick: handleEstimatesClick }, "Estimates"))),
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
        loading ? (React.createElement("div", { className: "margin-top-2" },
            React.createElement(antd.Skeleton, { active: true }),
            React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
            (showActuals && actualSeries) && (React.createElement(React.Fragment, null,
                React.createElement("div", { className: "charts-section" },
                    React.createElement(Chart, { id: id, options: actualOptions, series: actualSeries, type: "bar", height: "350px", width: width })),
                React.createElement("div", { className: "updated-on" }, lastUpdateActual !== '0' && (React.createElement("div", { className: "updated-moment-container" }, lastUpdateActual))))),
            (showEstimate && estimatedSeries) && (React.createElement(React.Fragment, null,
                React.createElement("div", { className: "charts-section" },
                    React.createElement(Chart, { id: id, options: estimateOptions, series: estimatedSeries, type: "bar", height: "350px", width: width })),
                React.createElement("div", { className: "updated-on" }, lastUpdateEstimate !== '0' && (React.createElement("div", { className: "updated-moment-container" }, lastUpdateEstimate)))))))));
};

var BarChartsStatComponent = function (props) {
    var id = props.id, title = props.title, options = props.options, series = props.series, lastUpdate = props.lastUpdate, loading = props.loading, toolTipText = props.toolTipText, Chart = props.Chart, width = props.width;
    return (React.createElement("div", { className: "statics-card height-bar-rem" },
        React.createElement("div", { className: "charts-top" },
            React.createElement("div", { className: "charts-title" }, title),
            React.createElement("div", { className: "info-container" },
                React.createElement(antd.Tooltip, { arrowPointAtCenter: true, placement: "bottomRight", trigger: "hover", title: toolTipText },
                    React.createElement(Icon.InfoCircle, { color: "#000000", size: 17 })))),
        loading ? (React.createElement("div", { className: "margin-top-2" },
            React.createElement(antd.Skeleton, { active: true }),
            React.createElement(antd.Skeleton, { active: true }))) : (React.createElement(React.Fragment, null,
            React.createElement("div", { className: "charts-section" },
                React.createElement(Chart, { id: id, options: options, series: series, type: "bar", height: "350px", width: width })),
            React.createElement("div", { className: "updated-on" }, lastUpdate !== '0' && React.createElement("div", { className: "updated-moment-container" }, lastUpdate))))));
};

var addCommSepRound = function (value) {
    return Number(value)
        .toFixed(2)
        .replace('.00', '')
        .replace(/\B(?=(\d{3})+(?!\d))/g, ',');
};
var totalEmissionOptionsSub = function (labels, chartColors) {
    return {
        states: {
            normal: {
                filter: {
                    type: 'none',
                    value: 0,
                },
            },
            hover: {
                filter: {
                    type: 'none',
                    value: 0,
                },
            },
            active: {
                allowMultipleDataPointsSelection: true,
                filter: {
                    type: 'darken',
                    value: 0.7,
                },
            },
        },
        dataLabels: {
            enabled: false,
        },
        chart: {
            type: 'bar',
            height: 400,
            // eslint-disable-next-line prettier/prettier
            width: "100%",
            stacked: true,
            stackType: 'normal',
            toolbar: {
                show: false, // Hides the toolbar which includes the menu icon
            },
        },
        // plotOptions: { bar: { horizontal: false, columnWidth: '100%' } },
        responsive: [
            {
                breakpoint: 480,
                options: {
                    legend: {
                        position: 'bottom',
                        offsetX: -10,
                        offsetY: 0,
                    },
                },
            },
        ],
        xaxis: {
            title: {
                text: 'Time',
                style: {
                    color: '#263238',
                    fontSize: '12px',
                    fontFamily: 'Inter',
                    fontWeight: 500,
                    cssClass: 'apexcharts-yaxis-title',
                },
            },
            categories: labels,
            labels: {
                rotatealways: true,
            },
            axisBorder: {
                show: true,
                color: '#3A354180',
            },
        },
        yaxis: {
            show: true,
            title: {
                text: "tCO\u2082-eq",
                rotate: -90,
                offsetX: 0,
                offsetY: 0,
                style: {
                    color: '#263238',
                    fontSize: '12px',
                    fontFamily: 'Inter',
                    fontWeight: 500,
                    cssClass: 'apexcharts-yaxis-title',
                },
            },
            labels: {
                formatter: function (value) {
                    return addCommSepRound(value);
                },
            },
            axisBorder: {
                show: true,
                color: '#3A354180',
            },
        },
        fill: {
            opacity: 1,
            colors: chartColors,
        },
        title: {
            text: '',
            align: 'left',
            margin: 10,
            offsetX: 0,
            offsetY: 0,
            floating: false,
            style: {
                fontSize: '16px',
                fontWeight: 'bold',
                fontFamily: 'Inter',
                color: '#263238',
            },
        },
        legend: {
            show: true,
            showForSingleSeries: false,
            showForNullSeries: false,
            showForZeroSeries: false,
            position: 'bottom',
            horizontalAlign: 'center',
            floating: false,
            fontSize: '14px',
            fontFamily: 'Inter',
            fontWeight: 400,
            formatter: undefined,
            inverseOrder: false,
            width: undefined,
            height: 30,
            tooltipHoverFormatter: undefined,
            customLegendItems: [],
            offsetX: 0,
            offsetY: 5,
            labels: {
                colors: chartColors,
                useSeriesColors: false,
            },
            markers: {
                width: 12,
                height: 12,
                strokeWidth: 0,
                strokeColor: '#fff',
                fillColors: chartColors,
                radius: 12,
                customHTML: undefined,
                onClick: undefined,
                offsetX: 0,
                offsetY: 0,
            },
            itemMargin: {
                horizontal: 5,
                vertical: 0,
            },
            onItemClick: {
                toggleDataSeries: true,
            },
            onItemHover: {
                highlightDataSeries: true,
            },
        },
    };
};
var actualVsEstimateOptionsSub = function (labels, chartColors) {
    return {
        states: {
            normal: {
                filter: {
                    type: 'none',
                    value: 0,
                },
            },
            hover: {
                filter: {
                    type: 'none',
                    value: 0,
                },
            },
            active: {
                allowMultipleDataPointsSelection: true,
                filter: {
                    type: 'darken',
                    value: 0.7,
                },
            },
        },
        dataLabels: {
            enabled: false,
        },
        chart: {
            type: 'bar',
            height: 400,
            width: '100%',
            stacked: true,
            stackType: 'normal',
            toolbar: {
                show: false, // Hides the toolbar which includes the menu icon
            },
        },
        responsive: [
            {
                breakpoint: 480,
                options: {
                    legend: {
                        position: 'bottom',
                        offsetX: -10,
                        offsetY: 0,
                    },
                },
            },
        ],
        xaxis: {
            title: {
                text: 'Sub Sector',
                style: {
                    color: '#263238',
                    fontSize: '12px',
                    fontFamily: 'Inter',
                    fontWeight: 500,
                    cssClass: 'apexcharts-yaxis-title',
                },
            },
            categories: labels,
            labels: {
                rotate: -0,
                rotateAlways: false,
                style: {
                    colors: [],
                    fontSize: '8px',
                    fontFamily: 'Helvetica, Arial, sans-serif',
                    fontWeight: 400,
                    cssClass: 'apexcharts-xaxis-label',
                    whiteSpace: 'normal',
                },
            },
            axisBorder: {
                show: true,
                color: '#3A354180',
            },
        },
        yaxis: {
            show: true,
            title: {
                text: 'Percentage',
                rotate: -90,
                offsetX: 0,
                offsetY: 0,
                style: {
                    color: '#263238',
                    fontSize: '12px',
                    fontFamily: 'Inter',
                    fontWeight: 500,
                    cssClass: 'apexcharts-yaxis-title',
                },
            },
            labels: {
                formatter: function (value) {
                    return addCommSepRound(value);
                },
            },
            axisBorder: {
                show: true,
                color: '#3A354180',
            },
        },
        fill: {
            opacity: 1,
            colors: chartColors,
        },
        title: {
            text: '',
            align: 'left',
            margin: 10,
            offsetX: 0,
            offsetY: 0,
            floating: false,
            style: {
                fontSize: '16px',
                fontWeight: 'bold',
                fontFamily: 'Inter',
                color: '#263238',
            },
        },
        legend: {
            show: false,
        },
    };
};
var emissionComparisonOptionsSub = function (labels, chartColors) {
    return {
        states: {
            normal: {
                filter: {
                    type: 'none',
                    value: 0,
                },
            },
            hover: {
                filter: {
                    type: 'none',
                    value: 0,
                },
            },
            active: {
                allowMultipleDataPointsSelection: true,
                filter: {
                    type: 'darken',
                    value: 0.7,
                },
            },
        },
        dataLabels: {
            enabled: false,
        },
        chart: {
            type: 'line',
            height: 400,
            // eslint-disable-next-line prettier/prettier
            width: "100%",
            stacked: false,
            toolbar: {
                show: false, // Hides the toolbar which includes the menu icon
            },
        },
        stroke: {
            width: [0, 0, 0, 2],
            curve: 'stepline',
            lineCap: 'square',
            colors: ['#008f39'],
        },
        responsive: [
            {
                breakpoint: 480,
                options: {
                    legend: {
                        position: 'bottom',
                        offsetX: -10,
                        offsetY: 0,
                    },
                },
            },
        ],
        xaxis: {
            title: {
                text: 'Year',
                style: {
                    color: '#263238',
                    fontSize: '12px',
                    fontFamily: 'Inter',
                    fontWeight: 500,
                    cssClass: 'apexcharts-yaxis-title',
                },
            },
            categories: labels,
            labels: {
                rotatealways: true,
            },
            axisBorder: {
                show: true,
                color: '#3A354180',
            },
        },
        yaxis: {
            show: true,
            title: {
                text: 'Percentage',
                rotate: -90,
                offsetX: 0,
                offsetY: 0,
                style: {
                    color: '#263238',
                    fontSize: '12px',
                    fontFamily: 'Inter',
                    fontWeight: 500,
                    cssClass: 'apexcharts-yaxis-title',
                },
            },
            labels: {
                formatter: function (value) {
                    return addCommSepRound(value);
                },
            },
            axisBorder: {
                show: true,
                color: '#3A354180',
            },
        },
        fill: {
            opacity: 1,
            colors: chartColors,
        },
        title: {
            text: '',
            align: 'left',
            margin: 10,
            offsetX: 0,
            offsetY: 0,
            floating: false,
            style: {
                fontSize: '16px',
                fontWeight: 'bold',
                fontFamily: 'Inter',
                color: '#263238',
            },
        },
        legend: {
            show: true,
            showForSingleSeries: false,
            showForNullSeries: false,
            showForZeroSeries: false,
            position: 'bottom',
            horizontalAlign: 'center',
            floating: false,
            fontSize: '14px',
            fontFamily: 'Inter',
            fontWeight: 400,
            formatter: undefined,
            inverseOrder: false,
            width: undefined,
            height: undefined,
            tooltipHoverFormatter: undefined,
            customLegendItems: [],
            offsetX: 0,
            offsetY: 5,
            labels: {
                colors: chartColors,
                useSeriesColors: false,
            },
            markers: {
                width: [12, 12, 12, 33],
                height: [12, 12, 12, 2],
                strokeWidth: 0,
                strokeColor: '#fff',
                fillColors: __spreadArray(__spreadArray([], chartColors, true), ['#008f39'], false),
                radius: 12,
                customHTML: undefined,
                onClick: undefined,
                offsetX: 0,
                offsetY: 0,
            },
            itemMargin: {
                horizontal: 20,
                vertical: 0,
            },
            onItemClick: {
                toggleDataSeries: true,
            },
            onItemHover: {
                highlightDataSeries: true,
            },
        },
    };
};

var RangePicker = antd.DatePicker.RangePicker;
var GHGDashboardComponent = function (props) {
    var t = props.t, Chart = props.Chart, ButtonGroup = props.ButtonGroup, Link = props.Link, isMultipleDashboardsVisible = props.isMultipleDashboardsVisible;
    var _a = useConnection(); _a.get; var post = _a.post; _a.delete;
    var userInfoState = useUserContext().userInfoState;
    var _b = React.useState(moment().year()), endYear = _b[0], setEndYear = _b[1];
    var _c = React.useState(moment().subtract('10', 'years').year()), startYear = _c[0], setStartYear = _c[1];
    var _e = React.useState(false), loadingCharts = _e[0], setLoadingCharts = _e[1];
    var _f = React.useState({}), data = _f[0], setData = _f[1];
    var _g = React.useState({}), estimateData = _g[0], setEstimateData = _g[1];
    var _h = React.useState({}), actualData = _h[0], setActualData = _h[1];
    var _j = React.useState(window.innerWidth), screenWidth = _j[0], setScreenWidth = _j[1];
    var colors = ['#008f39', '#FF8183', '#7FEABF', '#FFB480', '#D8D8D8'];
    var colorsComparison = ['#7FEABF', '#FF8183', '#008f39'];
    var layout = [
        [exports.GhgStatCardTypes.AGG_EMISSIONS_BY_SECTOR, exports.GhgStatCardTypes.AGG_EMISSIONS_BY_GAS],
        [exports.GhgStatCardTypes.AGG_EMISSIONS_MITIGATION_POTENTIAL_BY_SECTOR],
        [exports.GhgStatCardTypes.AGG_REDUCTION_PERCENT_BAU_BY_SECTOR],
        [exports.GhgStatCardTypes.AGG_EMISSIONS_COMPARISON],
    ];
    var handleResize = function () {
        setScreenWidth(window.innerWidth);
    };
    React.useEffect(function () {
        // Event listener for window resize
        window.addEventListener('resize', handleResize);
        // Clean up the event listener on component unmount
        return function () {
            window.removeEventListener('resize', handleResize);
        };
    }, []);
    var onChangeRange = function (dateMoment, dateString) { return __awaiter(void 0, void 0, void 0, function () {
        var _a, _b;
        return __generator(this, function (_c) {
            try {
                if (!dateMoment) {
                    setStartYear(0);
                    setEndYear(0);
                }
                if (dateMoment !== null && dateMoment[1] !== null) {
                    setStartYear(moment((_a = dateMoment[0]) === null || _a === void 0 ? void 0 : _a._d).year());
                    setEndYear(moment((_b = dateMoment[1]) === null || _b === void 0 ? void 0 : _b._d).year());
                }
                else {
                    setStartYear(0);
                    setEndYear(0);
                }
            }
            catch (e) {
                setStartYear(0);
                setEndYear(0);
            }
            return [2 /*return*/];
        });
    }); };
    React.useEffect(function () {
        getData();
    }, [startYear, endYear]);
    var parseEmissionSectorData = function (statData) {
        var emissionSectorSeriesData = [];
        var sectorsArray = Object.keys(exports.EmissionSector);
        var emissionsAggBySector = statData === null || statData === void 0 ? void 0 : statData.data;
        sectorsArray === null || sectorsArray === void 0 ? void 0 : sectorsArray.map(function (sector) {
            if (emissionsAggBySector[sector] !== undefined) {
                emissionSectorSeriesData.push({
                    name: exports.EmissionSector[sector],
                    data: emissionsAggBySector[sector],
                });
            }
        });
        return [emissionSectorSeriesData, emissionsAggBySector.xLabels];
    };
    var parseEmissionGasData = function (statData) {
        var emissionGasSeriesData = [];
        var gasesArray = Object.keys(exports.EmissionGas);
        var emissionsAggByGas = statData === null || statData === void 0 ? void 0 : statData.data;
        gasesArray === null || gasesArray === void 0 ? void 0 : gasesArray.map(function (gas) {
            if (emissionsAggByGas[gas] !== undefined) {
                emissionGasSeriesData.push({
                    name: exports.EmissionGas[gas],
                    data: emissionsAggByGas[gas],
                });
            }
        });
        return [emissionGasSeriesData, emissionsAggByGas.xLabels];
    };
    var parseEmissionMitigationSectorData = function (statData) {
        var emissionSectorSeriesData = [];
        var sectorsArray = Object.keys(exports.EmissionSector);
        var emissionsAggBySector = statData === null || statData === void 0 ? void 0 : statData.data;
        sectorsArray === null || sectorsArray === void 0 ? void 0 : sectorsArray.map(function (sector) {
            if (emissionsAggBySector[sector] !== undefined) {
                emissionSectorSeriesData.push({
                    name: exports.EmissionSector[sector],
                    data: emissionsAggBySector[sector],
                });
            }
        });
        return [emissionSectorSeriesData, emissionsAggBySector.xLabels];
    };
    var parseEstimateAndActualEmissionSubSectorData = function (statData) {
        var _a, _b, _c, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;
        var estimatedEmissionSubSectorSeriesData = [];
        var actualEmissionSubSectorSeriesData = [];
        var subSectorsArray = Object.keys(exports.EmissionSubSectors);
        var estimateEmissionsAggBySubSector = (_b = (_a = statData === null || statData === void 0 ? void 0 : statData.data) === null || _a === void 0 ? void 0 : _a.estimate) === null || _b === void 0 ? void 0 : _b.data;
        var actualEmissionsAggBySubSector = (_e = (_c = statData === null || statData === void 0 ? void 0 : statData.data) === null || _c === void 0 ? void 0 : _c.actual) === null || _e === void 0 ? void 0 : _e.data;
        var estimateLastUpdateTime = !((_g = (_f = statData === null || statData === void 0 ? void 0 : statData.data) === null || _f === void 0 ? void 0 : _f.estimate) === null || _g === void 0 ? void 0 : _g.last) ||
            ((_j = (_h = statData === null || statData === void 0 ? void 0 : statData.data) === null || _h === void 0 ? void 0 : _h.estimate) === null || _j === void 0 ? void 0 : _j.last) === '0' ||
            ((_l = (_k = statData === null || statData === void 0 ? void 0 : statData.data) === null || _k === void 0 ? void 0 : _k.estimate) === null || _l === void 0 ? void 0 : _l.last) === 0
            ? '0'
            : moment(parseInt((_o = (_m = statData === null || statData === void 0 ? void 0 : statData.data) === null || _m === void 0 ? void 0 : _m.estimate) === null || _o === void 0 ? void 0 : _o.last)).fromNow();
        var actualLastUpdateTime = !((_q = (_p = statData === null || statData === void 0 ? void 0 : statData.data) === null || _p === void 0 ? void 0 : _p.actual) === null || _q === void 0 ? void 0 : _q.last) ||
            ((_s = (_r = statData === null || statData === void 0 ? void 0 : statData.data) === null || _r === void 0 ? void 0 : _r.actual) === null || _s === void 0 ? void 0 : _s.last) === '0' ||
            ((_u = (_t = statData === null || statData === void 0 ? void 0 : statData.data) === null || _t === void 0 ? void 0 : _t.actual) === null || _u === void 0 ? void 0 : _u.last) === 0
            ? '0'
            : moment(parseInt((_w = (_v = statData === null || statData === void 0 ? void 0 : statData.data) === null || _v === void 0 ? void 0 : _v.actual) === null || _w === void 0 ? void 0 : _w.last)).fromNow();
        subSectorsArray === null || subSectorsArray === void 0 ? void 0 : subSectorsArray.map(function (subSector) {
            if (estimateEmissionsAggBySubSector && estimateEmissionsAggBySubSector[subSector] !== undefined) {
                estimatedEmissionSubSectorSeriesData.push({
                    name: exports.EmissionSubSectors[subSector],
                    data: estimateEmissionsAggBySubSector[subSector],
                });
            }
            if (actualEmissionsAggBySubSector && actualEmissionsAggBySubSector[subSector] !== undefined) {
                actualEmissionSubSectorSeriesData.push({
                    name: exports.EmissionSubSectors[subSector],
                    data: actualEmissionsAggBySubSector[subSector],
                });
            }
        });
        return [
            estimatedEmissionSubSectorSeriesData,
            actualEmissionSubSectorSeriesData,
            estimateEmissionsAggBySubSector === null || estimateEmissionsAggBySubSector === void 0 ? void 0 : estimateEmissionsAggBySubSector.xLabels,
            actualEmissionsAggBySubSector === null || actualEmissionsAggBySubSector === void 0 ? void 0 : actualEmissionsAggBySubSector.xLabels,
            estimateLastUpdateTime,
            actualLastUpdateTime,
        ];
    };
    var parseEmissionComparisonData = function (statData) {
        var emissionComparisonSeriesData = [];
        var projectionTypesArray = Object.keys(exports.ProjectionTypes);
        var emissionsAggByComparison = statData === null || statData === void 0 ? void 0 : statData.data;
        projectionTypesArray === null || projectionTypesArray === void 0 ? void 0 : projectionTypesArray.map(function (projectionType) {
            if (emissionsAggByComparison[projectionType] !== undefined) {
                emissionComparisonSeriesData.push({
                    name: exports.ProjectionTypes[projectionType],
                    data: emissionsAggByComparison[projectionType],
                    type: exports.ProjectionTypes[projectionType] ===
                        exports.ProjectionTypes.actual
                        ? 'line'
                        : 'column',
                });
            }
        });
        return [emissionComparisonSeriesData, emissionsAggByComparison.xLabels];
    };
    var supportedWidgetList = {
        AGG_EMISSIONS_BY_SECTOR: {
            widgetType: exports.WidgetType.BAR,
            aggType: exports.GhgStatCardTypes.AGG_EMISSIONS_BY_SECTOR,
            configs: {
                title: t('emissionsBySectorTitle'),
                tooltip: t('emissionsBySectorTT'),
                colors: colors,
                chartColumnWidth: 12,
                chartWidth: 490,
            },
            callbacks: {
                // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
                parseData: parseEmissionSectorData,
            },
        },
        AGG_EMISSIONS_BY_GAS: {
            widgetType: exports.WidgetType.BAR,
            aggType: exports.GhgStatCardTypes.AGG_EMISSIONS_BY_GAS,
            configs: {
                title: t('emissionsByGasTitle'),
                tooltip: t('emissionsByGasTT'),
                colors: colors,
                chartColumnWidth: 12,
                chartWidth: 490,
            },
            callbacks: {
                parseData: parseEmissionGasData,
            },
        },
        AGG_EMISSIONS_MITIGATION_POTENTIAL_BY_SECTOR: {
            widgetType: exports.WidgetType.BAR,
            aggType: exports.GhgStatCardTypes.AGG_EMISSIONS_MITIGATION_POTENTIAL_BY_SECTOR,
            configs: {
                title: t('emissionsMitigationPotentialBySectorTitle'),
                tooltip: t('emissionsMitigationPotentialBySectorTT'),
                colors: colors,
                chartColumnWidth: 24,
                chartWidth: screenWidth * 0.72,
            },
            callbacks: {
                parseData: parseEmissionMitigationSectorData,
            },
        },
        AGG_REDUCTION_PERCENT_BAU_BY_SECTOR: {
            widgetType: exports.WidgetType.BAR_ESTIMATED_AND_ACTUAL,
            aggType: exports.GhgStatCardTypes.AGG_REDUCTION_PERCENT_BAU_BY_SECTOR,
            configs: {
                title: t('emissionsReductionPercentageBySectorTitle'),
                tooltip: t('emissionsReductionPercentageBySectorTT'),
                colors: colors,
                chartColumnWidth: 24,
                chartWidth: screenWidth * 0.72,
            },
            callbacks: {
                parseData: parseEstimateAndActualEmissionSubSectorData,
            },
        },
        AGG_EMISSIONS_COMPARISON: {
            widgetType: exports.WidgetType.BAR,
            aggType: exports.GhgStatCardTypes.AGG_EMISSIONS_COMPARISON,
            configs: {
                title: t('emissionsComparisonTitle'),
                tooltip: t('emissionsComparisonTT'),
                colors: colorsComparison,
                chartColumnWidth: 24,
                chartWidth: screenWidth * 0.72,
            },
            callbacks: {
                parseData: parseEmissionComparisonData,
            },
        },
    };
    var genPayload = function () {
        var stats = [];
        for (var item in exports.GhgStatCardTypes) {
            stats.push({
                type: item,
                statFilter: {
                    startTime: startYear !== 0 ? startYear : undefined,
                    endTime: endYear !== 0 ? endYear : undefined,
                    onlyMine: (userInfoState === null || userInfoState === void 0 ? void 0 : userInfoState.companyRole) === exports.CompanyRole.PROGRAMME_DEVELOPER,
                },
            });
        }
        return {
            system: exports.SystemNames.CARBON_TRANSPARENCY,
            stats: stats,
        };
    };
    var getData = function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, newd, key, obj, config, dx, error_1;
        var _a, _b, _c, _e, _f, _g, _h, _j, _k;
        return __generator(this, function (_l) {
            switch (_l.label) {
                case 0:
                    setLoadingCharts(true);
                    _l.label = 1;
                case 1:
                    _l.trys.push([1, 3, 4, 5]);
                    return [4 /*yield*/, post("stats/ghg/agg", genPayload(), undefined, process.env.REACT_APP_STAT_URL)];
                case 2:
                    response = _l.sent();
                    console.log('Response', response);
                    newd = {};
                    for (key in (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.stats) {
                        if ((_b = response === null || response === void 0 ? void 0 : response.data) === null || _b === void 0 ? void 0 : _b.stats.hasOwnProperty(key)) {
                            if (key === exports.GhgStatCardTypes.AGG_REDUCTION_PERCENT_BAU_BY_SECTOR) {
                                setActualData((_f = (_e = (_c = response === null || response === void 0 ? void 0 : response.data.stats.AGG_REDUCTION_PERCENT_BAU_BY_SECTOR) === null || _c === void 0 ? void 0 : _c.data) === null || _e === void 0 ? void 0 : _e.actual) === null || _f === void 0 ? void 0 : _f.data);
                                setEstimateData((_j = (_h = (_g = response === null || response === void 0 ? void 0 : response.data.stats.AGG_REDUCTION_PERCENT_BAU_BY_SECTOR) === null || _g === void 0 ? void 0 : _g.data) === null || _h === void 0 ? void 0 : _h.estimate) === null || _j === void 0 ? void 0 : _j.data);
                            }
                            obj = (_k = response === null || response === void 0 ? void 0 : response.data) === null || _k === void 0 ? void 0 : _k.stats[key];
                            config = supportedWidgetList[key];
                            if (config) {
                                dx = config.callbacks.parseData(obj, config.configs.dataLabelField, config.configs.dataValField);
                                newd[key] = {
                                    data: dx,
                                    time: !obj.last || obj.last === '0' || obj.last === 0
                                        ? '0'
                                        : moment(parseInt(obj.last)).fromNow(),
                                };
                            }
                        }
                    }
                    console.log('newd', newd);
                    setData(newd);
                    return [3 /*break*/, 5];
                case 3:
                    error_1 = _l.sent();
                    console.log("Error in getting users", error_1);
                    antd.message.open({
                        type: "error",
                        content: error_1.message,
                        duration: 3,
                        style: { textAlign: "right", marginRight: 15, marginTop: 10 },
                    });
                    return [3 /*break*/, 5];
                case 4:
                    setLoadingCharts(false);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    React.useEffect(function () {
        getData();
    }, []);
    var getColorsForPercentageCharts = function (percentageData) {
        if (percentageData === undefined || percentageData === null) {
            return [];
        }
        var maxCategory = '';
        var maxValue = -Infinity;
        var maxIndex = -1;
        var result = [];
        Object.keys(percentageData).forEach(function (category) {
            var categoryValues = percentageData[category];
            var maxInCategory = Math.max.apply(Math, categoryValues);
            var index = categoryValues.indexOf(maxInCategory);
            if (maxInCategory > maxValue) {
                maxValue = maxInCategory;
                maxCategory = category;
                maxIndex = index;
            }
        });
        Object.keys(percentageData).forEach(function (category) {
            var colorArray = percentageData[category].map(function (_val, i) {
                if (i === maxIndex && category === maxCategory) {
                    return '#D4AF37'; // Yellow color for the highest bar
                }
                return '#008f39'; // Blue color for other bars
            });
            result[category] = colorArray;
            return result;
        });
        return result[maxCategory];
    };
    var getChartOptions = function (labels, chartColors, chartId) {
        switch (chartId) {
            case exports.GhgStatCardTypes.AGG_EMISSIONS_BY_SECTOR:
            case exports.GhgStatCardTypes.AGG_EMISSIONS_BY_GAS:
            case exports.GhgStatCardTypes.AGG_EMISSIONS_MITIGATION_POTENTIAL_BY_SECTOR:
                return totalEmissionOptionsSub(labels, chartColors);
            case exports.GhgStatCardTypes.AGG_REDUCTION_PERCENT_BAU_BY_SECTOR:
                return actualVsEstimateOptionsSub(labels, chartColors);
            case exports.GhgStatCardTypes.AGG_EMISSIONS_COMPARISON:
                return emissionComparisonOptionsSub(labels, chartColors);
        }
    };
    var getWidgetJSX = function (objname) {
        var obj = supportedWidgetList[objname];
        if (!obj) {
            return React.createElement(React.Fragment, null);
        }
        var d = data[obj.aggType];
        if (!d) {
            return React.createElement(React.Fragment, null);
        }
        if (obj.widgetType === exports.WidgetType.BAR) {
            return (React.createElement(antd.Col, { xxl: obj.configs.chartColumnWidth, xl: obj.configs.chartColumnWidth, md: obj.configs.chartColumnWidth, className: "statics-card-col" },
                React.createElement(BarChartsStatComponent, { id: obj.aggType, title: obj.configs.title, options: getChartOptions(d.data[1], obj.configs.colors, obj.aggType), series: d.data[0], lastUpdate: d.time, loading: loadingCharts, toolTipText: obj.configs.tooltip, Chart: Chart, width: obj.configs.chartWidth })));
        }
        if (obj.widgetType === exports.WidgetType.BAR_ESTIMATED_AND_ACTUAL) {
            return (React.createElement(antd.Col, { xxl: obj.configs.chartColumnWidth, xl: obj.configs.chartColumnWidth, md: obj.configs.chartColumnWidth, className: "statics-card-col" },
                React.createElement(BarChartEstimatedActualStatComponent, { id: obj.aggType, title: obj.configs.title, estimateOptions: estimateData ? getChartOptions(d.data[2], getColorsForPercentageCharts(estimateData), obj.aggType) : [], actualOptions: actualData ? getChartOptions(d.data[3], getColorsForPercentageCharts(actualData), obj.aggType) : [], actualSeries: d.data[1], estimatedSeries: d.data[0], loading: loadingCharts, toolTipText: obj.configs.tooltip, Chart: Chart, lastUpdateEstimate: d.data[4], lastUpdateActual: d.data[5], width: obj.configs.chartWidth })));
        }
    };
    return (React.createElement("div", { className: "ghg-dashboard-main-container" },
        isMultipleDashboardsVisible && (React.createElement("div", { className: "systemchange-container", style: { marginLeft: "20px" } },
            React.createElement(ButtonGroup, { "aria-label": "outlined button group" },
                React.createElement(Link, { to: "/dashboard" },
                    React.createElement(antd.Button, { className: "ghg-default" }, "Carbon Registry")),
                React.createElement(Link, { to: "/dashboard/mrv" },
                    React.createElement(antd.Button, { className: "mid-default-btn" }, "Transparency System")),
                React.createElement(antd.Button, { type: "primary", className: "ghg-primary" }, "GHG Inventory")))),
        React.createElement("div", { className: "filter-container" },
            React.createElement("div", { className: "date-filter" },
                React.createElement(RangePicker, { picker: "year", defaultValue: [moment().subtract('10', 'years'), moment()], allowClear: true, onChange: onChangeRange }))),
        loadingCharts ? (React.createElement("div", { className: "statics-and-charts-container center" },
            React.createElement(antd.Skeleton, null))) : (layout.map(function (row, i) { return (React.createElement("div", { className: "statics-and-charts-container center" },
            React.createElement(antd.Row, { gutter: [40, 40], className: "statics-card-row" }, row.map(function (item, j) { return getWidgetJSX(item); })))); }))));
};

exports.AddNdcActionComponent = AddNdcActionComponent;
exports.AddNewCompanyComponent = AddNewCompanyComponent;
exports.AddNewUserComponent = AddNewUserComponent;
exports.AdminBGColor = AdminBGColor;
exports.AdminColor = AdminColor;
exports.ApproveDocumentationConfirmationModel = ApproveDocumentationConfirmationModel;
exports.BaseEntity = BaseEntity;
exports.CertBGColor = CertBGColor;
exports.CertColor = CertColor;
exports.CoBenifitsComponent = CoBenifitsComponent;
exports.Company = Company;
exports.CompanyManagementComponent = CompanyManagementComponent;
exports.CompanyProfileComponent = CompanyProfileComponent;
exports.ConnectionContextProvider = ConnectionContextProvider;
exports.CreditTransferComponent = CreditTransferComponent;
exports.DevBGColor = DevBGColor;
exports.DevColor = DevColor;
exports.Emission = Emission;
exports.GHGDashboardComponent = GHGDashboardComponent;
exports.GHGEmissionsComponent = GHGEmissionsComponent;
exports.GHGProjectionsComponent = GHGProjectionsComponent;
exports.GovBGColor = GovBGColor;
exports.GovColor = GovColor;
exports.IdeaNote = IdeaNote;
exports.IdeaNoteDetail2Component = IdeaNoteDetail2Component;
exports.IdeaNoteDetailComponent = IdeaNoteDetailComponent;
exports.IdeaNoteManagementComponent = IdeaNoteManagementComponent;
exports.IdeaNoteStatus = IdeaNoteStatus;
exports.ImgWithFallback = ImgWithFallback;
exports.InfoView = InfoView;
exports.InvestmentBGColor = InvestmentBGColor;
exports.InvestmentBody = InvestmentBody;
exports.InvestmentColor = InvestmentColor;
exports.InvestmentCreationComponent = InvestmentCreationComponent;
exports.InvestmentManagementComponent = InvestmentManagementComponent;
exports.LegendItem = LegendItem;
exports.Loading = Loading;
exports.ManagerBGColor = ManagerBGColor;
exports.ManagerColor = ManagerColor;
exports.MapComponent = MapComponent;
exports.MapboxComponent = MapboxComponent;
exports.MinBGColor = MinBGColor;
exports.MinColor = MinColor;
exports.MrvDashboardComponent = MrvDashboardComponent;
exports.NdcActionBody = NdcActionBody;
exports.NdcActionManagementComponent = NdcActionManagementComponent;
exports.NdcActionViewComponent = NdcActionViewComponent;
exports.NdcDetailsComponent = NdcDetailsComponent;
exports.OrganisationStatus = OrganisationStatus;
exports.ProfileIcon = ProfileIcon;
exports.ProgrammeCertify = ProgrammeCertify;
exports.ProgrammeCreationComponent = ProgrammeCreationComponent;
exports.ProgrammeDocuments = ProgrammeDocuments;
exports.ProgrammeEntity = ProgrammeEntity;
exports.ProgrammeIssueForm = ProgrammeIssueForm;
exports.ProgrammeManagementComponent = ProgrammeManagementComponent;
exports.ProgrammeRetireForm = ProgrammeRetireForm;
exports.ProgrammeRevokeForm = ProgrammeRevokeForm;
exports.ProgrammeTransfer = ProgrammeTransfer;
exports.ProgrammeTransferForm = ProgrammeTransferForm;
exports.Projection = Projection;
exports.RegistryDashboardComponent = RegistryDashboardComponent;
exports.RejectDocumentationConfirmationModel = RejectDocumentationConfirmationModel;
exports.RoleIcon = RoleIcon;
exports.RootBGColor = RootBGColor;
exports.RootColor = RootColor;
exports.SettingsContext = SettingsContext;
exports.SettingsContextProvider = SettingsContextProvider;
exports.StasticCard = StasticCard;
exports.SupportCreationComponent = SupportCreationComponent;
exports.SupportManagementComponent = SupportManagementComponent;
exports.TimelineBody = TimelineBody;
exports.TooltipColor = TooltipColor;
exports.TransferActionModel = TransferActionModel;
exports.UnitField = UnitField;
exports.User = User;
exports.UserContext = UserContext;
exports.UserInformationContextProvider = UserInformationContextProvider;
exports.UserManagementComponent = UserManagementComponent;
exports.UserProfileComponent = UserProfileComponent;
exports.UserRoleIcon = UserRoleIcon;
exports.ViewBGColor = ViewBGColor;
exports.ViewColor = ViewColor;
exports.addCommSep = addCommSep;
exports.addCommSepRound = addCommSepRound$1;
exports.addNdcDesc = addNdcDesc;
exports.addRoundNumber = addRoundNumber;
exports.addSpaces = addSpaces;
exports.consumerGroupList = consumerGroupList;
exports.creditUnit = creditUnit;
exports.dateFormat = dateFormat;
exports.dateTimeFormat = dateTimeFormat;
exports.energyGenerationUnitList = energyGenerationUnitList;
exports.getBase64 = getBase64;
exports.getCompanyBgColor = getCompanyBgColor;
exports.getCreditStageVal = getCreditStageVal;
exports.getFinancialFields = getFinancialFields;
exports.getGeneralFields = getGeneralFields;
exports.getInvestmentStatusEnumVal = getInvestmentStatusEnumVal;
exports.getNdcActionStatusEnumVal = getNdcActionStatusEnumVal$1;
exports.getNdcStatusTagType = getNdcStatusTagType;
exports.getRetirementTypeString = getRetirementTypeString;
exports.getStageEnumVal = getStageEnumVal;
exports.getStageTagType = getStageTagType;
exports.getStageTagTypeMRV = getStageTagTypeMRV;
exports.getStageTransferEnumVal = getStageTransferEnumVal;
exports.getStatusTagType = getStatusTagType;
exports.getTransferStageTagType = getTransferStageTagType;
exports.getValidNdcActions = getValidNdcActions;
exports.isBase64 = isBase64;
exports.landAreaUnitList = landAreaUnitList;
exports.methodologyOptions = methodologyOptions;
exports.mitigationSubTypeList = mitigationSubTypeList;
exports.mitigationSubTypesListMapped = mitigationSubTypesListMapped;
exports.mitigationTypeList = mitigationTypeList;
exports.ndcActionTypeList = ndcActionTypeList;
exports.sectorMitigationTypesListMapped = sectorMitigationTypesListMapped;
exports.sumArray = sumArray;
exports.titleList = titleList;
exports.useConnection = useConnection;
exports.useSettingsContext = useSettingsContext;
exports.useUserContext = useUserContext;
//# sourceMappingURL=index.js.map
